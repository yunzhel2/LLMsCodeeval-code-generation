{"title":"B. Buses","description":"Little boy Gerald studies at school which is quite far from his house. That's why he has to go there by bus every day. The way from home to school is represented by a segment of a straight line; the segment contains exactly n+1 bus stops. All of them are numbered with integers from 0 to n in the order in which they follow from Gerald's home. The bus stop by Gerald's home has number 0 and the bus stop by the school has number n.There are m buses running between the house and the school: the i-th bus goes from stop si to ti (si<ti), visiting all the intermediate stops in the order in which they follow on the segment. Besides, Gerald's no idiot and he wouldn't get off the bus until it is still possible to ride on it closer to the school (obviously, getting off would be completely pointless). In other words, Gerald can get on the i-th bus on any stop numbered from si to ti-1 inclusive, but he can get off the i-th bus only on the bus stop ti.Gerald can't walk between the bus stops and he also can't move in the direction from the school to the house.Gerald wants to know how many ways he has to get from home to school. Tell him this number. Two ways are considered different if Gerald crosses some segment between the stops on different buses. As the number of ways can be too much, find the remainder of a division of this number by 1000000007 (10^9+7).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"265 megabytes","input_spec":"The first line contains two space-separated integers: n and m (1\u2264n\u226410^9,0\u2264m\u226410^5). Then follow m lines each containing two integers si,ti. They are the numbers of starting stops and end stops of the buses (0\u2264si<ti\u2264n).\n","output_spec":"Print the only number \u2014 the number of ways to get to the school modulo 1000000007 (10^9+7).\n","notes":"The first test has the only variant to get to school: first on bus number one to the bus stop number one; then on bus number two to the bus stop number two.\nIn the second test no bus goes to the third bus stop, where the school is positioned. Thus, the correct answer is 0.\nIn the third test Gerald can either get or not on any of the first four buses to get closer to the school. Thus, the correct answer is 2^4=16.\n","sample_inputs":["2 2\n0 1\n1 2\n","3 2\n0 1\n1 2\n","5 5\n0 1\n0 2\n0 3\n0 4\n0 5\n"],"sample_outputs":["1\n","0\n","16\n"],"id":"101-B","difficulty":1700,"tags":["binary+search","data+structures","dp"],"src_uid":"cb47d710361979de0f975cc34fc22c7a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(n + 1);\n    for (int i = 0; i < m; i++) {\n        int s, t;\n        cin >> s >> t;\n        a[s]++;\n        a[t]--;\n    }\n    int ans = 1;\n    for (int i = 1; i <= n; i++) {\n        ans = (ans * a[i]) % 1000000007;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[n + 1];\n        for (int i = 0; i < m; i++) {\n            int si = sc.nextInt();\n            int ti = sc.nextInt();\n            a[si]++;\n            a[ti]--;\n        }\n        int ans = 1;\n        for (int i = 1; i <= n; i++) {\n            ans = (ans * a[i]) % 1000000007;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ndp = [0] * (n + 1)\ndp[0] = 1\n\nfor _ in range(m):\n    s, t = map(int, input().split())\n    for i in range(s, t):\n        dp[i + 1] += dp[i]\n\nprint(dp[n] % 1000000007)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var dp = new int[n + 1];\n        dp[0] = 1;\n        for (int i = 0; i < m; i++)\n        {\n            var input2 = Console.ReadLine().Split(' ');\n            var si = int.Parse(input2[0]);\n            var ti = int.Parse(input2[1]);\n            for (int j = si; j < ti; j++)\n            {\n                dp[j + 1] += dp[j];\n                dp[j + 1] %= 1000000007;\n            }\n        }\n        Console.WriteLine(dp[n]);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\ndp = Array.new(n+1, 0)\ndp[0] = 1\n\nfor i in 1..m\n  s, t = gets.split.map(&:to_i)\n  for j in s..t-1\n    dp[j+1] += dp[j]\n    dp[j+1] %= 10**9+7\n  end\nend\n\nputs dp[n]\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses\n  SysUtils;\nvar\n  n, m, i, j, k, a, b, c, d, ans: Integer;\n  f: Array[0..100000000] of Integer;\nbegin\n  Readln(n, m);\n  for i := 0 to m - 1 do\n  begin\n    Readln(a, b);\n    for j := a to b - 1 do\n      f[j] := f[j] + 1;\n  end;\n  for i := 0 to n do\n  begin\n    for j := 0 to i do\n      f[j] := f[j] + f[i - j];\n  end;\n  ans := 0;\n  for i := 0 to n do\n  begin\n    for j := 0 to i do\n    begin\n      for k := 0 to i - j do\n      begin\n        for l := 0 to i - j - k do\n        begin\n          c := f[i - j - k - l];\n          d := f[i - j - k];\n          ans := (ans + c * d * (d - 1) div 2) mod 1000000007;\n        end;\n      end;\n    end;\n  end;\n  Writeln(ans);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    dp := make([]int, n+1)\\n    dp[0] = 1\\n    for i := 0; i < m; i++ {\\n        s, t := 0, 0\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &s, &t)\\n        for j := s; j < t; j++ {\\n            dp[j+1] += dp[j]\\n            dp[j+1] %= 1000000007\\n        }\\n    }\\n    fmt.Println(dp[n])\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 0; i < m; i++) {\n    const [s, t] = stdin[i + 1].split(' ').map(parseInt);\n    for (let j = s; j < t; j++) {\n        dp[j + 1] += dp[j];\n        dp[j + 1] %= 1000000007;\n    }\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 0 until m) {\n        val (s, t) = readLine().split(\" \").map { it.toInt() }\n        for (j in s until t) {\n            for (k in 0 until j) {\n                dp[j][t] += dp[k][j]\n            }\n        }\n    }\n    println(dp[n - 1][n].mod(1000000007))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$dp = array_fill(0, $n + 1, 0);\n$dp[0] = 1;\nfor ($i = 0; $i < $m; $i++) {\n    $s, $t = explode(' ', trim(fgets(STDIN)));\n    for ($j = $s; $j < $t; $j++) {\n        $dp[$j + 1] += $dp[$j];\n        $dp[$j + 1] %= 1000000007;\n    }\n}\necho $dp[$n];\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n + 1];\n    int b[n + 1];\n    int c[n + 1];\n    int d[n + 1];\n    int e[n + 1];\n    int f[n + 1];\n    int g[n + 1];\n    int h[n + 1];\n    int i;\n    int j;\n    int k;\n    int l;\n    int t;\n    int s;\n    int p;\n    int q;\n    int r;\n    int ans;\n\n    for (i = 0; i <= n; i++) {\n        a[i] = 0;\n        b[i] = 0;\n        c[i] = 0;\n        d[i] = 0;\n        e[i] = 0;\n        f[i] = 0;\n        g[i] = 0;\n        h[i] = 0;\n    }\n\n    for (i = 0; i < m; i++) {\n        scanf(\" %d %d \", &s, &t);\n        a[s]++;\n        b[t]++;\n        c[s]++;\n        d[t]++;\n        e[s]++;\n        f[t]++;\n        g[s]++;\n        h[t]++;\n    }\n\n    for (i = 0; i <= n; i++) {\n        a[i] = a[i] + a[i - 1];\n        b[i] = b[i] + b[i - 1];\n        c[i] = c[i] + c[i - 1];\n        d[i] = d[i] + d[i - 1];\n        e[i] = e[i] + e[i - 1];\n        f[i] = f[i] + f[i - 1];\n        g[i] = g[i] + g[i - 1];\n        h[i] = h[i] + h[i - 1];\n    }\n\n    ans = 0;\n\n    for (i = 0; i <= n; i++) {\n        for (j = 0; j <= n; j++) {\n            for (k = 0; k <= n; k++) {\n                for (l = 0; l <= n; l++) {\n                    for (t = 0; t <= n; t++) {\n                        for (s = 0; s <= n; s++) {\n                            for (p = 0; p <= n; p++) {\n                                for (q = 0; q <= n; q++) {\n                                    for (r = 0; r <= n; r++) {\n                                        if (i == 0 && j == 0 && k == 0 && l == 0 && t == 0 && s == 0 && p == 0 && q == 0 && r == 0) {\n                                            ans = 1;\n                                        } else {\n                                            ans = (ans + (a[i] * b[j] * c[k] * d[l] * e[t] * f[s] * g[p] * h[q] * r)) % 1000000007;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    printf(\" %d \", ans);\n\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    ($a[$i][0], $a[$i][1]) = split(\/ \/, $line);\n}\n\nmy $dp = [0] x ($n + 1);\n$dp[0] = 1;\n\nfor (my $i = 0; $i < $m; $i++) {\n    for (my $j = $a[$i][0]; $j <= $a[$i][1]; $j++) {\n        $dp[$j] += $dp[$j - 1];\n        $dp[$j] %= 1000000007;\n    }\n}\n\nprint $dp[$n];\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m) = lines\n        .next()\n        .unwrap()\n        .split_whitespace()\n        .map(|s| s.parse::<usize>().unwrap())\n        .collect::<(usize, usize)>();\n\n    let mut dp = vec![0; n + 1];\n    dp[0] = 1;\n\n    for _ in 0..m {\n        let (s, t) = lines\n            .next()\n            .unwrap()\n            .split_whitespace()\n            .map(|s| s.parse::<usize>().unwrap())\n            .collect::<(usize, usize)>();\n\n        for i in s..t {\n            dp[i] += dp[i - 1];\n            dp[i] %= 1000000007;\n        }\n    }\n\n    println!(\"{}\", dp[n]);\n}\n\"\"\"}]"}
{"title":"C. Vectors","description":"At a geometry lesson Gerald was given a task: to get vector B out of vector A. Besides, the teacher permitted him to perform the following operations with vector \u0410: Turn the vector by 90 degrees clockwise. Add to the vector a certain vector C.Operations could be performed in any order any number of times.Can Gerald cope with the task?","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains integers x1 \u0438 y1 \u2014 the coordinates of the vector A (-10^8\u2264x1,y1\u226410^8). The second and the third line contain in the similar manner vectors B and C (their coordinates are integers; their absolute value does not exceed 10^8).\n","output_spec":"Print \"YES\" (without the quotes) if it is possible to get vector B using the given operations. Otherwise print \"NO\" (without the quotes).\n","notes":null,"sample_inputs":["0 0\n1 1\n0 1\n","0 0\n1 1\n1 1\n","0 0\n1 1\n2 2\n"],"sample_outputs":["YES\n","YES\n","NO\n"],"id":"101-C","difficulty":2000,"tags":["implementation","math"],"src_uid":"cc8a8af1ba2b19bf081e379139542883","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int x1, y1, x2, y2, x3, y3;\n    cin >> x1 >> y1;\n    cin >> x2 >> y2;\n    cin >> x3 >> y3;\n    if (x1 == x2 && y1 == y2) {\n        cout << \"YES\" << endl;\n    } else if (x1 == x3 && y1 == y3) {\n        cout << \"YES\" << endl;\n    } else if (x2 == x3 && y2 == y3) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int x1 = scanner.nextInt();\n        int y1 = scanner.nextInt();\n        int x2 = scanner.nextInt();\n        int y2 = scanner.nextInt();\n        int x3 = scanner.nextInt();\n        int y3 = scanner.nextInt();\n\n        if (x1 == x2 && y1 == y2) {\n            System.out.println(\"YES\");\n        } else if (x1 == x3 && y1 == y3) {\n            System.out.println(\"YES\");\n        } else if (x1 == -y3 && y1 == x3) {\n            System.out.println(\"YES\");\n        } else if (x1 == -y2 && y1 == x2) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\nx3, y3 = map(int, input().split())\n\nif x1 == x2 and y1 == y2:\n    print(\"YES\")\nelif x1 == x3 and y1 == y3:\n    print(\"YES\")\nelif x1 == y3 and y1 == -x3:\n    print(\"YES\")\nelif x1 == -y2 and y1 == x2:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int x1, y1, x2, y2, x3, y3;\n    scanf(\" %d %d \", &x1, &y1);\n    scanf(\" %d %d \", &x2, &y2);\n    scanf(\" %d %d \", &x3, &y3);\n    if (x1 == x2 && y1 == y2) {\n        printf(\" YES \");\n    } else if (x1 == x3 && y1 == y3) {\n        printf(\" YES \");\n    } else if (x1 == -x3 && y1 == y3) {\n        printf(\" YES \");\n    } else if (x1 == -x2 && y1 == -y2) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Geometry\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] a = Console.ReadLine().Split(' ');\n            int x1 = int.Parse(a[0]);\n            int y1 = int.Parse(a[1]);\n\n            string[] b = Console.ReadLine().Split(' ');\n            int x2 = int.Parse(b[0]);\n            int y2 = int.Parse(b[1]);\n\n            string[] c = Console.ReadLine().Split(' ');\n            int x3 = int.Parse(c[0]);\n            int y3 = int.Parse(c[1]);\n\n            int x = x2 - x1;\n            int y = y2 - y1;\n\n            int x11 = x3 - x1;\n            int y11 = y3 - y1;\n\n            if (x == x11 && y == y11)\n            {\n                Console.WriteLine(\"YES\");\n            }\n            else\n            {\n                Console.WriteLine(\"NO\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b=gets.split.map(&:to_i);c,d=gets.split.map(&:to_i);e,f=gets.split.map(&:to_i);if a==e and b==f or a==e and b==f+c or a==e+c and b==f or a==e+c and b==f-c or a==e-c and b==f or a==e-c and b==f+c then puts 'YES' else puts 'NO' end\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Problem_1000;\n\nuses\n  SysUtils;\n\nvar\n  x1, y1, x2, y2, x3, y3: Integer;\n\nbegin\n  Readln(x1, y1);\n  Readln(x2, y2);\n  Readln(x3, y3);\n\n  if (x1 = x2) and (y1 = y2) then\n    Writeln('YES')\n  else if (x1 = x3) and (y1 = y3) then\n    Writeln('YES')\n  else if (x2 = x3) and (y2 = y3) then\n    Writeln('YES')\n  else\n    Writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"Go1.17\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar x1, y1, x2, y2, x3, y3 int\n\tfmt.Scanf(\" %d %d\\n\", &x1, &y1)\n\tfmt.Scanf(\" %d %d\\n\", &x2, &y2)\n\tfmt.Scanf(\" %d %d\\n\", &x3, &y3)\n\n\tif x1 == x2 && y1 == y2 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == x3 && y1 == y3 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == x2 && y1 == -y2 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == x3 && y1 == -y3 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == -x2 && y1 == y2 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == -x3 && y1 == y3 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == -x2 && y1 == -y2 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tif x1 == -x3 && y1 == -y3 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\n\tfmt.Println(\"NO\")\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const a = require('fs').readFileSync('\/dev\/stdin').toString().split('\\n').map(x => x.split(' ').map(y => Number(y)));\\nconst b = a[1].map(x => -x);\\nconst c = a[2].map(x => -x);\\nconst d = a[0].map(x => x + b[0] + c[0]);\\nconst e = a[1].map(x => x + b[1] + c[1]);\\nconsole.log(d.join(' ') === b.join(' ') && e.join(' ') === c.join(' ') ? 'YES' : 'NO');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val a = sc.nextLine().split(\" \").map { it.toInt() }\n    val b = sc.nextLine().split(\" \").map { it.toInt() }\n    val c = sc.nextLine().split(\" \").map { it.toInt() }\n\n    val a1 = a[0] - a[1]\n    val a2 = a[1] + a[0]\n    val b1 = b[0] - b[1]\n    val b2 = b[1] + b[0]\n\n    if (a1 == b1 && a2 == b2) {\n        println(\"YES\")\n    } else if (a1 == b2 && a2 == b1) {\n        println(\"YES\")\n    } else if (a1 == b1 + c[0] && a2 == b2 + c[1]) {\n        println(\"YES\")\n    } else if (a1 == b2 + c[0] && a2 == b1 + c[1]) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a = explode(' ', trim(fgets(STDIN)));\n$b = explode(' ', trim(fgets(STDIN)));\n$c = explode(' ', trim(fgets(STDIN)));\n$x = $b[0] - $a[0];\n$y = $b[1] - $a[1];\n$x1 = $c[0] * $y;\n$y1 = $c[1] * $x;\nif ($x1 == $x && $y1 == $y) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[2] a, b, c;\n    scanf(\" %d %d \", &a[0], &a[1]);\n    scanf(\" %d %d \", &b[0], &b[1]);\n    scanf(\" %d %d \", &c[0], &c[1]);\n\n    b[0] -= a[0];\n    b[1] -= a[1];\n\n    c[0] -= a[0];\n    c[1] -= a[1];\n\n    b[0] = -b[1];\n    b[1] = b[0];\n\n    c[0] = -c[1];\n    c[1] = c[0];\n\n    if (b[0] == c[0] && b[1] == c[1])\n        printf(\" YES \");\n    else\n        printf(\" NO \");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $x1, $y1;\nmy $x2, $y2;\nmy $x3, $y3;\n\nchomp(my $line = <STDIN>);\n@x1 = split(\/ \/, $line);\n$x1 = $x1[0];\n$y1 = $x1[1];\n\nchomp(my $line = <STDIN>);\n@x2 = split(\/ \/, $line);\n$x2 = $x2[0];\n$y2 = $x2[1];\n\nchomp(my $line = <STDIN>);\n@x3 = split(\/ \/, $line);\n$x3 = $x3[0];\n$y3 = $x3[1];\n\nif ($x1 == $x2 && $y1 == $y2) {\n    print \"YES\\n\";\n} elsif ($x1 == $x3 && $y1 == $y3) {\n    print \"YES\\n\";\n} elsif ($x1 == $y3 && $y1 == $x3) {\n    print \"YES\\n\";\n} elsif ($x2 == $x3 && $y2 == $y3) {\n    print \"YES\\n\";\n} elsif ($x1 == $x2 && $y1 == -$y2) {\n    print \"YES\\n\";\n} elsif ($x1 == $y2 && $y1 == -$x2) {\n    print \"YES\\n\";\n} elsif ($x2 == $x3 && $y2 == -$y3) {\n    print \"YES\\n\";\n} elsif ($x2 == $y3 && $y2 == -$x3) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut x1 = 0;\n    let mut y1 = 0;\n    let mut x2 = 0;\n    let mut y2 = 0;\n    let mut x3 = 0;\n    let mut y3 = 0;\n    for i in input.split_whitespace() {\n        if i.parse::<i32>().is_ok() {\n            if x1 == 0 {\n                x1 = i.parse::<i32>().unwrap();\n            } else {\n                y1 = i.parse::<i32>().unwrap();\n            }\n        }\n    }\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    for i in input.split_whitespace() {\n        if i.parse::<i32>().is_ok() {\n            if x2 == 0 {\n                x2 = i.parse::<i32>().unwrap();\n            } else {\n                y2 = i.parse::<i32>().unwrap();\n            }\n        }\n    }\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    for i in input.split_whitespace() {\n        if i.parse::<i32>().is_ok() {\n            if x3 == 0 {\n                x3 = i.parse::<i32>().unwrap();\n            } else {\n                y3 = i.parse::<i32>().unwrap();\n            }\n        }\n    }\n    if x1 == x2 && y1 == y2 {\n        println!(\"YES\");\n    } else if x1 == x2 && y1 != y2 {\n        if x3 == 0 && y3 == 0 {\n            println!(\"YES\");\n        } else {\n            println!(\"NO\");\n        }\n    } else if x1 != x2 && y1 == y2 {\n        if x3 == 0 && y3 == 0 {\n            println!(\"YES\");\n        } else {\n            println!(\"NO\");\n        }\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"E. Candies and Stones","description":"Little Gerald and his coach Mike play an interesting game. At the beginning of the game there is a pile consisting of n candies and a pile consisting of m stones. Gerald and Mike move in turns, Mike goes first. During his move Mike checks how many candies and stones Gerald has eaten. Let Gerald eat a candies and b stones. Then Mike awards Gerald f(a,b) prize points. Gerald during his move either eats a candy from the pile of candies or a stone from the pile of stones. As Mike sees that Gerald has eaten everything apart one candy and one stone, he awards points for the last time and the game ends. Gerald is not allowed to eat all the candies, and he is not allowed to eat all the stones too. Tell Gerald how to play to get the largest possible number of points: it is required to find one of the possible optimal playing strategies for Gerald.","input_from":"standard input","output_to":"standard output","time_limit":"7.5 seconds","memory_limit":"45 megabytes","input_spec":"The first line contains three integers n,m,p (1\u2264n,m\u226420000, 1\u2264p\u226410^9). The second line contains n integers x0, x1, ..., xn-1 (0\u2264xi\u226420000). The third line contains m integers y0, y1, ..., ym-1 (0\u2264yi\u226420000). The value of f(a,b) is calculated as a remainder of the division of the sum xa+yb by number p.\n","output_spec":"Print on the first line the only number: the maximal number of points Gerald can earn. Print on the second line a sting consisting of n+m-2 characters, each of which is either a \"C\" or \"S\", the i-th character should be \"C\" if Gerald's i-th move should be eating a candy and \"S\" if he should eat a stone.\n","notes":"In the first test if Gerald's first move is eating a stone, he will receive a point for it and if he eats a candy, he will get zero pints. In any way Gerald will get 0 points before his first move, and 1 after his second one. This, the maximum number of points Gerald can get equals to 2, and for that he should first eat a stone, then a candy.\n","sample_inputs":["2 2 10\n0 0\n0 1\n","3 3 10\n0 2 0\n0 0 2\n","3 3 2\n0 1 1\n1 1 0\n"],"sample_outputs":["2\nSC\n","10\nCSSC\n","4\nSCSC\n"],"id":"101-E","difficulty":2500,"tags":["divide+and+conquer","dp"],"src_uid":"ffa25047060e4741d8eddf2b91b1ca23","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, m, p;\n    cin >> n >> m >> p;\n    int a[n], b[m];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    for (int i = 0; i < m; i++) {\n        cin >> b[i];\n    }\n    sort(a, a + n);\n    sort(b, b + m);\n    int ans = 0;\n    int i = 0, j = 0;\n    while (i < n && j < m) {\n        if (a[i] + b[j] < p) {\n            ans += a[i] + b[j];\n            i++;\n            j++;\n        } else if (a[i] + b[j] == p) {\n            ans += a[i] + b[j];\n            i++;\n            j++;\n        } else {\n            ans += a[i];\n            i++;\n        }\n    }\n    while (i < n) {\n        ans += a[i];\n        i++;\n    }\n    while (j < m) {\n        ans += b[j];\n        j++;\n    }\n    cout << ans << endl;\n    string s;\n    for (int i = 0; i < n; i++) {\n        s += \"C\";\n    }\n    for (int i = 0; i < m; i++) {\n        s += \"S\";\n    }\n    cout << s << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int p = sc.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[m];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n        }\n        for (int i = 0; i < m; i++) {\n            y[i] = sc.nextInt();\n        }\n        int max = 0;\n        int[] dp = new int[n + m - 2];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                dp[i + j] = Math.max(dp[i + j], dp[i + j - 1] + x[i] * y[j] % p);\n                max = Math.max(max, dp[i + j]);\n            }\n        }\n        System.out.println(max);\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n + m - 2; i++) {\n            if (dp[i] == max) {\n                if (i < n) {\n                    sb.append(\"C\");\n                } else {\n                    sb.append(\"S\");\n                }\n            }\n        }\n        System.out.println(sb.toString());\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,p=map(int,input().split())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\na.sort()\nb.sort()\nans=0\nfor i in range(n):\n    ans+=a[i]\n    if i<m:\n        ans+=b[i]\n        if ans%p==0:\n            print(ans)\n            print('C'*n+'S'*m)\n            exit()\nprint(ans)\nprint('C'*n+'S'*m)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m, p;\n    scanf(\" %d%d%d \", &n, &m, &p);\n    int a[n], b[m];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int ans = 0;\n    int s = 0;\n    int c = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] > b[s]) {\n            ans += a[i];\n            c++;\n        } else {\n            ans += b[s];\n            s++;\n        }\n    }\n    for (int i = s; i < m; i++) {\n        ans += b[i];\n    }\n    printf(\" %d\\n \", ans);\n    char s1[n + m - 2];\n    for (int i = 0; i < n; i++) {\n        if (a[i] > b[s]) {\n            s1[i] = 'C';\n        } else {\n            s1[i] = 'S';\n        }\n    }\n    for (int i = s; i < m; i++) {\n        s1[i + n - s] = 'S';\n    }\n    printf(\" %s\\n \", s1);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int m = int.Parse(input[1]);\n            int p = int.Parse(input[2]);\n            int[] x = new int[n];\n            int[] y = new int[m];\n            input = Console.ReadLine().Split(' ');\n            for (int i = 0; i < n; i++)\n            {\n                x[i] = int.Parse(input[i]);\n            }\n            input = Console.ReadLine().Split(' ');\n            for (int i = 0; i < m; i++)\n            {\n                y[i] = int.Parse(input[i]);\n            }\n            int[] dp = new int[n + m - 2];\n            dp[0] = 0;\n            dp[1] = x[0] % p;\n            for (int i = 2; i < n + m - 2; i++)\n            {\n                dp[i] = Math.Max(dp[i - 1], dp[i - 2] + x[i - 1] % p);\n            }\n            int ans = 0;\n            for (int i = 0; i < m; i++)\n            {\n                ans = Math.Max(ans, dp[i + n - 2] + y[i] % p);\n            }\n            Console.WriteLine(ans);\n            string res = \"\";\n            for (int i = 0; i < n; i++)\n            {\n                res += \"C\";\n            }\n            for (int i = 0; i < m; i++)\n            {\n                res += \"S\";\n            }\n            Console.WriteLine(res);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,p=map(int,input().split())\nx=list(map(int,input().split()))\ny=list(map(int,input().split()))\nx.sort()\ny.sort()\nans=0\nfor i in range(n):\n    ans+=x[i]\nfor i in range(m):\n    ans+=y[i]\nprint(ans%p)\nprint(''.join(['C' if x[i]<y[i] else 'S' for i in range(n+m-2)]))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram P1000;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 20000;\n\nvar\n  n, m, p, i, j, k, ans, t, x, y, a, b, c, d: integer;\n  a1, a2, b1, b2: array[0..MAXN] of integer;\n  s: string;\n\nbegin\n  readln(n, m, p);\n  for i := 0 to n - 1 do\n    readln(x);\n  for i := 0 to m - 1 do\n    readln(y);\n  a1[0] := 0;\n  a2[0] := 0;\n  b1[0] := 0;\n  b2[0] := 0;\n  for i := 1 to n - 1 do\n  begin\n    a1[i] := a1[i - 1] + x[i - 1];\n    a2[i] := a2[i - 1] + x[i - 1] * i;\n  end;\n  for i := 1 to m - 1 do\n  begin\n    b1[i] := b1[i - 1] + y[i - 1];\n    b2[i] := b2[i - 1] + y[i - 1] * i;\n  end;\n  ans := 0;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n    begin\n      for k := 0 to n - 1 do\n      begin\n        for l := 0 to m - 1 do\n        begin\n          a := a1[k] + a2[k] - a1[i] - a2[i];\n          b := b1[l] + b2[l] - b1[j] - b2[j];\n          if (a + b) mod p = 0 then\n          begin\n            t := (a + b) div p;\n            if t > ans then\n            begin\n              ans := t;\n              s := 'C' + s;\n            end;\n            if t = ans then\n            begin\n              s := 'S' + s;\n            end;\n          end;\n        end;\n      end;\n    end;\n  end;\n  writeln(ans);\n  writeln(s);\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst p = parseInt(stdin[0].split(' ')[2]);\nconst x = stdin[1].split(' ').map(x => parseInt(x));\nconst y = stdin[2].split(' ').map(y => parseInt(y));\nconst dp = new Array(n + m + 1).fill(0);\ndp[0] = 0;\nfor (let i = 1; i <= n + m; i++) {\n    if (i <= n) {\n        dp[i] = Math.max(dp[i - 1], dp[i - 1] + x[i - 1] % p);\n    }\n    if (i <= m) {\n        dp[i] = Math.max(dp[i - 1], dp[i - 1] + y[i - 1] % p);\n    }\n}\nconsole.log(dp[n + m]);\nconsole.log(Array(n + m).fill('C').slice(0, n).join('') + Array(m).fill('S').join(''));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val (n, m, p) = sc.nextLine().split(\" \").map { it.toInt() }\n    val xs = sc.nextLine().split(\" \").map { it.toInt() }\n    val ys = sc.nextLine().split(\" \").map { it.toInt() }\n\n    val xsSum = xs.sum()\n    val ysSum = ys.sum()\n    val xsMax = xs.maxOrNull()!!\n    val ysMax = ys.maxOrNull()!!\n\n    val xsMin = xs.minOrNull()!!\n    val ysMin = ys.minOrNull()!!\n\n    val xsDiff = xsMax - xsMin\n    val ysDiff = ysMax - ysMin\n\n    val xsDiffMod = xsDiff % p\n    val ysDiffMod = ysDiff % p\n\n    val xsDiffModMax = xsDiffMod.coerceAtLeast(ysDiffMod)\n    val xsDiffModMin = xsDiffMod.coerceAtMost(ysDiffMod)\n\n    val xsDiffModMaxCount = xs.count { it == xsMax }\n    val xsDiffModMinCount = xs.count { it == xsMin }\n\n    val ysDiffModMaxCount = ys.count { it == ysMax }\n    val ysDiffModMinCount = ys.count { it == ysMin }\n\n    val xsDiffModMaxScore = xsDiffModMax * xsDiffModMaxCount\n    val xsDiffModMinScore = xsDiffModMin * xsDiffModMinCount\n\n    val ysDiffModMaxScore = ysDiffModMax * ysDiffModMaxCount\n    val ysDiffModMinScore = ysDiffModMin * ysDiffModMinCount\n\n    val maxScore = xsDiffModMaxScore + ysDiffModMaxScore\n    val minScore = xsDiffModMinScore + ysDiffModMinScore\n\n    println(maxScore)\n    println(\n        if (maxScore == minScore) {\n            \"SC\".repeat(n + m - 2)\n        } else {\n            \"S\".repeat(xsDiffModMaxCount) + \"C\".repeat(xsDiffModMinCount) +\n                    \"S\".repeat(ysDiffModMaxCount) + \"C\".repeat(ysDiffModMinCount)\n        }\n    )\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = intval($input[0]);\n$m = intval($input[1]);\n$p = intval($input[2]);\n$x = explode(' ', trim(fgets(STDIN)));\n$y = explode(' ', trim(fgets(STDIN)));\n$x = array_map('intval', $x);\n$y = array_map('intval', $y);\n$x = array_reverse($x);\n$y = array_reverse($y);\n$ans = 0;\n$ans_str = '';\n$i = 0;\n$j = 0;\nwhile ($i < $n || $j < $m) {\n    if ($i < $n && $j < $m) {\n        if ($x[$i] < $y[$j]) {\n            $ans += $x[$i];\n            $ans_str .= 'C';\n            $i++;\n        } else {\n            $ans += $y[$j];\n            $ans_str .= 'S';\n            $j++;\n        }\n    } else if ($i < $n) {\n        $ans += $x[$i];\n        $ans_str .= 'C';\n        $i++;\n    } else {\n        $ans += $y[$j];\n        $ans_str .= 'S';\n        $j++;\n    }\n}\necho $ans . PHP_EOL;\necho $ans_str . PHP_EOL;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, m, p;\n    scanf(\" %d %d %d \", &n, &m, &p);\n    auto a = to!array(int)(readln().split());\n    auto b = to!array(int)(readln().split());\n\n    int ans = 0;\n    int i = 0;\n    int j = 0;\n    while (i < n && j < m) {\n        if (a[i] < b[j]) {\n            ans += a[i];\n            i++;\n        } else {\n            ans += b[j];\n            j++;\n        }\n    }\n\n    if (i < n) {\n        ans += a[i];\n    } else {\n        ans += b[j];\n    }\n\n    printf(\" %d\\n\", ans);\n\n    auto s = \"\";\n    for (int k = 0; k < n; k++) {\n        s += \"C\";\n    }\n    for (int k = 0; k < m; k++) {\n        s += \"S\";\n    }\n    printf(\" %s\\n\", s.substr(0, n + m - 2).c_str());\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m, $p;\nmy @x, @y;\n\nchomp(my $line = <STDIN>);\n($n, $m, $p) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@x = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@y = split(' ', $line);\n\nmy $max = 0;\nmy $ans = '';\n\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        my $a = $x[$i];\n        my $b = $y[$j];\n        my $c = $a + $b;\n        my $d = $c % $p;\n        if ($d > $max) {\n            $max = $d;\n            $ans = 'CS';\n        } elsif ($d == $max) {\n            $ans .= 'CS';\n        }\n    }\n}\n\nprint \"$max\\n\";\nprint \"$ans\\n\";\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n = 0;\n    let mut m = 0;\n    let mut p = 0;\n    for c in line.chars() {\n        match c {\n            'n' => n += 1,\n            'm' => m += 1,\n            'p' => p = c.to_digit(10).unwrap(),\n            _ => panic!(\"Invalid input\"),\n        }\n    }\n\n    let mut candies = Vec::new();\n    let mut stones = Vec::new();\n    for _ in 0..n {\n        line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        let x = line.trim().parse::<i32>().unwrap();\n        candies.push(x);\n    }\n    for _ in 0..m {\n        line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        let y = line.trim().parse::<i32>().unwrap();\n        stones.push(y);\n    }\n\n    let mut candies_sum = 0;\n    let mut stones_sum = 0;\n    for i in 0..n {\n        candies_sum += candies[i];\n    }\n    for i in 0..m {\n        stones_sum += stones[i];\n    }\n\n    let mut candies_rem = candies_sum % p;\n    let mut stones_rem = stones_sum % p;\n\n    let mut candies_count = 0;\n    let mut stones_count = 0;\n    let mut candies_points = 0;\n    let mut stones_points = 0;\n    while candies_count < n && stones_count < m {\n        if candies_rem < stones_rem {\n            candies_count += 1;\n            candies_rem += p;\n            candies_points += candies[candies_count - 1];\n        } else {\n            stones_count += 1;\n            stones_rem += p;\n            stones_points += stones[stones_count - 1];\n        }\n    }\n\n    println!(\"{}\", candies_points + stones_points);\n\n    let mut ans = String::new();\n    for i in 0..n {\n        if i < candies_count {\n            ans.push('C');\n        } else {\n            ans.push('S');\n        }\n    }\n    for i in 0..m {\n        if i < stones_count {\n            ans.push('S');\n        } else {\n            ans.push('C');\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Clothes","description":"A little boy Gerald entered a clothes shop and found out something very unpleasant: not all clothes turns out to match. For example, Gerald noticed that he looks rather ridiculous in a smoking suit and a baseball cap.Overall the shop sells n clothing items, and exactly m pairs of clothing items match. Each item has its price, represented by an integer number of rubles. Gerald wants to buy three clothing items so that they matched each other. Besides, he wants to spend as little money as possible. Find the least possible sum he can spend.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input file line contains integers n and m \u2014 the total number of clothing items in the shop and the total number of matching pairs of clothing items ().\nNext line contains n integers ai (1\u2264ai\u226410^6) \u2014 the prices of the clothing items in rubles.\nNext m lines each contain a pair of space-separated integers ui and vi (1\u2264ui,vi\u2264n,ui\u2260vi). Each such pair of numbers means that the ui-th and the vi-th clothing items match each other. It is guaranteed that in each pair ui and vi are distinct and all the unordered pairs (ui,vi) are different.\n","output_spec":"Print the only number \u2014 the least possible sum in rubles that Gerald will have to pay in the shop. If the shop has no three clothing items that would match each other, print \"-1\" (without the quotes).\n","notes":"In the first test there only are three pieces of clothing and they all match each other. Thus, there is only one way \u2014 to buy the 3 pieces of clothing; in this case he spends 6 roubles.\nThe second test only has three pieces of clothing as well, yet Gerald can't buy them because the first piece of clothing does not match the third one. Thus, there are no three matching pieces of clothing. The answer is -1.\nIn the third example there are 4 pieces of clothing, but Gerald can't buy any 3 of them simultaneously. The answer is -1.\n","sample_inputs":["3 3\n1 2 3\n1 2\n2 3\n3 1\n","3 2\n2 3 4\n2 3\n2 1\n","4 4\n1 1 1 1\n1 2\n2 3\n3 4\n4 1\n"],"sample_outputs":["6\n","-1\n","-1\n"],"id":"102-A","difficulty":1200,"tags":["brute+force"],"src_uid":"d90da1e932a6aa546bec4e1bd4b1fbec","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    vector<vector<int>> g(n);\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        u--;\n        v--;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    vector<int> d(n, 1e9);\n    d[0] = 0;\n    vector<bool> used(n, false);\n    vector<int> p(n, -1);\n    queue<int> q;\n    q.push(0);\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        used[u] = true;\n        for (int v : g[u]) {\n            if (!used[v]) {\n                d[v] = min(d[v], d[u] + a[v]);\n                p[v] = u;\n                q.push(v);\n            }\n        }\n    }\n    int ans = 1e9;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (p[j] == i) {\n                ans = min(ans, d[i] + d[j] + a[i] + a[j]);\n            }\n        }\n    }\n    if (ans == 1e9) {\n        cout << -1 << endl;\n    } else {\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(br.readLine());\n        }\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < m; i++) {\n            String[] pair = br.readLine().split(\" \");\n            int u = Integer.parseInt(pair[0]);\n            int v = Integer.parseInt(pair[1]);\n            map.put(u, v);\n            map.put(v, u);\n        }\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            b[i] = a[i];\n        }\n        Arrays.sort(b);\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if (map.containsKey(i) && map.containsKey(j) && map.containsKey(k)) {\n                        int sum = b[i] + b[j] + b[k];\n                        ans = Math.min(ans, sum);\n                    }\n                }\n            }\n        }\n        if (ans == Integer.MAX_VALUE) {\n            System.out.println(\"-1\");\n        } else {\n            System.out.println(ans);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ndef find(i):\n    for j in range(i + 1, n):\n        if a[i] != a[j]:\n            return j\n    return -1\n\nans = 10 ** 18\nfor i in range(n):\n    j = find(i)\n    if j == -1:\n        continue\n    ans = min(ans, a[i] + a[j] + a[find(j)])\n\nif ans == 10 ** 18:\n    print(-1)\nelse:\n    print(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, m;\nscanf(\" %d%d \", &n, &m);\nint a[n];\nfor (int i = 0; i < n; i++)\n    scanf(\" %d \", &a[i]);\nint b[m][2];\nfor (int i = 0; i < m; i++) {\n    scanf(\" %d%d \", &b[i][0], &b[i][1]);\n}\nint c[n];\nfor (int i = 0; i < n; i++) {\n    c[i] = 1000000000;\n}\nfor (int i = 0; i < m; i++) {\n    c[b[i][0]] = min(c[b[i][0]], a[b[i][1]]);\n    c[b[i][1]] = min(c[b[i][1]], a[b[i][0]]);\n}\nint ans = 1000000000;\nfor (int i = 0; i < n; i++) {\n    for (int j = i + 1; j < n; j++) {\n        for (int k = j + 1; k < n; k++) {\n            if (c[i] != 1000000000 && c[j] != 1000000000 && c[k] != 1000000000) {\n                ans = min(ans, a[i] + a[j] + a[k]);\n            }\n        }\n    }\n}\nif (ans == 1000000000)\n    printf(\" -1 \");\nelse\n    printf(\" %d \", ans);\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, m = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var adj = new int[n][];\n        for (int i = 0; i < m; i++)\n        {\n            var u, v = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            adj[u - 1] = adj[u - 1] ?? new int[n];\n            adj[u - 1][v - 1] = 1;\n            adj[v - 1] = adj[v - 1] ?? new int[n];\n            adj[v - 1][u - 1] = 1;\n        }\n\n        var ans = int.MaxValue;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                for (int k = j + 1; k < n; k++)\n                {\n                    if (adj[i][j] == 1 && adj[j][k] == 1 && adj[k][i] == 1)\n                    {\n                        ans = Math.Min(ans, a[i] + a[j] + a[k]);\n                    }\n                }\n            }\n        }\n\n        if (ans == int.MaxValue)\n        {\n            Console.WriteLine(\"-1\");\n        }\n        else\n        {\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\nans = 10**18\n\nfor i in 0..n-1\n  for j in i+1..n-1\n    for k in j+1..n-1\n      if a[i] != a[j] && a[j] != a[k] && a[k] != a[i]\n        ans = [ans, a[i] + a[j] + a[k]].min\n      end\n    end\n  end\nend\n\nputs ans == 10**18 ? -1 : ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Test;\nuses SysUtils;\nvar\n  n, m, i, j, k, a, b, c, min, min1, min2, min3: integer;\n  s: array[0..100000] of integer;\nbegin\n  readln(n, m);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n  for i := 0 to m - 1 do\n  begin\n    readln(b, c);\n    s[b] := s[b] + a[c];\n    s[c] := s[c] + a[b];\n  end;\n  min := 1000000000;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to n - 1 do\n    begin\n      for k := 0 to n - 1 do\n      begin\n        if (i <> j) and (i <> k) and (j <> k) then\n        begin\n          min1 := s[i] + s[j] + s[k];\n          if (min1 < min) then\n          begin\n            min := min1;\n            min2 := i;\n            min3 := j;\n          end;\n        end;\n      end;\n    end;\n  end;\n  writeln(min);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    var a = make([]int, n)\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\", &a[i])\\n    }\\n    var dp = make([]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var u, v int\\n        fmt.Scanf(\\\"%d%d\\\", &u, &v)\\n        dp[u] = min(dp[u], dp[v]+a[u])\\n        dp[v] = min(dp[v], dp[u]+a[v])\\n    }\\n    var ans = 1000000000\\n    for i := 0; i < n; i++ {\\n        for j := i+1; j < n; j++ {\\n            for k := j+1; k < n; k++ {\\n                if dp[i] != 1000000000 && dp[j] != 1000000000 && dp[k] != 1000000000 {\\n                    ans = min(ans, dp[i]+dp[j]+dp[k])\\n                }\\n            }\\n        }\\n    }\\n    if ans == 1000000000 {\\n        fmt.Println(-1)\\n    } else {\\n        fmt.Println(ans)\\n    }\\n}\\n\\nfunc min(a, b int) int {\\n    if a < b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0].split(' ')[0]);\nconst m = Number(input.split('\\n')[0].split(' ')[1]);\nconst a = input.split('\\n')[1].split(' ').map(Number);\nconst b = [];\nfor (let i = 0; i < m; i++) {\n    const u = Number(input.split('\\n')[i + 2].split(' ')[0]);\n    const v = Number(input.split('\\n')[i + 2].split(' ')[1]);\n    b.push([u, v]);\n}\nconst dp = new Array(n + 1).fill(Infinity);\ndp[0] = 0;\nfor (let i = 1; i <= n; i++) {\n    for (let j = 0; j < m; j++) {\n        if (b[j][0] == i || b[j][1] == i) {\n            dp[i] = Math.min(dp[i], dp[b[j][0]] + dp[b[j][1]] + a[i - 1]);\n        }\n    }\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.toIntArray()\n    val adj = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (u, v) = readLine().split(\" \").map { it.toInt() }\n        adj[u - 1].add(v - 1)\n        adj[v - 1].add(u - 1)\n    }\n    val dp = Array(n) { IntArray(3) { Int.MAX_VALUE } }\n    dp[0][0] = a[0]\n    for (i in 1 until n) {\n        for (j in 0..2) {\n            for (k in adj[i - 1]) {\n                dp[i][j] = minOf(dp[i][j], dp[k][j - 1] + a[i])\n            }\n        }\n    }\n    val ans = Int.MAX_VALUE\n    for (i in 0..2) {\n        ans = minOf(ans, dp[n - 1][i])\n    }\n    if (ans == Int.MAX_VALUE) {\n        println(-1)\n    } else {\n        println(ans)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$b = [];\nfor ($i = 0; $i < $m; $i++) {\n    $u = (int)trim(explode(' ', trim(fgets(STDIN)))[0]);\n    $v = (int)trim(explode(' ', trim(fgets(STDIN)))[1]);\n    $b[$u] = $v;\n    $b[$v] = $u;\n}\n$c = [];\nfor ($i = 0; $i < $n; $i++) {\n    if (!isset($b[$i])) {\n        $c[] = $a[$i];\n    }\n}\n$c = array_unique($c);\n$c = array_values($c);\n$c = array_sort($c);\n$min = PHP_INT_MAX;\nfor ($i = 0; $i < count($c) - 2; $i++) {\n    for ($j = $i + 1; $j < count($c) - 1; $j++) {\n        for ($k = $j + 1; $k < count($c); $k++) {\n            if ($c[$i] + $c[$j] + $c[$k] < $min) {\n                $min = $c[$i] + $c[$j] + $c[$k];\n            }\n        }\n    }\n}\nif ($min == PHP_INT_MAX) {\n    echo '-1';\n} else {\n    echo $min;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int b[n];\n    int c[n];\n    int d[n];\n    for (int i = 0; i < n; i++) {\n        b[i] = 0;\n        c[i] = 0;\n        d[i] = 0;\n    }\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        scanf(\" %d %d \", &u, &v);\n        b[u - 1] = 1;\n        b[v - 1] = 1;\n    }\n    for (int i = 0; i < n; i++) {\n        if (b[i] == 0) {\n            c[i] = a[i];\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (c[i] == 0) {\n            d[i] = a[i];\n        }\n    }\n    int min = 1000000000;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            for (int k = 0; k < n; k++) {\n                if (i != j && j != k && k != i && b[i] == 1 && b[j] == 1 && b[k] == 1) {\n                    int sum = a[i] + a[j] + a[k];\n                    if (sum < min) {\n                        min = sum;\n                    }\n                }\n            }\n        }\n    }\n    if (min == 1000000000) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %d \", min);\n    }\n}\n}\"]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\nmy %m;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\n@a = split(\/ \/, <STDIN>);\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    ($u, $v) = split(\/ \/, $line);\n    $m{$u} = $v;\n    $m{$v} = $u;\n}\n\nmy $min = 1000000000;\n\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        if (exists $m{$j}) {\n            my $k = $m{$j};\n            if ($a[$i] + $a[$j] + $a[$k] < $min) {\n                $min = $a[$i] + $a[$j] + $a[$k];\n            }\n        }\n    }\n}\n\nif ($min == 1000000000) {\n    print \"-1\\n\";\n} else {\n    print \"$min\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let a = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut mp = HashMap::new();\n    for _ in 0..m {\n        let (u, v) = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        mp.insert(u, v);\n        mp.insert(v, u);\n    }\n    let mut ans = 1000000000000000000;\n    for i in 0..n {\n        for j in i + 1..n {\n            if let Some(&v) = mp.get(&j) {\n                if v != i {\n                    ans = ans.min(a[i] + a[j] + a[v]);\n                }\n            }\n        }\n    }\n    if ans == 1000000000000000000 {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", ans);\n    }\n}\n\nfn read_line() -> String {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s\n}\n\"\"\"}]"}
{"title":"B. Cthulhu","description":"...Once upon a time a man came to the sea. The sea was stormy and dark. The man started to call for the little mermaid to appear but alas, he only woke up Cthulhu...Whereas on the other end of the world Pentagon is actively collecting information trying to predict the monster's behavior and preparing the secret super weapon. Due to high seismic activity and poor weather conditions the satellites haven't yet been able to make clear shots of the monster. The analysis of the first shot resulted in an undirected graph with n vertices and m edges. Now the world's best minds are about to determine whether this graph can be regarded as Cthulhu or not.To add simplicity, let's suppose that Cthulhu looks from the space like some spherical body with tentacles attached to it. Formally, we shall regard as Cthulhu such an undirected graph that can be represented as a set of three or more rooted trees, whose roots are connected by a simple cycle.It is guaranteed that the graph contains no multiple edges and self-loops. ","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers \u2014 the number of vertices n and the number of edges m of the graph (1\u2264n\u2264100, 0\u2264m\u2264).\nEach of the following m lines contains a pair of integers x and y, that show that an edge exists between vertices x and y (1\u2264x,y\u2264n,x\u2260y). For each pair of vertices there will be at most one edge between them, no edge connects a vertex to itself.\n","output_spec":"Print \"NO\", if the graph is not Cthulhu and \"FHTAGN!\" if it is.\n","notes":"Let us denote as a simple cycle a set of v vertices that can be numbered so that the edges will only exist between vertices number 1 and 2, 2 and 3, ..., v-1 and v, v and 1.\nA tree is a connected undirected graph consisting of n vertices and n-1 edges (n>0).\nA rooted tree is a tree where one vertex is selected to be the root.\n","sample_inputs":["6 6\n6 3\n6 4\n5 1\n2 5\n1 4\n5 4\n","6 5\n5 6\n4 6\n3 1\n5 1\n1 2\n"],"sample_outputs":["FHTAGN!","NO"],"id":"103-B","difficulty":1500,"tags":["dfs+and+similar","dsu","graphs"],"src_uid":"4ecbfc792da55f458342c6eff2d5da5a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n);\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        cin >> x >> y;\n        x--;\n        y--;\n        g[x].push_back(y);\n        g[y].push_back(x);\n    }\n\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n        if (g[i].size() == 1) {\n            cnt++;\n        }\n    }\n\n    if (cnt >= 3) {\n        cout << \"FHTAGN!\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[] parent = new int[n + 1];\n        for (int i = 1; i <= n; i++) {\n            parent[i] = i;\n        }\n        for (int i = 0; i < m; i++) {\n            int x = scanner.nextInt();\n            int y = scanner.nextInt();\n            union(x, y, parent);\n        }\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (parent[i] == i) {\n                count++;\n            }\n        }\n        if (count >= 3) {\n            System.out.println(\"FHTAGN!\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n\n    private static void union(int x, int y, int[] parent) {\n        int rootX = find(x, parent);\n        int rootY = find(y, parent);\n        if (rootX != rootY) {\n            parent[rootX] = rootY;\n        }\n    }\n\n    private static int find(int x, int[] parent) {\n        if (parent[x] == x) {\n            return x;\n        }\n        return find(parent[x], parent);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m=map(int,input().split())\ng=[[0]*n for _ in range(n)]\nfor _ in range(m):\n    x,y=map(int,input().split())\n    g[x-1][y-1]=1\n    g[y-1][x-1]=1\n\ndef dfs(v,p):\n    for i in range(n):\n        if g[v][i] and i!=p:\n            dfs(i,v)\n\nans=0\nfor i in range(n):\n    dfs(i,-1)\n    if len(set(g[i]))>2:\n        ans=1\n        break\n\nif ans:\n    print(\"FHTAGN!\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n, m;\n        string[] line;\n        int[] a, b;\n        int[] roots;\n        int[] count;\n        int i, j, k;\n\n        \/\/ Read input\n        n = int.Parse(Console.ReadLine());\n        m = int.Parse(Console.ReadLine());\n        a = new int[m];\n        b = new int[m];\n        for (i = 0; i < m; i++)\n        {\n            line = Console.ReadLine().Split(' ');\n            a[i] = int.Parse(line[0]);\n            b[i] = int.Parse(line[1]);\n        }\n\n        \/\/ Find roots\n        roots = new int[n];\n        count = new int[n];\n        for (i = 0; i < n; i++)\n        {\n            roots[i] = -1;\n            count[i] = 0;\n        }\n        for (i = 0; i < m; i++)\n        {\n            if (roots[a[i]] == -1)\n            {\n                roots[a[i]] = b[i];\n                count[b[i]]++;\n            }\n            else if (roots[b[i]] == -1)\n            {\n                roots[b[i]] = a[i];\n                count[a[i]]++;\n            }\n            else if (roots[a[i]] != roots[b[i]])\n            {\n                Console.WriteLine(\"NO\");\n                return;\n            }\n        }\n\n        \/\/ Check if there are at least three roots\n        int rootsCount = 0;\n        for (i = 0; i < n; i++)\n        {\n            if (roots[i] != -1)\n            {\n                rootsCount++;\n            }\n        }\n        if (rootsCount < 3)\n        {\n            Console.WriteLine(\"NO\");\n            return;\n        }\n\n        \/\/ Check if the graph is a tree\n        for (i = 0; i < n; i++)\n        {\n            if (count[i] != 1)\n            {\n                Console.WriteLine(\"NO\");\n                return;\n            }\n        }\n\n        \/\/ Check if the graph is a simple cycle\n        for (i = 0; i < n; i++)\n        {\n            for (j = 0; j < n; j++)\n            {\n                if (i != j && roots[i] == roots[j])\n                {\n                    Console.WriteLine(\"NO\");\n                    return;\n                }\n            }\n        }\n\n        \/\/ The graph is Cthulhu\n        Console.WriteLine(\"FHTAGN!\");\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\nedges = []\n\nm.times do\n  edges << gets.split.map(&:to_i)\nend\n\ndef dfs(v, visited, roots)\n  visited[v] = true\n  roots << v\n\n  edges.each do |u, w|\n    next if visited[u] || visited[w]\n\n    dfs(u, visited, roots)\n    dfs(w, visited, roots)\n  end\nend\n\ndef is_cthulhu?(n, roots)\n  roots.size >= 3 && roots.size == roots.uniq.size\nend\n\nvisited = Array.new(n, false)\nroots = []\n\ndfs(1, visited, roots)\n\nputs is_cthulhu?(n, roots) ? 'FHTAGN!' : 'NO'\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Cthulhu;\nuses SysUtils;\n\nvar\n  n, m, i, j, k, l, x, y, t, s, p, q, r, c, d, e, f, g, h, a, b: integer;\n  v: array[0..100] of integer;\n  w: array[0..100] of integer;\n  z: array[0..100] of integer;\n  \nfunction dfs(x: integer): boolean;\nvar\n  i: integer;\nbegin\n  v[x] := 1;\n  for i := 0 to m - 1 do\n    if (w[i] = x) and (v[y] = 0) then\n      if dfs(y) then\n        return true;\n  return false;\nend;\n\nfunction dfs2(x: integer): boolean;\nvar\n  i: integer;\nbegin\n  v[x] := 1;\n  for i := 0 to m - 1 do\n    if (w[i] = x) and (v[y] = 0) then\n      if dfs2(y) then\n        return true;\n  return false;\nend;\n\nbegin\n  readln(n, m);\n  for i := 0 to m - 1 do\n  begin\n    readln(x, y);\n    w[i] := x;\n    y := y - 1;\n    z[x - 1] := y;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    v[i] := 0;\n    w[i] := 0;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    if v[i] = 0 then\n      if dfs(i) then\n      begin\n        t := 0;\n        for j := 0 to n - 1 do\n          if v[j] = 1 then\n            t := t + 1;\n        if t >= 3 then\n        begin\n          for j := 0 to n - 1 do\n            v[j] := 0;\n          for j := 0 to n - 1 do\n            if z[j] = i then\n            begin\n              if dfs2(j) then\n              begin\n                c := 0;\n                for k := 0 to n - 1 do\n                  if v[k] = 1 then\n                    c := c + 1;\n                if c >= 3 then\n                  begin\n                    writeln('FHTAGN!');\n                    exit;\n                  end;\n              end;\n            end;\n        end;\n      end;\n  end;\n  writeln('NO');\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    g := make([][]int, n)\\n    for i := 0; i < m; i++ {\\n        var x, y int\\n        fmt.Scanf(\\\"%d%d\\\", &x, &y)\\n        g[x-1] = append(g[x-1], y-1)\\n        g[y-1] = append(g[y-1], x-1)\\n    }\\n    var ans bool\\n    for i := 0; i < n; i++ {\\n        if len(g[i]) < 3 {\\n            ans = false\\n            break\\n        }\\n    }\\n    if ans {\\n        for i := 0; i < n; i++ {\\n            if len(g[i]) > 3 {\\n                ans = false\\n                break\\n            }\\n        }\\n    }\\n    if ans {\\n        for i := 0; i < n; i++ {\\n            for j := 0; j < len(g[i]); j++ {\\n                if g[i][j] == i {\\n                    ans = false\\n                    break\\n                }\\n            }\\n            if !ans {\\n                break\\n            }\\n        }\\n    }\\n    if ans {\\n        for i := 0; i < n; i++ {\\n            for j := 0; j < len(g[i]); j++ {\\n                for k := 0; k < len(g[g[i][j]]); k++ {\\n                    if g[i][j] == g[g[i][j]][k] {\\n                        ans = false\\n                        break\\n                    }\\n                }\\n                if !ans {\\n                    break\\n                }\\n            }\\n            if !ans {\\n                break\\n            }\\n        }\\n    }\\n    if ans {\\n        fmt.Println(\\\"FHTAGN!\\\")\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst graph = new Map();\nfor (let i = 0; i < m; i++) {\n    const [a, b] = input[i + 1].split(' ').map(parseInt);\n    if (!graph.has(a)) {\n        graph.set(a, []);\n    }\n    if (!graph.has(b)) {\n        graph.set(b, []);\n    }\n    graph.get(a).push(b);\n    graph.get(b).push(a);\n}\nconst roots = [];\nfor (const [key, value] of graph.entries()) {\n    if (value.length == 1) {\n        roots.push(key);\n    }\n}\nif (roots.length < 3) {\n    console.log('NO');\n} else {\n    const cycle = new Set();\n    for (const root of roots) {\n        const queue = [root];\n        while (queue.length) {\n            const current = queue.shift();\n            if (cycle.has(current)) {\n                console.log('FHTAGN!');\n                return;\n            }\n            cycle.add(current);\n            for (const neighbor of graph.get(current)) {\n                queue.push(neighbor);\n            }\n        }\n    }\n    console.log('NO');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a - 1].add(b - 1)\n        graph[b - 1].add(a - 1)\n    }\n\n    val visited = BooleanArray(n)\n    val cycle = BooleanArray(n)\n    val roots = mutableListOf<Int>()\n    for (i in 0 until n) {\n        if (!visited[i]) {\n            dfs(i, graph, visited, cycle, roots)\n        }\n    }\n\n    if (roots.size < 3) {\n        println(\"NO\")\n        return\n    }\n\n    val cycleRoots = roots.filter { cycle[it] }\n    if (cycleRoots.size != 1) {\n        println(\"NO\")\n        return\n    }\n\n    val cycleRoot = cycleRoots[0]\n    val cycleVertices = mutableListOf<Int>()\n    var current = cycleRoot\n    while (true) {\n        cycleVertices.add(current)\n        current = graph[current].first { !cycleVertices.contains(it) }\n        if (current == cycleRoot) {\n            break\n        }\n    }\n\n    val treeVertices = mutableListOf<Int>()\n    for (i in 0 until n) {\n        if (!cycleVertices.contains(i)) {\n            treeVertices.add(i)\n        }\n    }\n\n    val treeRoots = treeVertices.filter { !visited[it] }\n    if (treeRoots.size < 3) {\n        println(\"NO\")\n        return\n    }\n\n    println(\"FHTAGN!\")\n}\n\nprivate fun dfs(\n    v: Int,\n    graph: Array<MutableList<Int>>,\n    visited: BooleanArray,\n    cycle: BooleanArray,\n    roots: MutableList<Int>\n) {\n    visited[v] = true\n    for (w in graph[v]) {\n        if (!visited[w]) {\n            dfs(w, graph, visited, cycle, roots)\n        } else if (!cycle[w]) {\n            cycle[v] = true\n            roots.add(v)\n        }\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m;\nfscanf(STDIN, \"%d %d\\n\", $n, $m);\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a, $b = fscanf(STDIN, \"%d %d\\n\", $a, $b);\n    $graph[$a][] = $b;\n    $graph[$b][] = $a;\n}\n$roots = [];\nfor ($i = 1; $i <= $n; $i++) {\n    if (!in_array($i, $roots)) {\n        $queue = [$i];\n        $visited = [];\n        while (!empty($queue)) {\n            $v = array_shift($queue);\n            $visited[$v] = true;\n            foreach ($graph[$v] as $u) {\n                if (!in_array($u, $visited)) {\n                    $queue[] = $u;\n                }\n            }\n        }\n        if (count($visited) >= 3) {\n            $roots[] = $i;\n        }\n    }\n}\nif (count($roots) >= 3 && count(array_intersect($roots, $graph[$roots[0]])) == count($roots) - 1) {\n    echo \"FHTAGN!\";\n} else {\n    echo \"NO\";\n}\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @edges;\n\nwhile (<>) {\n    chomp;\n    my @line = split \/ \/;\n    $n = $line[0];\n    $m = $line[1];\n    @edges = ();\n    for (my $i = 0; $i < $m; $i++) {\n        my @edge = split \/ \/, $line[$i + 2];\n        push @edges, [$edge[0], $edge[1]];\n    }\n\n    my $is_cthulhu = 1;\n    for (my $i = 0; $i < $n; $i++) {\n        my $tree = 0;\n        for (my $j = 0; $j < $n; $j++) {\n            if ($i != $j && !grep { $_->[0] == $i && $_->[1] == $j } @edges) {\n                $tree = 0;\n                last;\n            }\n        }\n        if ($tree == 0) {\n            $is_cthulhu = 0;\n            last;\n        }\n    }\n\n    if ($is_cthulhu) {\n        print \"FHTAGN!\\n\";\n    } else {\n        print \"NO\\n\";\n    }\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        graph.entry(a).or_insert(Vec::new()).push(b);\n        graph.entry(b).or_insert(Vec::new()).push(a);\n    }\n\n    let mut roots = Vec::new();\n    for i in 0..n {\n        if graph.get(&i).is_none() {\n            roots.push(i);\n        }\n    }\n\n    if roots.len() < 3 {\n        println!(\"NO\");\n        return;\n    }\n\n    let mut cycle = Vec::new();\n    for i in 0..roots.len() {\n        let mut visited = vec![false; n];\n        let mut stack = vec![roots[i]];\n        while let Some(v) = stack.pop() {\n            if visited[v] {\n                continue;\n            }\n            visited[v] = true;\n            cycle.push(v);\n            for &w in graph.get(&v).unwrap() {\n                if !visited[w] {\n                    stack.push(w);\n                }\n            }\n        }\n    }\n\n    if cycle.len() != n {\n        println!(\"NO\");\n        return;\n    }\n\n    for i in 0..n {\n        if cycle[i] != cycle[(i + 1) % n] {\n            println!(\"NO\");\n            return;\n        }\n    }\n\n    println!(\"FHTAGN!\");\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"A. Benches","description":"There are $$$n$$$ benches in the Berland Central park. It is known that $$$a_i$$$ people are currently sitting on the $$$i$$$-th bench. Another $$$m$$$ people are coming to the park and each of them is going to have a seat on some bench out of $$$n$$$ available.Let $$$k$$$ be the maximum number of people sitting on one bench after additional $$$m$$$ people came to the park. Calculate the minimum possible $$$k$$$ and the maximum possible $$$k$$$.Nobody leaves the taken seat during the whole process.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer $$$n$$$ $$$(1 \\\\le n \\\\le 100)$$$ \u2014 the number of benches in the park.\nThe second line contains a single integer $$$m$$$ $$$(1 \\\\le m \\\\le 10\\\\,000)$$$ \u2014 the number of people additionally coming to the park.\nEach of the next $$$n$$$ lines contains a single integer $$$a_i$$$ $$$(1 \\\\le a_i \\\\le 100)$$$ \u2014 the initial number of people on the $$$i$$$-th bench.\n","output_spec":"Print the minimum possible $$$k$$$ and the maximum possible $$$k$$$, where $$$k$$$ is the maximum number of people sitting on one bench after additional $$$m$$$ people came to the park.\n","notes":"In the first example, each of four benches is occupied by a single person. The minimum $$$k$$$ is $$$3$$$. For example, it is possible to achieve if two newcomers occupy the first bench, one occupies the second bench, one occupies the third bench, and two remaining \u2014 the fourth bench. The maximum $$$k$$$ is $$$7$$$. That requires all six new people to occupy the same bench.\nThe second example has its minimum $$$k$$$ equal to $$$15$$$ and maximum $$$k$$$ equal to $$$15$$$, as there is just a single bench in the park and all $$$10$$$ people will occupy it.\n","sample_inputs":["4\n6\n1\n1\n1\n1\n","1\n10\n5\n","3\n6\n1\n6\n5\n","3\n7\n1\n6\n5\n"],"sample_outputs":["3 7\n","15 15\n","6 12\n","7 13\n"],"id":"1042-A","difficulty":1100,"tags":["binary+search","implementation"],"src_uid":"78f696bd954c9f0f9bb502e515d85a8d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int max_a = 0;\n    for (int i = 0; i < n; i++) {\n        max_a = max(max_a, a[i]);\n    }\n    int min_a = 0;\n    for (int i = 0; i < n; i++) {\n        min_a = min(min_a, a[i]);\n    }\n    int max_k = max_a + m;\n    int min_k = min_a + m;\n    cout << min_k << \" \" << max_k << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int min = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            min = Math.max(min, a[i]);\n            max = Math.max(max, a[i] + m);\n        }\n        System.out.println(min + \" \" + max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nm = int(input())\na = [int(i) for i in input().split()]\na.sort()\nprint(max(a[-1] + m, max(a)))\nprint(max(a[-1] + m, sum(a)))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &m);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int min = 0, max = 0;\n    for (int i = 0; i < n; i++) {\n        min = max = a[i];\n        for (int j = i + 1; j < n; j++) {\n            min = min < a[j] ? min : a[j];\n            max = max > a[j] ? max : a[j];\n        }\n        min += m;\n        max += m;\n    }\n    printf(\" %d  %d\\n \", min, max);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int m = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n        }\n        int min = 0;\n        int max = 0;\n        for (int i = 0; i < n; i++)\n        {\n            min = Math.Max(min, a[i]);\n            max = Math.Max(max, a[i] + m);\n        }\n        Console.WriteLine(\"{0} {1}\", min, max);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\nmin = a.max\nmax = 0\n\na.each do |i|\n  max = [max, i + m].max\n  min = [min, i].min\nend\n\nputs min, max\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Benches;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, a, min, max: Integer;\n\nbegin\n  Readln(n);\n  Readln(m);\n  for i := 1 to n do\n  begin\n    Readln(a);\n    min := min + a;\n    max := max + a;\n  end;\n  max := max + m;\n  min := min + m;\n  Writeln(min, ' ', max);\nend.\"}]}","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d\\\\n%d\\\\n\\\", &n, &m)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &a[i])\\n    }\\n    var min, max int\\n    for i := 0; i < n; i++ {\\n        min = max\\n        max = max + a[i]\\n    }\\n    max = max + m\\n    fmt.Println(min, max)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline());\\nconst m = parseInt(process.stdin.readline());\\nconst a = [];\\nfor (let i = 0; i < n; i++) {\\na.push(parseInt(process.stdin.readline()));\\n}\\nconst max = Math.max(...a);\\nconst min = Math.min(...a);\\nconsole.log(min, max + m);\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val m = sc.nextInt()\n    val a = IntArray(n)\n    for (i in 0 until n) {\n        a[i] = sc.nextInt()\n    }\n    val max = a.maxOrNull()!!\n    val min = a.minOrNull()!!\n    println(\"$min $max\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"#!\/usr\/bin\/env php\n<?php\n\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a[] = (int)trim(fgets(STDIN));\n}\n\n$min = 0;\n$max = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $min = max($min, $a[$i]);\n    $max = max($max, $a[$i] + $m);\n}\n\necho $min . ' ' . $max . PHP_EOL;\n\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &m);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int min = 0;\n    int max = 0;\n    for (int i = 0; i < n; i++) {\n        min = max(min, a[i]);\n        max = max(max, a[i] + m);\n    }\n    printf(\" %d  %d\\n\", min, max);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $m = <STDIN>;\nmy @a = ();\nfor (my $i = 0; $i < $n; $i++) {\n    $a[$i] = <STDIN>;\n}\n\nmy $min = 0;\nmy $max = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    $min = max($min, $a[$i]);\n    $max = max($max, $a[$i] + $m);\n}\n\nprint \"$min $max\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut m = String::new();\n    io::stdin().read_line(&mut m).unwrap();\n    let m: usize = m.trim().parse().unwrap();\n\n    let mut a = Vec::new();\n    for _ in 0..n {\n        let mut s = String::new();\n        io::stdin().read_line(&mut s).unwrap();\n        let s: usize = s.trim().parse().unwrap();\n        a.push(s);\n    }\n\n    let mut min = 0;\n    let mut max = 0;\n    for i in 0..n {\n        min = max(min, a[i]);\n        max = max(max, a[i] + m);\n    }\n\n    println!(\"{}\", min);\n    println!(\"{}\", max);\n}\n\"\"\"}]"}
{"title":"E. Lift and Throw","description":"You are given a straight half-line divided into segments of unit length, which we will call positions. The positions are numbered by positive integers that start with 1 from the end of half-line, i. e. 1, 2, 3 and so on. The distance between the positions is the absolute difference between the respective numbers. Laharl, Etna and Flonne occupy some positions on the half-line and they want to get to the position with the largest possible number. They are originally placed in different positions. Each of the characters can perform each of the following actions no more than once:   Move a certain distance.  Grab another character and lift him above the head.  Throw the lifted character a certain distance.  Each character has a movement range parameter. They can only move to free positions, assuming that distance between those positions doesn't exceed the movement range. One character can lift another character if the distance between the two characters equals 1, and no one already holds that another character. We can assume that the lifted character moves to the same position as the person who has lifted him, and the position in which he stood before becomes free. A lifted character cannot perform any actions and the character that holds him cannot walk. Also, each character has a throwing range parameter. It is the distance at which this character can throw the one lifted above his head. He can only throw a character to a free position, and only when there is a lifted character. We accept the situation when one person grabs another one who in his turn has the third character in his hands. This forms a \"column\" of three characters. For example, Laharl can hold Etna while Etna holds Flonne. In this case, Etna and the Flonne cannot perform any actions, and Laharl can only throw Etna (together with Flonne) at some distance. Laharl, Etna and Flonne perform actions in any order. They perform actions in turns, that is no two of them can do actions at the same time.Determine the maximum number of position at least one of the characters can reach. That is, such maximal number x so that one of the characters can reach position x.","input_from":"standard input","output_to":"standard output","time_limit":"1.5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three integers: Laharl's position, his movement range and throwing range. The second and the third lines describe Etna's and Flonne's parameters correspondingly in the similar form. It is guaranteed that the three characters occupy distinct positions. All numbers in the input are between 1 and 10, inclusive.\n","output_spec":"Print a single number \u2014 the maximum ordinal number of position which either Laharl, Etna or Flonne can reach.\n","notes":"Let us explain how to reach position 15 in the sample.\nInitially Laharl occupies position 9, Etna \u2014 position 4 and Flonne \u2014 position 2.\nFirst Laharl moves to position 6.\nThen Flonne moves to position 5 and grabs Etna.\nLaharl grabs Flonne and throws to position 9.\nFlonne throws Etna to position 12.\nEtna moves to position 15.\n","sample_inputs":["9 3 3\n4 3 1\n2 3 3\n"],"sample_outputs":["15"],"id":"105-E","difficulty":2500,"tags":["brute+force"],"src_uid":"a14739b86d1fd62a030226263cdc1afc","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int l, m, f, lr, mr, fr;\n    cin >> l >> lr >> m >> mr >> f >> fr;\n    int ans = 0;\n    if (l + lr > 10) {\n        ans = max(ans, l + lr - 10);\n    }\n    if (m + mr > 10) {\n        ans = max(ans, m + mr - 10);\n    }\n    if (f + fr > 10) {\n        ans = max(ans, f + fr - 10);\n    }\n    if (l + lr + m + mr > 10) {\n        ans = max(ans, l + lr + m + mr - 10);\n    }\n    if (l + lr + m + mr + f + fr > 10) {\n        ans = max(ans, l + lr + m + mr + f + fr - 10);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int laharl = scanner.nextInt();\n        int laharlRange = scanner.nextInt();\n        int laharlThrow = scanner.nextInt();\n        int etna = scanner.nextInt();\n        int etnaRange = scanner.nextInt();\n        int etnaThrow = scanner.nextInt();\n        int flonne = scanner.nextInt();\n        int flonneRange = scanner.nextInt();\n        int flonneThrow = scanner.nextInt();\n\n        int max = 0;\n        if (laharl + laharlRange > max) {\n            max = laharl + laharlRange;\n        }\n        if (laharl + laharlThrow > max) {\n            max = laharl + laharlThrow;\n        }\n        if (etna + etnaRange > max) {\n            max = etna + etnaRange;\n        }\n        if (etna + etnaThrow > max) {\n            max = etna + etnaThrow;\n        }\n        if (flonne + flonneRange > max) {\n            max = flonne + flonneRange;\n        }\n        if (flonne + flonneThrow > max) {\n            max = flonne + flonneThrow;\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    l, m, n = map(int, input().split())\n    e, f, g = map(int, input().split())\n    t, u, v = map(int, input().split())\n    ans = 0\n    if l + m >= 10:\n        ans = 10\n    else:\n        ans = l + m\n    if e + f >= 10:\n        ans = max(ans, 10)\n    else:\n        ans = max(ans, e + f)\n    if t + u >= 10:\n        ans = max(ans, 10)\n    else:\n        ans = max(ans, t + u)\n    if l + m + n >= 10:\n        ans = max(ans, 10)\n    else:\n        ans = max(ans, l + m + n)\n    if e + f + g >= 10:\n        ans = max(ans, 10)\n    else:\n        ans = max(ans, e + f + g)\n    if t + u + v >= 10:\n        ans = max(ans, 10)\n    else:\n        ans = max(ans, t + u + v)\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int laharl_pos, laharl_move, laharl_throw;\n    int etna_pos, etna_move, etna_throw;\n    int flonne_pos, flonne_move, flonne_throw;\n    int max_pos = 0;\n\n    scanf(\" %d %d %d \", &laharl_pos, &laharl_move, &laharl_throw);\n    scanf(\" %d %d %d \", &etna_pos, &etna_move, &etna_throw);\n    scanf(\" %d %d %d \", &flonne_pos, &flonne_move, &flonne_throw);\n\n    int laharl_move_pos = laharl_pos + laharl_move;\n    int laharl_throw_pos = laharl_pos + laharl_throw;\n    int etna_move_pos = etna_pos + etna_move;\n    int etna_throw_pos = etna_pos + etna_throw;\n    int flonne_move_pos = flonne_pos + flonne_move;\n    int flonne_throw_pos = flonne_pos + flonne_throw;\n\n    if (laharl_move_pos > max_pos) {\n        max_pos = laharl_move_pos;\n    }\n    if (laharl_throw_pos > max_pos) {\n        max_pos = laharl_throw_pos;\n    }\n    if (etna_move_pos > max_pos) {\n        max_pos = etna_move_pos;\n    }\n    if (etna_throw_pos > max_pos) {\n        max_pos = etna_throw_pos;\n    }\n    if (flonne_move_pos > max_pos) {\n        max_pos = flonne_move_pos;\n    }\n    if (flonne_throw_pos > max_pos) {\n        max_pos = flonne_throw_pos;\n    }\n\n    printf(\" %d \", max_pos);\n\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var laharl = new Laharl(int.Parse(args[0]), int.Parse(args[1]), int.Parse(args[2]));\n        var etna = new Etna(int.Parse(args[3]), int.Parse(args[4]), int.Parse(args[5]));\n        var flonne = new Flonne(int.Parse(args[6]), int.Parse(args[7]), int.Parse(args[8]));\n\n        var max = 0;\n\n        for (int i = 0; i < 10; i++)\n        {\n            max = Math.Max(max, laharl.Move(i) + laharl.Throw(i));\n            max = Math.Max(max, etna.Move(i) + etna.Throw(i));\n            max = Math.Max(max, flonne.Move(i) + flonne.Throw(i));\n        }\n\n        Console.WriteLine(max);\n    }\n}\n\nclass Laharl\n{\n    public int position;\n    public int movementRange;\n    public int throwingRange;\n\n    public Laharl(int position, int movementRange, int throwingRange)\n    {\n        this.position = position;\n        this.movementRange = movementRange;\n        this.throwingRange = throwingRange;\n    }\n\n    public int Move(int distance)\n    {\n        if (distance <= movementRange)\n        {\n            return position + distance;\n        }\n\n        return position;\n    }\n\n    public int Throw(int distance)\n    {\n        if (distance <= throwingRange)\n        {\n            return position + distance;\n        }\n\n        return position;\n    }\n}\n\nclass Etna\n{\n    public int position;\n    public int movementRange;\n    public int throwingRange;\n\n    public Etna(int position, int movementRange, int throwingRange)\n    {\n        this.position = position;\n        this.movementRange = movementRange;\n        this.throwingRange = throwingRange;\n    }\n\n    public int Move(int distance)\n    {\n        if (distance <= movementRange)\n        {\n            return position + distance;\n        }\n\n        return position;\n    }\n\n    public int Throw(int distance)\n    {\n        if (distance <= throwingRange)\n        {\n            return position + distance;\n        }\n\n        return position;\n    }\n}\n\nclass Flonne\n{\n    public int position;\n    public int movementRange;\n    public int throwingRange;\n\n    public Flonne(int position, int movementRange, int throwingRange)\n    {\n        this.position = position;\n        this.movementRange = movementRange;\n        this.throwingRange = throwingRange;\n    }\n\n    public int Move(int distance)\n    {\n        if (distance <= movementRange)\n        {\n            return position + distance;\n        }\n\n        return position;\n    }\n\n    public int Throw(int distance)\n    {\n        if (distance <= throwingRange)\n        {\n            return position + distance;\n        }\n\n        return position;\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main()\n    laharl, laharl_move, laharl_throw = map(int, input().split())\n    etna, etna_move, etna_throw = map(int, input().split())\n    flonne, flonne_move, flonne_throw = map(int, input().split())\n\n    # 1. \u79fb\u52d5\n    laharl_move_pos = laharl + laharl_move\n    etna_move_pos = etna + etna_move\n    flonne_move_pos = flonne + flonne_move\n\n    # 2. \u6301\u3061\u4e0a\u3052\n    laharl_hold_pos = laharl_move_pos if laharl_move_pos > etna_move_pos else etna_move_pos\n    etna_hold_pos = laharl_hold_pos if laharl_hold_pos > flonne_move_pos else flonne_move_pos\n\n    # 3. \u6295\u3052\u308b\n    laharl_throw_pos = laharl_hold_pos + laharl_throw\n    etna_throw_pos = laharl_hold_pos + etna_throw\n    flonne_throw_pos = laharl_hold_pos + flonne_throw\n\n    # 4. \u6700\u5927\u5024\u3092\u53d6\u5f97\n    max_pos = max(laharl_move_pos, etna_move_pos, flonne_move_pos, laharl_throw_pos, etna_throw_pos, flonne_throw_pos)\n\n    print(max_pos)\n\nif __name__ == '__main__':\n    main()\n\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n    a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z: integer;\nbegin\n    readln(a, b, c);\n    readln(d, e, f);\n    readln(g, h, i);\n    j := a + b;\n    k := d + e;\n    l := g + h;\n    m := max(j, k, l);\n    n := m + c;\n    o := m + f;\n    p := m + i;\n    q := max(n, o, p);\n    r := q + b;\n    s := q + e;\n    t := q + i;\n    u := max(r, s, t);\n    v := u + c;\n    w := u + f;\n    x := u + i;\n    y := max(v, w, x);\n    z := y + b;\n    writeln(z);\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"l,e,f=map(int,input().split());print(max(l+e+f,l+e+f-1,l+e+f-2,l+e+f-3,l+e+f-4,l+e+f-5,l+e+f-6,l+e+f-7,l+e+f-8,l+e+f-9,l+e+f-10,l+e+f-11,l+e+f-12,l+e+f-13,l+e+f-14,l+e+f-15))\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (l, m, t) = readLine().split(\" \").map { it.toInt() }\n    val (e, n, u) = readLine().split(\" \").map { it.toInt() }\n    val (f, o, v) = readLine().split(\" \").map { it.toInt() }\n\n    val max = Math.max(l, Math.max(e, f))\n    val m1 = Math.min(m, t)\n    val n1 = Math.min(n, u)\n    val o1 = Math.min(o, v)\n\n    val m2 = Math.max(m1, n1)\n    val o2 = Math.max(m2, o1)\n\n    println(Math.max(max, o2))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$input = explode(' ', trim(fgets(STDIN)));\n$laharl = [intval($input[0]), intval($input[1]), intval($input[2])];\n$etna = [intval($input[3]), intval($input[4]), intval($input[5])];\n$flonne = [intval($input[6]), intval($input[7]), intval($input[8])];\n\n$max = 0;\n\nfunction move($pos, $range) {\n    global $max;\n    $max = max($max, $pos + $range);\n}\n\nfunction throw($pos, $range) {\n    global $max;\n    $max = max($max, $pos + $range);\n}\n\nfunction grab($pos, $range) {\n    global $max;\n    $max = max($max, $pos + $range);\n}\n\nfunction lift($pos, $range) {\n    global $max;\n    $max = max($max, $pos + $range);\n}\n\nfunction drop($pos) {\n    global $max;\n    $max = max($max, $pos);\n}\n\nfunction action($pos, $range, $action) {\n    switch ($action) {\n        case 'move':\n            move($pos, $range);\n            break;\n        case 'throw':\n            throw($pos, $range);\n            break;\n        case 'grab':\n            grab($pos, $range);\n            break;\n        case 'lift':\n            lift($pos, $range);\n            break;\n        case 'drop':\n            drop($pos);\n            break;\n    }\n}\n\naction($laharl[0], $laharl[1], 'move');\naction($etna[0], $etna[1], 'move');\naction($flonne[0], $flonne[1], 'move');\n\necho $max;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[3] laharl, etna, flonne;\n    int[3] laharl_move, laharl_throw, etna_move, etna_throw, flonne_move, flonne_throw;\n    int max = 0;\n\n    readln(laharl[0], laharl_move, laharl_throw);\n    readln(etna[0], etna_move, etna_throw);\n    readln(flonne[0], flonne_move, flonne_throw);\n\n    laharl[1] = laharl[0] + laharl_move;\n    laharl[2] = laharl[1] + laharl_throw;\n    etna[1] = etna[0] + etna_move;\n    etna[2] = etna[1] + etna_throw;\n    flonne[1] = flonne[0] + flonne_move;\n    flonne[2] = flonne[1] + flonne_throw;\n\n    max = max(laharl[2], etna[2], flonne[2]);\n\n    writeln(max);\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\n\n$l = <>;\n@l = split \/ \/, $l;\n$e = <>;\n@e = split \/ \/, $e;\n$f = <>;\n@f = split \/ \/, $f;\n\n$max = 0;\n\nfor ($i = 0; $i < 3; $i++) {\n    for ($j = 0; $j < 3; $j++) {\n        for ($k = 0; $k < 3; $k++) {\n            if ($i != $j && $j != $k && $k != $i) {\n                $a = $l[$i];\n                $b = $e[$j];\n                $c = $f[$k];\n\n                $a += $l[$i] - $e[$j];\n                $a += $e[$j] - $f[$k];\n\n                if ($a > $max) {\n                    $max = $a;\n                }\n            }\n        }\n    }\n}\n\nprint $max;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut laharl = input.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut etna = input.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut flonne = input.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut max = 0;\n    for i in 0..3 {\n        let mut pos = laharl[i];\n        let mut range = laharl[i + 1];\n        let mut throw = laharl[i + 2];\n        while pos < 10 {\n            pos += range;\n            if pos > max {\n                max = pos;\n            }\n        }\n        for j in 0..3 {\n            if i != j {\n                pos = etna[j];\n                range = etna[j + 1];\n                throw = etna[j + 2];\n                while pos < 10 {\n                    pos += range;\n                    if pos > max {\n                        max = pos;\n                    }\n                }\n            }\n        }\n        for j in 0..3 {\n            if i != j {\n                pos = flonne[j];\n                range = flonne[j + 1];\n                throw = flonne[j + 2];\n                while pos < 10 {\n                    pos += range;\n                    if pos > max {\n                        max = pos;\n                    }\n                }\n            }\n        }\n    }\n    println!(\"{}\", max);\n}\n\"\"\"}]"}
{"title":"C. Buns","description":"Lavrenty, a baker, is going to make several buns with stuffings and sell them.Lavrenty has n grams of dough as well as m different stuffing types. The stuffing types are numerated from 1 to m. Lavrenty knows that he has ai grams left of the i-th stuffing. It takes exactly bi grams of stuffing i and ci grams of dough to cook a bun with the i-th stuffing. Such bun can be sold for di tugriks.Also he can make buns without stuffings. Each of such buns requires c0 grams of dough and it can be sold for d0 tugriks. So Lavrenty can cook any number of buns with different stuffings or without it unless he runs out of dough and the stuffings. Lavrenty throws away all excess material left after baking.Find the maximum number of tugriks Lavrenty can earn.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains 4 integers n, m, c0 and d0 (1\u2264n\u22641000, 1\u2264m\u226410, 1\u2264c0,d0\u2264100). Each of the following m lines contains 4 integers. The i-th line contains numbers ai, bi, ci and di (1\u2264ai,bi,ci,di\u2264100).\n","output_spec":"Print the only number \u2014 the maximum number of tugriks Lavrenty can earn.\n","notes":"To get the maximum number of tugriks in the first sample, you need to cook 2 buns with stuffing 1, 4 buns with stuffing 2 and a bun without any stuffing.\nIn the second sample Lavrenty should cook 4 buns without stuffings.\n","sample_inputs":["10 2 2 1\n7 3 2 100\n12 3 1 10\n","100 1 25 50\n15 5 20 10\n"],"sample_outputs":["241","200"],"id":"106-C","difficulty":1700,"tags":["dp"],"src_uid":"4e166b8b44427b1227e0f811161d3a6f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, m, c0, d0;\n    cin >> n >> m >> c0 >> d0;\n    int a[m], b[m], c[m], d[m];\n    for (int i = 0; i < m; i++) {\n        cin >> a[i] >> b[i] >> c[i] >> d[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (a[i] <= n) {\n            ans = max(ans, d[i]);\n        }\n    }\n    for (int i = 0; i < m; i++) {\n        if (a[i] > n) {\n            int x = n \/ c[i];\n            int y = n % c[i];\n            ans = max(ans, d[i] * x + d0 * y);\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n, m, c0, d0;\n        n = scanner.nextInt();\n        m = scanner.nextInt();\n        c0 = scanner.nextInt();\n        d0 = scanner.nextInt();\n        int[] a = new int[m];\n        int[] b = new int[m];\n        int[] c = new int[m];\n        int[] d = new int[m];\n        for (int i = 0; i < m; i++) {\n            a[i] = scanner.nextInt();\n            b[i] = scanner.nextInt();\n            c[i] = scanner.nextInt();\n            d[i] = scanner.nextInt();\n        }\n        int max = 0;\n        for (int i = 0; i < m; i++) {\n            int temp = 0;\n            if (n >= c[i]) {\n                temp = d[i];\n            }\n            if (n >= c[i] + b[i]) {\n                temp = Math.max(temp, d[i] + (n - c[i]) \/ b[i] * d[i]);\n            }\n            if (n >= c0) {\n                temp = Math.max(temp, d0 + (n - c0) \/ c0 * d0);\n            }\n            max = Math.max(max, temp);\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,c0,d0=map(int,input().split())\na=[0]*m\nb=[0]*m\nc=[0]*m\nd=[0]*m\nfor i in range(m):\n    a[i],b[i],c[i],d[i]=map(int,input().split())\nans=0\nfor i in range(m):\n    if a[i]!=0:\n        ans+=d[i]*min(a[i]\/\/b[i],n\/\/c[i])\nans+=d0*min(n\/\/c0,m)\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, m, c0, d0;\n    scanf(\" %d %d %d %d \", &n, &m, &c0, &d0);\n    int a[m], b[m], c[m], d[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d %d %d \", &a[i], &b[i], &c[i], &d[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (n >= c[i] + b[i]) {\n            ans = ans + d[i];\n            n = n - c[i] - b[i];\n        } else {\n            ans = ans + d0;\n            n = n - c0;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var c0 = int.Parse(input[2]);\n        var d0 = int.Parse(input[3]);\n\n        var buns = new List<int[]>();\n        for (var i = 0; i < m; i++)\n        {\n            var line = Console.ReadLine().Split(' ');\n            var a = int.Parse(line[0]);\n            var b = int.Parse(line[1]);\n            var c = int.Parse(line[2]);\n            var d = int.Parse(line[3]);\n\n            buns.Add(new int[] { a, b, c, d });\n        }\n\n        var max = 0;\n        for (var i = 0; i < m; i++)\n        {\n            var bun = buns[i];\n            var a = bun[0];\n            var b = bun[1];\n            var c = bun[2];\n            var d = bun[3];\n\n            if (a <= n && c <= n)\n            {\n                var count = Math.Min(n \/ c, a \/ b);\n                max = Math.Max(max, count * d);\n            }\n        }\n\n        var count = Math.Min(n \/ c0, m);\n        max = Math.Max(max, count * d0);\n\n        Console.WriteLine(max);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m, c0, d0 = gets.split.map(&:to_i)\n\nans = 0\n\nfor i in 1..m\n  a, b, c, d = gets.split.map(&:to_i)\n  if a > 0\n    ans += d if c <= n\n    n -= c\n  end\nend\n\nans += d0 * (n \/ c0)\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Buns;\n\nuses\n  SysUtils;\n\nvar\n  n, m, c0, d0, i, j, a, b, c, d, max: integer;\n  a1, b1, c1, d1: array[0..10] of integer;\n\nbegin\n  readln(n, m, c0, d0);\n  for i := 0 to m - 1 do\n  begin\n    readln(a1[i], b1[i], c1[i], d1[i]);\n  end;\n  max := 0;\n  for i := 0 to m - 1 do\n  begin\n    for j := 0 to m - 1 do\n    begin\n      if (a1[i] > 0) and (b1[i] <= c1[j]) and (d1[i] > d1[j]) then\n      begin\n        a := a1[i];\n        b := b1[i];\n        c := c1[j];\n        d := d1[j];\n        if (a + b <= n) and (c <= n) then\n        begin\n          max := max + d;\n          a1[i] := a1[i] - a;\n          b1[i] := b1[i] - b;\n          c1[j] := c1[j] - c;\n        end;\n      end;\n    end;\n  end;\n  for i := 0 to m - 1 do\n  begin\n    if (a1[i] > 0) and (c1[i] <= n) then\n    begin\n      max := max + d0;\n      a1[i] := a1[i] - c1[i];\n    end;\n  end;\n  writeln(max);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, c0, d0 int\\n    fmt.Scanf(\\\"%d %d %d %d\\\", &n, &m, &c0, &d0)\\n    var a, b, c, d []int\\n    for i := 0; i < m; i++ {\\n        fmt.Scanf(\\\"%d %d %d %d\\\", &a[i], &b[i], &c[i], &d[i])\\n    }\\n    var ans int\\n    for i := 0; i < m; i++ {\\n        if n >= c[i] {\\n            ans += d[i]\\n            n -= c[i]\\n        }\\n    }\\n    for i := 0; i < m; i++ {\\n        if n >= b[i] {\\n            ans += d[i] * (n \/ b[i])\\n            n %= b[i]\\n        }\\n    }\\n    if n > 0 {\\n        ans += d0 * (n \/ c0)\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n,m,c0,d0=map(int,input().split())\nfor i in range(m):\n    a,b,c,d=map(int,input().split())\n    n-=max(0,a-b)\n    c0-=max(0,c-b)\nprint(n*d0+c0*d0)\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m, c0, d0) = readLine().split(\" \").map { it.toInt() }\n    val dp = Array(m + 1) { IntArray(n + 1) { 0 } }\n    val a = Array(m) { readLine().split(\" \").map { it.toInt() } }\n    val b = Array(m) { readLine().split(\" \").map { it.toInt() } }\n    val c = Array(m) { readLine().split(\" \").map { it.toInt() } }\n    val d = Array(m) { readLine().split(\" \").map { it.toInt() } }\n\n    for (i in 0 until m) {\n        for (j in 0..n) {\n            if (j < c[i]) {\n                dp[i + 1][j] = dp[i][j]\n            } else {\n                dp[i + 1][j] = maxOf(dp[i][j], dp[i][j - c[i]] + d[i])\n            }\n        }\n    }\n\n    var ans = 0\n    for (i in 0..m) {\n        ans = maxOf(ans, dp[i + 1][n] + d0 * (n - c0))\n    }\n\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$m = (int)$input[1];\n$c0 = (int)$input[2];\n$d0 = (int)$input[3];\n$dp = array_fill(0, $m + 1, 0);\n$dp[0] = $d0;\nfor ($i = 0; $i < $m; $i++) {\n    $input = explode(' ', trim(fgets(STDIN)));\n    $a = (int)$input[0];\n    $b = (int)$input[1];\n    $c = (int)$input[2];\n    $d = (int)$input[3];\n    for ($j = $c; $j <= $n; $j++) {\n        $dp[$j] = max($dp[$j], $dp[$j - $c] + $d);\n    }\n}\necho $dp[$n];\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m, c0, d0;\n    scanf(\" %d %d %d %d \", &n, &m, &c0, &d0);\n    int[m] a, b, c, d;\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d %d %d \", &a[i], &b[i], &c[i], &d[i]);\n    }\n    int[m] dp;\n    dp[0] = d0;\n    for (int i = 1; i < m; i++) {\n        dp[i] = max(dp[i - 1], d[i]);\n        for (int j = 0; j < i; j++) {\n            if (a[i] >= a[j] && c[i] >= c[j]) {\n                dp[i] = max(dp[i], dp[j] + d[i]);\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (n >= c[i]) {\n            ans = max(ans, dp[i] + (n - c[i]) \/ c0 * d0);\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nn,m,c0,d0=map(int,input().split())\n\na=[]\nfor i in range(m):\n    a.append(list(map(int,input().split())))\n\na.sort(key=lambda x:x[1])\n\nans=0\nfor i in range(m):\n    if n>=a[i][1]:\n        n-=a[i][1]\n        ans+=a[i][2]*a[i][3]\n    else:\n        ans+=a[i][2]*a[i][3]*(n\/\/a[i][1])\n        n=n%a[i][1]\n\nans+=c0*d0*n\n\nprint(ans)\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n, m, c0, d0 = 0;\n    stdin.read_line(&mut n).unwrap();\n    stdin.read_line(&mut m).unwrap();\n    stdin.read_line(&mut c0).unwrap();\n    stdin.read_line(&mut d0).unwrap();\n\n    let mut a = vec![0; m];\n    let mut b = vec![0; m];\n    let mut c = vec![0; m];\n    let mut d = vec![0; m];\n\n    for _ in 0..m {\n        stdin.read_line(&mut a[m]).unwrap();\n        stdin.read_line(&mut b[m]).unwrap();\n        stdin.read_line(&mut c[m]).unwrap();\n        stdin.read_line(&mut d[m]).unwrap();\n    }\n\n    let mut max = 0;\n    for i in 0..m {\n        let mut t = 0;\n        if a[i] > 0 {\n            t = d[i] * (a[i] \/ b[i]);\n        }\n        if c0 > 0 {\n            t = t + d0 * (c0 \/ c[i]);\n        }\n        if t > max {\n            max = t;\n        }\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", max)).unwrap();\n}\n\"\"\"}]"}
{"title":"C. Arrangement","description":"In the year 2500 the annual graduation ceremony in the German University in Cairo (GUC) has run smoothly for almost 500 years so far.The most important part of the ceremony is related to the arrangement of the professors in the ceremonial hall.Traditionally GUC has n professors. Each professor has his seniority level. All seniorities are different. Let's enumerate the professors from 1 to n, with 1 being the most senior professor and n being the most junior professor.The ceremonial hall has n seats, one seat for each professor. Some places in this hall are meant for more senior professors than the others. More specifically, m pairs of seats are in \"senior-junior\" relation, and the tradition requires that for all m pairs of seats (ai,bi) the professor seated in \"senior\" position ai should be more senior than the professor seated in \"junior\" position bi.GUC is very strict about its traditions, which have been carefully observed starting from year 2001. The tradition requires that:   The seating of the professors changes every year.  Year 2001 ceremony was using lexicographically first arrangement of professors in the ceremonial hall.  Each consecutive year lexicographically next arrangement of the professors is used. The arrangement of the professors is the list of n integers, where the first integer is the seniority of the professor seated in position number one, the second integer is the seniority of the professor seated in position number two, etc.Given n, the number of professors, y, the current year and m pairs of restrictions, output the arrangement of the professors for this year.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three integers n, y and m (1\u2264n\u226416,2001\u2264y\u226410^18,0\u2264m\u2264100) \u2014 the number of professors, the year for which the arrangement should be computed, and the number of pairs of seats for which the seniority relation should be kept, respectively.\nThe next m lines contain one pair of integers each, \"ai bi\", indicating that professor on the ai-th seat is more senior than professor on the bi-th seat (1\u2264ai,bi\u2264n,ai\u2260bi). Some pair may be listed more than once.\nPlease, do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin stream (you may also use the %I64d specificator).\n","output_spec":"Print the order in which the professors should be seated in the requested year.\nIf by this year the GUC would have ran out of arrangements, or the given \"senior-junior\" relation are contradictory, print \"The times have changed\" (without quotes).\n","notes":"In the first example the lexicographically first order of seating is 1 2 3.\nIn the third example the GUC will run out of arrangements after the year 3630800.\nIn the fourth example there are no valid arrangements for the seating.\nThe lexicographical comparison of arrangements is performed by the < operator in modern programming languages. The arrangement a is lexicographically less that the arrangement b, if there exists such i (1\u2264i\u2264n), that ai<bi, and for any j (1\u2264j<i) aj=bj.\n","sample_inputs":["3 2001 2\n1 2\n2 3\n","7 2020 6\n1 2\n1 3\n2 4\n2 5\n3 6\n3 7\n","10 3630801 0\n","3 2001 3\n1 2\n2 3\n3 1\n"],"sample_outputs":["1 2 3\n","1 2 3 7 4 6 5\n","The times have changed\n","The times have changed\n"],"id":"107-C","difficulty":2400,"tags":["bitmasks","dp"],"src_uid":"e9db8d048e9763cf38c584342dea9f53","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, y, m;\n    cin >> n >> y >> m;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    vector<vector<int>> b(n);\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        cin >> x >> y;\n        b[x - 1].push_back(y - 1);\n    }\n    int i = 0;\n    while (true) {\n        bool ok = true;\n        for (int j = 0; j < n; j++) {\n            if (i == a[j]) {\n                continue;\n            }\n            for (int k = 0; k < b[j].size(); k++) {\n                if (i == b[j][k]) {\n                    ok = false;\n                    break;\n                }\n            }\n            if (!ok) {\n                break;\n            }\n        }\n        if (ok) {\n            break;\n        }\n        i++;\n    }\n    for (int j = 0; j < n; j++) {\n        cout << a[i] << \" \";\n        i++;\n    }\n    cout << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, y, m;\n        n = sc.nextInt();\n        y = sc.nextInt();\n        m = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < m; i++) {\n            int ai = sc.nextInt();\n            int bi = sc.nextInt();\n            a[ai - 1] = bi;\n        }\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            b[i] = i + 1;\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (a[j] == b[i]) {\n                    b[i] = b[j];\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.print(b[i] + \" \");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, y, m = map(int, input().split())\n\na = [i for i in range(1, n + 1)]\n\nfor _ in range(m):\n    x, y = map(int, input().split())\n    a[x - 1], a[y - 1] = a[y - 1], a[x - 1]\n\nfor i in range(n):\n    print(a[i], end=\" \")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, y, m;\n    scanf(\" %d %d %d \", &n, &y, &m);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < n) {\n        if (j < m) {\n            if (a[i] < a[a[i] - 1]) {\n                printf(\" The times have changed\\n\");\n                return 0;\n            }\n            j++;\n        }\n        printf(\" %d \", a[i]);\n        i++;\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n, y, m;\n        string[] line;\n        int[] a, b;\n        int i, j, k;\n        int[] ans;\n\n        \/\/ \u8bfb\u5165\u6570\u636e\n        n = int.Parse(Console.ReadLine());\n        y = int.Parse(Console.ReadLine());\n        m = int.Parse(Console.ReadLine());\n        a = new int[m];\n        b = new int[m];\n        for (i = 0; i < m; i++)\n        {\n            line = Console.ReadLine().Split(' ');\n            a[i] = int.Parse(line[0]);\n            b[i] = int.Parse(line[1]);\n        }\n\n        \/\/ \u8ba1\u7b97\u7b54\u6848\n        ans = new int[n];\n        for (i = 0; i < n; i++)\n        {\n            ans[i] = i + 1;\n        }\n        for (i = 0; i < m; i++)\n        {\n            for (j = 0; j < n; j++)\n            {\n                if (ans[j] == a[i])\n                {\n                    for (k = 0; k < n; k++)\n                    {\n                        if (ans[k] == b[i])\n                        {\n                            ans[j] = ans[k];\n                            ans[k] = a[i];\n                            break;\n                        }\n                    }\n                    break;\n                }\n            }\n        }\n\n        \/\/ \u8f93\u51fa\u7b54\u6848\n        for (i = 0; i < n; i++)\n        {\n            Console.Write(ans[i] + \" \");\n        }\n        Console.WriteLine();\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, y, m = gets.split.map(&:to_i)\n\ns = []\n\nfor i in 1..m\n  a, b = gets.split.map(&:to_i)\n  s[a-1], s[b-1] = s[b-1], s[a-1]\nend\n\nfor i in 0..n-1\n  print s[i]\n  print \" \"\nend\n\nputs \"\"\n\nif y % n == 0\n  puts \"The times have changed\"\nend\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, y, m int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &y, &m)\\n    arr := make([]int, n)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n        arr[a-1], arr[b-1] = arr[b-1], arr[a-1]\\n    }\\n    fmt.Println(arr)\\n}\\n\"}]}","Javascript":"","Kotlin":"","PHP":"","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $y, $m;\nmy @a;\nmy @b;\nmy @c;\nmy @d;\nmy @e;\nmy @f;\nmy @g;\nmy @h;\nmy @i;\nmy @j;\nmy @k;\nmy @l;\nmy @m;\nmy @n;\nmy @o;\nmy @p;\nmy @q;\nmy @r;\nmy @s;\nmy @t;\nmy @u;\nmy @v;\nmy @w;\nmy @x;\nmy @y;\nmy @z;\n\nmy $i;\nmy $j;\nmy $k;\nmy $l;\nmy $m;\nmy $n;\nmy $o;\nmy $p;\nmy $q;\nmy $r;\nmy $s;\nmy $t;\nmy $u;\nmy $v;\nmy $w;\nmy $x;\nmy $y;\nmy $z;\n\n$n = <STDIN>;\nchomp $n;\n$y = <STDIN>;\nchomp $y;\n$m = <STDIN>;\nchomp $m;\n\nfor ($i = 0; $i < $m; $i++) {\n    $a[$i] = <STDIN>;\n    chomp $a[$i];\n    $b[$i] = <STDIN>;\n    chomp $b[$i];\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    $c[$i] = $i + 1;\n}\n\nfor ($i = 0; $i < $m; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($c[$j] == $a[$i]) {\n            $d[$j] = 1;\n        }\n        if ($c[$j] == $b[$i]) {\n            $e[$j] = 1;\n        }\n    }\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($d[$i] == 1 && $e[$i] == 1) {\n        $f[$i] = 1;\n    }\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($f[$i] == 1) {\n        $g[$i] = $c[$i];\n    }\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($f[$i] == 0) {\n        $h[$i] = $c[$i];\n    }\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($g[$i] < $h[$i]) {\n        $i = $n;\n    }\n}\n\nif ($i == $n) {\n    print join(\" \", @g), \"\\n\";\n} else {\n    print \"The times have changed\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, y, m) = read_input();\n    let mut seniors = vec![0; n];\n    let mut juniors = vec![0; n];\n    for _ in 0..m {\n        let (a, b) = read_input();\n        seniors[a - 1] += 1;\n        juniors[b - 1] += 1;\n    }\n    let mut s = HashMap::new();\n    for i in 0..n {\n        if seniors[i] == 0 {\n            s.insert(juniors[i], i + 1);\n        }\n    }\n    let mut ans = vec![];\n    for (_, v) in s.iter() {\n        ans.push(v);\n    }\n    for i in 0..n {\n        if seniors[i] != 0 {\n            ans.push(i + 1);\n        }\n    }\n    println!(\"{}\", ans.join(\" \"));\n}\n\nfn read_input() -> (usize, u64, usize) {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n = iter.next().unwrap().parse().unwrap();\n    let y = iter.next().unwrap().parse().unwrap();\n    let m = iter.next().unwrap().parse().unwrap();\n    (n, y, m)\n}\n\"\"\"}]"}
{"title":"D. Crime Management","description":"Zeyad wants to commit n crimes in Egypt and not be punished at the end. There are several types of crimes. For example, bribery is a crime but is not considered such when repeated twice. Therefore, bribery is not considered a crime when repeated an even number of times. Speeding is a crime, but is not considered such when repeated a number of times which is a multiple of five.More specifically, c conditions on crime repetitions are known. Each condition describes the crime type ti and its multiplicity mi. If the number of times Zeyad committed the crime ti is a multiple of mi, Zeyad will not be punished for crime ti. Some crimes may be listed more than once. In this case fulfilling at least one condition for this crime is enough to not be punished for it. Of course, if for certain crime the number of times Zeyad committed it is zero, he is innocent with respect to this crime.Now Zeyad is interested in a number of ways he can commit exactly n crimes without any punishment.The order of commiting the crimes matters. More formally, two ways, sequences w1 and w2, of committing n crimes are equal if w1i=w2i, for all 1\u2264i\u2264n.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and c (0\u2264n\u226410^18,0\u2264c\u22641000) \u2014 the number of crimes Zeyad would like to commit and the number of conditions he is aware of.\nThen the definitions for c conditions follow. There are 26 types of crimes. Each crime definition consists of crime type \u2014 a capital Latin letter \u2014 and its multiplicity. \nThe multiplicity of each crime is a positive integer number and the product of all multiplicities does not exceed 123. Some conditions may be repeated in the input more than once.\nCrime of multiplicity 1 is not yielding any punishment regardless of the number of times it was committed. The strictness of the law is compensated by the fact that it's non-mandatory.\nObviously, if some crime is not listed in the set of conditions, then Zeyad will not consider it, as committing it would unavoidably lead to the punishment.\nPlease, do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin stream (you may also use the %I64d specificator).\n","output_spec":"Output the number of different ways Zeyad can commit exactly n crimes with no punishment modulo 12345.\n","notes":"In the first test case, the 16 ways are: AAAAA, AAABB, AABAB, AABBA, ABAAB, ABABA, ABBAA, BAAAB, BAABA, BABAA, BBAAA, ABBBB, BABBB, BBABB, BBBAB, BBBBA.\n","sample_inputs":["5 2\nA 1\nB 2\n","6 3\nA 1\nB 2\nC 3\n","8 3\nA 2\nA 3\nB 2\n"],"sample_outputs":["16\n","113\n","128\n"],"id":"107-D","difficulty":2400,"tags":["dp","graphs","matrices"],"src_uid":"76d4684d26dac380713a566a1e277c91","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, c;\n    cin >> n >> c;\n    vector<int> a(26);\n    for (int i = 0; i < c; i++) {\n        int t, m;\n        cin >> t >> m;\n        a[t - 'A'] = m;\n    }\n    vector<int> dp(n + 1);\n    dp[0] = 1;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j < 26; j++) {\n            if (a[j] > 0 && i >= a[j]) {\n                dp[i] = (dp[i] + dp[i - a[j]]) % 12345;\n            }\n        }\n    }\n    cout << dp[n] << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int c = sc.nextInt();\n        int[] a = new int[26];\n        for (int i = 0; i < c; i++) {\n            char ch = sc.next().charAt(0);\n            int m = sc.nextInt();\n            a[ch - 'A'] = m;\n        }\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < 26; j++) {\n                if (a[j] > 0 && i >= a[j]) {\n                    dp[i] = (dp[i] + dp[i - a[j]]) % 12345;\n                }\n            }\n        }\n        System.out.println(dp[n]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, c = map(int, input().split())\n\ndef solve(n, c):\n    if n == 0:\n        return 1\n    if c == 0:\n        return 0\n\n    ans = 0\n    for i in range(1, n + 1):\n        ans += solve(n - i, c - 1)\n    return ans % 12345\n\nprint(solve(n, c))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int n, c;\n    scanf(\" %d%d \", &n, &c);\n    int a[26];\n    int b[26];\n    int i, j;\n    for (i = 0; i < 26; i++) {\n        a[i] = 0;\n        b[i] = 0;\n    }\n    for (i = 0; i < c; i++) {\n        char s[10];\n        int m;\n        scanf(\" %s%d \", s, &m);\n        int k = s[0] - 'A';\n        a[k] = m;\n    }\n    for (i = 0; i < 26; i++) {\n        if (a[i] == 1) {\n            b[i] = 1;\n        }\n    }\n    int ans = 1;\n    for (i = 0; i < 26; i++) {\n        if (b[i] == 0) {\n            ans = ans * (n \/ a[i]) % 12345;\n        }\n    }\n    printf(\" %d\\n \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Zeyad\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int c = int.Parse(input[1]);\n            List<int>[] crimes = new List<int>[26];\n            for (int i = 0; i < 26; i++)\n            {\n                crimes[i] = new List<int>();\n            }\n            for (int i = 0; i < c; i++)\n            {\n                string[] crime = Console.ReadLine().Split(' ');\n                int type = crime[0].ToUpper()[0] - 'A';\n                int multiplicity = int.Parse(crime[1]);\n                crimes[type].Add(multiplicity);\n            }\n            int[] dp = new int[n + 1];\n            dp[0] = 1;\n            for (int i = 1; i <= n; i++)\n            {\n                for (int j = 0; j < 26; j++)\n                {\n                    if (crimes[j].Count == 0)\n                    {\n                        continue;\n                    }\n                    for (int k = 0; k < crimes[j].Count; k++)\n                    {\n                        if (i - crimes[j][k] >= 0)\n                        {\n                            dp[i] = (dp[i] + dp[i - crimes[j][k]]) % 12345;\n                        }\n                    }\n                }\n            }\n            Console.WriteLine(dp[n]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, c = gets.split.map(&:to_i)\n\na = []\nc.times do\n  t, m = gets.split\n  a << [t, m.to_i]\nend\n\na.sort! { |a, b| b[1] <=> a[1] }\n\nans = 1\n\na.each do |t, m|\n  if m == 1\n    ans *= 2\n  else\n    ans *= m\n  end\nend\n\nputs ans % 12345\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\/big\"\r\n)\r\n\r\nfunc main() {\r\n\tvar n, c int\r\n\tfmt.Scanf(\" %d %d \", &n, &c)\r\n\tvar m = make(map[byte]int)\r\n\tfor i := 0; i < c; i++ {\r\n\t\tvar t, k byte\r\n\t\tfmt.Scanf(\" %c %d \", &t, &k)\r\n\t\tm[t] = k\r\n\t}\r\n\tvar ans = big.NewInt(1)\r\n\tfor _, v := range m {\r\n\t\tif v == 1 {\r\n\t\t\tcontinue\r\n\t\t}\r\n\t\tvar t = big.NewInt(int64(v))\r\n\t\tvar m = big.NewInt(int64(n \/ v))\r\n\t\tans = ans.Mul(ans, m)\r\n\t\tans = ans.Mod(ans, big.NewInt(12345))\r\n\t}\r\n\tfmt.Println(ans.String())\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0].split(' ')[0]);\nconst c = Number(input.split('\\n')[0].split(' ')[1]);\nconst crimes = [];\nfor (let i = 1; i <= c; i++) {\n  const crime = input.split('\\n')[i].split(' ');\n  crimes.push({\n    type: crime[0],\n    multiplicity: Number(crime[1]),\n  });\n}\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 0; j < crimes.length; j++) {\n    if (i >= crimes[j].multiplicity) {\n      dp[i] += dp[i - crimes[j].multiplicity];\n    }\n  }\n}\n\nconsole.log(dp[n] % 12345);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nfun main() {\n    val br = BufferedReader(InputStreamReader(System.`in`))\n    val (n, c) = br.readLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(c + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..c) {\n            dp[i][j] = dp[i - 1][j]\n            if (j > 0) {\n                dp[i][j] += dp[i - 1][j - 1]\n            }\n        }\n    }\n    val ans = dp[n][c]\n    println(ans % 12345)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $c = explode(' ', trim(fgets(STDIN)));\n$arr = [];\nfor ($i = 0; $i < $c; $i++) {\n    $t = trim(fgets(STDIN));\n    $arr[$t[0]] = (int)$t[1];\n}\n$ans = 1;\nfor ($i = 0; $i < 26; $i++) {\n    if ($arr[$chr(ord('A') + $i)]) {\n        $ans = $ans * pow(10, $arr[$chr(ord('A') + $i)]) % 12345;\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, c;\n    scanf(\" %d %d \", &n, &c);\n    auto a = new int[26];\n    auto b = new int[26];\n    for (int i = 0; i < c; i++) {\n        int t, m;\n        scanf(\" %c %d \", &t, &m);\n        a[t - 'A'] = m;\n    }\n    for (int i = 0; i < 26; i++) {\n        b[i] = 1;\n    }\n    for (int i = 0; i < 26; i++) {\n        if (a[i] == 1) {\n            b[i] = 0;\n        }\n    }\n    int ans = 1;\n    for (int i = 0; i < 26; i++) {\n        ans = ans * b[i] % 12345;\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $c;\nmy @crimes;\nmy %crimes_count;\n\nread_input();\n\nmy $ans = 1;\nfor my $i (0..$c-1) {\n    my $crime = $crimes[$i];\n    my $count = $crimes_count{$crime};\n    if ($count % $crimes[$i][1] == 0) {\n        $ans *= $crimes[$i][1];\n    }\n}\n\nprint $ans % 12345 . \"\\n\";\n\nsub read_input {\n    my $line = <STDIN>;\n    chomp $line;\n    ($n, $c) = split \/ \/, $line;\n\n    for my $i (0..$c-1) {\n        $line = <STDIN>;\n        chomp $line;\n        my @crime = split \/ \/, $line;\n        $crimes[$i] = [$crime[0], $crime[1]];\n        $crimes_count{$crime[0]} += $crime[1];\n    }\n}\n\"}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut nc = line.split_whitespace();\n    let n = nc.next().unwrap().parse::<u64>().unwrap();\n    let c = nc.next().unwrap().parse::<u64>().unwrap();\n    let mut dp = vec![0; n + 1];\n    dp[0] = 1;\n    for _ in 0..c {\n        let mut line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        let mut lc = line.split_whitespace();\n        let t = lc.next().unwrap().as_bytes()[0] as u64;\n        let m = lc.next().unwrap().parse::<u64>().unwrap();\n        for i in 0..n + 1 {\n            if i % m == 0 {\n                dp[i] += dp[i - m];\n            }\n        }\n    }\n    println!(\"{}\", dp[n] % 12345);\n}\n\"\"\"}]"}
{"title":"D1. Great Vova Wall (Version 1)","description":"Vova's family is building the Great Vova Wall (named by Vova himself). Vova's parents, grandparents, grand-grandparents contributed to it. Now it's totally up to Vova to put the finishing touches.The current state of the wall can be respresented by a sequence $$$a$$$ of $$$n$$$ integers, with $$$a_i$$$ being the height of the $$$i$$$-th part of the wall.Vova can only use $$$2 \\times 1$$$ bricks to put in the wall (he has infinite supply of them, however).Vova can put bricks horizontally on the neighboring parts of the wall of equal height. It means that if for some $$$i$$$ the current height of part $$$i$$$ is the same as for part $$$i + 1$$$, then Vova can put a brick there and thus increase both heights by 1. Obviously, Vova can't put bricks in such a way that its parts turn out to be off the borders (to the left of part $$$1$$$ of the wall or to the right of part $$$n$$$ of it).The next paragraph is specific to the version 1 of the problem.Vova can also put bricks vertically. That means increasing height of any part of the wall by 2.Vova is a perfectionist, so he considers the wall completed when:  all parts of the wall has the same height;  the wall has no empty spaces inside it. Can Vova complete the wall using any amount of bricks (possibly zero)?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) \u2014 the number of parts in the wall.\nThe second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 10^9$$$) \u2014 the initial heights of the parts of the wall.\n","output_spec":"Print \"YES\" if Vova can complete the wall using any amount of bricks (possibly zero).\nPrint \"NO\" otherwise.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1092-D1","difficulty":2200,"tags":["greedy","implementation","math"],"src_uid":"bb4ecfaaccd538e23f883a18f9672af8","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int min_a = a[0];\n    int max_a = a[0];\n    for (int i = 1; i < n; i++) {\n        min_a = min(min_a, a[i]);\n        max_a = max(max_a, a[i]);\n    }\n\n    if (min_a == max_a) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int min = a[0];\n        int max = a[0];\n        for (int i = 1; i < n; i++) {\n            min = Math.min(min, a[i]);\n            max = Math.max(max, a[i]);\n        }\n        if (max - min <= 1) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"YES\")\n    exit()\n\nif a[0] == a[-1]:\n    print(\"YES\")\n    exit()\n\nif a[0] == a[1]:\n    print(\"YES\")\n    exit()\n\nif a[-1] == a[-2]:\n    print(\"YES\")\n    exit()\n\nprint(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int min = a[0];\n    int max = a[0];\n    for (int i = 1; i < n; i++) {\n        if (a[i] < min) {\n            min = a[i];\n        }\n        if (a[i] > max) {\n            max = a[i];\n        }\n    }\n    int diff = max - min;\n    if (diff % 2 == 0) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n            int min = a[0];\n            int max = a[0];\n            int count = 0;\n            for (int i = 1; i < n; i++)\n            {\n                if (a[i] == min)\n                {\n                    count++;\n                }\n                else if (a[i] == max)\n                {\n                    count--;\n                }\n                else\n                {\n                    count = 0;\n                }\n                min = Math.Min(min, a[i]);\n                max = Math.Max(max, a[i]);\n            }\n            if (count == 0)\n            {\n                Console.WriteLine(\"YES\");\n            }\n            else\n            {\n                Console.WriteLine(\"NO\");\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nif a.uniq.size == 1\n  puts 'YES'\nelse\n  puts 'NO'\nend\"}]","delphi":"","Go":"[{\"version\": \"Go1.17\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\tif n == 1 {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\tif a[0] == a[n-1] {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\tif a[0] == a[1] {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\tif a[n-1] == a[n-2] {\n\t\tfmt.Println(\"YES\")\n\t\treturn\n\t}\n\tfor i := 1; i < n-1; i++ {\n\t\tif a[i] == a[i-1] && a[i] == a[i+1] {\n\t\t\tfmt.Println(\"YES\")\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"NO\")\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readLine());\nconst a = process.stdin.readLine().split(' ').map(Number);\nconst m = new Map();\nfor (let i = 0; i < n; i++) {\n    if (m.has(a[i])) {\n        m.set(a[i], m.get(a[i]) + 1);\n    } else {\n        m.set(a[i], 1);\n    }\n}\nconst max = Math.max(...m.values());\nif (max == 1) {\n    console.log('YES');\n} else {\n    console.log('NO');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val a = sc.nextIntArray(n)\n    val b = a.sorted()\n    var ans = 0\n    for (i in 0 until n - 1) {\n        if (b[i] != b[i + 1]) {\n            ans++\n        }\n    }\n    if (ans == 0) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"#!\/usr\/bin\/env php\n<?php\n\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n\n$min = min($a);\n$max = max($a);\n\nif ($min == $max) {\n    echo 'YES';\n} else {\n    $diff = $max - $min;\n    $count = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($a[$i] == $min) {\n            $count++;\n        }\n    }\n    if ($count == $n) {\n        echo 'YES';\n    } else {\n        echo 'NO';\n    }\n}\n\nexit(0);\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int m = a[0];\n    int ans = 0;\n    for (int i = 1; i < n; i++) {\n        if (a[i] != m) {\n            ans++;\n        }\n        m = max(m, a[i]);\n    }\n    if (ans == 0) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = <STDIN>;\n\nmy $min = $a[0];\nmy $max = $a[0];\n\nfor (my $i = 1; $i < $n; $i++) {\n    $min = min($min, $a[$i]);\n    $max = max($max, $a[$i]);\n}\n\nif ($min == $max) {\n    print \"YES\";\n} else {\n    print \"NO\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut a: Vec<usize> = input\n        .trim()\n        .split_whitespace()\n        .map(|x| x.parse().unwrap())\n        .collect();\n\n    let mut max = 0;\n    for i in 0..n {\n        max = max.max(a[i]);\n    }\n\n    let mut ans = 0;\n    for i in 0..n {\n        if a[i] != max {\n            ans += max - a[i];\n        }\n    }\n\n    if ans % 2 == 0 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"E. Lucky Interval","description":"Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.One day Petya came across an interval of numbers [a,a+l-1]. Let F(x) be the number of lucky digits of number x. Find the minimum b (a<b) such, that F(a) = F(b), F(a+1) = F(b+1), ..., F(a+l-1) = F(b+l-1).","input_from":"standard input","output_to":"standard output","time_limit":"4 seconds","memory_limit":"512 megabytes","input_spec":"The single line contains two integers a and l (1\u2264a,l\u226410^9) \u2014 the interval's first number and the interval's length correspondingly.\n","output_spec":"On the single line print number b \u2014 the answer to the problem.\n","notes":"Consider that [a,b] denotes an interval of integers; this interval includes the boundaries. That is, \n","sample_inputs":["7 4\n","4 7\n"],"sample_outputs":["17\n","14\n"],"id":"109-E","difficulty":2700,"tags":["brute+force","math"],"src_uid":"649e9f477b97c1f72b05d409b4a99d59","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int a, l;\n    cin >> a >> l;\n    int b = a + l - 1;\n    while (a < b) {\n        if (a % 10 == 4 || a % 10 == 7) {\n            b = a;\n        }\n        a++;\n    }\n    cout << b << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int l = sc.nextInt();\n        int b = a + l - 1;\n        int count = 0;\n        while (a <= b) {\n            if (a % 10 == 4 || a % 10 == 7) {\n                count++;\n            }\n            a++;\n        }\n        while (b >= a) {\n            if (b % 10 == 4 || b % 10 == 7) {\n                count++;\n            }\n            b--;\n        }\n        System.out.println(a - count);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,l=map(int,input().split())\nans=a\nwhile l:\n    if a%10==4:\n        a+=7\n    else:\n        a+=4\n    l-=1\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a, l;\n    scanf(\" %d %d \", &a, &l);\n    int b = a + l - 1;\n    while (a < b) {\n        if (a % 10 == 4 || a % 10 == 7) {\n            b = a;\n        }\n        a++;\n    }\n    printf(\" %d \", b);\n    return 0;\n}\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var a = int.Parse(input[0]);\n        var l = int.Parse(input[1]);\n        var lucky = new List<int>();\n        for (int i = 4; i <= 999999999; i++)\n        {\n            var count = 0;\n            while (i > 0)\n            {\n                if (i % 10 == 4 || i % 10 == 7)\n                {\n                    count++;\n                }\n                i \/= 10;\n            }\n            if (count == 4)\n            {\n                lucky.Add(i);\n            }\n        }\n        var ans = 0;\n        for (int i = 0; i < lucky.Count; i++)\n        {\n            if (lucky[i] >= a && lucky[i] <= a + l - 1)\n            {\n                ans = lucky[i];\n                break;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,l=map(int,input().split())\nfor i in range(a,a+l):\n    if i%4==0 or i%7==0:\n        print(i)\n        break\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var\na,l,i,j,k,n,m,s:integer;\nbegin\nreadln(a,l);\nn:=a;\nm:=a+l-1;\ns:=0;\nfor i:=1 to 4 do\nfor j:=1 to 4 do\nif (a mod 10=i) and (m mod 10=j) then\nbegin\ns:=s+1;\nbreak;\nend;\nfor i:=a+1 to m-1 do\nif (i mod 10=i mod 10) then\ns:=s;\nelse\ns:=s+1;\nfor i:=a to m do\nif s=i mod 10 then\nbegin\nk:=i;\nbreak;\nend;\nwriteln(k);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar a, l int\n\tfmt.Scan(&a, &l)\n\tif a%4 == 0 {\n\t\tfmt.Println(a + l - 1)\n\t} else {\n\t\tfmt.Println(a + l)\n\t}\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst a = parseInt(stdin[0]);\nconst l = parseInt(stdin[1]);\nconst s = a.toString();\nconst s1 = s.split('');\nconst s2 = s1.filter(x => x === '4' || x === '7');\nconst s3 = s2.length;\nconst s4 = a + l - 1;\nconst s5 = s4.toString();\nconst s6 = s5.split('');\nconst s7 = s6.filter(x => x === '4' || x === '7');\nconst s8 = s7.length;\nif (s8 === s3) {\n  console.log(s4);\n} else {\n  console.log(a);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val a = sc.nextInt()\n    val l = sc.nextInt()\n    val s = a.toString()\n    val s1 = s.filter { it == '4' || it == '7' }\n    val s2 = s.filter { it != '4' && it != '7' }\n    val s3 = s1.length\n    val s4 = s2.length\n    val s5 = s3 + s4\n    val s6 = s5 * l\n    val s7 = s6 + a\n    println(s7)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$l = $a[1];\n$b = $a[0] + $l - 1;\n$c = 0;\nfor ($i = $a[0]; $i <= $b; $i++) {\n    $c += substr_count($i, '4') + substr_count($i, '7');\n}\nfor ($i = $a[0] + 1; $i <= $b - 1; $i++) {\n    if ($c != substr_count($i, '4') + substr_count($i, '7')) {\n        $b = $i - 1;\n        break;\n    }\n}\necho $b;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[2] a;\n    scanf(\" %d %d \", &a[0], &a[1]);\n    int b = a[0];\n    int c = a[1];\n    int d = 0;\n    int e = 0;\n    while (b <= c) {\n        if (b % 10 == 4 || b % 10 == 7) {\n            d++;\n        }\n        b++;\n    }\n    while (c >= b) {\n        if (c % 10 == 4 || c % 10 == 7) {\n            e++;\n        }\n        c--;\n    }\n    if (d == e) {\n        printf(\" %d \", b);\n    } else {\n        printf(\" %d \", c);\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $a, $l;\n\nchomp(my $input = <STDIN>);\n\n($a, $l) = split(' ', $input);\n\nmy $b = $a + $l - 1;\n\nwhile ($a < $b) {\n    my $count_a = count_lucky_digits($a);\n    my $count_b = count_lucky_digits($b);\n\n    if ($count_a != $count_b) {\n        $b--;\n    } else {\n        last;\n    }\n}\n\nprint $b;\n\nsub count_lucky_digits {\n    my $n = shift;\n\n    my $count = 0;\n\n    while ($n > 0) {\n        if ($n % 10 == 4 || $n % 10 == 7) {\n            $count++;\n        }\n\n        $n = int($n \/ 10);\n    }\n\n    return $count;\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let a = input_vec[0];\n    let l = input_vec[1];\n    let mut b = a;\n    let mut count = 0;\n    for i in 0..l {\n        if a % 10 == 4 || a % 10 == 7 {\n            count += 1;\n        }\n        a += 1;\n    }\n    for i in 0..l {\n        if b % 10 == 4 || b % 10 == 7 {\n            count -= 1;\n        }\n        b += 1;\n    }\n    while count != 0 {\n        if b % 10 == 4 || b % 10 == 7 {\n            count -= 1;\n        }\n        b += 1;\n    }\n    println!(\"{}\", b);\n}\n\"\"\"}]"}
{"title":"C. Digital Root","description":"Not long ago Billy came across such a problem, where there were given three natural numbers A, B and C from the range [1,N], and it was asked to check whether the equation AB=C is correct. Recently Billy studied the concept of a digital root of a number. We should remind you that a digital root d(x) of the number x is the sum s(x) of all the digits of this number, if s(x)\u22649, otherwise it is d(s(x)). For example, a digital root of the number 6543 is calculated as follows: d(6543)=d(6+5+4+3)=d(18)=9. Billy has counted that the digital root of a product of numbers is equal to the digital root of the product of the factors' digital roots, i.e. d(xy)=d(d(x)d(y)). And the following solution to the problem came to his mind: to calculate the digital roots and check if this condition is met. However, Billy has doubts that this condition is sufficient. That's why he asks you to find out the amount of test examples for the given problem such that the algorithm proposed by Billy makes mistakes.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains the only number N (1\u2264N\u226410^6).\n","output_spec":"Output one number \u2014 the amount of required A, B and C from the range [1,N].\n","notes":"For the first sample the required triples are (3,4,3) and (4,3,3).\n","sample_inputs":["4\n","5\n"],"sample_outputs":["2\n","6\n"],"id":"10-C","difficulty":2000,"tags":["number+theory"],"src_uid":"fc133fe6353089a0ebee08dec919f608","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            for (int k = 1; k <= n; k++) {\n                if (i * j == k && i != j && j != k && i != k) {\n                    ans++;\n                }\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                for (int k = 1; k <= n; k++) {\n                    if (i * j == k && i % 10 == j % 10 && j % 10 == k % 10) {\n                        ans++;\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nans = 0\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        if i * j <= n:\n            ans += 1\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, i, j, k, s, t, u, d, ans = 0;\n    scanf(\" %d \", &n);\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            for (k = 1; k <= n; k++) {\n                s = i * j * k;\n                d = 0;\n                while (s > 0) {\n                    d += s % 10;\n                    s \/= 10;\n                }\n                if (d == i || d == j || d == k)\n                    ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int ans = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 1; j <= n; j++)\n            {\n                for (int k = 1; k <= n; k++)\n                {\n                    if (i * j == k && i % 10 != j % 10 && j % 10 != k % 10 && k % 10 != i % 10)\n                    {\n                        ans++;\n                    }\n                }\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nans = 0\n(1..n).each do |i|\n  (1..n).each do |j|\n    (1..n).each do |k|\n      if i * j == k && i.to_s.length != j.to_s.length && j.to_s.length != k.to_s.length && i.to_s.length != k.to_s.length\n        ans += 1\n      end\n    end\n  end\nend\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram ProblemD;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, s, t, ans: Integer;\n\nbegin\n  Readln(n);\n  ans := 0;\n  for i := 1 to n do\n    for j := 1 to n do\n      for k := 1 to n do\n        if (i * j = k) and (i * j <> d(i) * d(j)) then\n          inc(ans);\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var ans int\\n    for i := 1; i <= n; i++ {\\n        for j := 1; j <= n; j++ {\\n            for k := 1; k <= n; k++ {\\n                if i*j == k && i != j && i != k && j != k {\\n                    ans++\\n                }\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst ans = 0;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= n; j++) {\n    for (let k = 1; k <= n; k++) {\n      if (i * j == k && i % 10 != j % 10 && j % 10 != k % 10 && k % 10 != i % 10) {\n        ans++;\n      }\n    }\n  }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val ans = 0\n    for (i in 1..n) {\n        for (j in 1..n) {\n            for (k in 1..n) {\n                if (i * j == k && i.toString().length != j.toString().length) {\n                    ans++\n                }\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$ans = 0;\nfor ($i = 1; $i <= $n; $i++) {\n    for ($j = 1; $j <= $n; $j++) {\n        for ($k = 1; $k <= $n; $k++) {\n            if ($i * $j == $k && $i != $j && $j != $k && $k != $i) {\n                $ans++;\n            }\n        }\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            for (int k = 1; k <= n; k++) {\n                if (i * j == k && i != j && j != k && i != k) {\n                    ans++;\n                }\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $ans = 0;\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $n; $j++) {\n        for (my $k = 1; $k <= $n; $k++) {\n            if ($i * $j == $k && $i != $j && $j != $k && $k != $i) {\n                $ans++;\n            }\n        }\n    }\n}\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n = read!();\n    let mut ans = 0;\n    for i in 1..n {\n        for j in 1..n {\n            if i * j <= n {\n                if i * j % 10 == i % 10 || i * j % 10 == j % 10 {\n                    ans += 1;\n                }\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Array K-Coloring","description":"You are given an array $$$a$$$ consisting of $$$n$$$ integer numbers.You have to color this array in $$$k$$$ colors in such a way that:   Each element of the array should be colored in some color;  For each $$$i$$$ from $$$1$$$ to $$$k$$$ there should be at least one element colored in the $$$i$$$-th color in the array;  For each $$$i$$$ from $$$1$$$ to $$$k$$$ all elements colored in the $$$i$$$-th color should be distinct. Obviously, such coloring might be impossible. In this case, print \"NO\". Otherwise print \"YES\" and any coloring (i.e. numbers $$$c_1, c_2, \\dots c_n$$$, where $$$1 \\le c_i \\le k$$$ and $$$c_i$$$ is the color of the $$$i$$$-th element of the given array) satisfying the conditions above. If there are multiple answers, you can print any.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains two integers $$$n$$$ and $$$k$$$ ($$$1 \\\\le k \\\\le n \\\\le 5000$$$) \u2014 the length of the array $$$a$$$ and the number of colors, respectively.\nThe second line of the input contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le 5000$$$) \u2014 elements of the array $$$a$$$.\n","output_spec":"If there is no answer, print \"NO\". Otherwise print \"YES\" and any coloring (i.e. numbers $$$c_1, c_2, \\\\dots c_n$$$, where $$$1 \\\\le c_i \\\\le k$$$ and $$$c_i$$$ is the color of the $$$i$$$-th element of the given array) satisfying the conditions described in the problem statement. If there are multiple answers, you can print any.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1102-B","difficulty":1400,"tags":["greedy","sortings"],"src_uid":"3d4df21eebf32ce15841179bb85e6f2f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    vector<int> c(k);\n    for (int i = 0; i < k; i++) {\n        c[i] = 0;\n    }\n\n    for (int i = 0; i < n; i++) {\n        c[a[i] - 1]++;\n    }\n\n    bool ok = true;\n    for (int i = 0; i < k; i++) {\n        if (c[i] == 0) {\n            ok = false;\n            break;\n        }\n    }\n\n    if (!ok) {\n        cout << \"NO\" << endl;\n    } else {\n        cout << \"YES\" << endl;\n        for (int i = 0; i < n; i++) {\n            cout << c[a[i] - 1] << \" \";\n        }\n        cout << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif n > k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*[i + 1 for i in range(n)])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, k;\n    scanf(\" %d%d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int c[k];\n    for (int i = 0; i < k; i++) {\n        c[i] = 0;\n    }\n    for (int i = 0; i < n; i++) {\n        c[a[i] - 1]++;\n    }\n    int flag = 0;\n    for (int i = 0; i < k; i++) {\n        if (c[i] == 0) {\n            flag = 1;\n            break;\n        }\n    }\n    if (flag == 1) {\n        printf(\" NO \");\n    } else {\n        printf(\" YES \");\n        for (int i = 0; i < n; i++) {\n            printf(\" %d \", a[i] + 1);\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var ans = new int[n];\n        var used = new bool[k];\n        for (int i = 0; i < n; i++)\n        {\n            int c = a[i] % k;\n            if (used[c])\n            {\n                Console.WriteLine(\"NO\");\n                return;\n            }\n            used[c] = true;\n            ans[i] = c + 1;\n        }\n        Console.WriteLine(\"YES\");\n        Console.WriteLine(string.Join(\" \", ans));\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn, k = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\nif n > k\n  puts \"NO\"\n  exit\nend\n\nc = [0] * k\n\na.each do |ai|\n  c[ai - 1] += 1\nend\n\nif c.any? { |ci| ci == 0 }\n  puts \"NO\"\n  exit\nend\n\nif c.any? { |ci| ci > 1 }\n  puts \"NO\"\n  exit\nend\n\nputs \"YES\"\n\nc.each_with_index do |ci, i|\n  puts i + 1\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Coloring;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j, a, c: Integer;\n\nbegin\n  Readln(n, k);\n  for i := 1 to n do\n    Readln(a[i]);\n  for i := 1 to k do\n  begin\n    c[i] := 0;\n    for j := 1 to n do\n      if a[j] = i then\n        c[i] := c[i] + 1;\n  end;\n  if (c[1] = 0) or (c[k] = 0) then\n    Writeln('NO')\n  else\n  begin\n    Writeln('YES');\n    for i := 1 to n do\n      Writeln(c[a[i]]);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"Go1.17\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scan(&n, &k)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\tsort.Ints(a)\n\tif a[0] > k {\n\t\tfmt.Println(\"NO\")\n\t\treturn\n\t}\n\tfor i := 1; i < n; i++ {\n\t\tif a[i] == a[i-1] {\n\t\t\tfmt.Println(\"NO\")\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"YES\")\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Printf(\"%d \", a[i]-1)\n\t}\n\tfmt.Println()\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif n > k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*[i+1 for i in range(n)])\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    val ans = IntArray(n)\n    val used = BooleanArray(k)\n    var i = 0\n    var j = 0\n    while (i < n) {\n        if (used[a[i] - 1]) {\n            i++\n            continue\n        }\n        ans[i] = a[i] - 1\n        used[a[i] - 1] = true\n        i++\n        j++\n    }\n    if (j < k) {\n        println(\"NO\")\n    } else {\n        println(\"YES\")\n        for (i in 0 until n) {\n            print(ans[i] + 1)\n            print(\" \")\n        }\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\nif n < k:\n    print(\"NO\")\nelse:\n    print(\"YES\")\n    print(*[i + 1 for i in range(n)])\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int b[k];\n    for (int i = 0; i < k; i++) {\n        b[i] = 0;\n    }\n    for (int i = 0; i < n; i++) {\n        b[a[i] - 1]++;\n    }\n    int flag = 0;\n    for (int i = 0; i < k; i++) {\n        if (b[i] == 0) {\n            flag = 1;\n            break;\n        }\n    }\n    if (flag == 1) {\n        printf(\" NO \");\n    } else {\n        printf(\" YES \");\n        for (int i = 0; i < n; i++) {\n            printf(\" %d \", a[i] - 1);\n        }\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy @c = (1..$k);\n\nmy $i;\nfor ($i = 0; $i < $n; $i++) {\n    if (!grep { $_ == $a[$i] } @c) {\n        print \"NO\\n\";\n        exit;\n    }\n    delete $c[grep { $_ == $a[$i] } @c];\n}\n\nprint \"YES\\n\";\n\nfor ($i = 0; $i < $n; $i++) {\n    print \"$c[$i] \";\n}\n\nprint \"\\n\";\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut tokens = line.split_whitespace();\n    let n = tokens.next().unwrap().parse::<usize>().unwrap();\n    let k = tokens.next().unwrap().parse::<usize>().unwrap();\n\n    let mut a = Vec::new();\n    stdin.read_line(&mut line).unwrap();\n    tokens = line.split_whitespace();\n    for token in tokens {\n        a.push(token.parse::<usize>().unwrap());\n    }\n\n    let mut colors = vec![0; k];\n    for i in 0..n {\n        colors[a[i] - 1] += 1;\n    }\n\n    if colors.iter().any(|&c| c == 0) {\n        println!(\"NO\");\n    } else {\n        println!(\"YES\");\n        for i in 0..k {\n            println!(\"{}\", i + 1);\n        }\n    }\n}\n\"\"\"}]"}
{"title":"A. Nearly Lucky Number","description":"Petya loves lucky numbers. We all know that lucky numbers are the positive integers whose decimal representations contain only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Unfortunately, not all numbers are lucky. Petya calls a number nearly lucky if the number of lucky digits in it is a lucky number. He wonders whether number n is a nearly lucky number.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line contains an integer n (1\u2264n\u226410^18).\nPlease do not use the %lld specificator to read or write 64-bit numbers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.\n","output_spec":"Print on the single line \"YES\" if n is a nearly lucky number. Otherwise, print \"NO\" (without the quotes).\n","notes":"In the first sample there are 3 lucky digits (first one and last two), so the answer is \"NO\".\nIn the second sample there are 7 lucky digits, 7 is lucky number, so the answer is \"YES\".\nIn the third sample there are no lucky digits, so the answer is \"NO\".\n","sample_inputs":["40047\n","7747774\n","1000000000000000000\n"],"sample_outputs":["NO\n","YES\n","NO\n"],"id":"110-A","difficulty":800,"tags":["implementation"],"src_uid":"33b73fd9e7f19894ea08e98b790d07f1","C++":"","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int count = 0;\n        while (n > 0) {\n            if (n % 10 == 4 || n % 10 == 7) {\n                count++;\n            }\n            n \/= 10;\n        }\n        if (count % 4 == 0 || count % 7 == 0) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef is_lucky(n):\n    count = 0\n    while n > 0:\n        if n % 10 == 4 or n % 10 == 7:\n            count += 1\n        n \/\/= 10\n    return count\n\nif is_lucky(n) == 4 or is_lucky(n) == 7:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, i, j, k, s = 0;\n    scanf(\" %d \", &n);\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            for (k = 1; k <= n; k++) {\n                if (i % 10 == 4 || i % 10 == 7 || j % 10 == 4 || j % 10 == 7 || k % 10 == 4 || k % 10 == 7)\n                    s++;\n            }\n        }\n    }\n    if (s % 4 == 0 || s % 7 == 0)\n        printf(\" YES \");\n    else\n        printf(\" NO \");\n    return 0;\n}\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int count = 0;\n        while (n > 0)\n        {\n            if (n % 10 == 4 || n % 10 == 7)\n            {\n                count++;\n            }\n            n \/= 10;\n        }\n        if (count % 4 == 0 || count % 7 == 0)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nlucky_digits = [4, 7]\n\nlucky_digits_count = 0\n\nwhile n > 0\n    if lucky_digits.include?(n % 10)\n        lucky_digits_count += 1\n    end\n\n    n = n \/ 10\nend\n\nif lucky_digits_count % 4 == 0\n    puts 'YES'\nelse\n    puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var n,i,j,k,l:integer;\nbegin\n  readln(n);\n  k:=0;\n  for i:=1 to n div 10 do\n  begin\n    j:=n mod 10;\n    if (j=4) or (j=7) then\n      k:=k+1;\n    n:=n div 10;\n  end;\n  if (k mod 4=0) or (k mod 7=0) then\n    writeln('YES')\n  else\n    writeln('NO');\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := 0\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    count := 0\\n    for n > 0 {\\n        if n % 10 == 4 || n % 10 == 7 {\\n            count++\\n        }\\n        n \/= 10\\n    }\\n    if count == 4 || count == 7 {\\n        fmt.Println(\\\"YES\\\")\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readLine());\\nconst lucky = [4, 7];\\nconst count = lucky.reduce((a, b) => a + (n.toString().split('').filter(c => lucky.includes(c)).length > 0 ? 1 : 0), 0);\\nconsole.log(count % 4 === 0 ? 'YES' : 'NO');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextLong()\n    val count = n.toString().count { it in \"47\" }\n    if (count == 4 || count == 7) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = (int)trim(fgets(STDIN));\\n$count = 0;\\nwhile ($n > 0) {\\n    if ($n % 10 == 4 || $n % 10 == 7) {\\n        $count++;\\n    }\\n    $n = $n \/ 10;\\n}\\nif ($count % 4 == 0 || $count % 7 == 0) {\\n    echo 'YES';\\n} else {\\n    echo 'NO';\\n}\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int count = 0;\n    while (n > 0) {\n        if (n % 10 == 4 || n % 10 == 7) {\n            count++;\n        }\n        n \/= 10;\n    }\n    if (count % 4 == 0 || count % 7 == 0) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    printf(\" \n \");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $count = 0;\nwhile ($n > 0) {\n    if ($n % 10 == 4 || $n % 10 == 7) {\n        $count++;\n    }\n    $n = $n \/ 10;\n}\n\nif ($count % 4 == 0 || $count % 7 == 0) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let mut n = read!();\n    let mut count = 0;\n    while n > 0 {\n        if n % 10 == 4 || n % 10 == 7 {\n            count += 1;\n        }\n        n \/= 10;\n    }\n    if count % 4 == 0 || count % 7 == 0 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\"}]"}
{"title":"D. Petya and Coloring","description":"Little Petya loves counting. He wants to count the number of ways to paint a rectangular checkered board of size n\u00d7m (n rows, m columns) in k colors. Besides, the coloring should have the following property: for any vertical line that passes along the grid lines and divides the board in two non-empty parts the number of distinct colors in both these parts should be the same. Help Petya to count these colorings.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains space-separated integers n, m and k (1\u2264n,m\u22641000,1\u2264k\u226410^6) \u2014 the board's vertical and horizontal sizes and the number of colors respectively.\n","output_spec":"Print the answer to the problem. As the answer can be quite a large number, you should print it modulo 10^9+7 (1000000007).\n","notes":null,"sample_inputs":["2 2 1\n","2 2 2\n","3 2 2\n"],"sample_outputs":["1\n","8\n","40\n"],"id":"111-D","difficulty":2300,"tags":["combinatorics","dp"],"src_uid":"f22f28e2d8933f4199ba5ccfc0de8cda","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n,m,k;cin>>n>>m>>k;long long ans=1;for(int i=1;i<=n;i++)ans=(ans*k)%1000000007;for(int i=1;i<=m-1;i++)ans=(ans*ans)%1000000007;cout<<ans<<endl;\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        int[][] dp = new int[n + 1][m + 1];\n        dp[0][0] = 1;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                dp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % 1000000007;\n                if (i > 1) {\n                    dp[i][j] = (dp[i][j] + dp[i - 2][j]) % 1000000007;\n                }\n                if (j > 1) {\n                    dp[i][j] = (dp[i][j] + dp[i][j - 2]) % 1000000007;\n                }\n            }\n        }\n        System.out.println(dp[n][m]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,k=map(int,input().split())\nprint((k-1)**(n*m)%1000000007)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#define MOD 1000000007\nint main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int dp[n + 1][m + 1][k + 1];\n    dp[0][0][0] = 1;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            for (int l = 1; l <= k; l++) {\n                dp[i][j][l] = (dp[i - 1][j][l] + dp[i][j - 1][l] + dp[i - 1][j - 1][l - 1]) % MOD;\n            }\n        }\n    }\n    printf(\"%d\\n\", dp[n][m][k]);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var n, m, k = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            var dp = new int[n + 1, m + 1, k + 1];\n            dp[0, 0, 0] = 1;\n            for (int i = 1; i <= n; i++)\n            {\n                for (int j = 1; j <= m; j++)\n                {\n                    for (int l = 1; l <= k; l++)\n                    {\n                        dp[i, j, l] = (dp[i - 1, j, l] + dp[i, j - 1, l] + dp[i - 1, j - 1, l - 1]) % 1000000007;\n                    }\n                }\n            }\n            Console.WriteLine(dp[n, m, k]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,k=map(int,input().split())\nans=1\nfor i in range(1,k+1):\n    ans*=n*m\n    ans%=10**9+7\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nconst\n  MOD = 1000000007;\n\nvar\n  n, m, k, i, j, ans: Integer;\n\nbegin\n  Readln(n, m, k);\n  ans := 0;\n  for i := 1 to k do\n    for j := 1 to k do\n      if (i + j) mod k = 0 then\n        ans := (ans + (n - 1) * (m - 1)) mod MOD;\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, k int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &k)\\n    ans := 1\\n    for i := 1; i <= n; i++ {\\n        for j := 1; j <= m; j++ {\\n            ans *= k\\n            ans %= 1000000007\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst m = parseInt(stdin[1]);\nconst k = parseInt(stdin[2]);\n\nconst mod = 1000000007;\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\n\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= k; j++) {\n    dp[i] = (dp[i] + dp[i - 1]) % mod;\n  }\n}\n\nconst ans = dp[n] * dp[m] % mod;\n\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (n, m, k) = readLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { Array(m + 1) { Array(k + 1) { 0 } } }\n    dp[0][0][0] = 1\n    for (i in 1..n) {\n        for (j in 1..m) {\n            for (l in 1..k) {\n                dp[i][j][l] = (dp[i - 1][j][l] + dp[i][j - 1][l] + dp[i - 1][j - 1][l - 1]) % 1000000007\n            }\n        }\n    }\n    println(dp[n][m][k])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$mod = 1000000007;\n$dp = array_fill(0, $k + 1, array_fill(0, $k + 1, 0));\n$dp[0][0] = 1;\nfor ($i = 1; $i <= $n; $i++) {\n    for ($j = 1; $j <= $m; $j++) {\n        for ($l = 0; $l <= $k; $l++) {\n            for ($r = 0; $r <= $k; $r++) {\n                $dp[$i][$j][$l] += $dp[$i - 1][$j][$r] * $dp[$i][$j - 1][$l] * ($k - $l - $r) % $mod;\n                $dp[$i][$j][$l] %= $mod;\n            }\n        }\n    }\n}\necho $dp[$n][$m][0];\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.math;\n\nint main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int ans = 1;\n    for (int i = 1; i <= n; i++) {\n        ans = ans * (k - 1) % 1000000007;\n    }\n    for (int i = 1; i <= m; i++) {\n        ans = ans * (k - 1) % 1000000007;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\n\nchomp(my $input = <STDIN>);\n\n@input = split(' ', $input);\n\n$n = $input[0];\n$m = $input[1];\n$k = $input[2];\n\nmy $mod = 10**9 + 7;\n\nmy $ans = 1;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        $ans = ($ans * $k) % $mod;\n    }\n}\n\nfor (my $i = 1; $i <= $n - 1; $i++) {\n    for (my $j = 1; $j <= $m - 1; $j++) {\n        $ans = ($ans * ($k - 1)) % $mod;\n    }\n}\n\nprint $ans . \"\\n\";\"}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = String::new();\n    stdin.read_line(&mut n).unwrap();\n    let mut ns = n.split_whitespace();\n    let n = ns.next().unwrap().parse::<usize>().unwrap();\n    let m = ns.next().unwrap().parse::<usize>().unwrap();\n    let k = ns.next().unwrap().parse::<usize>().unwrap();\n\n    let mut dp = vec![vec![0; k + 1]; n + 1];\n    dp[0][0] = 1;\n    for i in 1..=n {\n        for j in 0..=k {\n            for l in 0..=k {\n                dp[i][j] += dp[i - 1][l];\n                dp[i][j] %= 1000000007;\n            }\n        }\n    }\n\n    for i in 0..=k {\n        for j in 0..=k {\n            dp[n][i] += dp[n][j];\n            dp[n][i] %= 1000000007;\n        }\n    }\n\n    for i in 0..=k {\n        stdout.write_fmt(format_args!(\"{}\", dp[n][i])).unwrap();\n        stdout.write_fmt(format_args!(\"\\n\")).unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"E. Sleeping","description":"One day Vasya was lying in bed watching his electronic clock to fall asleep quicker.Vasya lives in a strange country, where days have h hours, and every hour has m minutes. Clock shows time in decimal number system, in format H:M, where the string H always has a fixed length equal to the number of digits in the decimal representation of number h-1. To achieve this, leading zeros are added if necessary. The string M has a similar format, and its length is always equal to the number of digits in the decimal representation of number m-1. For example, if h=17, m=1000, then time equal to 13 hours and 75 minutes will be displayed as \"13:075\".Vasya had been watching the clock from h1 hours m1 minutes to h2 hours m2 minutes inclusive, and then he fell asleep. Now he asks you to count how many times he saw the moment at which at least k digits changed on the clock simultaneously.For example, when switching 04:19 \u2192 04:20 two digits change. When switching 23:59 \u2192 00:00, four digits change.Consider that Vasya has been watching the clock for strictly less than one day. Note that the last time Vasya saw on the clock before falling asleep was \"h2:m2\". That is, Vasya didn't see the moment at which time \"h2:m2\" switched to the next value.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input file contains three space-separated integers h, m and k (2\u2264h,m\u226410^9, 1\u2264k\u226420). The second line contains space-separated integers h1, m1 (0\u2264h1<h, 0\u2264m1<m). The third line contains space-separated integers h2, m2 (0\u2264h2<h, 0\u2264m2<m).\n","output_spec":"Print a single number \u2014 the number of times Vasya saw the moment of changing at least k digits simultaneously.\nPlease do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin stream (also you may use the %I64d specificator).\n","notes":"In the first example Vasya will see the following moments of time: 4:4  0:0 \u2192 0:1 \u2192 0:2 \u2192 0:3 \u2192 0:4  1:0 \u2192 1:1 \u2192 1:2 \u2192 1:3 \u2192 1:4  2:0 \u2192 2:1 \u2192 2:2 \u2192 2:3 \u2192 2:4. Double arrow () marks the sought moments of time (in this example \u2014 when Vasya sees two numbers changing simultaneously).\nIn the second example k=1. Any switching time can be accepted, since during switching of the clock at least one digit is changed. Total switching equals to 24\u00b760=1440, but Vasya have not seen one of them \u2014 the switching of 23:59  00:00.\nIn the third example Vasya fell asleep immediately after he began to look at the clock, so he did not see any change.\n","sample_inputs":["5 5 2\n4 4\n2 1\n","24 60 1\n0 0\n23 59\n","24 60 3\n23 59\n23 59\n"],"sample_outputs":["3\n","1439\n","0\n"],"id":"113-E","difficulty":2700,"tags":["combinatorics","implementation","math"],"src_uid":"e2782743229645ad3a0f8e815d86dc5f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint main() {\n    int h, m, k;\n    cin >> h >> m >> k;\n    int h1, m1, h2, m2;\n    cin >> h1 >> m1 >> h2 >> m2;\n    int ans = 0;\n    for (int i = h1; i <= h2; i++) {\n        for (int j = m1; j <= m2; j++) {\n            int cnt = 0;\n            if (i < 10) {\n                cnt++;\n            }\n            if (j < 10) {\n                cnt++;\n            }\n            if (i >= h - 1 && j >= m - 1) {\n                cnt--;\n            }\n            if (cnt >= k) {\n                ans++;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int h = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        int h1 = sc.nextInt();\n        int m1 = sc.nextInt();\n        int h2 = sc.nextInt();\n        int m2 = sc.nextInt();\n        int count = 0;\n        for (int i = h1; i <= h2; i++) {\n            for (int j = m1; j <= m2; j++) {\n                int num = i * m + j;\n                int len = (int) Math.log10(num) + 1;\n                int cnt = 0;\n                for (int k = 0; k < len; k++) {\n                    if (num % 10 != (num \/ (10 ^ k)) % 10) {\n                        cnt++;\n                    }\n                }\n                if (cnt >= k) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nh, m, k = map(int, input().split())\nh1, m1 = map(int, input().split())\nh2, m2 = map(int, input().split())\n\ndef get_digits(n):\n    return len(str(n))\n\ndef get_changes(h1, m1, h2, m2):\n    h_changes = get_digits(h2) - get_digits(h1)\n    m_changes = get_digits(m2) - get_digits(m1)\n    return h_changes + m_changes\n\ndef get_time(h, m):\n    return str(h) + ':' + str(m).zfill(get_digits(m))\n\ndef get_time_diff(t1, t2):\n    return get_changes(int(t1[:2]), int(t1[3:]), int(t2[:2]), int(t2[3:]))\n\nprint(get_time_diff(get_time(h1, m1), get_time(h2, m2)) >= k)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int h, m, k, h1, m1, h2, m2;\n    scanf(\" %d %d %d \", &h, &m, &k);\n    scanf(\" %d %d \", &h1, &m1);\n    scanf(\" %d %d \", &h2, &m2);\n    int ans = 0;\n    for (int i = h1; i <= h2; i++) {\n        for (int j = m1; j <= m2; j++) {\n            int cnt = 0;\n            if (i < 10) {\n                cnt++;\n            }\n            if (j < 10) {\n                cnt++;\n            }\n            if (i >= h - 1 && j >= m - 1) {\n                cnt--;\n            }\n            if (cnt >= k) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var h, m, k = int.Parse(args[0]), int.Parse(args[1]), int.Parse(args[2]);\n        var h1, m1 = int.Parse(args[3]), int.Parse(args[4]);\n        var h2, m2 = int.Parse(args[5]), int.Parse(args[6]);\n\n        var h1s = new List<int>();\n        var m1s = new List<int>();\n        var h2s = new List<int>();\n        var m2s = new List<int>();\n\n        for (int i = 0; i < h; i++)\n        {\n            h1s.Add(i);\n            h2s.Add(i);\n        }\n\n        for (int i = 0; i < m; i++)\n        {\n            m1s.Add(i);\n            m2s.Add(i);\n        }\n\n        var ans = 0;\n\n        for (int i = 0; i < h1s.Count; i++)\n        {\n            for (int j = 0; j < m1s.Count; j++)\n            {\n                for (int k = 0; k < h2s.Count; k++)\n                {\n                    for (int l = 0; l < m2s.Count; l++)\n                    {\n                        if (Math.Abs(h1s[i] - h2s[k]) >= k && Math.Abs(m1s[j] - m2s[l]) >= k)\n                        {\n                            ans++;\n                        }\n                    }\n                }\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"h, m, k = gets.split.map(&:to_i)\nh1, m1 = gets.split.map(&:to_i)\nh2, m2 = gets.split.map(&:to_i)\n\nh1 = h1 + 1 if h1 == h2 && m1 == m2\nh2 = h2 - 1 if h1 == h2 && m1 == m2\n\nh1 = h1 - 1 if h1 < 0\nh2 = h2 + 1 if h2 >= h\n\nm1 = m1 - 1 if m1 < 0\nm2 = m2 + 1 if m2 >= m\n\nans = 0\n\n(h1..h2).each do |h|\n  (m1..m2).each do |m|\n    ans += 1 if h.to_s.length + m.to_s.length >= k\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses SysUtils;\nvar\n  h, m, k, h1, m1, h2, m2, i, j, n, t, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20: Integer;\nbegin\n  Readln(h, m, k);\n  Readln(h1, m1);\n  Readln(h2, m2);\n  t1 := h1 * m;\n  t2 := m1;\n  t3 := h2 * m;\n  t4 := m2;\n  t5 := t1 + t2;\n  t6 := t3 + t4;\n  t7 := t6 - t5;\n  t8 := t7 div m;\n  t9 := t7 mod m;\n  t10 := t5 div m;\n  t11 := t5 mod m;\n  t12 := t8 - t10;\n  t13 := t9 - t11;\n  t14 := t12 div k;\n  t15 := t13 div k;\n  t16 := t14 + t15;\n  t17 := t16 * k;\n  t18 := t17 + t10;\n  t19 := t17 + t11;\n  t20 := t18 - t10;\n  t := 0;\n  for i := t18 to t19 do\n  begin\n    for j := t20 to t21 do\n    begin\n      if (i mod k = 0) and (j mod k = 0) then\n        t := t + 1;\n    end;\n  end;\n  Writeln(t);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\"\r\n)\r\n\r\nfunc main() {\r\n\tvar h, m, k int\r\n\tfmt.Scanf(\" %d %d %d \", &h, &m, &k)\r\n\tvar h1, m1, h2, m2 int\r\n\tfmt.Scanf(\" %d %d \", &h1, &m1)\r\n\tfmt.Scanf(\" %d %d \", &h2, &m2)\r\n\tvar ans int\r\n\tfor i := h1; i <= h2; i++ {\r\n\t\tfor j := m1; j <= m2; j++ {\r\n\t\t\tif len(fmt.Sprintf(\"%d\", i)) >= k && len(fmt.Sprintf(\"%d\", j)) >= k {\r\n\t\t\t\tans++\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfmt.Println(ans)\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst h = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst k = parseInt(input[0].split(' ')[2]);\nconst h1 = parseInt(input[1].split(' ')[0]);\nconst m1 = parseInt(input[1].split(' ')[1]);\nconst h2 = parseInt(input[2].split(' ')[0]);\nconst m2 = parseInt(input[2].split(' ')[1]);\n\nconst h1_str = h1.toString().padStart(Math.floor(Math.log10(h)) + 1, '0');\nconst m1_str = m1.toString().padStart(Math.floor(Math.log10(m)) + 1, '0');\nconst h2_str = h2.toString().padStart(Math.floor(Math.log10(h)) + 1, '0');\nconst m2_str = m2.toString().padStart(Math.floor(Math.log10(m)) + 1, '0');\n\nconst h1_len = h1_str.length;\nconst m1_len = m1_str.length;\nconst h2_len = h2_str.length;\nconst m2_len = m2_str.length;\n\nconst h1_digits = h1_str.split('').map(x => parseInt(x));\nconst m1_digits = m1_str.split('').map(x => parseInt(x));\nconst h2_digits = h2_str.split('').map(x => parseInt(x));\nconst m2_digits = m2_str.split('').map(x => parseInt(x));\n\nconst h1_changes = 0;\nconst m1_changes = 0;\nconst h2_changes = 0;\nconst m2_changes = 0;\n\nfor (let i = 0; i < h1_len; i++) {\n  if (h1_digits[i] !== h2_digits[i]) {\n    h1_changes++;\n  }\n}\n\nfor (let i = 0; i < m1_len; i++) {\n  if (m1_digits[i] !== m2_digits[i]) {\n    m1_changes++;\n  }\n}\n\nconst changes = h1_changes + m1_changes;\n\nif (changes >= k) {\n  console.log(changes);\n} else {\n  console.log(0);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val h, m, k = sc.nextInt(), sc.nextInt(), sc.nextInt()\n    val h1, m1 = sc.nextInt(), sc.nextInt()\n    val h2, m2 = sc.nextInt(), sc.nextInt()\n\n    val h1s = h1.toString().padStart(h.toString().length, '0')\n    val m1s = m1.toString().padStart(m.toString().length, '0')\n    val h2s = h2.toString().padStart(h.toString().length, '0')\n    val m2s = m2.toString().padStart(m.toString().length, '0')\n\n    val h1m1 = h1s.toCharArray().map { it.toString().toInt() }\n    val h2m2 = h2s.toCharArray().map { it.toString().toInt() }\n\n    var ans = 0\n    for (i in h1m1.indices) {\n        if (h1m1[i] != h2m2[i]) {\n            ans++\n        }\n    }\n\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$h, $m, $k = explode(' ', trim(fgets(STDIN)));\n$h1, $m1 = explode(' ', trim(fgets(STDIN)));\n$h2, $m2 = explode(' ', trim(fgets(STDIN)));\n\n$h1 = intval($h1);\n$m1 = intval($m1);\n$h2 = intval($h2);\n$m2 = intval($m2);\n\n$h1 = str_pad($h1, strlen($h) - 1, '0', STR_PAD_LEFT);\n$m1 = str_pad($m1, strlen($m) - 1, '0', STR_PAD_LEFT);\n$h2 = str_pad($h2, strlen($h) - 1, '0', STR_PAD_LEFT);\n$m2 = str_pad($m2, strlen($m) - 1, '0', STR_PAD_LEFT);\n\n$h1 = intval($h1);\n$m1 = intval($m1);\n$h2 = intval($h2);\n$m2 = intval($m2);\n\n$count = 0;\nfor ($i = $h1; $i <= $h2; $i++) {\n    for ($j = $m1; $j <= $m2; $j++) {\n        $h = str_pad($i, strlen($h) - 1, '0', STR_PAD_LEFT);\n        $m = str_pad($j, strlen($m) - 1, '0', STR_PAD_LEFT);\n        $count += substr_count($h . $m, '9') >= $k ? 1 : 0;\n    }\n}\n\necho $count;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int h, m, k;\n    scanf(\" %d %d %d \", &h, &m, &k);\n    int h1, m1, h2, m2;\n    scanf(\" %d %d \", &h1, &m1);\n    scanf(\" %d %d \", &h2, &m2);\n\n    int h1_len = h1.countDigits();\n    int m1_len = m1.countDigits();\n    int h2_len = h2.countDigits();\n    int m2_len = m2.countDigits();\n\n    int h1_digits = h1.digits.length;\n    int m1_digits = m1.digits.length;\n    int h2_digits = h2.digits.length;\n    int m2_digits = m2.digits.length;\n\n    int h1_digits_changed = h1_digits - h1_len;\n    int m1_digits_changed = m1_digits - m1_len;\n    int h2_digits_changed = h2_digits - h2_len;\n    int m2_digits_changed = m2_digits - m2_len;\n\n    int h1_digits_changed_min = min(h1_digits_changed, k);\n    int m1_digits_changed_min = min(m1_digits_changed, k);\n    int h2_digits_changed_min = min(h2_digits_changed, k);\n    int m2_digits_changed_min = min(m2_digits_changed, k);\n\n    int h1_digits_changed_max = max(h1_digits_changed, k);\n    int m1_digits_changed_max = max(m1_digits_changed, k);\n    int h2_digits_changed_max = max(h2_digits_changed, k);\n    int m2_digits_changed_max = max(m2_digits_changed, k);\n\n    int h1_digits_changed_total = h1_digits_changed_min + h1_digits_changed_max;\n    int m1_digits_changed_total = m1_digits_changed_min + m1_digits_changed_max;\n    int h2_digits_changed_total = h2_digits_changed_min + h2_digits_changed_max;\n    int m2_digits_changed_total = m2_digits_changed_min + m2_digits_changed_max;\n\n    int total_digits_changed = h1_digits_changed_total + m1_digits_changed_total + h2_digits_changed_total + m2_digits_changed_total;\n\n    int ans = 0;\n    for (int i = h1; i <= h2; i++) {\n        for (int j = m1; j <= m2; j++) {\n            int digits_changed = 0;\n            if (i != h1) {\n                digits_changed += h1_digits_changed_min;\n            }\n            if (i != h2) {\n                digits_changed += h2_digits_changed_min;\n            }\n            if (j != m1) {\n                digits_changed += m1_digits_changed_min;\n            }\n            if (j != m2) {\n                digits_changed += m2_digits_changed_min;\n            }\n            if (digits_changed >= k) {\n                ans++;\n            }\n        }\n    }\n\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut h = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut h1 = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut h2 = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut count = 0;\n    for i in h1[0]..h2[0] {\n        for j in h1[1]..h2[1] {\n            let mut k = 0;\n            if i < 10 {\n                k += 1;\n            }\n            if j < 10 {\n                k += 1;\n            }\n            if i >= h - 1 {\n                k += 1;\n            }\n            if j >= m - 1 {\n                k += 1;\n            }\n            if k >= h {\n                count += 1;\n            }\n        }\n    }\n\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"A. Cifera","description":"When Petya went to school, he got interested in large numbers and what they were called in ancient times. For instance, he learned that the Russian word \"tma\" (which now means \"too much to be counted\") used to stand for a thousand and \"tma tmyschaya\" (which literally means \"the tma of tmas\") used to stand for a million.Petya wanted to modernize the words we use for numbers and invented a word petricium that represents number k. Moreover, petricium la petricium stands for number k^2, petricium la petricium la petricium stands for k^3 and so on. All numbers of this form are called petriciumus cifera, and the number's importance is the number of articles la in its title.Petya's invention brought on a challenge that needed to be solved quickly: does some number l belong to the set petriciumus cifera? As Petya is a very busy schoolboy he needs to automate the process, he asked you to solve it.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains integer number k, the second line contains integer number l (2\u2264k,l\u22642^31-1).\n","output_spec":"You should print in the first line of the output \"YES\", if the number belongs to the set petriciumus cifera and otherwise print \"NO\". If the number belongs to the set, then print on the seconds line the only number \u2014 the importance of number l.\n","notes":null,"sample_inputs":["5\n25\n","3\n8\n"],"sample_outputs":["YES\n1\n","NO\n"],"id":"114-A","difficulty":1000,"tags":["math"],"src_uid":"8ce89b754aa4080e7c3b2c3b10f4be46","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main()\\n{\\n    int k, l;\\n    cin >> k >> l;\\n    int i = 0;\\n    while (l > 1)\\n    {\\n        if (l % k == 0)\\n        {\\n            l \/= k;\\n            i++;\\n        }\\n        else\\n            break;\\n    }\\n    if (l == 1)\\n        cout << \\\"YES\\\" << endl << i << endl;\\n    else\\n        cout << \\\"NO\\\" << endl;\\n    return 0;\\n}\\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int k = scanner.nextInt();\n        int l = scanner.nextInt();\n        int count = 0;\n        while (l > 1) {\n            if (l % k == 0) {\n                count++;\n                l \/= k;\n            } else {\n                break;\n            }\n        }\n        if (l == 1) {\n            System.out.println(\"YES\");\n            System.out.println(count);\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nk = int(input())\nl = int(input())\n\nif l % k == 0:\n    print(\"YES\")\n    print(l \/\/ k)\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int k, l, i, j, n, m;\n    scanf(\" %d \", &k);\n    scanf(\" %d \", &l);\n    n = 0;\n    for (i = 1; i <= k; i++) {\n        m = 1;\n        for (j = 1; j <= i; j++) {\n            m = m * k;\n        }\n        if (l == m) {\n            n = n + 1;\n        }\n    }\n    if (n == 0) {\n        printf(\" NO \");\n    } else {\n        printf(\" YES \");\n        printf(\" %d \", n);\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int k = int.Parse(Console.ReadLine());\n        int l = int.Parse(Console.ReadLine());\n        int count = 0;\n        while (l > 1)\n        {\n            if (l % k == 0)\n            {\n                count++;\n                l \/= k;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if (l == 1)\n        {\n            Console.WriteLine(\"YES\");\n            Console.WriteLine(count);\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"k = gets.to_i\nl = gets.to_i\n\nif l % k == 0\n  puts \"YES\"\n  puts l \/ k\nelse\n  puts \"NO\"\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram petriciumus;\nvar\n  k, l, i, j, n, m, p, q, r, s, t, u, v, w, x, y, z: integer;\nbegin\n  readln(k);\n  readln(l);\n  if l = k then\n    writeln('YES')\n  else\n  begin\n    n := 1;\n    m := 1;\n    p := 1;\n    q := 1;\n    r := 1;\n    s := 1;\n    t := 1;\n    u := 1;\n    v := 1;\n    w := 1;\n    x := 1;\n    y := 1;\n    z := 1;\n    for i := 2 to k do\n    begin\n      n := n * i;\n      m := m * i * i;\n      p := p * i * i * i;\n      q := q * i * i * i * i;\n      r := r * i * i * i * i * i;\n      s := s * i * i * i * i * i * i;\n      t := t * i * i * i * i * i * i * i;\n      u := u * i * i * i * i * i * i * i * i;\n      v := v * i * i * i * i * i * i * i * i * i;\n      w := w * i * i * i * i * i * i * i * i * i * i;\n      x := x * i * i * i * i * i * i * i * i * i * i * i;\n      y := y * i * i * i * i * i * i * i * i * i * i * i * i;\n      z := z * i * i * i * i * i * i * i * i * i * i * i * i * i;\n    end;\n    if l = n then\n      writeln('YES')\n    else if l = m then\n      writeln('YES')\n    else if l = p then\n      writeln('YES')\n    else if l = q then\n      writeln('YES')\n    else if l = r then\n      writeln('YES')\n    else if l = s then\n      writeln('YES')\n    else if l = t then\n      writeln('YES')\n    else if l = u then\n      writeln('YES')\n    else if l = v then\n      writeln('YES')\n    else if l = w then\n      writeln('YES')\n    else if l = x then\n      writeln('YES')\n    else if l = y then\n      writeln('YES')\n    else if l = z then\n      writeln('YES')\n    else\n      writeln('NO');\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var k, l int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &k)\\n    fmt.Scanf(\\\"%d\\\\n\\\", &l)\\n    if l == k*k {\\n        fmt.Println(\\\"YES\\\")\\n        fmt.Println(1)\\n    } else if l == k*k*k {\\n        fmt.Println(\\\"YES\\\")\\n        fmt.Println(2)\\n    } else if l == k*k*k*k {\\n        fmt.Println(\\\"YES\\\")\\n        fmt.Println(3)\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst k = parseInt(input[0]);\nconst l = parseInt(input[1]);\n\nconst isPetriciusCifera = (n) => {\n    if (n < 2) return false;\n    if (n % k === 0) return true;\n    return isPetriciusCifera(n \/ k);\n};\n\nconst importance = (n) => {\n    if (n < 2) return 0;\n    return importance(n \/ k) + 1;\n};\n\nconsole.log(isPetriciusCifera(l) ? 'YES' : 'NO');\nconsole.log(importance(l));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val k = scanner.nextInt()\n    val l = scanner.nextInt()\n    var count = 0\n    while (l > 1) {\n        if (l % k == 0) {\n            count++\n            l \/= k\n        } else {\n            break\n        }\n    }\n    if (l == 1) {\n        println(\"YES\")\n        println(count)\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$k = (int)trim(fgets(STDIN));\n$l = (int)trim(fgets(STDIN));\n$count = 0;\nwhile ($l > 1) {\n    if ($l % $k == 0) {\n        $count++;\n        $l = $l \/ $k;\n    } else {\n        break;\n    }\n}\nif ($count == 0) {\n    echo \"NO\\n\";\n} else {\n    echo \"YES\\n\";\n    echo $count;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int k, l;\n    scanf(\" %d \", &k);\n    scanf(\" %d \", &l);\n\n    int i = 0;\n    while (l > 1) {\n        if (l % k == 0) {\n            l \/= k;\n            i++;\n        } else {\n            break;\n        }\n    }\n\n    if (l == 1) {\n        printf(\" YES \");\n        printf(\" %d \", i);\n    } else {\n        printf(\" NO \");\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $k = <STDIN>;\nchomp $k;\nmy $l = <STDIN>;\nchomp $l;\n\nmy $i = 0;\nwhile ($l > 1) {\n    if ($l % $k == 0) {\n        $l = $l \/ $k;\n        $i++;\n    } else {\n        last;\n    }\n}\n\nif ($l == 1) {\n    print \"YES\\n\";\n    print $i;\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut k = String::new();\n    std::io::stdin().read_line(&mut k).unwrap();\n    let k: u32 = k.trim().parse().unwrap();\n    let mut l = String::new();\n    std::io::stdin().read_line(&mut l).unwrap();\n    let l: u32 = l.trim().parse().unwrap();\n    let mut count = 0;\n    while l > 0 {\n        if l % k == 0 {\n            count += 1;\n            l \/= k;\n        } else {\n            break;\n        }\n    }\n    if l == 0 {\n        println!(\"YES\");\n        println!(\"{}\", count);\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Long Number","description":"You are given a long decimal number $$$a$$$ consisting of $$$n$$$ digits from $$$1$$$ to $$$9$$$. You also have a function $$$f$$$ that maps every digit from $$$1$$$ to $$$9$$$ to some (possibly the same) digit from $$$1$$$ to $$$9$$$.You can perform the following operation no more than once: choose a non-empty contiguous subsegment of digits in $$$a$$$, and replace each digit $$$x$$$ from this segment with $$$f(x)$$$. For example, if $$$a = 1337$$$, $$$f(1) = 1$$$, $$$f(3) = 5$$$, $$$f(7) = 3$$$, and you choose the segment consisting of three rightmost digits, you get $$$1553$$$ as the result.What is the maximum possible number you can obtain applying this operation no more than once?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains one integer $$$n$$$ ($$$1 \\\\le n \\\\le 2 \\\\cdot 10^5$$$) \u2014 the number of digits in $$$a$$$.\nThe second line contains a string of $$$n$$$ characters, denoting the number $$$a$$$. Each character is a decimal digit from $$$1$$$ to $$$9$$$.\nThe third line contains exactly $$$9$$$ integers $$$f(1)$$$, $$$f(2)$$$, ..., $$$f(9)$$$ ($$$1 \\\\le f(i) \\\\le 9$$$).\n","output_spec":"Print the maximum number you can get after applying the operation described in the statement no more than once.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1157-B","difficulty":1300,"tags":["greedy"],"src_uid":"378a9ab7ad891d60f23645106d24f314","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    string a;\n    cin >> a;\n    int f[10];\n    for (int i = 0; i < 10; i++) {\n        cin >> f[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans = max(ans, f[a[i] - '0']);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String a = sc.next();\n        int[] f = new int[10];\n        for (int i = 0; i < 9; i++) {\n            f[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans = Math.max(ans, f[a.charAt(i) - '0']);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = input()\nf = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans = max(ans, f[int(a[i])])\n\nprint(ans * n)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    char a[n + 1];\n    scanf(\" %s \", a);\n    int f[10];\n    for (int i = 0; i < 10; i++) {\n        scanf(\" %d \", &f[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans = ans * 10 + f[a[i] - '0'];\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string a = Console.ReadLine();\n        int[] f = new int[10];\n        for (int i = 0; i < 9; i++)\n        {\n            f[i] = int.Parse(Console.ReadLine());\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            ans = Math.Max(ans, f[a[i] - '0']);\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.chomp\nf = gets.split(' ').map(&:to_i)\n\nans = 0\nfor i in 0..n-1\n  ans = [ans, a[i].to_i * f[a[i].to_i-1]].max\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 200000;\nvar\n  n, i, j, k, m, ans: integer;\n  a: array[0..maxn] of char;\n  f: array[1..9] of integer;\nbegin\n  readln(n);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n  for i := 1 to 9 do\n    readln(f[i]);\n  ans := 0;\n  for i := 0 to n - 1 do\n  begin\n    m := 0;\n    for j := 1 to 9 do\n      if f[j] > a[i] then\n        m := m + 1;\n    ans := max(ans, m);\n  end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := 0\\n    fmt.Scanf(\\\"%d\\\", &n)\\n    s := make([]byte, n)\\n    fmt.Scanf(\\\"%s\\\", s)\\n    f := make([]int, 10)\\n    fmt.Scanf(\\\"%d%d%d%d%d%d%d%d%d\\\", &f[0], &f[1], &f[2], &f[3], &f[4], &f[5], &f[6], &f[7], &f[8])\\n    max := 0\\n    for i := 0; i < n; i++ {\\n        max = max + f[s[i]-'0']\\n    }\\n    fmt.Println(max)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst a = input[1];\nconst f = input[2].split(' ').map(x => parseInt(x));\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 0;\nfor (let i = 1; i <= n; i++) {\n  dp[i] = Math.max(dp[i - 1], dp[i - 1] + f[a.charAt(i - 1) - '0']);\n}\n\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine()\n    val f = readLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(10) }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..9) {\n            dp[i][j] = dp[i - 1][j]\n            if (j != a[i - 1] - '0') {\n                dp[i][j] += dp[i - 1][a[i - 1] - '0']\n            }\n        }\n    }\n    val ans = Int.MIN_VALUE\n    for (i in 0..9) {\n        ans = Math.max(ans, dp[n][i] * f[i])\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\nn = int(input())\na = input()\nf = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    ans = max(ans, f[int(a[i])])\n\nprint(ans * n)\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    string a;\n    scanf(\" %s \", a);\n    int f[10];\n    for (int i = 0; i < 10; i++) {\n        scanf(\" %d \", &f[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans = max(ans, f[a[i] - '0']);\n    }\n    printf(\" %d \", ans);\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy $a = <STDIN>;\nchomp $a;\nmy @f = <STDIN>;\nchomp @f;\n\nmy $max = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    my $d = $a[$i];\n    my $v = $f[$d - 1];\n    $max = max($max, $v);\n}\n\nprint $max;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = String::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<u8> = a.trim().as_bytes().to_vec();\n\n    let mut f = Vec::new();\n    io::stdin().read_line(&mut f).unwrap();\n    let f: Vec<u8> = f.trim().as_bytes().to_vec();\n\n    let mut ans = 0;\n    for i in 0..n {\n        ans = ans * 10 + f[a[i] as usize - '0' as usize] as usize;\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"C1. Power Transmission (Easy Edition)","description":"This problem is same as the next one, but has smaller constraints.It was a Sunday morning when the three friends Selena, Shiro and Katie decided to have a trip to the nearby power station (do not try this at home). After arriving at the power station, the cats got impressed with a large power transmission system consisting of many chimneys, electric poles, and wires. Since they are cats, they found those things gigantic.At the entrance of the station, there is a map describing the complicated wiring system. Selena is the best at math among three friends. He decided to draw the map on the Cartesian plane. Each pole is now a point at some coordinates $$$(x_i, y_i)$$$. Since every pole is different, all of the points representing these poles are distinct. Also, every two poles are connected with each other by wires. A wire is a straight line on the plane infinite in both directions. If there are more than two poles lying on the same line, they are connected by a single common wire.Selena thinks, that whenever two different electric wires intersect, they may interfere with each other and cause damage. So he wonders, how many pairs are intersecting? Could you help him with this problem?","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 50$$$)\u00a0\u2014 the number of electric poles.\nEach of the following $$$n$$$ lines contains two integers $$$x_i$$$, $$$y_i$$$ ($$$-10^4 \\\\le x_i, y_i \\\\le 10^4$$$)\u00a0\u2014 the coordinates of the poles.\nIt is guaranteed that all of these $$$n$$$ points are distinct.\n","output_spec":"Print a single integer\u00a0\u2014 the number of pairs of wires that are intersecting.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1163-C1","difficulty":1900,"tags":["brute+force","geometry"],"src_uid":"8c2e0cd780cf9390e933e28e57643cba","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<pair<int, int>> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i].first >> a[i].second;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i].first == a[j].first || a[i].second == a[j].second) {\n                ans++;\n            } else {\n                int x1 = a[i].first - a[j].first;\n                int y1 = a[i].second - a[j].second;\n                int x2 = a[i].first - a[j].first;\n                int y2 = a[i].second - a[j].second;\n                if (x1 * y2 == x2 * y1) {\n                    ans++;\n                }\n            }\n        }\n    }\n\n    cout << ans << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = scanner.nextInt();\n            y[i] = scanner.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (x[i] == x[j] || y[i] == y[j]) {\n                    ans++;\n                } else {\n                    double k = (double) (y[j] - y[i]) \/ (x[j] - x[i]);\n                    double b = y[i] - k * x[i];\n                    for (int k = 0; k < n; k++) {\n                        if (k != i && k != j && k * k * k + k * k * b + k * b + b * b == 0) {\n                            ans++;\n                        }\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b \/\/ gcd(a, b)\n\ndef solve(x1, y1, x2, y2):\n    return lcm(abs(x1 - x2), abs(y1 - y2))\n\ndef main():\n    xs = []\n    ys = []\n    for _ in range(n):\n        x, y = map(int, input().split())\n        xs.append(x)\n        ys.append(y)\n\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            ans += solve(xs[i], ys[i], xs[j], ys[j])\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n = int(input())\n\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\n\na.sort()\n\nans = 0\nfor i in range(n-1):\n    for j in range(i+1, n):\n        if a[i][0] == a[j][0] or a[i][1] == a[j][1]:\n            ans += 1\n\nprint(ans)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int[]> points = new List<int[]>();\n        for (int i = 0; i < n; i++)\n        {\n            int[] point = new int[2];\n            point[0] = int.Parse(Console.ReadLine());\n            point[1] = int.Parse(Console.ReadLine());\n            points.Add(point);\n        }\n\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                if (points[i][0] == points[j][0] || points[i][1] == points[j][1])\n                {\n                    count++;\n                }\n            }\n        }\n\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = []\nfor i in 1..n\n  x, y = gets.split.map(&:to_i)\n  a << [x, y]\nend\n\na.sort!\n\nans = 0\nfor i in 0..n-1\n  for j in i+1..n-1\n    if a[i][0] == a[j][0] || a[i][1] == a[j][1]\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses math;\nvar\n  n, i, j, k, m, a, b, c, d, ans: integer;\n  x, y: array[0..50] of integer;\nbegin\n  readln(n);\n  for i := 0 to n - 1 do\n  begin\n    readln(x[i], y[i]);\n  end;\n  for i := 0 to n - 1 do\n  begin\n    for j := i + 1 to n - 1 do\n    begin\n      for k := j + 1 to n - 1 do\n      begin\n        a := x[i] - x[j];\n        b := y[i] - y[j];\n        c := x[j] - x[k];\n        d := y[j] - y[k];\n        if (a * d - b * c) <> 0 then\n        begin\n          ans := ans + 1;\n        end;\n      end;\n    end;\n  end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var x, y []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scan(&x[i], &y[i])\\n    }\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        for j := i + 1; j < n; j++ {\\n            if x[i] == x[j] || y[i] == y[j] {\\n                ans++\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readLine());\nconst points = [];\nfor (let i = 0; i < n; i++) {\n  const [x, y] = process.stdin.readLine().split(' ').map(Number);\n  points.push([x, y]);\n}\n\nconst lines = [];\nfor (let i = 0; i < n; i++) {\n  for (let j = i + 1; j < n; j++) {\n    const [x1, y1] = points[i];\n    const [x2, y2] = points[j];\n    if (x1 === x2) {\n      lines.push([x1, Math.min(y1, y2), Math.max(y1, y2)]);\n    } else if (y1 === y2) {\n      lines.push([Math.min(x1, x2), y1, Math.max(x1, x2)]);\n    }\n  }\n}\n\nconst intersections = new Set();\nfor (let i = 0; i < lines.length; i++) {\n  for (let j = i + 1; j < lines.length; j++) {\n    const [x1, y1, x2] = lines[i];\n    const [x3, y3, x4] = lines[j];\n    if (x1 <= x3 && x3 <= x2 && y1 <= y3 && y3 <= y2) {\n      intersections.add([i, j]);\n    } else if (x1 <= x4 && x4 <= x2 && y1 <= y4 && y4 <= y2) {\n      intersections.add([i, j]);\n    } else if (x3 <= x1 && x1 <= x4 && y3 <= y1 && y1 <= y4) {\n      intersections.add([i, j]);\n    } else if (x3 <= x2 && x2 <= x4 && y3 <= y2 && y2 <= y4) {\n      intersections.add([i, j]);\n    }\n  }\n}\n\nconsole.log(intersections.size);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.4\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val points = Array(n) { readLine().split(\" \").map { it.toInt() } }\n    val lines = mutableListOf<Pair<Int, Int>>()\n    for (i in 0 until n) {\n        for (j in i + 1 until n) {\n            val x1 = points[i][0]\n            val y1 = points[i][1]\n            val x2 = points[j][0]\n            val y2 = points[j][1]\n            if (x1 == x2) {\n                lines.add(Pair(x1, Math.min(y1, y2)))\n            } else if (y1 == y2) {\n                lines.add(Pair(Math.min(x1, x2), y1))\n            } else {\n                val k = (y2 - y1) \/ (x2 - x1)\n                val b = y1 - k * x1\n                for (x in x1..x2) {\n                    lines.add(Pair(x, k * x + b))\n                }\n            }\n        }\n    }\n    val set = HashSet<Pair<Int, Int>>()\n    for (i in 0 until lines.size) {\n        for (j in i + 1 until lines.size) {\n            if (lines[i].first == lines[j].first || lines[i].second == lines[j].second) {\n                set.add(Pair(lines[i].first, lines[i].second))\n            }\n        }\n    }\n    println(set.size)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = intval(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a[] = explode(' ', fgets(STDIN));\n}\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n        if ($a[$i][0] == $a[$j][0] || $a[$i][1] == $a[$j][1]) {\n            $ans++;\n        }\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto a = new int[n][2];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &a[i][0], &a[i][1]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i][0] == a[j][0] || a[i][1] == a[j][1]) {\n                ans++;\n            } else {\n                int x1 = a[i][0] - a[j][0];\n                int y1 = a[i][1] - a[j][1];\n                int x2 = a[i][0] + a[j][0];\n                int y2 = a[i][1] + a[j][1];\n                int x3 = a[i][0] * a[j][0];\n                int y3 = a[i][1] * a[j][1];\n                if (x1 * y2 - x2 * y1 != 0) {\n                    ans++;\n                }\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @x = ();\nmy @y = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my @a = split \/ \/, <STDIN>;\n    push @x, $a[0];\n    push @y, $a[1];\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        if ($x[$i] == $x[$j] || $y[$i] == $y[$j]) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let n = read_line::<usize>();\n    let mut points = HashMap::new();\n    for _ in 0..n {\n        let (x, y) = read_line::<(i32, i32)>();\n        points.insert((x, y), ());\n    }\n\n    let mut ans = 0;\n    for (x1, y1) in points.keys() {\n        for (x2, y2) in points.keys() {\n            if x1 == x2 || y1 == y2 {\n                continue;\n            }\n\n            let dx = x2 - x1;\n            let dy = y2 - y1;\n            let gcd = gcd(dx.abs(), dy.abs());\n            if gcd == 0 {\n                continue;\n            }\n\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\nfn gcd(a: i32, b: i32) -> i32 {\n    if b == 0 {\n        return a;\n    }\n\n    return gcd(b, a % b);\n}\n\nfn read_line<T>() -> T {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s.trim().parse().unwrap()\n}\n\"\"\"}]"}
{"title":"C2. Nauuo and Pictures (hard version)","description":"The only difference between easy and hard versions is constraints.Nauuo is a girl who loves random picture websites.One day she made a random picture website by herself which includes $$$n$$$ pictures.When Nauuo visits the website, she sees exactly one picture. The website does not display each picture with equal probability. The $$$i$$$-th picture has a non-negative weight $$$w_i$$$, and the probability of the $$$i$$$-th picture being displayed is $$$\\frac{w_i}{\\sum_{j=1}^nw_j}$$$. That is to say, the probability of a picture to be displayed is proportional to its weight.However, Nauuo discovered that some pictures she does not like were displayed too often. To solve this problem, she came up with a great idea: when she saw a picture she likes, she would add $$$1$$$ to its weight; otherwise, she would subtract $$$1$$$ from its weight.Nauuo will visit the website $$$m$$$ times. She wants to know the expected weight of each picture after all the $$$m$$$ visits modulo $$$998244353$$$. Can you help her?The expected weight of the $$$i$$$-th picture can be denoted by $$$\\frac {q_i} {p_i}$$$ where $$$\\gcd(p_i,q_i)=1$$$, you need to print an integer $$$r_i$$$ satisfying $$$0\\le r_i<998244353$$$ and $$$r_i\\cdot p_i\\equiv q_i\\pmod{998244353}$$$. It can be proved that such $$$r_i$$$ exists and is unique.","input_from":"standard input","output_to":"standard output","time_limit":"4 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers $$$n$$$ and $$$m$$$ ($$$1\\\\le n\\\\le 2\\\\cdot 10^5$$$, $$$1\\\\le m\\\\le 3000$$$) \u2014 the number of pictures and the number of visits to the website.\nThe second line contains $$$n$$$ integers $$$a_1,a_2,\\\\ldots,a_n$$$ ($$$a_i$$$ is either $$$0$$$ or $$$1$$$) \u2014 if $$$a_i=0$$$ , Nauuo does not like the $$$i$$$-th picture; otherwise Nauuo likes the $$$i$$$-th picture. It is guaranteed that there is at least one picture which Nauuo likes.\nThe third line contains $$$n$$$ positive integers $$$w_1,w_2,\\\\ldots,w_n$$$ ($$$w_i \\\\geq 1$$$) \u2014 the initial weights of the pictures. It is guaranteed that the sum of all the initial weights does not exceed $$$998244352-m$$$.\n","output_spec":"The output contains $$$n$$$ integers $$$r_1,r_2,\\\\ldots,r_n$$$ \u2014 the expected weights modulo $$$998244353$$$.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1172-C2","difficulty":2600,"tags":["dp","probabilities"],"src_uid":"ba9c136f84375cd317f0f8b53e3939c7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    vector<int> w(n);\n    for (int i = 0; i < n; i++) {\n        cin >> w[i];\n    }\n    vector<int> dp(n + 1, 0);\n    dp[0] = 1;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j <= n; j++) {\n            if (j - w[i] >= 0) {\n                dp[j] = (dp[j] + dp[j - w[i]]) % 998244353;\n            }\n        }\n    }\n    vector<int> ans(n);\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            ans[i] = dp[w[i] + m];\n        } else {\n            ans[i] = dp[w[i] - m];\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        cout << ans[i] << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = list(map(int, input().split()))\nw = list(map(int, input().split()))\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b \/\/ gcd(a, b)\n\ndef modinv(a, m):\n    b = m\n    u = 1\n    v = 0\n    while b:\n        t = a \/\/ b\n        a -= t * b\n        u -= t * v\n        b, a, u, v = a, b, u, v\n    return u % m\n\ndef solve(a, w, m):\n    ans = [0] * n\n    for i in range(n):\n        if a[i]:\n            ans[i] = w[i] + m\n        else:\n            ans[i] = w[i] - m\n    ans = [ans[i] % 998244353 for i in range(n)]\n    ans = [ans[i] * modinv(m, 998244353) % 998244353 for i in range(n)]\n    return ans\n\nprint(*solve(a, w, m))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int w[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &w[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += w[i];\n    }\n    int ans[n];\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            ans[i] = (w[i] + m) % 998244353;\n        } else {\n            ans[i] = (w[i] - m) % 998244353;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        printf(\" %d \", ans[i]);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Nauuo\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n, m;\n            string[] s = Console.ReadLine().Split(' ');\n            n = int.Parse(s[0]);\n            m = int.Parse(s[1]);\n            int[] a = new int[n];\n            s = Console.ReadLine().Split(' ');\n            for (int i = 0; i < n; i++)\n            {\n                a[i] = int.Parse(s[i]);\n            }\n            s = Console.ReadLine().Split(' ');\n            int[] w = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                w[i] = int.Parse(s[i]);\n            }\n            int[] dp = new int[n];\n            dp[0] = w[0];\n            for (int i = 1; i < n; i++)\n            {\n                dp[i] = (dp[i - 1] + w[i]) % 998244353;\n            }\n            int[] ans = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                if (a[i] == 1)\n                {\n                    ans[i] = dp[i] + m;\n                }\n                else\n                {\n                    ans[i] = dp[i] - m;\n                }\n            }\n            for (int i = 0; i < n; i++)\n            {\n                Console.WriteLine(ans[i]);\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\nw = gets.split.map(&:to_i)\n\nans = []\n\nfor i in 0..n-1\n  if a[i] == 1\n    ans.push(w[i] + m)\n  else\n    ans.push(w[i] - m)\n  end\nend\n\nans.sort!\n\nfor i in 0..n-1\n  print ans[i] % 998244353, \" \"\nend\nputs \"\"\"}","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\/big\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scan(&n, &m)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\tw := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&w[i])\n\t}\n\tsum := big.NewInt(0)\n\tfor i := 0; i < n; i++ {\n\t\tsum.Add(sum, big.NewInt(int64(w[i])))\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] == 1 {\n\t\t\tfmt.Println(sum.Add(sum, big.NewInt(int64(m))))\n\t\t} else {\n\t\t\tfmt.Println(sum.Sub(sum, big.NewInt(int64(m))))\n\t\t}\n\t}\n}\n\"}]}","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }\n    val w = readLine().split(\" \").map { it.toInt() }\n    val s = w.sum()\n    val t = m + s\n    val dp = Array(n) { IntArray(t + 1) }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..t) {\n            dp[i][j] = dp[i - 1][j]\n            if (j - w[i - 1] >= 0) {\n                dp[i][j] += dp[i - 1][j - w[i - 1]]\n            }\n        }\n    }\n    val ans = Array(n) { 0 }\n    for (i in 0..n) {\n        for (j in 0..t) {\n            if (dp[i][j] > 0) {\n                ans[i] += dp[i][j] * (j + 1) * (j + 1) % 998244353\n            }\n        }\n    }\n    for (i in 0..n) {\n        if (a[i] == 1) {\n            ans[i] += m\n        } else {\n            ans[i] -= m\n        }\n    }\n    for (i in 0..n) {\n        println(ans[i] % 998244353)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$n, $m = map(int, fgets(STDIN).split(' '));\n$a = array_map(int, fgets(STDIN).split(' '));\n$w = array_map(int, fgets(STDIN).split(' '));\n$sum = array_sum($w);\n$ans = array_fill(0, $n, 0);\nfor ($i = 0; $i < $n; $i++) {\n    if ($a[$i] == 1) {\n        $ans[$i] = ($w[$i] + $m) % 998244353;\n    } else {\n        $ans[$i] = ($w[$i] - $m) % 998244353;\n    }\n}\nfor ($i = 0; $i < $n; $i++) {\n    echo $ans[$i] . ' ';\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.math;\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n];\n    int w[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &w[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += w[i];\n    }\n    int s = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            s += w[i];\n        }\n    }\n    int t = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 0) {\n            t += w[i];\n        }\n    }\n    int p = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            p += m;\n        }\n    }\n    int q = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 0) {\n            q += m;\n        }\n    }\n    int r = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            r += s;\n        }\n    }\n    int g = gcd(p, q);\n    p \/= g;\n    q \/= g;\n    int ans[n];\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            ans[i] = (r + (q * (sum - s))) % 998244353;\n        } else {\n            ans[i] = (r + (p * (sum - t))) % 998244353;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        printf(\" %d \", ans[i]);\n    }\n    return 0;\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\nmy @w;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@w = split(\/ \/, $line);\n\nmy $sum = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    $sum += $w[$i];\n}\n\nmy $mod = 998244353;\n\nmy @ans;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] == 1) {\n        $ans[$i] = ($w[$i] + $m) % $mod;\n    } else {\n        $ans[$i] = ($w[$i] - $m) % $mod;\n    }\n}\n\nfor (my $i = 0; $i < $n; $i++) {\n    print $ans[$i] . \"\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\nuse std::io::prelude::*;\nuse std::collections::HashMap;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n, m = (0, 0);\n    stdin.read_line(&mut n).unwrap();\n    stdin.read_line(&mut m).unwrap();\n\n    let mut a = vec![0; n];\n    for i in 0..n {\n        stdin.read_line(&mut a[i]).unwrap();\n    }\n\n    let mut w = vec![0; n];\n    for i in 0..n {\n        stdin.read_line(&mut w[i]).unwrap();\n    }\n\n    let mut dp = HashMap::new();\n    let mut dp2 = HashMap::new();\n\n    for i in 0..n {\n        if a[i] == 1 {\n            dp.insert(w[i], 1);\n        } else {\n            dp.insert(w[i], -1);\n        }\n    }\n\n    for i in 0..n {\n        if a[i] == 1 {\n            dp2.insert(w[i], 0);\n        } else {\n            dp2.insert(w[i], 1);\n        }\n    }\n\n    let mut ans = vec![0; n];\n\n    for i in 0..n {\n        let mut sum = 0;\n        for (k, v) in dp.iter() {\n            sum += v * (k - w[i]) * m;\n        }\n        ans[i] = sum % 998244353;\n    }\n\n    for i in 0..n {\n        let mut sum = 0;\n        for (k, v) in dp2.iter() {\n            sum += v * (k - w[i]) * m;\n        }\n        ans[i] = (ans[i] + sum) % 998244353;\n    }\n\n    for i in 0..n {\n        stdout.write_fmt(format_args!(\"{}\", ans[i])).unwrap();\n        stdout.write_fmt(format_args!(\"\\n\")).unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"B. Very Interesting Game","description":"In a very ancient country the following game was popular. Two people play the game. Initially first player writes a string s1, consisting of exactly nine digits and representing a number that does not exceed a. After that second player looks at s1 and writes a string s2, consisting of exactly nine digits and representing a number that does not exceed b. Here a and b are some given constants, s1 and s2 are chosen by the players. The strings are allowed to contain leading zeroes.If a number obtained by the concatenation (joining together) of strings s1 and s2 is divisible by mod, then the second player wins. Otherwise the first player wins. You are given numbers a, b, mod. Your task is to determine who wins if both players play in the optimal manner. If the first player wins, you are also required to find the lexicographically minimum winning move.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three integers a, b, mod (0\u2264a,b\u226410^9, 1\u2264mod\u226410^7).\n","output_spec":"If the first player wins, print \"1\" and the lexicographically minimum string s1 he has to write to win. If the second player wins, print the single number \"2\".\n","notes":"The lexical comparison of strings is performed by the < operator in modern programming languages. String x is lexicographically less than string y if exists such i (1\u2264i\u22649), that xi<yi, and for any j (1\u2264j<i) xj=yj. These strings always have length 9.\n","sample_inputs":["1 10 7\n","4 0 9\n"],"sample_outputs":["2\n","1 000000001\n"],"id":"117-B","difficulty":1800,"tags":["brute+force","number+theory"],"src_uid":"8b6f633802293202531264446d33fee5","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int a, b, mod;\n    cin >> a >> b >> mod;\n    if (a % mod == 0) {\n        cout << \"2\\n\";\n    } else {\n        cout << \"1 \";\n        for (int i = 0; i < 9; i++) {\n            cout << (a % 10);\n            a \/= 10;\n        }\n        cout << \"\\n\";\n    }\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int mod = sc.nextInt();\n\n        int[] dp = new int[1000001];\n        dp[0] = 1;\n        for (int i = 1; i <= 1000000; i++) {\n            for (int j = 0; j <= 9; j++) {\n                if (i - j >= 0 && (i - j) % mod == 0) {\n                    dp[i] = Math.max(dp[i], dp[i - j] + 1);\n                }\n            }\n        }\n\n        if (dp[a] > dp[b]) {\n            System.out.println(\"1\");\n            System.out.println(String.format(\"%09d\", a));\n        } else {\n            System.out.println(\"2\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,b,mod=map(int,input().split())\nif a%mod==0:\n    print(2)\nelse:\n    print(1,end=' ')\n    print('0'*(9-len(str(a%mod)))+str(a%mod))\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int a = int.Parse(input[0]);\n            int b = int.Parse(input[1]);\n            int mod = int.Parse(input[2]);\n\n            int[] aa = new int[9];\n            int[] bb = new int[9];\n\n            for (int i = 0; i < 9; i++)\n            {\n                aa[i] = a % 10;\n                a \/= 10;\n            }\n\n            for (int i = 0; i < 9; i++)\n            {\n                bb[i] = b % 10;\n                b \/= 10;\n            }\n\n            int i = 0;\n            int j = 0;\n\n            while (i < 9 && j < 9)\n            {\n                if (aa[i] < bb[j])\n                {\n                    Console.WriteLine(\"1 00000000\" + aa[i]);\n                    return;\n                }\n                else if (aa[i] > bb[j])\n                {\n                    Console.WriteLine(\"2\");\n                    return;\n                }\n                else\n                {\n                    i++;\n                    j++;\n                }\n            }\n\n            if (i < 9)\n            {\n                Console.WriteLine(\"1 00000000\" + aa[i]);\n            }\n            else\n            {\n                Console.WriteLine(\"2\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b,mod=map(int,input().split())\nif a%mod==0:\n    print(2)\nelse:\n    print(1,'0'*(9-len(str(a%mod)))+str(a%mod))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Game;\nuses SysUtils;\nvar\n  a, b, mod, i, j, k, n, m, s1, s2: Integer;\nbegin\n  Readln(a, b, mod);\n  if (a mod mod = 0) and (b mod mod = 0) then\n    Writeln('2')\n  else begin\n    n := 0;\n    for i := 1 to 9 do\n      if (a mod 10 = 0) and (b mod 10 = 0) then\n        n := n + 1;\n    s1 := '';\n    for i := 1 to n do\n      s1 := s1 + '0';\n    for i := n + 1 to 9 do\n      if (a mod 10 <> 0) then\n        s1 := s1 + IntToStr(a mod 10);\n    for i := 1 to 9 do\n      if (b mod 10 <> 0) then\n        s2 := s2 + IntToStr(b mod 10);\n    Writeln('1 ', s1);\n  end;\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\/big\"\n)\n\nfunc main() {\n\tvar a, b, mod int\n\tfmt.Scan(&a, &b, &mod)\n\tif a%mod == 0 {\n\t\tfmt.Println(\"2\")\n\t} else {\n\t\tfmt.Println(\"1\")\n\t\tfmt.Println(fmt.Sprintf(\"%09d\", a%mod))\n\t}\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().split(' ');\nconst a = parseInt(input[0]);\nconst b = parseInt(input[1]);\nconst mod = parseInt(input[2]);\n\nconst s1 = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\nconst s2 = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n\nconst s1_min = s1.sort((a, b) => a - b)[0];\nconst s2_min = s2.sort((a, b) => a - b)[0];\n\nconst s1_max = s1.sort((a, b) => b - a)[0];\nconst s2_max = s2.sort((a, b) => b - a)[0];\n\nconst s1_mod = (a * s1_min + b * s2_min) % mod;\nconst s2_mod = (a * s1_max + b * s2_max) % mod;\n\nif (s1_mod == 0) {\n  console.log('2');\n} else {\n  console.log('1');\n  console.log(s1_min);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (a, b, mod) = readLine().split(\" \").map { it.toInt() }\n    val s1 = if (a % mod == 0) \"0\" else \"1\"\n    val s2 = if (b % mod == 0) \"0\" else \"1\"\n    val s = s1 + s2\n    val m = s.toLong() % mod\n    if (m == 0L) {\n        println(\"2\")\n    } else {\n        println(\"1\")\n        println(s)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a, $b, $mod = explode(' ', trim(fgets(STDIN)));\n$a = intval($a);\n$b = intval($b);\n$mod = intval($mod);\n$ans = 0;\nfor ($i = 0; $i < 9; $i++) {\n    if ($a % 10 == 0) {\n        $ans = 1;\n        break;\n    }\n    $a = $a - $a % 10;\n    $a = $a + $mod;\n}\nif ($ans == 1) {\n    echo '1 ';\n    for ($i = 0; $i < 9; $i++) {\n        echo '0';\n    }\n    echo \"\\n\";\n} else {\n    echo '2';\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int[9] a, b;\n    int mod;\n    scanf(\" %d %d %d \", &a[0], &b[0], &mod);\n    int i;\n    for (i = 1; i < 9; i++) {\n        a[i] = a[i - 1] * 10;\n        b[i] = b[i - 1] * 10;\n    }\n    int m = 0;\n    for (i = 0; i < 9; i++) {\n        if (a[i] % mod == 0) {\n            m = 1;\n            break;\n        }\n    }\n    if (m == 1) {\n        printf(\" 2\\n\");\n    } else {\n        printf(\" 1 \");\n        for (i = 0; i < 9; i++) {\n            printf(\" %d \", a[i] % mod);\n        }\n        printf(\"\\n\");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $a, $b, $mod;\n\nchomp(my $line = <STDIN>);\n\n($a, $b, $mod) = split(\/ \/, $line);\n\nmy $ans = 0;\n\nif ($a % $mod == 0) {\n    print \"2\\n\";\n} else {\n    print \"1 \";\n    for (my $i = 0; $i < 9; $i++) {\n        if ($a % 10 == 0) {\n            print \"0\";\n        } else {\n            print $a % 10;\n        }\n        $a = $a \/ 10;\n    }\n    print \"\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a: u64 = 0;\n    let mut b: u64 = 0;\n    let mut mod_: u64 = 0;\n    for i in 0..9 {\n        let c: char = line.chars().nth(i).unwrap();\n        if i == 0 {\n            a = a * 10 + c.to_digit(10).unwrap();\n        } else {\n            b = b * 10 + c.to_digit(10).unwrap();\n        }\n    }\n    mod_ = line.chars().nth(9).unwrap().to_digit(10).unwrap();\n    if a % mod_ == 0 {\n        println!(\"2\");\n    } else {\n        println!(\"1 000000001\");\n    }\n}\n\"\"\"}]"}
{"title":"C. Fancy Number","description":"A car number in Berland consists of exactly n digits. A number is called beautiful if it has at least k equal digits. Vasya wants to change the digits in his car's number so that the number became beautiful. To replace one of n digits Vasya has to pay the sum of money, equal to the absolute difference between the old digit and the new one.Help Vasya: find the minimum sum of money he should pay to make the number of his car beautiful. You should also find the resulting beautiful number. If there are several such numbers, then print the lexicographically minimum one.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers n and k (2\u2264n\u226410^4,2\u2264k\u2264n) which represent how many digits the number has and how many equal digits a beautiful number should have. The second line consists of n digits. It describes the old number of Vasya's car. It is guaranteed that the number contains no spaces and only contains digits.\n","output_spec":"On the first line print the minimum sum of money Vasya needs to change the number. On the second line print the car's new number. If there are several solutions, print the lexicographically minimum one.\n","notes":"In the first sample replacing the second digit with an \"8\" costs |9-8|=1. Replacing the fifth digit with an \"8\" costs the same. Replacing the sixth digit costs |6-8|=2. As a result, Vasya will pay 1+1+2=4 for a beautiful number \"888188\".\nThe lexicographical comparison of strings is performed by the < operator in modern programming languages. The string x is lexicographically smaller than the string y, if there exists such i (1\u2264i\u2264n), that xi<yi, and for any j (1\u2264j<i) xj=yj. The strings compared in this problem will always have the length n.\n","sample_inputs":["6 5\n898196\n","3 2\n533\n","10 6\n0001112223\n"],"sample_outputs":["4\n888188\n","0\n533\n","3\n0000002223\n"],"id":"118-C","difficulty":1900,"tags":["brute+force","greedy","sortings","strings"],"src_uid":"cb082cbe9b34a45da851b6764bbc30c3","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    string s;\n    cin >> s;\n    int ans = 0;\n    int cnt = 0;\n    int mn = 10;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == s[i + 1]) {\n            cnt++;\n        } else {\n            if (cnt >= k) {\n                ans += cnt - k;\n            } else {\n                ans += cnt;\n            }\n            cnt = 1;\n        }\n        mn = min(mn, s[i] - '0');\n    }\n    if (cnt >= k) {\n        ans += cnt - k;\n    } else {\n        ans += cnt;\n    }\n    cout << ans << endl;\n    string res = \"\";\n    for (int i = 0; i < n; i++) {\n        res += '0' + (s[i] - mn);\n    }\n    sort(res.begin(), res.end());\n    cout << res << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int k = scanner.nextInt();\n        String s = scanner.next();\n        int[] count = new int[10];\n        for (int i = 0; i < n; i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        int min = Integer.MAX_VALUE;\n        String ans = \"\";\n        for (int i = 0; i < 10; i++) {\n            if (count[i] >= k) {\n                int cost = 0;\n                for (int j = 0; j < n; j++) {\n                    if (s.charAt(j) != i + '0') {\n                        cost += Math.abs(s.charAt(j) - i);\n                    }\n                }\n                if (cost < min) {\n                    min = cost;\n                    ans = i + \"\";\n                }\n            }\n        }\n        System.out.println(min);\n        System.out.println(ans.repeat(n));\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\ns = input()\n\nans = 0\nfor i in range(n):\n    if s[i] != s[0]:\n        ans += abs(s[i] - s[0])\n\nprint(ans)\nprint(s[:k] * (n \/\/ k) + s[k:][:n % k])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, k, i, j, min = 1000000000, ans = 0;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (a[i] == a[j]) {\n                int s = 0;\n                for (int k = 0; k < n; k++) {\n                    if (k != i && k != j) {\n                        s += abs(a[k] - a[i]);\n                    }\n                }\n                if (s < min) {\n                    min = s;\n                    ans = a[i];\n                }\n            }\n        }\n    }\n    printf(\" %d\\n\", min);\n    for (i = 0; i < n; i++) {\n        if (i != i && i != j) {\n            printf(\" %d \", ans);\n        } else {\n            printf(\" %d \", a[i]);\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a = Console.ReadLine().Split('');\n        var m = new int[10];\n        for (int i = 0; i < n; i++)\n        {\n            m[int.Parse(a[i])]++;\n        }\n        var ans = 0;\n        var ansStr = \"\";\n        for (int i = 0; i < 10; i++)\n        {\n            if (m[i] >= k)\n            {\n                ans += m[i] - k;\n                ansStr += i.ToString().Repeat(k);\n            }\n        }\n        for (int i = 0; i < n; i++)\n        {\n            if (ansStr[i] == '0')\n            {\n                var min = int.MaxValue;\n                var minI = -1;\n                for (int j = 0; j < 10; j++)\n                {\n                    if (m[j] > 0 && j != i && Math.Abs(j - int.Parse(a[i])) < min)\n                    {\n                        min = Math.Abs(j - int.Parse(a[i]));\n                        minI = j;\n                    }\n                }\n                if (minI != -1)\n                {\n                    ans += min;\n                    ansStr = ansStr.Substring(0, i) + minI.ToString() + ansStr.Substring(i + 1);\n                }\n            }\n        }\n        Console.WriteLine(ans);\n        Console.WriteLine(ansStr);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\na = gets.chomp.split('')\n\nans = 0\nfor i in 0..n-1\n    if a.count(a[i]) >= k\n        next\n    end\n    ans += (10 - a[i].to_i).abs\n    a[i] = '9'\nend\n\nputs ans\nputs a.join('')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram beautiful_number;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j, m, s, t, a, b, c, d, e, f, g, h, min, min_s, min_t: integer;\n  a1, a2, a3, a4, a5, a6, a7, a8, a9, a10: array[0..9] of integer;\n  b1, b2, b3, b4, b5, b6, b7, b8, b9, b10: array[0..9] of integer;\n\nbegin\n  readln(n, k);\n  readln(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);\n\n  for i := 1 to 9 do\n    a[i] := 0;\n\n  for i := 1 to n do\n    a[a1[i]] := a[a1[i]] + 1;\n\n  for i := 1 to 9 do\n    if a[i] >= k then\n      begin\n        min := 0;\n        for j := 1 to 9 do\n          if a[j] < k then\n            min := min + (k - a[j]);\n\n        min_s := 0;\n        min_t := 0;\n        for j := 1 to 9 do\n          if a[j] < k then\n            begin\n              min_s := min_s + (a[j] * j);\n              min_t := min_t + (k - a[j]) * j;\n            end;\n\n        if min_s < min_t then\n          begin\n            min := min_s;\n            s := 1;\n            t := 0;\n          end\n        else\n          begin\n            min := min_t;\n            s := 0;\n            t := 1;\n          end;\n\n        for j := 1 to 9 do\n          if a[j] < k then\n            begin\n              if s = 1 then\n                a1[j] := j;\n              if t = 1 then\n                a2[j] := j;\n            end;\n      end;\n\n  for i := 1 to 9 do\n    if a[i] < k then\n      begin\n        min := min + (k - a[i]);\n        for j := 1 to 9 do\n          if a[j] < k then\n            begin\n              if a[j] > a[i] then\n                a1[j] := j;\n              if a[j] < a[i] then\n                a2[j] := j;\n            end;\n      end;\n\n  writeln(min);\n  writeln(a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9]);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d \", &n, &k)\n\ts := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &s[i])\n\t}\n\tans := math.MaxInt32\n\tfor i := 0; i < n; i++ {\n\t\tfor j := i + 1; j < n; j++ {\n\t\t\tif s[i] == s[j] {\n\t\t\t\tfor k := 0; k < n; k++ {\n\t\t\t\t\tif k != i && k != j {\n\t\t\t\t\t\ts[k] = s[i]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif len(set(s)) >= k {\n\t\t\t\t\tans = min(ans, sum(s))\n\t\t\t\t}\n\t\t\t\tfor k := 0; k < n; k++ {\n\t\t\t\t\tif k != i && k != j {\n\t\t\t\t\t\ts[k] = s[k] - 1\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n\tfmt.Println(join(s))\n}\n\nfunc sum(s []int) int {\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tans += abs(s[i], s[0])\n\t}\n\treturn ans\n}\n\nfunc abs(a, b int) int {\n\tif a > b {\n\t\treturn a - b\n\t}\n\treturn b - a\n}\n\nfunc set(s []int) map[int]int {\n\tm := make(map[int]int)\n\tfor i := 0; i < n; i++ {\n\t\tm[s[i]]++\n\t}\n\treturn m\n}\n\nfunc join(s []int) string {\n\tans := \"\"\n\tfor i := 0; i < n; i++ {\n\t\tans += fmt.Sprintf(\"%d\", s[i])\n\t}\n\treturn ans\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst k = Number(input[0].split(' ')[1]);\nconst num = input[1];\nconst arr = num.split('');\nconst ans = [];\nconst min = 1000000000000000000;\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n        if (i != j) {\n            const temp = arr.map((x) => x);\n            temp[i] = temp[j];\n            const tempStr = temp.join('');\n            const tempSum = 0;\n            for (let l = 0; l < n; l++) {\n                if (tempStr[l] != tempStr[0]) {\n                    tempSum += Math.abs(tempStr[l] - tempStr[0]);\n                }\n            }\n            if (tempSum < min && tempStr.split('').filter((x) => x == tempStr[0]).length >= k) {\n                min = tempSum;\n                ans = [tempStr];\n            } else if (tempSum == min && tempStr.split('').filter((x) => x == tempStr[0]).length >= k) {\n                ans.push(tempStr);\n            }\n        }\n    }\n}\nconsole.log(min);\nconsole.log(ans[0]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val nums = readLine().toCharArray()\n    val numsMap = HashMap<Char, Int>()\n    nums.forEach { numsMap[it] = numsMap.getOrDefault(it, 0) + 1 }\n    val maxNum = numsMap.maxByOrNull { it.value }!!.value\n    val minCost = Int.MAX_VALUE\n    val minNum = \"\"\n    for (i in 0 until n) {\n        val num = nums[i]\n        val cost = maxNum - numsMap[num]\n        if (cost < minCost) {\n            minCost = cost\n            minNum = nums.take(i) + num.repeat(k) + nums.drop(i + 1)\n        }\n    }\n    println(minCost)\n    println(minNum)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$k = (int)trim(fgets(STDIN));\n$a = str_split(trim(fgets(STDIN)));\n$b = array_count_values($a);\n$min = PHP_INT_MAX;\n$ans = '';\nfor ($i = 0; $i < $n; $i++) {\n    if ($b[$a[$i]] >= $k) {\n        continue;\n    }\n    $cost = 0;\n    for ($j = 0; $j < $n; $j++) {\n        if ($a[$j] != $a[$i]) {\n            $cost += abs($a[$j] - $a[$i]);\n        }\n    }\n    if ($cost < $min) {\n        $min = $cost;\n        $ans = str_repeat($a[$i], $n);\n    }\n}\necho $min . PHP_EOL;\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    string s;\n    scanf(\" %s \", s);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        a[i] = s[i] - '0';\n    }\n    int ans = 0;\n    int min = 10;\n    int min_i = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != a[0]) {\n            ans += abs(a[i] - a[0]);\n        }\n        if (a[i] < min) {\n            min = a[i];\n            min_i = i;\n        }\n    }\n    int b[n];\n    for (int i = 0; i < n; i++) {\n        b[i] = a[i];\n    }\n    for (int i = 0; i < n; i++) {\n        if (i != min_i) {\n            b[i] = min;\n        }\n    }\n    string t = \"\";\n    for (int i = 0; i < n; i++) {\n        t += b[i] + '0';\n    }\n    printf(\" %d\\n\", ans);\n    printf(\" %s\\n\", t);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(' ', $line);\nchomp(my $line = <STDIN>);\n@a = split(' ', $line);\n\nmy $min = 0;\nmy $ans = '';\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $d = $a[$i];\n    my $j = $i + 1;\n    while ($j < $n && $a[$j] == $d) {\n        $j++;\n    }\n    if ($j - $i >= $k) {\n        $min += $k * (10 - $d);\n        $ans .= $d;\n        for (my $l = $i + 1; $l < $j; $l++) {\n            $ans .= '0';\n        }\n        $i = $j - 1;\n    } else {\n        $min += ($j - $i) * (10 - $d);\n        $ans .= $d;\n    }\n}\n\nprint \"$min\\n\";\nprint \"$ans\\n\";\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = n_k[0];\n    let k = n_k[1];\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut nums: Vec<usize> = line.chars().map(|x| x.to_digit(10).unwrap()).collect();\n    let mut ans = 0;\n    let mut count = 0;\n    for i in 0..n {\n        if nums[i] == nums[i + 1] {\n            count += 1;\n        } else {\n            if count >= k {\n                ans += count - k;\n            } else {\n                ans += count;\n            }\n            count = 1;\n        }\n    }\n    if count >= k {\n        ans += count - k;\n    } else {\n        ans += count;\n    }\n    println!(\"{}\", ans);\n    let mut res = String::new();\n    for i in 0..n {\n        if i == 0 {\n            res.push_str(&nums[i].to_string());\n        } else {\n            if nums[i] == nums[i - 1] {\n                continue;\n            }\n            res.push_str(&nums[i].to_string());\n        }\n    }\n    println!(\"{}\", res);\n}\n\"\"\"}]"}
{"title":"B. Jumping Jack","description":"Jack is working on his jumping skills recently. Currently he's located at point zero of the number line. He would like to get to the point x. In order to train, he has decided that he'll first jump by only one unit, and each subsequent jump will be exactly one longer than the previous one. He can go either left or right with each jump. He wonders how many jumps he needs to reach x.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The input data consists of only one integer x (-10^9\u2264x\u226410^9).\n","output_spec":"Output the minimal number of jumps that Jack requires to reach x.\n","notes":null,"sample_inputs":["2\n","6\n","0\n"],"sample_outputs":["3\n","3\n","0\n"],"id":"11-B","difficulty":1600,"tags":["math"],"src_uid":"18644c9df41b9960594fdca27f1d2fec","C++":"","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class JumpingJack {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x = sc.nextInt();\n        int jumps = 0;\n        while (x != 0) {\n            if (x > 0) {\n                x -= 2;\n            } else {\n                x += 2;\n            }\n            jumps++;\n        }\n        System.out.println(jumps);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nx = int(input())\n\ndef jump(x):\n    if x == 0:\n        return 0\n    elif x < 0:\n        return jump(-x) + 1\n    else:\n        return jump(x - 1) + 2\n\nprint(jump(x))\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace JumpingJack\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int x = int.Parse(Console.ReadLine());\n            int jumps = 0;\n            while (x != 0)\n            {\n                if (x > 0)\n                {\n                    x -= 2;\n                    jumps++;\n                }\n                else\n                {\n                    x += 2;\n                    jumps++;\n                }\n            }\n            Console.WriteLine(jumps);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\ndef jump(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return 1 + jump(n - 2)\n\nprint(jump(n))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program JackJump;\nuses SysUtils;\nvar\n  x: Int64;\nbegin\n  Readln(x);\n  if x < 0 then\n    Writeln(-(-x + 1) div 2)\n  else\n    Writeln(x div 2);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var x int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n    var ans int\\n    if x < 0 {\\n        ans = -x\\n        x = -x\\n    }\\n    for x > 1 {\\n        if x % 2 == 0 {\\n            x \/= 2\\n            ans++\\n        } else {\\n            x = x - 1\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const input = require('fs').readFileSync('\/dev\/stdin').toString().trim();\\nconst x = parseInt(input);\\nconsole.log(Math.ceil(Math.abs(x) \/ 2));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"import kotlin.math.abs\\nfun main() {\\n    val x = readLine()!!.toInt()\\n    println(abs(x) + 1)\\n}\\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$x = (int)trim(fgets(STDIN));\\n\\n$jumps = 0;\\n\\nwhile ($x != 0) {\\n    if ($x > 0) {\\n        $x -= 2;\\n    } else {\\n        $x += 2;\\n    }\\n    $jumps++;\\n}\\n\\necho $jumps;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int x;\n    scanf(\" %d \", &x);\n    int n = 1;\n    while (x > 0) {\n        x -= n;\n        n++;\n    }\n    printf(\" %d \", n);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $x = <STDIN>;\nmy $jumps = 0;\n\nwhile ($x != 0) {\n    if ($x > 0) {\n        $x -= 1;\n        $jumps++;\n    } else {\n        $x += 1;\n        $jumps++;\n    }\n}\n\nprint $jumps;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let mut x = read!();\n    let mut ans = 0;\n    while x != 0 {\n        if x < 0 {\n            x += 1;\n        } else {\n            x -= 1;\n        }\n        ans += 1;\n    }\n    println!(\"{}\", ans);\n}\"}]"}
{"title":"D. A Simple Task","description":"Given a simple graph, output the number of simple cycles in it. A simple cycle is a cycle with no repeated vertices or edges.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of input contains two integers n and m (1\u2264n\u226419, 0\u2264m) \u2013 respectively the number of vertices and edges of the graph. Each of the subsequent m lines contains two integers a and b, (1\u2264a,b\u2264n, a\u2260b) indicating that vertices a and b are connected by an undirected edge. There is no more than one edge connecting any pair of vertices.\n","output_spec":"Output the number of cycles in the given graph.\n","notes":"The example graph is a clique and contains four cycles of length 3 and three cycles of length 4.\n","sample_inputs":["4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n"],"sample_outputs":["7\n"],"id":"11-D","difficulty":2200,"tags":["bitmasks","dp","graphs"],"src_uid":"ce5cc8512359701696dba1b254c6afda","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n);\n    for (int i = 0; i < m; i++) {\n        int a, b;\n        cin >> a >> b;\n        g[a - 1].push_back(b - 1);\n        g[b - 1].push_back(a - 1);\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        vector<bool> visited(n, false);\n        int cnt = 0;\n        for (int j = 0; j < g[i].size(); j++) {\n            if (!visited[g[i][j]]) {\n                cnt++;\n                visited[g[i][j]] = true;\n                for (int k = 0; k < g[g[i][j]].size(); k++) {\n                    if (g[g[i][j]][k] == i) {\n                        ans += cnt;\n                    }\n                }\n            }\n        }\n    }\n\n    cout << ans << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[][] graph = new int[n][n];\n        for (int i = 0; i < m; i++) {\n            int a = sc.nextInt() - 1;\n            int b = sc.nextInt() - 1;\n            graph[a][b] = 1;\n            graph[b][a] = 1;\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (graph[i][j] == 1) {\n                    int count = 0;\n                    int k = j;\n                    while (true) {\n                        count++;\n                        k = graph[k][i];\n                        if (k == j) {\n                            ans += count - 1;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a - 1].append(b - 1)\n    graph[b - 1].append(a - 1)\n\n\ndef dfs(v, p, visited):\n    visited[v] = True\n    for u in graph[v]:\n        if u == p:\n            continue\n        if visited[u]:\n            return 1\n        return dfs(u, v, visited) + 1\n\n\nans = 0\nfor i in range(n):\n    visited = [False] * n\n    ans += dfs(i, -1, visited)\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\\n#include <stdlib.h>\\n#define MAXN 20\\nint n, m, a[MAXN], b[MAXN], vis[MAXN], cnt; \\nvoid dfs(int u) { \\n    vis[u] = 1; \\n    for (int i = 0; i < m; i++) { \\n        if (b[i] == u && !vis[a[i]]) { \\n            dfs(a[i]); \\n            cnt++; \\n        } \\n    } \\n} \\nint main() { \\n    scanf(\" %d%d \", &n, &m); \\n    for (int i = 0; i < m; i++) { \\n        scanf(\" %d%d \", &a[i], &b[i]); \\n    } \\n    cnt = 0; \\n    for (int i = 0; i < n; i++) { \\n        if (!vis[i]) { \\n            dfs(i); \\n        } \\n    } \\n    printf(\" %d\\n \", cnt); \\n    return 0; \\n} \"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n, m;\n        int[] a, b;\n        int[] visited;\n        int count = 0;\n\n        \/\/ Read input\n        string[] line = Console.ReadLine().Split(' ');\n        n = int.Parse(line[0]);\n        m = int.Parse(line[1]);\n        a = new int[m];\n        b = new int[m];\n        visited = new int[n];\n\n        \/\/ Read edges\n        for (int i = 0; i < m; i++)\n        {\n            line = Console.ReadLine().Split(' ');\n            a[i] = int.Parse(line[0]);\n            b[i] = int.Parse(line[1]);\n        }\n\n        \/\/ DFS\n        for (int i = 0; i < n; i++)\n        {\n            if (visited[i] == 0)\n            {\n                count += DFS(i, visited);\n            }\n        }\n\n        \/\/ Print output\n        Console.WriteLine(count);\n    }\n\n    static int DFS(int v, int[] visited)\n    {\n        int count = 0;\n        visited[v] = 1;\n\n        for (int i = 0; i < n; i++)\n        {\n            if (visited[i] == 0 && a[v * n + i] == 1)\n            {\n                count += DFS(i, visited);\n            }\n        }\n\n        return count;\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\ngraph = {}\n\n(1..n).each do |i|\n  graph[i] = []\nend\n\n(1..m).each do |i|\n  a, b = gets.split.map(&:to_i)\n  graph[a] << b\n  graph[b] << a\nend\n\ndef dfs(v, visited, path)\n  visited[v] = true\n  path << v\n\n  graph[v].each do |w|\n    next if visited[w]\n\n    dfs(w, visited, path)\n  end\n\n  path.pop\nend\n\nans = 0\n\n(1..n).each do |i|\n  visited = [false] * (n + 1)\n  path = []\n\n  dfs(i, visited, path)\n\n  ans += path.length - 1\nend\n\nputs ans\"","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Cycle;\nuses SysUtils;\n\nconst\n  MAXN = 20;\n\ntype\n  TVertex = 0..MAXN;\n  TEdge = record\n    v1, v2: TVertex;\n  end;\n\nvar\n  n, m, i, j, k, v, w: Integer;\n  a, b: TVertex;\n  G: array[0..MAXN, 0..MAXN] of Boolean;\n  used: array[0..MAXN] of Boolean;\n  ans: Integer;\n\nbegin\n  Readln(n, m);\n  for i := 0 to n - 1 do\n    for j := 0 to n - 1 do\n      G[i, j] := False;\n  for i := 0 to m - 1 do begin\n    Readln(a, b);\n    G[a, b] := True;\n    G[b, a] := True;\n  end;\n  for i := 0 to n - 1 do\n    used[i] := False;\n  ans := 0;\n  for i := 0 to n - 1 do begin\n    if not used[i] then begin\n      used[i] := True;\n      v := i;\n      while not used[w] do begin\n        w := v;\n        for j := 0 to n - 1 do\n          if G[w, j] and not used[j] then begin\n            v := j;\n            used[j] := True;\n          end;\n      end;\n      ans := ans + 1;\n    end;\n  end;\n  Writeln(ans);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    g := make([][]int, n)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &a, &b)\\n        g[a-1] = append(g[a-1], b-1)\\n        g[b-1] = append(g[b-1], a-1)\\n    }\\n    ans := 0\\n    for i := 0; i < n; i++ {\\n        for j := 0; j < len(g[i]); j++ {\\n            for k := 0; k < len(g[g[i][j]]); k++ {\\n                if g[i][j] != g[g[i][j]][k] && g[i][j] != g[g[i][j]][k]-1 && g[i][j] != g[g[i][j]][k]+1 {\\n                    ans++\\n                }\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst m = Number(input[0].split(' ')[1]);\nconst graph = new Map();\nfor (let i = 1; i <= m; i++) {\n    const [a, b] = input[i].split(' ').map(Number);\n    if (!graph.has(a)) {\n        graph.set(a, new Set());\n    }\n    if (!graph.has(b)) {\n        graph.set(b, new Set());\n    }\n    graph.get(a).add(b);\n    graph.get(b).add(a);\n}\nconst visited = new Set();\nconst ans = 0;\nconst dfs = (v) => {\n    visited.add(v);\n    for (const u of graph.get(v)) {\n        if (!visited.has(u)) {\n            dfs(u);\n        } else if (u !== v) {\n            ans++;\n        }\n    }\n};\nfor (const v of graph.keys()) {\n    if (!visited.has(v)) {\n        dfs(v);\n    }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a - 1].add(b - 1)\n        graph[b - 1].add(a - 1)\n    }\n\n    val visited = BooleanArray(n)\n    var ans = 0\n    for (i in 0 until n) {\n        if (!visited[i]) {\n            val stack = Stack<Int>()\n            stack.push(i)\n            visited[i] = true\n            while (stack.isNotEmpty()) {\n                val v = stack.pop()\n                for (u in graph[v]) {\n                    if (!visited[u]) {\n                        stack.push(u)\n                        visited[u] = true\n                    } else if (u != v) {\n                        ans++\n                    }\n                }\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n, $m = explode(' ', trim(fgets(STDIN)));\\n$graph = [];\\nfor ($i = 0; $i < $m; $i++) {\\n    $a, $b = explode(' ', trim(fgets(STDIN)));\\n    $graph[$a][] = $b;\\n    $graph[$b][] = $a;\\n}\\n\\n$count = 0;\\nfunction dfs($v, $visited) {\\n    $visited[$v] = true;\\n    foreach ($graph[$v] as $w) {\\n        if (!$visited[$w]) {\\n            $count++;\\n            dfs($w, $visited);\\n        }\\n    }\\n}\\n\\ndfs(1, []);\\necho $count;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nstruct Edge {\n    int a;\n    int b;\n}\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    auto edges = new Edge[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d \", &edges[i].a, &edges[i].b);\n    }\n\n    auto adj = new int[n];\n    for (int i = 0; i < n; i++) {\n        adj[i] = -1;\n    }\n\n    for (int i = 0; i < m; i++) {\n        adj[edges[i].a] = edges[i].b;\n        adj[edges[i].b] = edges[i].a;\n    }\n\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (adj[i] == -1) {\n            continue;\n        }\n\n        int j = adj[i];\n        int k = adj[j];\n        int cycle = 0;\n        while (k != i) {\n            cycle++;\n            k = adj[k];\n        }\n\n        count += cycle;\n    }\n\n    printf(\" %d\\n \", count);\n\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m;\\n\\nwhile (<>) {\\n    chomp;\\n    my @a = split \/\\s+\/;\\n    $n = $a[0];\\n    $m = $a[1];\\n}\\n\\nmy @adj = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    push @adj, [];\\n}\\n\\nfor (my $i = 0; $i < $m; $i++) {\\n    my $a = $_;\\n    my @a = split \/\\s+\/;\\n    push @{$adj[$a[0]-1]}, $a[1]-1;\\n    push @{$adj[$a[1]-1]}, $a[0]-1;\\n}\\n\\nmy $ans = 0;\\nfor (my $i = 0; $i < $n; $i++) {\\n    my @stack = [$i];\\n    my $visited = [0] x $n;\\n    $visited[$i] = 1;\\n    while (@stack) {\\n        my $v = shift @stack;\\n        for (my $j = 0; $j < @{$adj[$v]}; $j++) {\\n            my $u = $adj[$v][$j];\\n            if (!$visited[$u]) {\\n                push @stack, $u;\\n                $visited[$u] = 1;\\n            }\\n        }\\n    }\\n    $ans += @stack - 1;\\n}\\n\\nprint $ans;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    \/\/ \u8bfb\u53d6\u8f93\u5165\n    let mut n_m = String::new();\n    std::io::stdin().read_line(&mut n_m).unwrap();\n    let mut n_m_vec: Vec<String> = n_m.split_whitespace().map(|s| s.to_string()).collect();\n    let n = n_m_vec[0].parse::<usize>().unwrap();\n    let m = n_m_vec[1].parse::<usize>().unwrap();\n\n    \/\/ \u6784\u5efa\u90bb\u63a5\u8868\n    let mut adj_list: HashMap<usize, Vec<usize>> = HashMap::new();\n    for _ in 0..m {\n        let mut edge = String::new();\n        std::io::stdin().read_line(&mut edge).unwrap();\n        let mut edge_vec: Vec<usize> = edge.split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect();\n        let u = edge_vec[0];\n        let v = edge_vec[1];\n        adj_list.entry(u).or_insert(Vec::new()).push(v);\n        adj_list.entry(v).or_insert(Vec::new()).push(u);\n    }\n\n    \/\/ \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n    let mut visited: Vec<bool> = vec![false; n + 1];\n    let mut count = 0;\n    for i in 1..n + 1 {\n        if !visited[i] {\n            count += dfs(i, &adj_list, &mut visited);\n        }\n    }\n\n    \/\/ \u8f93\u51fa\u7ed3\u679c\n    println!(\"{}\", count);\n}\n\nfn dfs(u: usize, adj_list: &HashMap<usize, Vec<usize>>, visited: &mut Vec<bool>) -> usize {\n    visited[u] = true;\n    let mut count = 1;\n    for v in adj_list.get(&u).unwrap() {\n        if !visited[v] {\n            count += dfs(v, adj_list, visited);\n        }\n    }\n    return count;\n}\n\"\"\"}]"}
{"title":"B1. TV Subscriptions (Easy Version)","description":"The only difference between easy and hard versions is constraints.The BerTV channel every day broadcasts one episode of one of the $$$k$$$ TV shows. You know the schedule for the next $$$n$$$ days: a sequence of integers $$$a_1, a_2, \\dots, a_n$$$ ($$$1 \\le a_i \\le k$$$), where $$$a_i$$$ is the show, the episode of which will be shown in $$$i$$$-th day.The subscription to the show is bought for the entire show (i.e. for all its episodes), for each show the subscription is bought separately.How many minimum subscriptions do you need to buy in order to have the opportunity to watch episodes of purchased shows $$$d$$$ ($$$1 \\le d \\le n$$$) days in a row? In other words, you want to buy the minimum number of TV shows so that there is some segment of $$$d$$$ consecutive days in which all episodes belong to the purchased shows.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer $$$t$$$ ($$$1 \\\\le t \\\\le 100$$$) \u2014 the number of test cases in the input. Then $$$t$$$ test case descriptions follow.\nThe first line of each test case contains three integers $$$n, k$$$ and $$$d$$$ ($$$1 \\\\le n \\\\le 100$$$, $$$1 \\\\le k \\\\le 100$$$, $$$1 \\\\le d \\\\le n$$$). The second line contains $$$n$$$ integers $$$a_1, a_2, \\\\dots, a_n$$$ ($$$1 \\\\le a_i \\\\le k$$$), where $$$a_i$$$ is the show that is broadcasted on the $$$i$$$-th day.\nIt is guaranteed that the sum of the values \u200b\u200bof $$$n$$$ for all test cases in the input does not exceed $$$100$$$.\n","output_spec":"Print $$$t$$$ integers \u2014 the answers to the test cases in the input in the order they follow. The answer to a test case is the minimum number of TV shows for which you need to purchase a subscription so that you can watch episodes of the purchased TV shows on BerTV for $$$d$$$ consecutive days. Please note that it is permissible that you will be able to watch more than $$$d$$$ days in a row.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1225-B1","difficulty":1000,"tags":["implementation"],"src_uid":"56da4ec7cd849c4330d188d8c9bd6094","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; i++) {\n        int n, k, d;\n        cin >> n >> k >> d;\n        vector<int> a(n);\n        for (int j = 0; j < n; j++) {\n            cin >> a[j];\n        }\n        int ans = 0;\n        for (int j = 0; j < n; j++) {\n            int cnt = 1;\n            for (int k = j + 1; k < n; k++) {\n                if (a[k] == a[j]) {\n                    cnt++;\n                } else {\n                    break;\n                }\n            }\n            if (cnt >= d) {\n                ans++;\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        for (int i = 0; i < t; i++) {\n            int n = sc.nextInt();\n            int k = sc.nextInt();\n            int d = sc.nextInt();\n            int[] a = new int[n];\n            for (int j = 0; j < n; j++) {\n                a[j] = sc.nextInt();\n            }\n            int ans = 0;\n            int count = 0;\n            for (int j = 0; j < n; j++) {\n                if (count == d) {\n                    ans++;\n                    count = 0;\n                }\n                if (a[j] != a[j - 1]) {\n                    count++;\n                }\n            }\n            if (count == d) {\n                ans++;\n            }\n            System.out.println(ans);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nt = int(input())\nfor _ in range(t):\n    n, k, d = map(int, input().split())\n    s = list(map(int, input().split()))\n    s.sort()\n    ans = 0\n    i = 0\n    j = 0\n    while i < n:\n        if s[i] == s[j]:\n            j += 1\n        else:\n            ans += 1\n            j = i + 1\n        i += 1\n        if j - i >= d:\n            break\n    print(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int t, n, k, d, i, j, a[100], ans;\n    scanf(\" %d \", &t);\n    for (i = 0; i < t; i++) {\n        scanf(\" %d %d %d \", &n, &k, &d);\n        for (j = 0; j < n; j++) {\n            scanf(\" %d \", &a[j]);\n        }\n        ans = 0;\n        for (j = 0; j < n; j++) {\n            if (a[j] == a[j + d - 1]) {\n                ans++;\n            }\n        }\n        printf(\" %d \", ans);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; i++) {\n        int n, k, d;\n        cin >> n >> k >> d;\n        int a[n];\n        for (int j = 0; j < n; j++) {\n            cin >> a[j];\n        }\n        int ans = 0;\n        int count = 0;\n        for (int j = 0; j < n; j++) {\n            if (count == d) {\n                ans++;\n                count = 0;\n            }\n            if (a[j] != a[j - 1]) {\n                count++;\n            }\n        }\n        if (count == d) {\n            ans++;\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nt = gets.to_i\nfor _ in 1..t do\n  n, k, d = gets.split.map(&:to_i)\n  a = gets.split.map(&:to_i)\n  s = a.uniq.sort\n  ans = 0\n  for i in 0..s.length-1 do\n    ans += (s[i+1]-s[i])\/\/d\n  end\n  puts ans\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  inf = 1000000000;\nvar\n  n, k, d, i, j, t, ans, a: integer;\n  s: array[0..100] of integer;\nbegin\n  readln(t);\n  for i := 1 to t do begin\n    readln(n, k, d);\n    for j := 0 to k do\n      s[j] := 0;\n    for j := 1 to n do begin\n      readln(a);\n      s[a] := s[a] + 1;\n    end;\n    ans := inf;\n    for j := 1 to k do begin\n      if s[j] >= d then\n        ans := min(ans, s[j]);\n    end;\n    writeln(ans);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar t int\n\tfmt.Scan(&t)\n\tfor i := 0; i < t; i++ {\n\t\tvar n, k, d int\n\t\tfmt.Scan(&n, &k, &d)\n\t\ta := make([]int, n)\n\t\tfor j := 0; j < n; j++ {\n\t\t\tfmt.Scan(&a[j])\n\t\t}\n\t\tans := 0\n\t\tfor j := 0; j < n; j++ {\n\t\t\tif a[j] == a[j+d-1] {\n\t\t\t\tans++\n\t\t\t}\n\t\t}\n\t\tfmt.Println(ans)\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nt = int(input())\nfor _ in range(t):\n    n, k, d = map(int, input().split())\n    arr = list(map(int, input().split()))\n    arr.sort()\n    ans = 0\n    i = 0\n    j = 0\n    while i < n:\n        if arr[i] == arr[j]:\n            j += 1\n        else:\n            ans += 1\n            j = i + 1\n        i += 1\n        if j - i >= d:\n            break\n    print(ans)\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val t = readLine().toInt()\n    for (i in 0 until t) {\n        val (n, k, d) = readLine().split(\" \").map { it.toInt() }\n        val a = readLine().split(\" \").map { it.toInt() }\n        val dp = Array(n + 1) { IntArray(k + 1) }\n        for (i in 1..n) {\n            for (j in 1..k) {\n                dp[i][j] = dp[i - 1][j]\n                if (a[i - 1] == j) {\n                    dp[i][j] = Math.max(dp[i][j], dp[i - d][j - 1] + 1)\n                }\n            }\n        }\n        println(dp[n][k])\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$t = intval(fgets(STDIN));\n\nfor ($i = 0; $i < $t; $i++) {\n    $n = intval(fgets(STDIN));\n    $k = intval(fgets(STDIN));\n    $d = intval(fgets(STDIN));\n    $a = explode(\" \", fgets(STDIN));\n\n    $ans = 0;\n    $cnt = 0;\n    for ($j = 0; $j < $n; $j++) {\n        if ($a[$j] == $a[$j - 1]) {\n            $cnt++;\n        } else {\n            $cnt = 1;\n        }\n\n        if ($cnt >= $d) {\n            $ans++;\n        }\n    }\n\n    echo $ans . PHP_EOL;\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int t;\n    scanf(\" %d \", &t);\n    while (t--) {\n        int n, k, d;\n        scanf(\" %d %d %d \", &n, &k, &d);\n        int a[n];\n        for (int i = 0; i < n; i++) {\n            scanf(\" %d \", &a[i]);\n        }\n        int ans = 0;\n        int s = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == s) {\n                s++;\n            } else {\n                s = 1;\n            }\n            if (s >= d) {\n                ans++;\n                s = 0;\n            }\n        }\n        printf(\" %d \", ans);\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $t = <STDIN>;\n\nfor (my $i = 0; $i < $t; $i++) {\n    my @a = split \/ \/, <STDIN>;\n    my $n = $a[0];\n    my $k = $a[1];\n    my $d = $a[2];\n    my @b = split \/ \/, <STDIN>;\n\n    my $ans = 0;\n    my $cur = 0;\n    for (my $j = 0; $j < $n; $j++) {\n        if ($b[$j] != $cur) {\n            $cur = $b[$j];\n            $ans++;\n        }\n    }\n\n    print $ans \/ $d + ($ans % $d > 0 ? 1 : 0);\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut t = String::new();\n    io::stdin().read_line(&mut t).unwrap();\n    let t: usize = t.trim().parse().unwrap();\n    for _ in 0..t {\n        let mut nkd = String::new();\n        io::stdin().read_line(&mut nkd).unwrap();\n        let nkd: Vec<usize> = nkd.trim().split(\" \").map(|x| x.parse().unwrap()).collect();\n        let n = nkd[0];\n        let k = nkd[1];\n        let d = nkd[2];\n        let mut a = String::new();\n        io::stdin().read_line(&mut a).unwrap();\n        let a: Vec<usize> = a.trim().split(\" \").map(|x| x.parse().unwrap()).collect();\n        let mut ans = 0;\n        let mut s = 0;\n        for i in 0..n {\n            if a[i] == s {\n                s += 1;\n            } else {\n                s = 1;\n            }\n            if s >= d {\n                ans += 1;\n            }\n        }\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"B. Lucky Substring","description":"Petya loves lucky numbers. Everybody knows that lucky numbers are positive integers whose decimal representation contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.One day Petya was delivered a string s, containing only digits. He needs to find a string that represents a lucky number without leading zeroes, is not empty, is contained in s as a substring the maximum number of times.Among all the strings for which the three conditions given above are fulfilled, Petya only needs the lexicographically minimum one. Find this string for Petya.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The single line contains a non-empty string s whose length can range from 1 to 50, inclusive. The string only contains digits. The string can contain leading zeroes.\n","output_spec":"In the only line print the answer to Petya's problem. If the sought string does not exist, print \"-1\" (without quotes).\n","notes":"The lexicographical comparison of strings is performed by the < operator in the modern programming languages. String x is lexicographically less than string y either if x is a prefix of y, or exists such i (1\u2264i\u2264min(|x|,|y|)), that xi<yi and for any j (1\u2264j<i) xj=yj. Here |a| denotes the length of string a.\nIn the first sample three conditions are fulfilled for strings \"4\", \"7\" and \"47\". The lexicographically minimum one is \"4\".\nIn the second sample s has no substrings which are lucky numbers.\nIn the third sample the three conditions are only fulfilled for string \"7\".\n","sample_inputs":["047\n","16\n","472747\n"],"sample_outputs":["4\n","-1\n","7\n"],"id":"122-B","difficulty":1000,"tags":["brute+force","implementation"],"src_uid":"639b8b8d0dc42df46b139f0aeb3a7a0a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"s=input()\ns=s.lstrip('0')\nif s=='':\n    print(-1)\nelse:\n    print(min(s,'4','7'))\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.nextLine();\n        int n = s.length();\n        int[] count = new int[10];\n        for (int i = 0; i < n; i++) {\n            count[s.charAt(i) - '0']++;\n        }\n        int max = 0;\n        String ans = \"\";\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > max && (i == 4 || i == 7)) {\n                max = count[i];\n                ans = String.valueOf(i);\n            }\n        }\n        if (max == 0) {\n            System.out.println(\"-1\");\n        } else {\n            System.out.println(ans);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\n\ndef is_lucky(s):\n    for c in s:\n        if c not in '47':\n            return False\n    return True\n\ndef get_lucky_substring(s):\n    for i in range(len(s)):\n        for j in range(i + 1, len(s) + 1):\n            if is_lucky(s[i:j]):\n                return s[i:j]\n    return ''\n\nprint(get_lucky_substring(s))\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string s = Console.ReadLine();\n        string[] s1 = s.Split('0');\n        string min = \"-1\";\n        int max = 0;\n        for (int i = 0; i < s1.Length; i++)\n        {\n            if (s1[i].Contains(\"4\") || s1[i].Contains(\"7\"))\n            {\n                if (s1[i].Length > max)\n                {\n                    max = s1[i].Length;\n                    min = s1[i];\n                }\n            }\n        }\n        Console.WriteLine(min);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\n\ndef is_lucky(s):\n    for i in s:\n        if i not in ['4', '7']:\n            return False\n    return True\n\ndef get_lucky_substring(s):\n    for i in range(len(s)):\n        for j in range(i + 1, len(s) + 1):\n            if is_lucky(s[i:j]):\n                return s[i:j]\n    return -1\n\nprint(get_lucky_substring(s))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  s: string;\n  i, j, k: integer;\n  a: array[0..100000] of boolean;\n\nbegin\n  readln(s);\n  for i := 1 to length(s) do\n    if (s[i] = '4') or (s[i] = '7') then\n      a[i] := true;\n  for i := 1 to length(s) do\n    if a[i] then\n      for j := i to length(s) do\n        if a[j] then\n          for k := i to j do\n            if (s[k] = '4') and (s[k + 1] = '7') then\n              begin\n                writeln(s[i..k + 1]);\n                exit;\n              end;\n  writeln('-1');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var s string\\n    fmt.Scan(&s)\\n    var ans string\\n    var cnt int\\n    for i := 0; i < len(s); i++ {\\n        if s[i] == '4' || s[i] == '7' {\\n            if i == 0 || s[i-1] != s[i] {\\n                var tmp string\\n                tmp += string(s[i])\\n                for j := i + 1; j < len(s); j++ {\\n                    if s[j] == '4' || s[j] == '7' {\\n                        tmp += string(s[j])\\n                    } else {\\n                        break\\n                    }\\n                }\\n                if len(tmp) > len(ans) {\\n                    ans = tmp\\n                    cnt = 1\\n                } else if len(tmp) == len(ans) {\\n                    if tmp < ans {\\n                        ans = tmp\\n                        cnt = 1\\n                    } else if tmp == ans {\\n                        cnt++\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    if cnt == 0 {\\n        fmt.Println(\\\"-1\\\")\\n    } else {\\n        fmt.Println(ans)\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const s = require('fs').readFileSync('\/dev\/stdin').toString().trim();\\nconst lucky = ['4', '7'];\\nconst res = [];\\nfor (let i = 0; i < s.length; i++) {\\n  for (let j = i + 1; j < s.length; j++) {\\n    let str = s.slice(i, j + 1);\\n    if (str.length > 1 && str.startsWith('0') && str.split('').every(v => lucky.includes(v))) {\\n      res.push(str);\\n    }\\n  }\\n}\\nconsole.log(res.length > 0 ? res.sort()[0] : '-1');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val lucky = listOf(\"4\", \"7\")\n    val ans = \"\"\n    var count = 0\n    for (i in 0 until s.length) {\n        for (j in i until s.length) {\n            val sub = s.substring(i, j + 1)\n            if (sub.all { it in lucky }) {\n                if (sub.length > count) {\n                    ans = sub\n                    count = sub.length\n                }\n            }\n        }\n    }\n    println(if (ans.isNotEmpty()) ans else \"-1\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s = trim(fgets(STDIN));\n$ans = '';\nfor ($i = 0; $i < strlen($s); $i++) {\n    if ($s[$i] == '4' || $s[$i] == '7') {\n        $ans .= $s[$i];\n    }\n}\nif (strlen($ans) == 0) {\n    echo '-1';\n} else {\n    echo $ans;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s;\n    scanf(\" %s \", s);\n    string t = s;\n    t.removeLeadingZeros();\n    string min = t;\n    int max = 0;\n    for (int i = 0; i < s.length; i++) {\n        if (s[i] == '4' || s[i] == '7') {\n            string t = s.substr(i, s.length - i);\n            t.removeLeadingZeros();\n            if (t < min) {\n                min = t;\n                max = 1;\n            } else if (t == min) {\n                max++;\n            }\n        }\n    }\n    if (max == 0) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %s \", min);\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nmy $s =~ s\/^\\s+\/\/;\nmy $s =~ s\/\\s+$\/\/;\n\nmy $min = '-1';\nmy $min_len = 0;\n\nfor my $i (0..$#s) {\n    for my $j ($i..$#s) {\n        my $substr = substr($s, $i, $j - $i + 1);\n        if ($substr =~ \/^[47]+$\/) {\n            if ($substr !~ \/^0+\/) {\n                if ($min_len < length($substr)) {\n                    $min = $substr;\n                    $min_len = length($substr);\n                }\n            }\n        }\n    }\n}\n\nprint $min;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let s = std::io::stdin().read_line().unwrap().trim().to_string();\n    let mut map = HashMap::new();\n    for i in 0..s.len() {\n        let c = s.as_bytes()[i] as char;\n        if c == '4' || c == '7' {\n            if i == 0 {\n                map.insert(c, 1);\n            } else {\n                if let Some(v) = map.get(&c) {\n                    map.insert(c, v + 1);\n                } else {\n                    map.insert(c, 1);\n                }\n            }\n        }\n    }\n    let mut ans = String::new();\n    let mut max = 0;\n    for (k, v) in map.iter() {\n        if v > max {\n            max = v;\n            ans = k.to_string();\n        }\n    }\n    if max == 0 {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"A. Dawid and Bags of Candies","description":"Dawid has four bags of candies. The $$$i$$$-th of them contains $$$a_i$$$ candies. Also, Dawid has two friends. He wants to give each bag to one of his two friends. Is it possible to distribute the bags in such a way that each friend receives the same amount of candies in total?Note, that you can't keep bags for yourself or throw them away, each bag should be given to one of the friends.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The only line contains four integers $$$a_1$$$, $$$a_2$$$, $$$a_3$$$ and $$$a_4$$$ ($$$1 \\\\leq a_i \\\\leq 100$$$) \u2014 the numbers of candies in each bag.\n","output_spec":"Output YES if it's possible to give the bags to Dawid's friends so that both friends receive the same amount of candies, or NO otherwise. Each character can be printed in any case (either uppercase or lowercase).\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1230-A","difficulty":800,"tags":["brute+force","implementation"],"src_uid":"5a623c49cf7effacfb58bc82f8eaff37","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"a,b,c,d=map(int,input().split())\nif a==b and c==d or a==c and b==d or a==d and b==c:\n    print('YES')\nelse:\n    print('NO')\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int[] a = new int[4];\n        for (int i = 0; i < 4; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int sum = 0;\n        for (int i = 0; i < 4; i++) {\n            sum += a[i];\n        }\n        if (sum % 2 == 0) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na = list(map(int, input().split()))\na.sort()\nif a[0] == a[1] and a[2] == a[3]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"a,b,c,d;scanf(\\\"%d%d%d%d\\\",&a,&b,&c,&d);if(a==b&&b==c&&c==d)printf(\\\"YES\\\");else if(a==b&&b==c&&d!=a)printf(\\\"NO\\\");else if(a==b&&c==d&&a!=b)printf(\\\"NO\\\");else if(a==c&&b==d&&a!=b)printf(\\\"NO\\\");else if(b==c&&a==d&&b!=c)printf(\\\"NO\\\");else printf(\\\"YES\\\");\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int[] a = new int[4];\n        int sum = 0;\n        for (int i = 0; i < 4; i++)\n        {\n            int n = int.Parse(Console.ReadLine());\n            a[i] = n;\n            sum += n;\n        }\n        if (sum % 2 == 0)\n        {\n            int half = sum \/ 2;\n            for (int i = 0; i < 4; i++)\n            {\n                if (a[i] != half)\n                {\n                    Console.WriteLine(\"NO\");\n                    return;\n                }\n            }\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b,c,d=map(int,input().split())\nif a==b and c==d or a==c and b==d or a==d and b==c:\n    print('YES')\nelse:\n    print('NO')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Dawid;\nuses SysUtils;\nvar\n  a: array[1..4] of integer;\n  i, j, n, m, k: integer;\nbegin\n  readln(a[1], a[2], a[3], a[4]);\n  n := a[1] + a[2] + a[3] + a[4];\n  m := n div 2;\n  for i := 1 to 4 do\n    for j := 1 to 4 do\n      if (a[i] + a[j] = m) and (i <> j) then\n        begin\n          k := 1;\n          for j := 1 to 4 do\n            if (a[i] + a[j] <> m) or (i = j) then\n              k := 0;\n          if k = 1 then\n            writeln('YES');\n          exit;\n        end;\n  writeln('NO');\nend.\"}]}","Go":"[{\"version\": \"Go1.17\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var a, b, c, d int\\n    fmt.Scanf(\\\"%d%d%d%d\\\", &a, &b, &c, &d)\\n    if a == b && b == c && c == d {\\n        fmt.Println(\\\"YES\\\")\\n    } else if a == b && b == c && d != a {\\n        fmt.Println(\\\"NO\\\")\\n    } else if a == b && c == d && a != b {\\n        fmt.Println(\\\"NO\\\")\\n    } else if a == c && b == d && a != b {\\n        fmt.Println(\\\"NO\\\")\\n    } else if b == c && d == a && b != c {\\n        fmt.Println(\\\"NO\\\")\\n    } else {\\n        fmt.Println(\\\"YES\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const a = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number); console.log(a.reduce((a, b) => a + b) % 2 === 0 ? 'YES' : 'NO');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.4\", \"target code\": \"fun main() {\n    val (a1, a2, a3, a4) = readLine()!!.split(\" \").map { it.toInt() }\n    val sum = a1 + a2 + a3 + a4\n    if (sum % 2 == 0 && sum \/ 2 in a1..a4) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$a = explode(' ', trim(fgets(STDIN)));\\n\\nif(($a[0] + $a[1]) == ($a[2] + $a[3]))\\n    echo 'YES';\\nelse\\n    echo 'NO';\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto a = readln.split(' ').map!(to!int).array;\n    auto b = a.sort();\n    auto c = b[2] - b[0];\n    auto d = b[3] - b[1];\n    if (c == d)\n        writeln('YES');\n    else\n        writeln('NO');\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy @a = split \/ \/, <STDIN>;\nmy $sum = sum(@a);\nif ($sum % 2 == 0) {\n    if ($a[0] == $a[1] && $a[2] == $a[3]) {\n        print \"YES\";\n    } elsif ($a[0] == $a[2] && $a[1] == $a[3]) {\n        print \"YES\";\n    } elsif ($a[0] == $a[3] && $a[1] == $a[2]) {\n        print \"YES\";\n    } else {\n        print \"NO\";\n    }\n} else {\n    print \"NO\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let input: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let sum = input.iter().sum::<i32>();\n    if sum % 2 == 0 {\n        if input.iter().any(|x| x == sum \/ 2) {\n            println!(\"YES\");\n        } else {\n            println!(\"NO\");\n        }\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"D. String","description":"You are given a string s. Each pair of numbers l and r that fulfill the condition 1\u2264l\u2264r\u2264|s|, correspond to a substring of the string s, starting in the position l and ending in the position r (inclusive).Let's define the function of two strings F(x,y) like this. We'll find a list of such pairs of numbers for which the corresponding substrings of string x are equal to string y. Let's sort this list of pairs according to the pair's first number's increasing. The value of function F(x,y) equals the number of non-empty continuous sequences in the list.For example: F(babbabbababbab,babb)=6. The list of pairs is as follows:(1,4),(4,7),(9,12)Its continuous sequences are:   (1,4)  (4,7)  (9,12)  (1,4),(4,7)  (4,7),(9,12)  (1,4),(4,7),(9,12) Your task is to calculate for the given string s the sum F(s,x) for all x, that x belongs to the set of all substrings of a string s.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line contains the given string s, consisting only of small Latin letters (1\u2264|s|\u226410^5).\n","output_spec":"Print the single number \u2014 the sought sum.\nPlease do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.\n","notes":"In the first sample the function values at x equal to \"a\", \"aa\", \"aaa\" and \"aaaa\" equal 10, 6, 3 and 1 correspondingly.\nIn the second sample for any satisfying x the function value is 1.\n","sample_inputs":["aaaa\n","abcdef\n","abacabadabacaba\n"],"sample_outputs":["20\n","21\n","188\n"],"id":"123-D","difficulty":2300,"tags":["string+suffix+structures"],"src_uid":"db853d598b638dcdeaea5a26ae83758b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n\n    vector<int> a(26);\n    for (int i = 0; i < s.size(); i++) {\n        a[s[i] - 'a']++;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < 26; i++) {\n        ans += a[i] * (a[i] - 1) \/ 2;\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String s = br.readLine();\n        int n = s.length();\n        int[] cnt = new int[26];\n        for (int i = 0; i < n; i++) {\n            cnt[s.charAt(i) - 'a']++;\n        }\n        int ans = 0;\n        for (int i = 0; i < 26; i++) {\n            ans += cnt[i] * (cnt[i] - 1) \/ 2;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\nn = len(s)\n\ndef f(s):\n    ans = 0\n    for i in range(n):\n        for j in range(i+1, n+1):\n            if s[i:j] == s:\n                ans += 1\n    return ans\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n+1):\n        ans += f(s[i:j])\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\n#define MAXN 1000005\nint n, a[MAXN], b[MAXN], c[MAXN], d[MAXN], ans;\nint main() {\n    scanf(\" %d \", &n);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &c[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &d[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        ans += (a[i] + b[i] + c[i] + d[i]);\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string s = Console.ReadLine();\n        int n = s.Length;\n        int[] a = new int[n + 1];\n        for (int i = 0; i < n; i++)\n        {\n            a[i + 1] = a[i] + (s[i] == 'a');\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j <= n; j++)\n            {\n                ans += a[j] - a[i];\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\n\nans = 0\n\nfor i in 0..s.length-1\n  for j in i..s.length-1\n    if s[i..j] == s[0..j-i]\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program P;\nuses SysUtils;\nvar\n  s: string;\n  i, j, n, k, l, r, c: integer;\nbegin\n  readln(s);\n  n := length(s);\n  for i := 1 to n do\n  begin\n    c := 0;\n    for j := i to n do\n    begin\n      if s[j] = s[i] then\n        c := c + 1;\n    end;\n    k := 0;\n    for l := 1 to n do\n    begin\n      for r := l to n do\n      begin\n        if s[r] = s[l] then\n          k := k + 1;\n      end;\n    end;\n    writeln(c * k);\n  end;\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    s := \\\"abacabadabacaba\\\"\\n    n := len(s)\\n    dp := make([]int, n+1)\\n    dp[0] = 1\\n    for i := 1; i <= n; i++ {\\n        for j := 1; j <= i; j++ {\\n            if s[i-j:i] == s[0:j] {\\n                dp[i] += dp[i-j]\\n            }\\n        }\\n    }\\n    fmt.Println(dp[n])\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"s = require('fs').readFileSync('\/dev\/stdin').toString().trim();\\n\\nfunction f(s, x) {\\n  let ans = 0;\\n  for (let i = 0; i < s.length; i++) {\\n    if (s.substr(i, x.length) === x) {\\n      ans++;\\n    }\\n  }\\n  return ans;\\n}\\n\\nconsole.log(f(s, s));\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val n = s.length\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..n) {\n            dp[i][j] = dp[i - 1][j]\n            if (s[i - 1] == s[j]) {\n                dp[i][j] += dp[i - 1][j - 1]\n            }\n        }\n    }\n    var ans = 0\n    for (i in 0..n) {\n        for (j in 0..n) {\n            ans += dp[i][j] * dp[n - i][n - j]\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s = trim(fgets(STDIN));\n$n = strlen($s);\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $ans += $n - $i;\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s;\n    scanf(\" %s \", s);\n    int n = s.length;\n    int[n + 1] a;\n    a[0] = 0;\n    for (int i = 1; i <= n; i++) {\n        a[i] = a[i - 1] + (s[i - 1] == s[i - 2]);\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= n; j++) {\n            if (a[j] - a[i - 1] == j - i) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nmy $n = length($s);\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        my $k = $j + 1;\n        while ($k < $n && $s[$k] eq $s[$j]) {\n            $k++;\n        }\n        $ans += $k - $j;\n    }\n}\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let s = lines.next().unwrap().unwrap();\n\n    let mut ans = 0;\n    for i in 0..s.len() {\n        for j in i..s.len() {\n            let sub = &s[i..j + 1];\n            ans += sub.len() - 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"C. Games with Rectangle","description":"In this task Anna and Maria play the following game. Initially they have a checkered piece of paper with a painted n\u00d7m rectangle (only the border, no filling). Anna and Maria move in turns and Anna starts. During each move one should paint inside the last-painted rectangle a new lesser rectangle (along the grid lines). The new rectangle should have no common points with the previous one. Note that when we paint a rectangle, we always paint only the border, the rectangles aren't filled.Nobody wins the game \u2014 Anna and Maria simply play until they have done k moves in total. Count the number of different ways to play this game.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first and only line contains three integers: n,m,k (1\u2264n,m,k\u22641000).\n","output_spec":"Print the single number \u2014 the number of the ways to play the game. As this number can be very big, print the value modulo 1000000007 (10^9+7).\n","notes":"Two ways to play the game are considered different if the final pictures are different. In other words, if one way contains a rectangle that is not contained in the other way.\nIn the first sample Anna, who performs her first and only move, has only one possible action plan \u2014 insert a 1\u00d71 square inside the given 3\u00d73 square.\nIn the second sample Anna has as much as 9 variants: 4 ways to paint a 1\u00d71 square, 2 ways to insert a 1\u00d72 rectangle vertically, 2 more ways to insert it horizontally and one more way is to insert a 2\u00d72 square.\n","sample_inputs":["3 3 1\n","4 4 1\n","6 7 2\n"],"sample_outputs":["1\n","9\n","75\n"],"id":"128-C","difficulty":2000,"tags":["combinatorics","dp"],"src_uid":"309d2d46086d526d160292717dfef308","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (i * j <= k) {\n                ans++;\n            }\n        }\n    }\n    cout << ans % 1000000007 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n\n        int[][] dp = new int[n + 1][m + 1];\n        dp[1][1] = 1;\n\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                for (int x = 1; x <= i; x++) {\n                    for (int y = 1; y <= j; y++) {\n                        if (x + y <= k) {\n                            dp[i][j] += dp[x - 1][y - 1];\n                            dp[i][j] %= 1000000007;\n                        }\n                    }\n                }\n            }\n        }\n\n        System.out.println(dp[n][m]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,k=map(int,input().split())\n\ndef f(n,m,k):\n    if k==0:\n        return 1\n    if n==1 and m==1:\n        return 0\n    if n==1:\n        return f(n,m-1,k-1)\n    if m==1:\n        return f(n-1,m,k-1)\n    return (f(n-1,m,k-1)+f(n,m-1,k-1))%1000000007\n\nprint(f(n,m,k))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#define MOD 1000000007\nint main() {\n    int n, m, k;\n    scanf(\" %d%d%d \", &n, &m, &k);\n    int ans = 1;\n    for (int i = 0; i < k; i++) {\n        ans = (ans * (n + m - 2)) % MOD;\n        n--;\n        m--;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var input = Console.ReadLine().Split(' ');\n            var n = int.Parse(input[0]);\n            var m = int.Parse(input[1]);\n            var k = int.Parse(input[2]);\n\n            var dp = new int[n + 1, m + 1, k + 1];\n            dp[1, 1, 0] = 1;\n\n            for (int i = 1; i <= n; i++)\n            {\n                for (int j = 1; j <= m; j++)\n                {\n                    for (int l = 0; l <= k; l++)\n                    {\n                        dp[i, j, l + 1] += dp[i - 1, j, l] * (i - 1) * (j - 1);\n                        dp[i, j, l + 1] %= 1000000007;\n\n                        dp[i, j, l + 1] += dp[i, j - 1, l] * (i - 1) * (m - j);\n                        dp[i, j, l + 1] %= 1000000007;\n\n                        dp[i, j, l + 1] += dp[i - 1, j - 1, l] * (n - i) * (m - j);\n                        dp[i, j, l + 1] %= 1000000007;\n                    }\n                }\n            }\n\n            Console.WriteLine(dp[n, m, k]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,k=map(int,input().split())\n\ndef f(n,m,k):\n    if k==0:\n        return 1\n    if n==1 and m==1:\n        return 0\n    if n==1:\n        return f(n,m-1,k-1)\n    if m==1:\n        return f(n-1,m,k-1)\n    return (f(n-1,m,k-1)+f(n,m-1,k-1))%1000000007\n\nprint(f(n,m,k))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram P1000;\nuses SysUtils;\n\nconst\n  MOD = 1000000007;\n\nvar\n  n, m, k: Integer;\n  f: array[0..1000, 0..1000, 0..2] of Integer;\n\nfunction C(n, k): Integer;\nbegin\n  if k = 0 then Exit(1);\n  if k = n then Exit(n);\n  if f[n, k, 0] <> 0 then Exit(f[n, k, 0]);\n  f[n, k, 0] := C(n - 1, k) + C(n - 1, k - 1);\n  f[n, k, 0] := f[n, k, 0] mod MOD;\n  Exit(f[n, k, 0]);\nend;\n\nbegin\n  Readln(n, m, k);\n  for i := 0 to n do\n    for j := 0 to m do\n      for l := 0 to 2 do\n        f[i, j, l] := 0;\n  writeln(C(n + m - 2, k - 1));\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, k int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &k)\\n    ans := 1\\n    for i := 0; i < k; i++ {\\n        ans *= (n + m - 2)\\n        ans %= 1000000007\\n        n--\\n        m--\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst [n, m, k] = stdin[0].split(' ').map(Number);\nconst mod = 1000000007;\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= m; j++) {\n    dp[i] = (dp[i] + dp[i - 1]) % mod;\n    if (i >= j) {\n      dp[i] = (dp[i] + dp[i - j]) % mod;\n    }\n  }\n}\n\nconsole.log(dp[n] * dp[m] % mod);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (n, m, k) = readLine()!!.split(\" \").map { it.toInt() }\n    val mod = 1000000007\n    val dp = Array(n + 1) { Array(m + 1) { Array(k + 1) { 0 } } }\n    dp[1][1][0] = 1\n    for (i in 1..n) {\n        for (j in 1..m) {\n            for (l in 0..k) {\n                for (x in 1..min(i, j)) {\n                    for (y in 1..min(i - x, j - x)) {\n                        dp[i][j][l + 1] += dp[i - x][j - y][l] * (x * y) % mod\n                        dp[i][j][l + 1] %= mod\n                    }\n                }\n            }\n        }\n    }\n    println(dp[n][m][k])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$mod = 1000000007;\n$dp = array_fill(0, $n + 1, array_fill(0, $m + 1, 0));\n$dp[1][1] = 1;\nfor ($i = 1; $i <= $n; $i++) {\n    for ($j = 1; $j <= $m; $j++) {\n        for ($x = 1; $x <= $i; $x++) {\n            for ($y = 1; $y <= $j; $y++) {\n                $dp[$i][$j] += $dp[$x - 1][$y - 1] * ($i - $x + 1) * ($j - $y + 1);\n                $dp[$i][$j] %= $mod;\n            }\n        }\n    }\n}\necho $dp[$n][$m] % $mod;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (i + j <= k) {\n                ans = (ans + 1) % 1000000007;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\n\nchomp(my $line = <STDIN>);\n\nmy @arr = split(' ', $line);\n\n$n = $arr[0];\n$m = $arr[1];\n$k = $arr[2];\n\nmy $ans = 0;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        if ($i + $j <= $k) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans % 1000000007 . \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m, k) = lines\n        .next()\n        .unwrap()\n        .split_whitespace()\n        .map(|s| s.parse::<usize>().unwrap())\n        .collect::<Vec<_>>();\n\n    let mut dp = vec![vec![0; m + 1]; n + 1];\n    dp[1][1] = 1;\n\n    for i in 1..=n {\n        for j in 1..=m {\n            for k in 0..=k {\n                if k == 0 {\n                    dp[i][j] = dp[i - 1][j] + dp[i][j - 1];\n                } else {\n                    dp[i][j] = (dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1]) % 1000000007;\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", dp[n][m]);\n}\n\"\"\"}]"}
{"title":"B. Students and Shoelaces","description":"Anna and Maria are in charge of the math club for junior students. When the club gathers together, the students behave badly. They've brought lots of shoe laces to the club and got tied with each other. Specifically, each string ties together two students. Besides, if two students are tied, then the lace connects the first student with the second one as well as the second student with the first one.To restore order, Anna and Maria do the following. First, for each student Anna finds out what other students he is tied to. If a student is tied to exactly one other student, Anna reprimands him. Then Maria gathers in a single group all the students who have been just reprimanded. She kicks them out from the club. This group of students immediately leaves the club. These students takes with them the laces that used to tie them. Then again for every student Anna finds out how many other students he is tied to and so on. And they do so until Anna can reprimand at least one student.Determine how many groups of students will be kicked out of the club.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m \u2014 the initial number of students and laces (). The students are numbered from 1 to n, and the laces are numbered from 1 to m. Next m lines each contain two integers a and b \u2014 the numbers of students tied by the i-th lace (1\u2264a,b\u2264n,a\u2260b). It is guaranteed that no two students are tied with more than one lace. No lace ties a student to himself.\n","output_spec":"Print the single number \u2014 the number of groups of students that will be kicked out from the club.\n","notes":"In the first sample Anna and Maria won't kick out any group of students \u2014 in the initial position every student is tied to two other students and Anna won't be able to reprimand anyone.\nIn the second sample four students are tied in a chain and two more are running by themselves. First Anna and Maria kick out the two students from both ends of the chain (1 and 4), then \u2014 two other students from the chain (2 and 3). At that the students who are running by themselves will stay in the club.\nIn the third sample Anna and Maria will momentarily kick out all students except for the fourth one and the process stops at that point. The correct answer is one.\n","sample_inputs":["3 3\n1 2\n2 3\n3 1\n","6 3\n1 2\n2 3\n3 4\n","6 5\n1 4\n2 4\n3 4\n5 4\n6 4\n"],"sample_outputs":["0\n","2\n","1\n"],"id":"129-B","difficulty":1200,"tags":["brute+force","dfs+and+similar","graphs","implementation"],"src_uid":"f8315dc903b0542c453cab4577bcb20d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> a(n + 1);\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        a[u].push_back(v);\n        a[v].push_back(u);\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        int cnt = 0;\n        for (int j = 0; j < a[i].size(); j++) {\n            cnt++;\n        }\n        if (cnt == 1) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[] students = new int[n + 1];\n        for (int i = 0; i < m; i++) {\n            int a = scanner.nextInt();\n            int b = scanner.nextInt();\n            students[a]++;\n            students[b]++;\n        }\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (students[i] == 1) {\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    graph[a - 1].append(b - 1)\n    graph[b - 1].append(a - 1)\n\n\ndef dfs(v, visited):\n    visited[v] = True\n    for u in graph[v]:\n        if not visited[u]:\n            dfs(u, visited)\n\n\nans = 0\nvisited = [False] * n\nfor i in range(n):\n    if not visited[i]:\n        dfs(i, visited)\n        ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, m;\nint a, b;\nint c[1000000];\nint d[1000000];\nint e[1000000];\nint f[1000000];\nint g[1000000];\nint h[1000000];\nint i, j, k, l, t, p, q, r, s, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, t20, t21, t22, t23, t24, t25, t26, t27, t28, t29, t30, t31, t32, t33, t34, t35, t36, t37, t38, t39, t40, t41, t42, t43, t44, t45, t46, t47, t48, t49, t50, t51, t52, t53, t54, t55, t56, t57, t58, t59, t60, t61, t62, t63, t64, t65, t66, t67, t68, t69, t70, t71, t72, t73, t74, t75, t76, t77, t78, t79, t80, t81, t82, t83, t84, t85, t86, t87, t88, t89, t90, t91, t92, t93, t94, t95, t96, t97, t98, t99, t100;\nscanf(\" %d%d \", &n, &m);\nfor (i = 0; i < m; i++) {\n    scanf(\" %d%d \", &a, &b);\n    c[a]++;\n    c[b]++;\n}\nfor (i = 1; i <= n; i++) {\n    if (c[i] == 1) {\n        d[i] = 1;\n    }\n}\nfor (i = 1; i <= n; i++) {\n    if (d[i] == 1) {\n        e[i] = 1;\n    }\n}\nfor (i = 1; i <= n; i++) {\n    if (e[i] == 1) {\n        f[i] = 1;\n    }\n}\nfor (i = 1; i <= n; i++) {\n    if (f[i] == 1) {\n        g[i] = 1;\n    }\n}\nfor (i = 1; i <= n; i++) {\n    if (g[i] == 1) {\n        h[i] = 1;\n    }\n}\nfor (i = 1; i <= n; i++) {\n    if (h[i] == 1) {\n        i = i + 1;\n    }\n}\nprintf(\" %d \", i);\nreturn 0;\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n\n        var graph = new Dictionary<int, List<int>>();\n        for (int i = 0; i < m; i++)\n        {\n            var input = Console.ReadLine().Split(' ');\n            var a = int.Parse(input[0]);\n            var b = int.Parse(input[1]);\n\n            if (!graph.ContainsKey(a))\n            {\n                graph.Add(a, new List<int>());\n            }\n            graph[a].Add(b);\n\n            if (!graph.ContainsKey(b))\n            {\n                graph.Add(b, new List<int>());\n            }\n            graph[b].Add(a);\n        }\n\n        var count = 0;\n        while (true)\n        {\n            var visited = new bool[n + 1];\n            var queue = new Queue<int>();\n\n            for (int i = 1; i <= n; i++)\n            {\n                if (!visited[i])\n                {\n                    queue.Enqueue(i);\n                    visited[i] = true;\n                }\n            }\n\n            while (queue.Count > 0)\n            {\n                var current = queue.Dequeue();\n\n                for (int i = 0; i < graph[current].Count; i++)\n                {\n                    var next = graph[current][i];\n\n                    if (!visited[next])\n                    {\n                        queue.Enqueue(next);\n                        visited[next] = true;\n                    }\n                }\n            }\n\n            var connected = true;\n            for (int i = 1; i <= n; i++)\n            {\n                if (!visited[i])\n                {\n                    connected = false;\n                    break;\n                }\n            }\n\n            if (connected)\n            {\n                break;\n            }\n\n            count++;\n        }\n\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\nedges = []\n\nm.times do\n  a, b = gets.split.map(&:to_i)\n  edges << [a, b]\nend\n\n# \u5404\u9802\u70b9\u306e\u6b21\u6570\u3092\u6570\u3048\u308b\n\ndegrees = Array.new(n, 0)\n\nedges.each do |a, b|\n  degrees[a] += 1\n  degrees[b] += 1\nend\n\n# \u6b21\u6570\u304c1\u306e\u9802\u70b9\u306e\u6570\u3092\u6570\u3048\u308b\n\nans = 0\n\ndegrees.each do |degree|\n  if degree == 1\n    ans += 1\n  end\nend\n\nputs ans\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  n, m, i, j, k, a, b, c, d, t, ans: Integer;\n  s: array[0..100000] of Integer;\n  f: array[0..100000] of Boolean;\n\nbegin\n  Readln(n, m);\n  for i := 1 to m do\n  begin\n    Readln(a, b);\n    s[a] := s[a] + 1;\n    s[b] := s[b] + 1;\n  end;\n  for i := 1 to n do\n  begin\n    if s[i] = 1 then\n    begin\n      f[i] := True;\n      ans := ans + 1;\n    end;\n  end;\n  for i := 1 to n do\n  begin\n    if f[i] then\n    begin\n      for j := 1 to n do\n      begin\n        if f[j] and (s[i] = s[j]) then\n        begin\n          f[j] := False;\n          ans := ans - 1;\n        end;\n      end;\n    end;\n  end;\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    g := make([]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &a, &b)\\n        g[a]++\\n        g[b]++\\n    }\\n    ans := 0\\n    for i := 1; i <= n; i++ {\\n        if g[i] == 1 {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst n = parseInt(rl.question());\nconst m = parseInt(rl.question());\n\nconst graph = new Map();\n\nfor (let i = 0; i < m; i++) {\n  const [a, b] = rl.question().split(' ').map(Number);\n  graph.set(a, [b]);\n  graph.set(b, [a]);\n}\n\nlet count = 0;\n\nwhile (true) {\n  const visited = new Set();\n  for (let i = 1; i <= n; i++) {\n    if (!visited.has(i)) {\n      const queue = [i];\n      visited.add(i);\n      while (queue.length) {\n        const current = queue.shift();\n        for (const neighbor of graph.get(current)) {\n          if (!visited.has(neighbor)) {\n            queue.push(neighbor);\n            visited.add(neighbor);\n          }\n        }\n      }\n      if (queue.length === 1) {\n        count++;\n      }\n    }\n  }\n  if (count === 0) {\n    break;\n  }\n}\n\nconsole.log(count);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n + 1) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a].add(b)\n        graph[b].add(a)\n    }\n\n    val visited = BooleanArray(n + 1)\n    var count = 0\n    for (i in 1..n) {\n        if (!visited[i]) {\n            val queue = LinkedList<Int>()\n            queue.add(i)\n            visited[i] = true\n            while (queue.isNotEmpty()) {\n                val v = queue.poll()\n                for (u in graph[v]) {\n                    if (!visited[u]) {\n                        queue.add(u)\n                        visited[u] = true\n                    }\n                }\n            }\n            count++\n        }\n    }\n    println(count)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a = (int)trim(fgets(STDIN));\n    $b = (int)trim(fgets(STDIN));\n    $arr[$a][] = $b;\n    $arr[$b][] = $a;\n}\n$count = 0;\nwhile (true) {\n    $flag = false;\n    for ($i = 1; $i <= $n; $i++) {\n        if (count($arr[$i]) == 1) {\n            $flag = true;\n            $count++;\n            $arr[$i] = [];\n        }\n    }\n    if (!$flag) {\n        break;\n    }\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n], b[n];\n    int i, j;\n    for (i = 0; i < m; i++) {\n        scanf(\" %d %d \", &a[i], &b[i]);\n    }\n    int count = 0;\n    for (i = 0; i < m; i++) {\n        for (j = 0; j < m; j++) {\n            if (a[i] == b[j] || a[i] == a[j] || b[i] == b[j]) {\n                count++;\n            }\n        }\n    }\n    printf(\" %d \", count);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\nmy @b;\nmy @c;\nmy @d;\nmy @e;\nmy @f;\nmy @g;\nmy @h;\nmy @i;\nmy @j;\nmy @k;\nmy @l;\nmy @m;\nmy @n;\nmy @o;\nmy @p;\nmy @q;\nmy @r;\nmy @s;\nmy @t;\nmy @u;\nmy @v;\nmy @w;\nmy @x;\nmy @y;\nmy @z;\n\n$n = <STDIN>;\n$m = <STDIN>;\n\nfor (my $i = 0; $i < $m; $i++) {\n    $a[$i] = <STDIN>;\n    $b[$i] = <STDIN>;\n}\n\nfor (my $i = 0; $i < $m; $i++) {\n    $c[$a[$i]]++;\n    $d[$b[$i]]++;\n}\n\nfor (my $i = 1; $i <= $n; $i++) {\n    if ($c[$i] == 1) {\n        print \"1\\n\";\n        exit;\n    }\n}\n\nprint \"0\\n\";\n\"}\"]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = 0;\n    let mut m = 0;\n\n    stdin.read_line(&mut n).unwrap();\n    stdin.read_line(&mut m).unwrap();\n\n    let mut graph = vec![vec![0; n + 1]; n + 1];\n\n    for _ in 0..m {\n        let mut a = 0;\n        let mut b = 0;\n\n        stdin.read_line(&mut a).unwrap();\n        stdin.read_line(&mut b).unwrap();\n\n        graph[a as usize][b as usize] = 1;\n        graph[b as usize][a as usize] = 1;\n    }\n\n    let mut count = 0;\n\n    for i in 0..n {\n        let mut visited = vec![false; n + 1];\n\n        let mut queue = vec![i];\n\n        while !queue.is_empty() {\n            let current = queue.pop().unwrap();\n\n            if visited[current] {\n                continue;\n            }\n\n            visited[current] = true;\n\n            for j in 0..n {\n                if graph[current][j] == 1 && !visited[j] {\n                    queue.push(j);\n                }\n            }\n        }\n\n        if visited.iter().all(|&x| x) {\n            count += 1;\n        }\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", count)).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Correct Solution?","description":"One cold winter evening Alice and her older brother Bob was sitting at home near the fireplace and giving each other interesting problems to solve. When it was Alice's turn, she told the number n to Bob and said:\u2014Shuffle the digits in this number in order to obtain the smallest possible number without leading zeroes.\u2014No problem! \u2014 said Bob and immediately gave her an answer.Alice said a random number, so she doesn't know whether Bob's answer is correct. Help her to find this out, because impatient brother is waiting for the verdict.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains one integer n (0\u2264n\u226410^9) without leading zeroes. The second lines contains one integer m (0\u2264m\u226410^9) \u2014 Bob's answer, possibly with leading zeroes.\n","output_spec":"Print OK if Bob's answer is correct and WRONG_ANSWER otherwise.\n","notes":null,"sample_inputs":["3310\n1033\n","4\n5\n"],"sample_outputs":["OK\n","WRONG_ANSWER\n"],"id":"12-B","difficulty":1100,"tags":["implementation","sortings"],"src_uid":"d1e381b72a6c09a0723cfe72c0917372","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, m;\n    cin >> n;\n    cin >> m;\n    int a[10];\n    for (int i = 0; i < 10; i++) {\n        a[i] = 0;\n    }\n    while (n > 0) {\n        a[n % 10]++;\n        n \/= 10;\n    }\n    while (m > 0) {\n        a[m % 10]--;\n        m \/= 10;\n    }\n    for (int i = 0; i < 10; i++) {\n        if (a[i] < 0) {\n            cout << \"WRONG_ANSWER\" << endl;\n            return 0;\n        }\n    }\n    cout << \"OK\" << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[10];\n        for (int i = 0; i < n; i++) {\n            a[n % 10]++;\n            n \/= 10;\n        }\n        for (int i = 0; i < m; i++) {\n            a[m % 10]--;\n            m \/= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (a[i] < 0) {\n                System.out.println(\"WRONG_ANSWER\");\n                return;\n            }\n        }\n        System.out.println(\"OK\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nm = int(input())\n\nif n == m:\n    print('OK')\nelse:\n    print('WRONG_ANSWER')\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, m, i, j, k, l, t, a[1000000], b[1000000];\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &m);\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < m; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (a[i] < a[j]) {\n                t = a[i];\n                a[i] = a[j];\n                a[j] = t;\n            }\n        }\n    }\n    for (i = 0; i < m; i++) {\n        for (j = 0; j < m; j++) {\n            if (b[i] < b[j]) {\n                t = b[i];\n                b[i] = b[j];\n                b[j] = t;\n            }\n        }\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            if (a[i] == b[j]) {\n                printf(\" OK \");\n                return 0;\n            }\n        }\n    }\n    printf(\" WRONG_ANSWER \");\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string n = Console.ReadLine();\n        string m = Console.ReadLine();\n        int[] ns = new int[n.Length];\n        int[] ms = new int[m.Length];\n        for (int i = 0; i < n.Length; i++)\n        {\n            ns[i] = n[i] - '0';\n        }\n        for (int i = 0; i < m.Length; i++)\n        {\n            ms[i] = m[i] - '0';\n        }\n        Array.Sort(ns);\n        Array.Sort(ms);\n        if (ns.SequenceEqual(ms))\n        {\n            Console.WriteLine(\"OK\");\n        }\n        else\n        {\n            Console.WriteLine(\"WRONG_ANSWER\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nm = gets.to_i\n\nif n == m\n  puts 'OK'\nelse\n  puts 'WRONG_ANSWER'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Problem_A;\nuses SysUtils;\nvar\n  n, m, i, j, k, l, a, b, c, d, e, f, g, h, i1, j1, k1, l1, m1, n1, o1, p1, q1, r1, s1, t1, u1, v1, w1, x1, y1, z1: integer;\nbegin\n  readln(n);\n  readln(m);\n  a := n;\n  b := m;\n  for i := 1 to 9 do\n  begin\n    for j := 1 to 9 do\n    begin\n      for k := 1 to 9 do\n      begin\n        for l := 1 to 9 do\n        begin\n          for m := 1 to 9 do\n          begin\n            for n := 1 to 9 do\n            begin\n              for o := 1 to 9 do\n              begin\n                for p := 1 to 9 do\n                begin\n                  for q := 1 to 9 do\n                  begin\n                    for r := 1 to 9 do\n                    begin\n                      for s := 1 to 9 do\n                      begin\n                        for t := 1 to 9 do\n                        begin\n                          for u := 1 to 9 do\n                          begin\n                            for v := 1 to 9 do\n                            begin\n                              for w := 1 to 9 do\n                              begin\n                                for x := 1 to 9 do\n                                begin\n                                  for y := 1 to 9 do\n                                  begin\n                                    for z := 1 to 9 do\n                                    begin\n                                      if (a = (i * 100000000 + j * 10000000 + k * 1000000 + l * 100000 + m * 10000 + n * 1000 + o * 100 + p * 10 + q * 1 + r * 0.1 + s * 0.01 + t * 0.001 + u * 0.0001 + v * 0.00001 + w * 0.000001 + x * 0.0000001 + y * 0.00000001 + z * 0.000000001)) and (b = (i1 * 100000000 + j1 * 10000000 + k1 * 1000000 + l1 * 100000 + m1 * 10000 + n1 * 1000 + o1 * 100 + p1 * 10 + q1 * 1 + r1 * 0.1 + s1 * 0.01 + t1 * 0.001 + u1 * 0.0001 + v1 * 0.00001 + w1 * 0.000001 + x1 * 0.0000001 + y1 * 0.00000001 + z1 * 0.000000001)) then\n                                        writeln('OK');\n                                    end;\n                                  end;\n                                end;\n                              end;\n                            end;\n                          end;\n                        end;\n                      end;\n                    end;\n                  end;\n                end;\n              end;\n            end;\n          end;\n        end;\n      end;\n    end;\n  end;\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n, m := 0, 0\\n    fmt.Scanf(\\\"%d\\\", &n)\\n    fmt.Scanf(\\\"%d\\\", &m)\\n    nStr := fmt.Sprintf(\\\"%d\\\", n)\\n    mStr := fmt.Sprintf(\\\"%d\\\", m)\\n    nStr = sortStr(nStr)\\n    mStr = sortStr(mStr)\\n    if nStr == mStr {\\n        fmt.Println(\\\"OK\\\")\\n    } else {\\n        fmt.Println(\\\"WRONG_ANSWER\\\")\\n    }\\n}\\n\\nfunc sortStr(str string) string {\\n    s := []byte(str)\\n    sort.Slice(s, func(i, j int) bool { return s[i] < s[j] })\\n    return string(s)\\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst m = parseInt(input[1]);\nconst s = n.toString();\nconst t = m.toString();\nconst s1 = s.split('');\nconst t1 = t.split('');\ns1.sort((a, b) => a - b);\nt1.sort((a, b) => a - b);\nif (s1.join('') === t1.join('')) {\n  console.log('OK');\n} else {\n  console.log('WRONG_ANSWER');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val m = readLine()!!.toInt()\n    val ns = n.toString().toCharArray()\n    val ms = m.toString().toCharArray()\n    ns.sort()\n    ms.sort()\n    if (ns.contentEquals(ms)) {\n        println(\"OK\")\n    } else {\n        println(\"WRONG_ANSWER\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = trim(fgets(STDIN));\\n$m = trim(fgets(STDIN));\\n$n = str_split($n);\\nsort($n);\\n$m = str_split($m);\\nsort($m);\\nif($n == $m) echo 'OK'; else echo 'WRONG_ANSWER';\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &m);\n    int a[10];\n    int i;\n    for (i = 0; i < 10; i++) {\n        a[i] = 0;\n    }\n    for (i = 0; i < n; i++) {\n        a[n % 10]++;\n        n \/= 10;\n    }\n    for (i = 0; i < 10; i++) {\n        if (a[i] != 0) {\n            printf(\" %d \", i);\n        }\n    }\n    printf(\" \");\n    for (i = 0; i < m; i++) {\n        a[m % 10]++;\n        m \/= 10;\n    }\n    for (i = 0; i < 10; i++) {\n        if (a[i] != 0) {\n            printf(\" %d \", i);\n        }\n    }\n    printf(\" \");\n    if (n == m) {\n        printf(\" OK \");\n    } else {\n        printf(\" WRONG_ANSWER \");\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $m = <STDIN>;\n\nmy @n = split(\/\/, $n);\nmy @m = split(\/\/, $m);\n\nmy $i = 0;\nmy $j = 0;\n\nwhile ($i < @n && $j < @m) {\n    if ($n[$i] < $m[$j]) {\n        print \"OK\\n\";\n        exit;\n    }\n    $i++;\n    $j++;\n}\n\nprint \"WRONG_ANSWER\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\n#[allow(dead_code)]\nfn main() {\n    let mut n = String::new();\n    std::io::stdin().read_line(&mut n).unwrap();\n    let mut m = String::new();\n    std::io::stdin().read_line(&mut m).unwrap();\n    let mut n_vec: Vec<char> = n.chars().collect();\n    let mut m_vec: Vec<char> = m.chars().collect();\n    n_vec.sort();\n    m_vec.sort();\n    if n_vec == m_vec {\n        println!(\"OK\");\n    } else {\n        println!(\"WRONG_ANSWER\");\n    }\n}\n\"\"\"}]"}
{"title":"A. cAPS lOCK","description":"wHAT DO WE NEED cAPS LOCK FOR?Caps lock is a computer keyboard key. Pressing it sets an input mode in which typed letters are capital by default. If it is pressed by accident, it leads to accidents like the one we had in the first passage. Let's consider that a word has been typed with the Caps lock key accidentally switched on, if:   either it only contains uppercase letters;  or all letters except for the first one are uppercase. In this case we should automatically change the case of all letters. For example, the case of the letters that form words \"hELLO\", \"HTTP\", \"z\" should be changed.Write a program that applies the rule mentioned above. If the rule cannot be applied, the program should leave the word unchanged.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 second","memory_limit":"256 megabytes","input_spec":"The first line of the input data contains a word consisting of uppercase and lowercase Latin letters. The word's length is from 1 to 100 characters, inclusive.\n","output_spec":"Print the result of the given word's processing.\n","notes":null,"sample_inputs":["cAPS\n","Lock\n"],"sample_outputs":["Caps","Lock\n"],"id":"131-A","difficulty":1000,"tags":["implementation","strings"],"src_uid":"db0eb44d8cd8f293da407ba3adee10cf","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n#include <string>\\nusing namespace std;\\nint main()\\n{\\n    string s;\\n    cin >> s;\\n    if (s[0] >= 'a' && s[0] <= 'z')\\n        cout << s;\\n    else\\n        for (int i = 0; i < s.length(); i++)\\n            cout << (char)(s[i] ^ 32);\\n    return 0;\\n}\\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String word = scanner.nextLine();\n\n        if (word.length() == 1) {\n            System.out.println(word);\n        } else if (word.charAt(0) >= 'a' && word.charAt(0) <= 'z') {\n            System.out.println(word.toLowerCase());\n        } else {\n            System.out.println(word.toUpperCase());\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nword = input()\nif word[0].islower():\n    print(word.lower())\nelse:\n    print(word.upper())\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    char s[101];\n    scanf(\" %s \", s);\n    int i;\n    for (i = 0; i < 101; i++) {\n        if (s[i] >= 'a' && s[i] <= 'z') {\n            s[i] = s[i] - 32;\n        }\n    }\n    if (s[0] >= 'a' && s[0] <= 'z') {\n        for (i = 0; i < 101; i++) {\n            s[i] = s[i] + 32;\n        }\n    }\n    printf(\" %s \", s);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace CapsLock\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string word = Console.ReadLine();\n            bool isAllUpper = true;\n            bool isFirstUpper = true;\n            for (int i = 0; i < word.Length; i++)\n            {\n                if (word[i] >= 'a' && word[i] <= 'z')\n                {\n                    isAllUpper = false;\n                }\n                if (i != 0 && word[i] >= 'A' && word[i] <= 'Z')\n                {\n                    isFirstUpper = false;\n                }\n            }\n            if (isAllUpper || !isFirstUpper)\n            {\n                Console.WriteLine(word.ToLower());\n            }\n            else\n            {\n                Console.WriteLine(word);\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main\n    word = gets.chomp\n    if word[0].downcase == word[0]\n        word.downcase!\n    else\n        word.upcase!\n    end\n    puts word\nend\n\nmain()\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program CapsLock;\nuses SysUtils;\nvar\n  s: string;\nbegin\n  Readln(s);\n  if (s[1] = upcase(s[1])) and (s[1] <> s[2]) then\n    Writeln(upcase(s));\n  else\n    Writeln(s);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var word string\\n    fmt.Scanf(\\\"%s\\\\n\\\", &word)\\n    if word[0] >= 'a' && word[0] <= 'z' {\\n        for i := 1; i < len(word); i++ {\\n            if word[i] >= 'a' && word[i] <= 'z' {\\n                word[i] -= 32\\n            }\\n        }\\n    }\\n    fmt.Println(word)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst output = input.toLowerCase();\nfs.writeFileSync('output.txt', output, 'utf8');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.4\", \"target code\": \"import java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val word = scanner.nextLine()\n\n    val firstChar = word[0]\n    val restOfWord = word.substring(1)\n\n    if (firstChar.isUpperCase() && restOfWord.all { it.isLowerCase() }) {\n        println(word.toLowerCase())\n    } else if (firstChar.isLowerCase() && restOfWord.all { it.isUpperCase() }) {\n        println(word.toUpperCase())\n    } else {\n        println(word)\n    }\n}\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$word = trim(fgets(STDIN));\\n$first = strtolower($word[0]);\\n$rest = strtolower(substr($word, 1));\\nif ($first == $word || $rest == $word) {\\n    echo $word;\\n} else {\\n    echo $first . $rest;\\n}\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\n\nvoid main() {\n    string s;\n    s = stdin.readln();\n    bool isFirstUpper = s[0].toUpper() == s[0];\n    bool isAllUpper = s.all!(c => c.toUpper() == c);\n    if (isFirstUpper && isAllUpper) {\n        s = s.map!(c => c.toLower());\n    }\n    writeln(s);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\n\nuse strict;\nuse warnings;\n\nmy $word = <STDIN>;\n\nif ($word =~ \/^[A-Z]+$\/) {\n    print lc($word);\n} elsif ($word =~ \/^[a-z]+$\/) {\n    print uc($word);\n} else {\n    print $word;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    let mut c = s.chars();\n    if c.next().unwrap().is_lowercase() {\n        for i in 0..s.len() {\n            c.next().unwrap().to_lowercase().to_string();\n        }\n    }\n    println!(\"{}\", s);\n}\"}]"}
{"title":"C. The World is a Theatre","description":"There are n boys and m girls attending a theatre club. To set a play \"The Big Bang Theory\", they need to choose a group containing exactly t actors containing no less than 4 boys and no less than one girl. How many ways are there to choose a group? Of course, the variants that only differ in the composition of the troupe are considered different.Perform all calculations in the 64-bit type: long long for \u0421\/\u0421++, int64 for Delphi and long for Java.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line of the input data contains three integers n, m, t (4\u2264n\u226430,1\u2264m\u226430,5\u2264t\u2264n+m).\n","output_spec":"Find the required number of ways.\nPlease do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specificator.\n","notes":null,"sample_inputs":["5 2 5\n","4 3 5\n"],"sample_outputs":["10\n","3\n"],"id":"131-C","difficulty":1400,"tags":["combinatorics","math"],"src_uid":"489e69c7a2fba5fac34e89d7388ed4b8","C++":"","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int t = scanner.nextInt();\n\n        int count = 0;\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i + j == t && i >= 4 && j >= 1) {\n                    count++;\n                }\n            }\n        }\n\n        System.out.println(count);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m, t = map(int, input().split())\n\nans = 0\nfor i in range(n + 1):\n    for j in range(m + 1):\n        if i + j >= t and i >= 4 and j >= 1:\n            ans += (n - i) * (m - j)\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, m, t;\n    scanf(\" %d%d%d \", &n, &m, &t);\n    int a = t - 4;\n    int b = t - 1;\n    int c = m - 1;\n    int d = n - 4;\n    int e = n - 1;\n    int f = m - 4;\n    int g = n * m;\n    int h = (a + b) * (c + d);\n    int i = (e + f) * g;\n    int j = h - i;\n    printf(\" %d \", j);\n    return 0;\n}\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m, t = gets.split.map(&:to_i)\n\na = (n - 4) * (m - 1)\nb = (n - 3) * (m - 2)\nc = (n - 2) * (m - 3)\nd = (n - 1) * (m - 4)\n\nputs a + b + c + d\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var n,m,t,i,j,k,a,b,c,d,e,f,g,h,l,p,q,r,s,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,t15,t16,t17,t18,t19,t20,t21,t22,t23,t24,t25,t26,t27,t28,t29,t30,t31,t32,t33,t34,t35,t36,t37,t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68,t69,t70,t71,t72,t73,t74,t75,t76,t77,t78,t79,t80,t81,t82,t83,t84,t85,t86,t87,t88,t89,t90,t91,t92,t93,t94,t95,t96,t97,t98,t99,t100:integer;\nbegin\n  readln(n,m,t);\n  if t<5 then\n    writeln(0)\n  else\n  begin\n    a:=n-4;\n    b:=m-1;\n    c:=t-5;\n    d:=a+b;\n    e:=d-c;\n    f:=e-1;\n    g:=f-1;\n    h:=g-1;\n    l:=h-1;\n    p:=l-1;\n    q:=p-1;\n    r:=q-1;\n    s:=r-1;\n    t1:=a*b;\n    t2:=t1*c;\n    t3:=t2*d;\n    t4:=t3*e;\n    t5:=t4*f;\n    t6:=t5*g;\n    t7:=t6*h;\n    t8:=t7*l;\n    t9:=t8*p;\n    t10:=t9*q;\n    t11:=t10*r;\n    t12:=t11*s;\n    t13:=t12*t;\n    t14:=t13\/1000000000;\n    t15:=t14\/100000000;\n    t16:=t15\/10000000;\n    t17:=t16\/1000000;\n    t18:=t17\/100000;\n    t19:=t18\/10000;\n    t20:=t19\/1000;\n    t21:=t20\/100;\n    t22:=t21\/10;\n    t23:=t22\/1;\n    writeln(t23);\n  end;\nend.","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var n, m, t int64\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &t)\\n    fmt.Println(comb(n, t-4) * comb(m, 1) + comb(n, t-3) * comb(m, 2) + comb(n, t-2) * comb(m, 3) + comb(n, t-1) * comb(m, 4))\\n}\\n\\nfunc comb(n, k int64) int64 {\\n    if k > n { return 0 }\\n    if k == 0 { return 1 }\\n    return comb(n-1, k-1) + comb(n-1, k)\\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, m, t] = line.split(' ').map(Number);\n  const ans = (n - 3) * (m - 1) + (n - 4) * (m - 2) + (n - 5) * (m - 3);\n  console.log(ans);\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.max\n\nfun main() {\n    val (n, m, t) = readLine()!!.split(\" \").map { it.toInt() }\n    val ans = (max(0, t - 4) until t).map {\n        val a = max(0, t - it)\n        val b = max(0, t - a - 1)\n        val c = max(0, t - a - b - 1)\n        val d = max(0, t - a - b - c - 1)\n        a * m * m * m * m + b * m * m * m * n + c * m * m * n * n + d * m * n * n * n\n    }.sum()\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $t = explode(' ', trim(fgets(STDIN)));\n$ans = 0;\nfor ($i = 4; $i <= $n; $i++) {\n    $ans += $nCr($n - $i + $m - 1, $m - 1);\n}\necho $ans;\nfunction $nCr($n, $r) {\n    if ($r > $n) {\n        return 0;\n    }\n    if ($r == 0 || $r == $n) {\n        return 1;\n    }\n    return $nCr($n - 1, $r - 1) + $nCr($n - 1, $r);\n}\n?>\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $t;\n\nchomp(my $input = <STDIN>);\n\n($n, $m, $t) = split(\/ \/, $input);\n\nmy $ans = 0;\n\nfor (my $i = 4; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        if ($i + $j == $t) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let line = lines.next().unwrap().unwrap();\n    let mut n, m, t = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<_>>();\n\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..m {\n            if i + j >= t - 4 {\n                ans += (n - i) * (m - j);\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Piet","description":"Piet is one of the most known visual esoteric programming languages. The programs in Piet are constructed from colorful blocks of pixels and interpreted using pretty complicated rules. In this problem we will use a subset of Piet language with simplified rules.The program will be a rectangular image consisting of colored and black pixels. The color of each pixel will be given by an integer number between 0 and 9, inclusive, with 0 denoting black. A block of pixels is defined as a rectangle of pixels of the same color (not black). It is guaranteed that all connected groups of colored pixels of the same color will form rectangular blocks. Groups of black pixels can form arbitrary shapes.The program is interpreted using movement of instruction pointer (IP) which consists of three parts: current block pointer (BP); note that there is no concept of current pixel within the block; direction pointer (DP) which can point left, right, up or down; block chooser (CP) which can point to the left or to the right from the direction given by DP; in absolute values CP can differ from DP by 90 degrees counterclockwise or clockwise, respectively.Initially BP points to the block which contains the top-left corner of the program, DP points to the right, and CP points to the left (see the orange square on the image below).One step of program interpretation changes the state of IP in a following way. The interpreter finds the furthest edge of the current color block in the direction of the DP. From all pixels that form this edge, the interpreter selects the furthest one in the direction of CP. After this, BP attempts to move from this pixel into the next one in the direction of DP. If the next pixel belongs to a colored block, this block becomes the current one, and two other parts of IP stay the same. It the next pixel is black or outside of the program, BP stays the same but two other parts of IP change. If CP was pointing to the left, now it points to the right, and DP stays the same. If CP was pointing to the right, now it points to the left, and DP is rotated 90 degrees clockwise.This way BP will never point to a black block (it is guaranteed that top-left pixel of the program will not be black).You are given a Piet program. You have to figure out which block of the program will be current after n steps.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains two integer numbers m (1\u2264m\u226450) and n (1\u2264n\u22645\u00b710^7). Next m lines contain the rows of the program. All the lines have the same length between 1 and 50 pixels, and consist of characters 0-9. The first character of the first line will not be equal to 0.\n","output_spec":"Output the color of the block which will be current after n steps of program interpretation.\n","notes":"In the first example IP changes in the following way. After step 1 block 2 becomes current one and stays it after two more steps. After step 4 BP moves to block 3, after step 7 \u2014 to block 4, and finally after step 10 BP returns to block 1.\n \nThe sequence of states of IP is shown on the image: the arrows are traversed clockwise, the main arrow shows direction of DP, the side one \u2014 the direction of CP.\n","sample_inputs":["2 10\n12\n43\n","3 12\n1423\n6624\n6625\n","5 9\n10345\n23456\n34567\n45678\n56789\n"],"sample_outputs":["1\n","6\n","5\n"],"id":"132-B","difficulty":2100,"tags":["implementation"],"src_uid":"09249ddeefb69734c50f9df3222ec7cb","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int m, n;\n    cin >> m >> n;\n    vector<vector<int>> a(m, vector<int>(m));\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    int x = 0, y = 0, d = 0;\n    for (int i = 0; i < n; i++) {\n        if (d == 0) {\n            for (int j = y; j < m; j++) {\n                if (a[x][j] != 0) {\n                    y = j;\n                    break;\n                }\n            }\n            if (y == m) {\n                d = 1;\n            }\n        } else if (d == 1) {\n            for (int j = x; j < m; j++) {\n                if (a[j][y] != 0) {\n                    x = j;\n                    break;\n                }\n            }\n            if (x == m) {\n                d = 2;\n            }\n        } else if (d == 2) {\n            for (int j = y - 1; j >= 0; j--) {\n                if (a[x][j] != 0) {\n                    y = j;\n                    break;\n                }\n            }\n            if (y == -1) {\n                d = 3;\n            }\n        } else if (d == 3) {\n            for (int j = x - 1; j >= 0; j--) {\n                if (a[j][y] != 0) {\n                    x = j;\n                    break;\n                }\n            }\n            if (x == -1) {\n                d = 0;\n            }\n        }\n    }\n\n    cout << a[x][y] << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    m, n = map(int, input().split())\n    grid = [list(map(int, input())) for _ in range(m)]\n    dp = [0] * m\n    cp = [0] * m\n    bp = [0] * m\n    for i in range(m):\n        dp[i] = 1\n        cp[i] = 0\n        bp[i] = 0\n    x = 0\n    y = 0\n    for i in range(n):\n        if dp[x] == 1:\n            x += 1\n        elif dp[x] == 2:\n            x -= 1\n        elif dp[x] == 3:\n            y += 1\n        elif dp[x] == 4:\n            y -= 1\n        if cp[x] == 0:\n            cp[x] = 1\n        else:\n            cp[x] = 0\n            dp[x] = (dp[x] + 1) % 4\n        print(grid[y][x])\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int m, n;\n    scanf(\" %d%d \", &m, &n);\n    int a[m][50];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    int x = 0, y = 0, d = 0, c = 0;\n    for (int i = 0; i < n; i++) {\n        if (d == 0) {\n            if (a[x][y + 1] != '0') {\n                y++;\n            } else {\n                d = 1;\n            }\n        } else if (d == 1) {\n            if (a[x + 1][y] != '0') {\n                x++;\n            } else {\n                d = 2;\n            }\n        } else if (d == 2) {\n            if (a[x][y - 1] != '0') {\n                y--;\n            } else {\n                d = 3;\n            }\n        } else if (d == 3) {\n            if (a[x - 1][y] != '0') {\n                x--;\n            } else {\n                d = 0;\n            }\n        }\n    }\n    printf(\" %d \", a[x][y]);\n    return 0;\n}\n\"\"\"}]","C#":"```json\n[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Piet\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int m = int.Parse(input[0]);\n            int n = int.Parse(input[1]);\n            int[][] program = new int[m][];\n            for (int i = 0; i < m; i++)\n            {\n                program[i] = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            }\n\n            int x = 0;\n            int y = 0;\n            int d = 1;\n            int c = 0;\n            for (int i = 0; i < n; i++)\n            {\n                int x1 = x + d;\n                int y1 = y;\n                int x2 = x;\n                int y2 = y + d;\n                if (x1 < 0 || x1 >= m || y1 < 0 || y1 >= program[0].Length)\n                {\n                    d = (d + 1) % 4;\n                }\n                else if (x2 < 0 || x2 >= m || y2 < 0 || y2 >= program[0].Length)\n                {\n                    d = (d + 3) % 4;\n                }\n                else\n                {\n                    int max = 0;\n                    int maxX = 0;\n                    int maxY = 0;\n                    for (int j = 0; j < m; j++)\n                    {\n                        for (int k = 0; k < program[0].Length; k++)\n                        {\n                            if (program[j][k] > max && (j == x1 || j == x2 || k == y1 || k == y2))\n                            {\n                                max = program[j][k];\n                                maxX = j;\n                                maxY = k;\n                            }\n                        }\n                    }\n                    x = maxX;\n                    y = maxY;\n                    c = program[x][y];\n                }\n            }\n            Console.WriteLine(c);\n        }\n    }\n}\n\"}]","Ruby":"```\n[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\ndef main()\n  m, n = map(int, input().split())\n  a = [list(map(int, input())) for _ in range(m)]\n  x, y, d, c = 0, 0, 1, 0\n  for _ in range(n):\n    x, y = next_pos(x, y, d, a)\n    d = next_dir(d, c)\n    c = next_c(c, d)\n  print(a[y][x])\n\ndef next_pos(x, y, d, a):\n  if d == 0:\n    return x, y + 1\n  elif d == 1:\n    return x + 1, y\n  elif d == 2:\n    return x, y - 1\n  else:\n    return x - 1, y\n\ndef next_dir(d, c):\n  if d == 0 and c == 0:\n    return 1\n  elif d == 0 and c == 1:\n    return 2\n  elif d == 1 and c == 0:\n    return 3\n  elif d == 1 and c == 1:\n    return 0\n  elif d == 2 and c == 0:\n    return 4\n  elif d == 2 and c == 1:\n    return 5\n  elif d == 3 and c == 0:\n    return 6\n  elif d == 3 and c == 1:\n    return 7\n\ndef next_c(c, d):\n  if d == 0 or d == 2:\n    return 1 - c\n  else:\n    return c\n\nif __name__ == \"__main__\":\n  main()\n\"\"\"}]","delphi":"","Go":"","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nm, n = map(int, input().split())\n\ndef get_block(i, j):\n    if i < 0 or i >= m or j < 0 or j >= len(lines[i]):\n        return 0\n    return int(lines[i][j])\n\ndef get_next_block(i, j, d, c):\n    i += d[0]\n    j += d[1]\n    while 0 <= i < m and 0 <= j < len(lines[i]) and lines[i][j] == c:\n        i += d[0]\n        j += d[1]\n    return get_block(i, j)\n\ndef get_next_block_and_direction(i, j, d, c):\n    i += d[0]\n    j += d[1]\n    while 0 <= i < m and 0 <= j < len(lines[i]) and lines[i][j] == c:\n        i += d[0]\n        j += d[1]\n    return get_block(i, j), d\n\nlines = [list(map(int, input())) for _ in range(m)]\n\ni, j, d, c = 0, 0, [1, 0], 1\nfor _ in range(n):\n    i, j, d, c = get_next_block_and_direction(i, j, d, c)\n\nprint(i, j, d, c)\nprint(get_block(i, j))\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (m, n) = readLine().split(\" \").map { it.toInt() }\n    val a = Array(m) { readLine().toCharArray() }\n    val d = Array(m) { Array(n) { 0 } }\n    val dp = Array(m) { Array(n) { 0 } }\n    val cp = Array(m) { Array(n) { 0 } }\n    val s = Array(m) { Array(n) { 0 } }\n    val q = ArrayDeque<Pair<Int, Int>>()\n    q.add(Pair(0, 0))\n    d[0][0] = 1\n    dp[0][0] = 1\n    cp[0][0] = 1\n    s[0][0] = a[0][0] - '0'\n    while (q.isNotEmpty()) {\n        val (i, j) = q.removeFirst()\n        for (k in 0..3) {\n            val ni = i + dx[k]\n            val nj = j + dy[k]\n            if (ni in 0 until m && nj in 0 until n && a[ni][nj] != '0') {\n                if (d[ni][nj] == 0) {\n                    d[ni][nj] = d[i][j] + 1\n                    dp[ni][nj] = dp[i][j]\n                    cp[ni][nj] = cp[i][j]\n                    s[ni][nj] = s[i][j]\n                    q.add(Pair(ni, nj))\n                } else if (d[ni][nj] == d[i][j] + 1) {\n                    if (dp[ni][nj] == dp[i][j]) {\n                        if (cp[ni][nj] == 1) {\n                            cp[ni][nj] = 0\n                            dp[ni][nj] = dp[i][j] + 1\n                        } else {\n                            cp[ni][nj] = 1\n                            dp[ni][nj] = dp[i][j]\n                        }\n                    } else if (dp[ni][nj] == dp[i][j] + 1) {\n                        if (cp[ni][nj] == 1) {\n                            cp[ni][nj] = 0\n                        } else {\n                            cp[ni][nj] = 1\n                        }\n                    }\n                }\n            }\n        }\n    }\n    var i = 0\n    var j = 0\n    var k = 0\n    while (i < m && j < n && k < n) {\n        if (d[i][j] == n) {\n            i++\n        } else if (d[i][j] == n + 1) {\n            j++\n        } else {\n            k++\n        }\n    }\n    println(s[i][j])\n}\n\nprivate val dx = intArrayOf(1, 0, -1, 0)\nprivate val dy = intArrayOf(0, 1, 0, -1)\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$m = (int)trim(fgets(STDIN));\n$n = (int)trim(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a[] = trim(fgets(STDIN));\n}\n$x = 0;\n$y = 0;\n$d = 0;\n$c = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $x = $x + $d;\n    $y = $y + $c;\n    if ($x < 0 || $x >= $m || $y < 0 || $y >= count($a[0])) {\n        $d = $d + 1;\n        $c = -$c;\n    } else {\n        $d = $d + $c;\n        $c = 0;\n    }\n    $c = $c + ($a[$y][$x] - 48);\n}\necho $c;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int m, n;\n    scanf(\" %d %d \", &m, &n);\n    auto a = new int[m][];\n    for (int i = 0; i < m; i++) {\n        a[i] = readln().split().map!(to!int).array;\n    }\n\n    int x = 0, y = 0, d = 0;\n    for (int i = 0; i < n; i++) {\n        auto p = a[y][x];\n        auto s = a[y][(x + 1) % m];\n        auto t = a[y + 1][x];\n        auto u = a[y + 1][(x + 1) % m];\n\n        if (d == 0) {\n            if (p > s) {\n                x++;\n            } else if (p > t) {\n                y++;\n            } else {\n                d = 1;\n            }\n        } else if (d == 1) {\n            if (p > u) {\n                x++;\n                d = 2;\n            } else {\n                y++;\n            }\n        } else if (d == 2) {\n            if (p > s) {\n                x++;\n            } else if (p > t) {\n                y++;\n            } else {\n                d = 3;\n            }\n        } else if (d == 3) {\n            if (p > u) {\n                x++;\n            } else {\n                y++;\n            }\n        }\n    }\n\n    printf(\" %d \", a[y][x]);\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\nuse warnings;\n\nmy $m, $n;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($m, $n) = split(' ', $line);\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    push(@a, $line);\n}\n\nmy $x = 0;\nmy $y = 0;\nmy $d = 0;\nmy $c = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $nx = $x + $d;\n    my $ny = $y;\n\n    if ($nx < 0 || $nx >= $m) {\n        $d = ($d + 1) % 4;\n        $nx = $x;\n        $ny = $y + ($d == 0 ? 1 : -1);\n    }\n\n    if ($a[$nx][$ny] == 0) {\n        $d = ($d + 1) % 4;\n        $nx = $x;\n        $ny = $y + ($d == 0 ? 1 : -1);\n    }\n\n    $x = $nx;\n    $y = $ny;\n\n    $c = $a[$x][$y];\n}\n\nprint $c;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (m, n) = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse().unwrap()).collect::<(usize, usize)>();\n\n    let mut blocks = vec![vec![0; m]; n];\n    for (i, line) in lines.enumerate() {\n        for (j, c) in line.unwrap().chars().enumerate() {\n            blocks[i][j] = c.to_digit(10).unwrap();\n        }\n    }\n\n    let mut bp = (0, 0);\n    let mut dp = 0;\n    let mut cp = 1;\n\n    for _ in 0..n {\n        let mut next_bp = bp;\n        let mut next_dp = dp;\n        let mut next_cp = cp;\n\n        let mut next_block = blocks[bp.0][bp.1];\n\n        let mut next_block_index = 0;\n        for i in 0..m {\n            for j in 0..m {\n                if blocks[i][j] == next_block {\n                    if (i + j) % 2 == next_cp {\n                        next_block_index = i * m + j;\n                    }\n                }\n            }\n        }\n\n        let mut next_block_index = (next_block_index + 1) % (m * m);\n\n        let next_block = blocks[next_block_index \/ m][next_block_index % m];\n\n        if next_block == 0 {\n            next_dp = (next_dp + 1) % 4;\n            next_cp = (next_cp + 1) % 2;\n        } else {\n            next_bp = (next_block_index \/ m, next_block_index % m);\n        }\n\n        bp = next_bp;\n        dp = next_dp;\n        cp = next_cp;\n    }\n\n    println!(\"{}\", next_block);\n}\n\"\"\"}]"}
{"title":"A. Average Numbers","description":"You are given a sequence of positive integers a1,a2,...,an. Find all such indices i, that the i-th element equals the arithmetic mean of all other elements (that is all elements except for this one).","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains the integer n (2\u2264n\u22642\u00b710^5). The second line contains elements of the sequence a1,a2,...,an (1\u2264ai\u22641000). All the elements are positive integers.\n","output_spec":"Print on the first line the number of the sought indices. Print on the second line the sought indices in the increasing order. All indices are integers from 1 to n.\nIf the sought elements do not exist, then the first output line should contain number 0. In this case you may either not print the second line or print an empty line.\n","notes":null,"sample_inputs":["5\n1 2 3 4 5\n","4\n50 50 50 50\n"],"sample_outputs":["1\n3 ","4\n1 2 3 4 "],"id":"134-A","difficulty":1200,"tags":["brute+force","implementation"],"src_uid":"1a22bc82ddf6b3dfbf270bc5e3294c28","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    int mean = sum \/ n;\n\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == mean) {\n            count++;\n        }\n    }\n\n    cout << count << endl;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == mean) {\n            cout << i + 1 << \" \";\n        }\n    }\n    cout << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += a[i];\n        }\n        int mean = sum \/ n;\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == mean) {\n                count++;\n            }\n        }\n        System.out.println(count);\n        if (count > 0) {\n            for (int i = 0; i < n; i++) {\n                if (a[i] == mean) {\n                    System.out.print(i + 1 + \" \");\n                }\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nm = s \/\/ (n - 1)\nans = []\nfor i in range(n):\n    if a[i] == m:\n        ans.append(i + 1)\nprint(len(ans))\nprint(*ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\ns=sum(a)\nm=s\/\/(n-1)\nc=0\nfor i in range(n):\n    if a[i]==m:\n        c+=1\nprint(c)\nif c!=0:\n    print(*[i+1 for i in range(n) if a[i]==m])\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        int[] b = new int[n];\n        int sum = 0;\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n            sum += a[i];\n        }\n        for (int i = 0; i < n; i++)\n        {\n            b[i] = sum - a[i];\n        }\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] == b[i])\n            {\n                count++;\n            }\n        }\n        Console.WriteLine(count);\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] == b[i])\n            {\n                Console.WriteLine(i + 1);\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\ndef solve(a)\n  m = a.sum \/ a.size\n  ans = []\n  a.each_with_index do |v, i|\n    if v == m\n      ans << i + 1\n    end\n  end\n  ans.size\nend\n\nputs solve(a)\nputs ans.join(' ') if ans.size > 0\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram ProblemA;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, s, a, b, c: Integer;\n\nbegin\n  Readln(n);\n  Readln(a);\n  s := a;\n  for i := 2 to n do\n  begin\n    Readln(b);\n    s := s + b;\n  end;\n  s := s \/ n;\n  for i := 1 to n do\n  begin\n    if a = s then\n    begin\n      Writeln(1);\n      Writeln(i);\n      Exit;\n    end;\n  end;\n  Writeln(0);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &a[i])\\n    }\\n    var sum int\\n    for i := 0; i < n; i++ {\\n        sum += a[i]\\n    }\\n    var ans []int\\n    for i := 0; i < n; i++ {\\n        if a[i] == sum\/n {\\n            ans = append(ans, i+1)\\n        }\\n    }\\n    fmt.Println(len(ans))\\n    for _, v := range ans {\\n        fmt.Println(v)\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline());\nconst a = process.stdin.readline().split(' ').map(Number);\nconst s = a.reduce((a, b) => a + b);\nconst m = s \/ (n - 1);\nconst ans = [];\nfor (let i = 0; i < n; i++) {\n  if (a[i] === m) {\n    ans.push(i + 1);\n  }\n}\nconsole.log(ans.length);\nconsole.log(ans.join(' '));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }.toMutableList()\n    val m = a.sum() \/ n\n    val ans = mutableListOf<Int>()\n    for (i in 0 until n) {\n        if (a[i] == m) {\n            ans.add(i + 1)\n        }\n    }\n    println(ans.size)\n    println(ans.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$sum = array_sum($a);\n$ans = [];\nfor ($i = 0; $i < $n; $i++) {\n    if ($a[$i] == $sum \/ ($n - 1)) {\n        $ans[] = $i + 1;\n    }\n}\necho count($ans) . PHP_EOL;\necho implode(' ', $ans) . PHP_EOL;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    int mean = sum \/ n;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == mean) {\n            count++;\n        }\n    }\n    printf(\" %d \", count);\n    if (count > 0) {\n        for (int i = 0; i < n; i++) {\n            if (a[i] == mean) {\n                printf(\" %d  \", i + 1);\n            }\n        }\n    }\n    printf(\"\\n\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = <STDIN>;\nmy $sum = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    $sum += $a[$i];\n}\nmy $mean = $sum \/ $n;\nmy $count = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] == $mean) {\n        $count++;\n    }\n}\nprint $count, \"\\n\";\nif ($count > 0) {\n    for (my $i = 0; $i < $n; $i++) {\n        if ($a[$i] == $mean) {\n            print $i + 1, \" \";\n        }\n    }\n    print \"\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut a: Vec<usize> = stdin.read_line().unwrap().trim().split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut sum = 0;\n    for i in 0..n {\n        sum += a[i];\n    }\n\n    let mean = sum \/ n;\n\n    let mut ans = Vec::new();\n    for i in 0..n {\n        if a[i] == mean {\n            ans.push(i + 1);\n        }\n    }\n\n    stdout.write_fmt(format_args!(\"{}\\n\", ans.len())).unwrap();\n    for i in ans {\n        stdout.write_fmt(format_args!(\"{}\\n\", i)).unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"E. Omkar and Last Floor","description":"Omkar is building a house. He wants to decide how to make the floor plan for the last floor.Omkar's floor starts out as $$$n$$$ rows of $$$m$$$ zeros ($$$1 \\le n,m \\le 100$$$). Every row is divided into intervals such that every $$$0$$$ in the row is in exactly $$$1$$$ interval. For every interval for every row, Omkar can change exactly one of the $$$0$$$s contained in that interval to a $$$1$$$. Omkar defines the quality of a floor as the sum of the squares of the sums of the values in each column, i. e. if the sum of the values in the $$$i$$$-th column is $$$q_i$$$, then the quality of the floor is $$$\\sum_{i = 1}^m q_i^2$$$.Help Omkar find the maximum quality that the floor can have.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers, $$$n$$$ and $$$m$$$ ($$$1 \\\\le n,m \\\\le 100$$$), which are the number of rows and number of columns, respectively.\nYou will then receive a description of the intervals in each row. For every row $$$i$$$ from $$$1$$$ to $$$n$$$: The first row contains a single integer $$$k_i$$$ ($$$1 \\\\le k_i \\\\le m$$$), which is the number of intervals on row $$$i$$$. The $$$j$$$-th of the next $$$k_i$$$ lines contains two integers $$$l_{i,j}$$$ and $$$r_{i,j}$$$, which are the left and right bound (both inclusive), respectively, of the $$$j$$$-th interval of the $$$i$$$-th row. It is guaranteed that all intervals other than the first interval will be directly after the interval before it. Formally, $$$l_{i,1} = 1$$$, $$$l_{i,j} \\\\leq r_{i,j}$$$ for all $$$1 \\\\le j \\\\le k_i$$$, $$$r_{i,j-1} + 1 = l_{i,j}$$$ for all $$$2 \\\\le j \\\\le k_i$$$, and $$$r_{i,k_i} = m$$$.\n","output_spec":"Output one integer, which is the maximum possible quality of an eligible floor plan.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1372-E","difficulty":2900,"tags":["dp","greedy","two+pointers"],"src_uid":"a493914a91add305043ecc35823e99f8","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n\n    vector<int> a(m);\n    for (int i = 0; i < n; i++) {\n        int k;\n        cin >> k;\n\n        for (int j = 0; j < k; j++) {\n            int l, r;\n            cin >> l >> r;\n\n            for (int i = l; i <= r; i++) {\n                a[i]++;\n            }\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        ans += a[i] * a[i];\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[][] intervals = new int[n][2];\n        for (int i = 0; i < n; i++) {\n            int k = sc.nextInt();\n            for (int j = 0; j < k; j++) {\n                intervals[i][j] = sc.nextInt();\n            }\n        }\n        int[] sum = new int[m + 1];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < intervals[i].length; j++) {\n                for (int k = intervals[i][j]; k <= intervals[i][j + 1]; k++) {\n                    sum[k]++;\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 1; i <= m; i++) {\n            ans = Math.max(ans, sum[i] * sum[i]);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m=map(int,input().split())\na=[0]*m\nfor i in range(n):\n    k=int(input())\n    for j in range(k):\n        l,r=map(int,input().split())\n        for i in range(l,r+1):\n            a[i]+=1\nprint(sum(a)**2)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n\n        var intervals = new List<int[]>();\n        for (int i = 0; i < n; i++)\n        {\n            var k = int.Parse(Console.ReadLine());\n            var interval = new List<int>();\n            for (int j = 0; j < k; j++)\n            {\n                var input = Console.ReadLine().Split(' ');\n                interval.Add(int.Parse(input[0]));\n                interval.Add(int.Parse(input[1]));\n            }\n            intervals.Add(interval.ToArray());\n        }\n\n        var max = 0;\n        for (int i = 0; i < m; i++)\n        {\n            var sum = 0;\n            for (int j = 0; j < n; j++)\n            {\n                var interval = intervals[j];\n                var left = interval[0];\n                var right = interval[1];\n                if (i >= left && i <= right)\n                {\n                    sum++;\n                }\n            }\n            max = Math.Max(max, sum * sum);\n        }\n\n        Console.WriteLine(max);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn, m = gets.split.map(&:to_i)\n\nintervals = []\nn.times do\n  k = gets.to_i\n  intervals << k\n  k.times do\n    l, r = gets.split.map(&:to_i)\n    intervals << [l, r]\n  end\nend\n\nintervals.sort! { |a, b| a[0] <=> b[0] }\n\nans = 0\n\n(1..m).each do |i|\n  s = 0\n  intervals.each do |l, r|\n    if i >= l && i <= r\n      s += 1\n    end\n  end\n  ans += s * s\nend\n\nputs ans\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Omkar;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 100;\n  MAXM = 100;\n\ntype\n  TInterval = record\n    l, r: Integer;\n  end;\n\nvar\n  n, m: Integer;\n  a: array[0..MAXN, 0..MAXM] of Integer;\n  intervals: array[0..MAXN] of array of TInterval;\n  ans: Integer;\n\nprocedure ReadData;\nvar\n  i, j, k: Integer;\nbegin\n  Readln(n, m);\n  for i := 0 to n - 1 do\n  begin\n    Read(k);\n    intervals[i] := array[0..k] of TInterval;\n    for j := 0 to k - 1 do\n    begin\n      Readln(intervals[i][j].l, intervals[i][j].r);\n    end;\n  end;\nend;\n\nprocedure Solve;\nvar\n  i, j, k: Integer;\nbegin\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n    begin\n      a[i, j] := 0;\n    end;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n    begin\n      for k := 0 to intervals[i].Length - 1 do\n      begin\n        if j >= intervals[i][k].l and j <= intervals[i][k].r then\n          a[i, j] := a[i, j] + 1;\n      end;\n    end;\n  end;\n  ans := 0;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n    begin\n      ans := max(ans, a[i, j] * a[i, j]);\n    end;\n  end;\nend;\n\nbegin\n  ReadData;\n  Solve;\n  Writeln(ans);\nend.\n\"\"\"}]","Go":"[{\"version\": \"Go1.17\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scan(&n, &m)\n\tintervals := make([][]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tvar k int\n\t\tfmt.Scan(&k)\n\t\tintervals[i] = make([]int, k)\n\t\tfor j := 0; j < k; j++ {\n\t\t\tfmt.Scan(&intervals[i][j])\n\t\t}\n\t}\n\tdp := make([]int, m+1)\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 1; j <= m; j++ {\n\t\t\tdp[j] = max(dp[j], dp[j-1])\n\t\t\tfor k := 0; k < len(intervals[i]); k++ {\n\t\t\t\tif j >= intervals[i][k] && j <= intervals[i][k]+1 {\n\t\t\t\t\tdp[j] = max(dp[j], dp[j-intervals[i][k]]+1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(dp[m])\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst m = parseInt(stdin[1]);\nconst intervals = [];\nfor (let i = 0; i < n; i++) {\n  const k = parseInt(stdin[i + 2]);\n  const interval = [];\n  for (let j = 0; j < k; j++) {\n    const lr = stdin[i + 3 + j].split(' ');\n    interval.push([parseInt(lr[0]), parseInt(lr[1])]);\n  }\n  intervals.push(interval);\n}\n\nconst dp = new Array(m + 1).fill(0);\nfor (let i = 0; i < n; i++) {\n  for (let j = 0; j < m + 1; j++) {\n    dp[j] = Math.max(dp[j], dp[j - 1]);\n    for (let k = 0; k < intervals[i].length; k++) {\n      if (j >= intervals[i][k][0] && j <= intervals[i][k][1]) {\n        dp[j] = Math.max(dp[j], dp[j - intervals[i][k][0]] + intervals[i][k][1] - intervals[i][k][0]);\n      }\n    }\n  }\n}\n\nconsole.log(dp[m]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val intervals = Array(n) { ArrayList<Pair<Int, Int>>() }\n    for (i in 0 until n) {\n        val k = readLine().toInt()\n        for (j in 0 until k) {\n            val (l, r) = readLine().split(\" \").map { it.toInt() }\n            intervals[i].add(Pair(l, r))\n        }\n    }\n\n    val dp = Array(n + 1) { Array(m + 1) { 0 } }\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            for (k in 0 until intervals[i].size) {\n                val (l, r) = intervals[i][k]\n                dp[i + 1][j + 1] = maxOf(dp[i + 1][j + 1], dp[i][j] + (r - l + 1) * (r - l + 1))\n            }\n        }\n    }\n\n    println(dp[n][m])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$input = explode(\" \", trim(fgets(STDIN)));\n$n = intval($input[0]);\n$m = intval($input[1]);\n\n$intervals = [];\nfor ($i = 0; $i < $n; $i++) {\n    $input = explode(\" \", trim(fgets(STDIN)));\n    $k = intval($input[0]);\n    $intervals[$i] = [];\n    for ($j = 0; $j < $k; $j++) {\n        $input = explode(\" \", trim(fgets(STDIN)));\n        $intervals[$i][] = [$input[0], $input[1]];\n    }\n}\n\n$max = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $sum = 0;\n    for ($j = 0; $j < $m; $j++) {\n        $sum += $intervals[$i][0][0] - $intervals[$i][0][1];\n    }\n    $max = max($max, $sum * $sum);\n}\n\necho $max;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int[n][] a;\n    for (int i = 0; i < n; i++) {\n        int k;\n        scanf(\" %d \", &k);\n        a[i] = new int[k];\n        for (int j = 0; j < k; j++) {\n            scanf(\" %d %d \", &a[i][j].l, &a[i][j].r);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int[m] s;\n        for (int j = 0; j < m; j++) {\n            s[j] = 0;\n        }\n        for (int j = 0; j < a[i].length; j++) {\n            for (int k = a[i][j].l; k <= a[i][j].r; k++) {\n                s[k - 1]++;\n            }\n        }\n        for (int j = 0; j < m; j++) {\n            ans += s[j] * s[j];\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","perl":"","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = 0;\n    let mut m = 0;\n\n    stdin.read_line(&mut n).unwrap();\n    stdin.read_line(&mut m).unwrap();\n\n    let mut a = vec![vec![0; m + 1]; n + 1];\n\n    for i in 1..n + 1 {\n        let mut k = 0;\n        stdin.read_line(&mut k).unwrap();\n\n        for _ in 0..k {\n            let mut l = 0;\n            let mut r = 0;\n            stdin.read_line(&mut l).unwrap();\n            stdin.read_line(&mut r).unwrap();\n\n            for j in l..r + 1 {\n                a[i][j] = 1;\n            }\n        }\n    }\n\n    let mut ans = 0;\n\n    for i in 1..n + 1 {\n        let mut s = 0;\n        for j in 1..m + 1 {\n            s += a[i][j];\n        }\n\n        ans = ans.max(s * s);\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", ans)).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Permutation","description":"\"Hey, it's homework time\" \u2014 thought Polycarpus and of course he started with his favourite subject, IT. Polycarpus managed to solve all tasks but for the last one in 20 minutes. However, as he failed to solve the last task after some considerable time, the boy asked you to help him.The sequence of n integers is called a permutation if it contains all integers from 1 to n exactly once.You are given an arbitrary sequence a1,a2,...,an containing n integers. Each integer is not less than 1 and not greater than 5000. Determine what minimum number of elements Polycarpus needs to change to get a permutation (he should not delete or add numbers). In a single change he can modify any single sequence element (i. e. replace it with another integer).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input data contains an integer n (1\u2264n\u22645000) which represents how many numbers are in the sequence. The second line contains a sequence of integers ai (1\u2264ai\u22645000,1\u2264i\u2264n).\n","output_spec":"Print the only number \u2014 the minimum number of changes needed to get the permutation.\n","notes":"The first sample contains the permutation, which is why no replacements are required.\nIn the second sample it is enough to replace the first element with the number 1 and that will make the sequence the needed permutation.\nIn the third sample we can replace the second element with number 4 and the fourth element with number 2.\n","sample_inputs":["3\n3 1 2\n","2\n2 2\n","5\n5 3 3 3 1\n"],"sample_outputs":["0\n","1\n","2\n"],"id":"137-B","difficulty":1000,"tags":["greedy"],"src_uid":"bdd86c8bc54bbac6e2bb5a9d68b6eb1c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != i + 1) {\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int[] b = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            b[a[i]]++;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            if (b[i] == 0) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(1, n + 1):\n    if i not in a:\n        ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\nb=[0]*n\nfor i in range(n):\n    b[a[i]-1]=i+1\nc=0\nfor i in range(n):\n    if b[i]!=i+1:\n        c+=1\nprint(c)\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nans = 0\nfor i in 1..n\n  if a[i-1] != i\n    ans += 1\n  end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scan(&x)\\n        a = append(a, x)\\n    }\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        if a[i] != i+1 {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0]);\nconst a = input.split('\\n')[1].split(' ').map(Number);\nconst ans = 0;\nfor (let i = 0; i < n; i++) {\n    if (a[i] != i + 1) {\n        ans++;\n    }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }.toIntArray()\n    val b = IntArray(n + 1) { 0 }\n    for (i in 0 until n) {\n        b[a[i]]++\n    }\n    var ans = 0\n    for (i in 1..n) {\n        if (b[i] == 0) {\n            ans++\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n$a = explode(' ', trim(fgets(STDIN)));\\n$b = array_fill(1, $n + 1, 0);\\nforeach ($a as $i => $v) {\\n    $b[$v]++;\\n}\\n$ans = 0;\\nfor ($i = 1; $i <= $n; $i++) {\\n    if ($b[$i] == 0) {\\n        $ans++;\\n    }\\n}\\necho $ans;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != i + 1) {\n            ans++;\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] != $i + 1) {\n        $ans++;\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut a: Vec<usize> = stdin.read_line().unwrap().trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = 0;\n    for i in 0..n {\n        if a[i] != i + 1 {\n            ans += 1;\n        }\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", ans)).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Literature Lesson","description":"Vera adores poems. All the poems Vera knows are divided into quatrains (groups of four lines) and in each quatrain some lines contain rhymes.Let's consider that all lines in the poems consist of lowercase Latin letters (without spaces). Letters \"a\", \"e\", \"i\", \"o\", \"u\" are considered vowels.Two lines rhyme if their suffixes that start from the k-th vowels (counting from the end) match. If a line has less than k vowels, then such line can't rhyme with any other line. For example, if k=1, lines commit and hermit rhyme (the corresponding suffixes equal it), and if k=2, they do not rhyme (ommit\u2260ermit).Today on a literature lesson Vera learned that quatrains can contain four different schemes of rhymes, namely the following ones (the same letters stand for rhyming lines):   Clerihew (aabb);  Alternating (abab);  Enclosed (abba). If all lines of a quatrain pairwise rhyme, then the quatrain can belong to any rhyme scheme (this situation is represented by aaaa).If all quatrains of a poem belong to the same rhyme scheme, then we can assume that the whole poem belongs to this rhyme scheme. If in each quatrain all lines pairwise rhyme, then the rhyme scheme of the poem is aaaa. Let us note that it doesn't matter whether lines from different quatrains rhyme with each other or not. In other words, it is possible that different quatrains aren't connected by a rhyme.Vera got a long poem as a home task. The girl has to analyse it and find the poem rhyme scheme. Help Vera cope with the task.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and k (1\u2264n\u22642500, 1\u2264k\u22645)\u00a0\u2014 the number of quatrains in the poem and the vowel's number, correspondingly. Next 4n lines contain the poem. Each line is not empty and only consists of small Latin letters. The total length of the lines does not exceed 10^4.\nIf we assume that the lines are numbered starting from 1, then the first quatrain contains lines number 1, 2, 3, 4; the second one contains lines number 5, 6, 7, 8; and so on.\n","output_spec":"Print the rhyme scheme of the poem as \"aabb\", \"abab\", \"abba\", \"aaaa\"; or \"NO\" if the poem does not belong to any of the above mentioned schemes.\n","notes":"In the last sample both quatrains have rhymes but finding the common scheme is impossible, so the answer is \"NO\".\n","sample_inputs":["1 1\nday\nmay\nsun\nfun\n","1 1\nday\nmay\ngray\nway\n","2 1\na\na\na\na\na\na\ne\ne\n","2 1\nday\nmay\nsun\nfun\ntest\nhill\nfest\nthrill\n"],"sample_outputs":["aabb\n","aaaa\n","aabb\n","NO\n"],"id":"138-A","difficulty":1600,"tags":["implementation"],"src_uid":"a17bac596b1f060209534cbffdf0f40e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<string> v(4 * n);\n    for (int i = 0; i < 4 * n; i++) {\n        cin >> v[i];\n    }\n\n    vector<vector<int>> dp(n, vector<int>(n, 0));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j) {\n                continue;\n            }\n\n            int l = v[i].size() - k;\n            int r = v[j].size() - k;\n            if (l < 0 || r < 0) {\n                continue;\n            }\n\n            int s1 = v[i].substr(l, k).compare(v[j].substr(r, k));\n            if (s1 == 0) {\n                dp[i][j] = 1;\n            }\n        }\n    }\n\n    vector<int> a(n, 0);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j) {\n                continue;\n            }\n\n            if (dp[i][j] == 1) {\n                a[i]++;\n            }\n        }\n    }\n\n    int max_a = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] > max_a) {\n            max_a = a[i];\n        }\n    }\n\n    if (max_a == 0) {\n        cout << \"NO\" << endl;\n    } else if (max_a == 1) {\n        cout << \"aaaa\" << endl;\n    } else if (max_a == 2) {\n        cout << \"aabb\" << endl;\n    } else if (max_a == 3) {\n        cout << \"abab\" << endl;\n    } else if (max_a == 4) {\n        cout << \"abba\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = reader.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int k = Integer.parseInt(input[1]);\n        String[] lines = new String[4 * n];\n        for (int i = 0; i < 4 * n; i++) {\n            lines[i] = reader.readLine();\n        }\n        int[][][] dp = new int[n][4][k + 1];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 4; j++) {\n                for (int l = 0; l <= k; l++) {\n                    dp[i][j][l] = -1;\n                }\n            }\n        }\n        int[] ans = new int[4];\n        for (int i = 0; i < 4; i++) {\n            ans[i] = dp(lines, i, 0, k, dp);\n        }\n        int max = 0;\n        int maxIndex = 0;\n        for (int i = 0; i < 4; i++) {\n            if (ans[i] > max) {\n                max = ans[i];\n                maxIndex = i;\n            }\n        }\n        switch (maxIndex) {\n            case 0:\n                System.out.println(\"aabb\");\n                break;\n            case 1:\n                System.out.println(\"abab\");\n                break;\n            case 2:\n                System.out.println(\"abba\");\n                break;\n            case 3:\n                System.out.println(\"aaaa\");\n                break;\n            default:\n                System.out.println(\"NO\");\n                break;\n        }\n    }\n\n    private static int dp(String[] lines, int i, int j, int k, int[][][] dp) {\n        if (j == 4) {\n            return 0;\n        }\n        if (dp[i][j][k] != -1) {\n            return dp[i][j][k];\n        }\n        int ans = 0;\n        for (int l = 0; l < 4; l++) {\n            if (l != j && lines[i * 4 + j].charAt(lines[i * 4 + j].length() - k - 1) == lines[i * 4 + l].charAt(lines[i * 4 + l].length() - k - 1)) {\n                ans = Math.max(ans, dp(lines, i, j + 1, k, dp) + 1);\n            }\n        }\n        dp[i][j][k] = ans;\n        return ans;\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\n\ndef check(a, b, c, d):\n    if a[-k:] == b[-k:] and a[-k:] != c[-k:] and a[-k:] != d[-k:]:\n        return 'aabb'\n    if a[-k:] == c[-k:] and a[-k:] != b[-k:] and a[-k:] != d[-k:]:\n        return 'abab'\n    if a[-k:] == d[-k:] and a[-k:] != b[-k:] and a[-k:] != c[-k:]:\n        return 'abba'\n    if a[-k:] == b[-k:] and a[-k:] == c[-k:] and a[-k:] == d[-k:]:\n        return 'aaaa'\n    return 'NO'\n\nfor i in range(n):\n    a, b, c, d = input().split()\n    print(check(a, b, c, d))\n\"\"\"}]","C":"","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace _1001\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int k = int.Parse(input[1]);\n            string[] lines = new string[4 * n];\n            for (int i = 0; i < 4 * n; i++)\n            {\n                lines[i] = Console.ReadLine();\n            }\n            int[] a = new int[4 * n];\n            int[] b = new int[4 * n];\n            int[] c = new int[4 * n];\n            int[] d = new int[4 * n];\n            for (int i = 0; i < 4 * n; i++)\n            {\n                a[i] = lines[i].LastIndexOfAny(new char[] { 'a', 'e', 'i', 'o', 'u' });\n                b[i] = lines[i].LastIndexOfAny(new char[] { 'a', 'e', 'i', 'o', 'u' }, a[i] - k + 1);\n                c[i] = lines[i].LastIndexOfAny(new char[] { 'a', 'e', 'i', 'o', 'u' }, b[i] - k + 1);\n                d[i] = lines[i].LastIndexOfAny(new char[] { 'a', 'e', 'i', 'o', 'u' }, c[i] - k + 1);\n            }\n            int[] count = new int[4];\n            for (int i = 0; i < 4 * n; i++)\n            {\n                count[a[i] - d[i]]++;\n            }\n            if (count[0] == n || count[1] == n || count[2] == n || count[3] == n)\n            {\n                Console.WriteLine(\"aaaa\");\n            }\n            else if (count[0] == 0 && count[1] == 0 && count[2] == 0 && count[3] == 0)\n            {\n                Console.WriteLine(\"NO\");\n            }\n            else if (count[0] == 1 && count[1] == 1 && count[2] == 1 && count[3] == 1)\n            {\n                Console.WriteLine(\"aabb\");\n            }\n            else if (count[0] == 1 && count[1] == 2 && count[2] == 0 && count[3] == 1)\n            {\n                Console.WriteLine(\"abab\");\n            }\n            else if (count[0] == 1 && count[1] == 0 && count[2] == 1 && count[3] == 2)\n            {\n                Console.WriteLine(\"abba\");\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn, k = gets.split.map(&:to_i)\n\nlines = []\nn.times do\n  lines << gets.chomp\nend\n\n# \u5404\u884c\u306e\u672b\u5c3e\u304b\u3089k\u756a\u76ee\u306e\u6587\u5b57\u3092\u53d6\u5f97\nlines.each do |line|\n  line.chars.reverse.each_with_index do |c, i|\n    if i >= k\n      lines[i] = c\n      break\n    end\n  end\nend\n\n# \u5404\u884c\u306e\u672b\u5c3e\u304b\u3089k\u756a\u76ee\u306e\u6587\u5b57\u3092\u6bd4\u8f03\nlines.each_with_index do |line1, i|\n  lines.each_with_index do |line2, j|\n    if i != j && line1 == line2\n      puts \"NO\"\n      exit\n    end\n  end\nend\n\n# \u5404\u884c\u306e\u672b\u5c3e\u304b\u3089k\u756a\u76ee\u306e\u6587\u5b57\u304c\u5168\u3066\u540c\u3058\u5834\u5408\nif lines.all? { |line| line == lines[0] }\n  puts \"aaaa\"\nelse\n  puts \"aabb\"\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram poem;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j, l, m, t, p, q, r, s, a, b, c, d, e, f, g, h, i1, i2, i3, i4,\n    j1, j2, j3, j4, k1, k2, k3, k4, l1, l2, l3, l4, m1, m2, m3, m4,\n    n1, n2, n3, n4, o1, o2, o3, o4, p1, p2, p3, p4, q1, q2, q3, q4,\n    r1, r2, r3, r4, s1, s2, s3, s4: Integer;\n  s1, s2, s3, s4: String;\n\nbegin\n  Readln(n, k);\n  for i := 1 to n do\n  begin\n    for j := 1 to 4 do\n    begin\n      Readln(s1);\n      for l := 1 to k do\n      begin\n        if (s1[l] = 'a') or (s1[l] = 'e') or (s1[l] = 'i') or (s1[l] = 'o') or (s1[l] = 'u') then\n        begin\n          a := a + 1;\n        end;\n      end;\n    end;\n    if (a = 4) then\n    begin\n      for j := 1 to 4 do\n      begin\n        Readln(s1);\n        for l := 1 to k do\n        begin\n          if (s1[l] = 'a') or (s1[l] = 'e') or (s1[l] = 'i') or (s1[l] = 'o') or (s1[l] = 'u') then\n          begin\n            b := b + 1;\n          end;\n        end;\n      end;\n      if (b = 4) then\n      begin\n        for j := 1 to 4 do\n        begin\n          Readln(s1);\n          for l := 1 to k do\n          begin\n            if (s1[l] = 'a') or (s1[l] = 'e') or (s1[l] = 'i') or (s1[l] = 'o') or (s1[l] = 'u') then\n            begin\n              c := c + 1;\n            end;\n          end;\n        end;\n        if (c = 4) then\n        begin\n          for j := 1 to 4 do\n          begin\n            Readln(s1);\n            for l := 1 to k do\n            begin\n              if (s1[l] = 'a') or (s1[l] = 'e') or (s1[l] = 'i') or (s1[l] = 'o') or (s1[l] = 'u') then\n              begin\n                d := d + 1;\n              end;\n            end;\n          end;\n          if (d = 4) then\n          begin\n            if (a = b) and (b = c) and (c = d) then\n            begin\n              Writeln('aaaa');\n            end\n            else\n            begin\n              Writeln('NO');\n            end;\n          end;\n        end;\n      end;\n    end;\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d \", &n, &k)\n\tvar s = make([]string, n*4)\n\tfor i := 0; i < n*4; i++ {\n\t\tfmt.Scanf(\" %s \", &s[i])\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tif s[i*4][len(s[i*4])-k:] == s[i*4+1][len(s[i*4+1])-k:] &&\n\t\t\ts[i*4+1][len(s[i*4+1])-k:] == s[i*4+2][len(s[i*4+2])-k:] &&\n\t\t\ts[i*4+2][len(s[i*4+2])-k:] == s[i*4+3][len(s[i*4+3])-k:] {\n\t\t\tfmt.Println(\"aaaa\")\n\t\t\treturn\n\t\t}\n\t\tif s[i*4][len(s[i*4])-k:] == s[i*4+1][len(s[i*4+1])-k:] &&\n\t\t\ts[i*4+2][len(s[i*4+2])-k:] == s[i*4+3][len(s[i*4+3])-k:] {\n\t\t\tfmt.Println(\"aabb\")\n\t\t\treturn\n\t\t}\n\t\tif s[i*4][len(s[i*4])-k:] == s[i*4+2][len(s[i*4+2])-k:] &&\n\t\t\ts[i*4+1][len(s[i*4+1])-k:] == s[i*4+3][len(s[i*4+3])-k:] {\n\t\t\tfmt.Println(\"abab\")\n\t\t\treturn\n\t\t}\n\t\tif s[i*4][len(s[i*4])-k:] == s[i*4+3][len(s[i*4+3])-k:] &&\n\t\t\ts[i*4+1][len(s[i*4+1])-k:] == s[i*4+2][len(s[i*4+2])-k:] {\n\t\t\tfmt.Println(\"abba\")\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"NO\")\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nn, k = map(int, input().split())\n\ndef check(a, b, c, d):\n    if a[-k:] == b[-k:] and a[-k:] != c[-k:] and a[-k:] != d[-k:]:\n        return 'aabb'\n    if a[-k:] == c[-k:] and a[-k:] != b[-k:] and a[-k:] != d[-k:]:\n        return 'abab'\n    if a[-k:] == d[-k:] and a[-k:] != b[-k:] and a[-k:] != c[-k:]:\n        return 'abba'\n    if a[-k:] == b[-k:] and a[-k:] == c[-k:] and a[-k:] == d[-k:]:\n        return 'aaaa'\n    return 'NO'\n\nfor i in range(n):\n    a, b, c, d = input().split()\n    print(check(a, b, c, d))\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val lines = List(4 * n) { readLine() }\n    val m = HashMap<String, Int>()\n    for (i in 0 until 4 * n) {\n        val suffix = lines[i].substring(lines[i].length - k)\n        m[suffix] = m.getOrDefault(suffix, 0) + 1\n    }\n    val s = m.values.sorted()\n    if (s.size == 1) {\n        println(\"aaaa\")\n    } else if (s.size == 2 && s[0] == s[1]) {\n        println(\"NO\")\n    } else if (s[0] == s[1] + 1 && s[1] == s[2] + 1 && s[2] == s[3] + 1) {\n        println(\"aabb\")\n    } else if (s[0] == s[1] && s[2] == s[3]) {\n        println(\"abba\")\n    } else if (s[0] == s[2] && s[1] == s[3]) {\n        println(\"abab\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$n = (int)trim(fgets(STDIN));\n$k = (int)trim(fgets(STDIN));\n$lines = [];\nfor ($i = 0; $i < $n; $i++) {\n    $lines[] = trim(fgets(STDIN));\n}\n$rhymes = [];\nfor ($i = 0; $i < $n; $i++) {\n    $rhymes[$i] = [];\n    for ($j = 0; $j < $n; $j++) {\n        if ($i != $j) {\n            $rhymes[$i][$j] = 0;\n        }\n    }\n}\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $k; $j++) {\n        $rhymes[$i][$i]++;\n    }\n}\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($i != $j) {\n            for ($k = 0; $k < $k; $k++) {\n                if ($lines[$i][$k] == $lines[$j][$k]) {\n                    $rhymes[$i][$j]++;\n                }\n            }\n        }\n    }\n}\n$rhymes = array_map(function ($v) {\n    return implode(',', $v);\n}, $rhymes);\n$rhymes = array_unique($rhymes);\nif (count($rhymes) == 1) {\n    echo $rhymes[0] . PHP_EOL;\n} else {\n    echo 'NO' . PHP_EOL;\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int[n] a;\n    int[n] b;\n    int[n] c;\n    int[n] d;\n    for (int i = 0; i < n; i++) {\n        string s;\n        scanf(\" %s \", s);\n        a[i] = s.length;\n        b[i] = s.length - 1;\n        c[i] = s.length - 2;\n        d[i] = s.length - 3;\n    }\n    int[4] aa = [0, 0, 0, 0];\n    int[4] ab = [0, 0, 0, 0];\n    int[4] ba = [0, 0, 0, 0];\n    int[4] bb = [0, 0, 0, 0];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i != j) {\n                if (a[i] >= k && a[j] >= k && s[a[i] - k] == s[a[j] - k]) {\n                    aa[0]++;\n                }\n                if (a[i] >= k && a[j] >= k && s[b[i] - k] == s[b[j] - k]) {\n                    ab[0]++;\n                }\n                if (a[i] >= k && a[j] >= k && s[c[i] - k] == s[c[j] - k]) {\n                    ba[0]++;\n                }\n                if (a[i] >= k && a[j] >= k && s[d[i] - k] == s[d[j] - k]) {\n                    bb[0]++;\n                }\n            }\n        }\n    }\n    if (aa[0] == n) {\n        printf(\"aabb\\n\");\n    } else if (ab[0] == n) {\n        printf(\"abab\\n\");\n    } else if (ba[0] == n) {\n        printf(\"abba\\n\");\n    } else if (bb[0] == n) {\n        printf(\"aaaa\\n\");\n    } else {\n        printf(\"NO\\n\");\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $k; \\n\\nwhile (<>) { \\n    chomp; \\n    my @a = split(' ', $_); \\n    $n++; \\n    for (my $i = 0; $i < $k; $i++) { \\n        for (my $j = $i + 1; $j < $k; $j++) { \\n            if ($a[$i] eq $a[$j]) { \\n                print 'NO'; \\n                exit; \\n            } \\n        } \\n    } \\n} \\n\\nif ($n == 1) { \\n    print 'aaaa'; \\n} elsif ($n == 2) { \\n    if ($a[0] eq $a[2] && $a[1] eq $a[3]) { \\n        print 'aabb'; \\n    } elsif ($a[0] eq $a[3] && $a[1] eq $a[2]) { \\n        print 'abba'; \\n    } else { \\n        print 'NO'; \\n    } \\n} else { \\n    print 'NO'; \\n} \\n\\nexit;\"}]}","Rust":"```json\n[{\"version\": \"Rust 2021\", \"target code\": \"use std::collections::HashMap;\n\nfn main() {\n    let (n, k) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut lines = Vec::new();\n    for _ in 0..n {\n        lines.push(read_line().unwrap());\n    }\n\n    let mut map = HashMap::new();\n    for i in 0..n {\n        let mut suffix = lines[i].chars().rev().skip(k).collect::<Vec<_>>();\n        suffix.sort();\n        let key = suffix.join(\"\");\n        if map.contains_key(&key) {\n            println!(\"NO\");\n            return;\n        }\n        map.insert(key, i);\n    }\n\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    let mut d = 0;\n    for i in 0..n {\n        let j = (i + 1) % n;\n        let k = (i + 2) % n;\n        let l = (i + 3) % n;\n        if map[&lines[i].chars().rev().skip(k).collect::<Vec<_>>().join(\"\")] == j {\n            a += 1;\n        }\n        if map[&lines[i].chars().rev().skip(k).collect::<Vec<_>>().join(\"\")] == k {\n            b += 1;\n        }\n        if map[&lines[i].chars().rev().skip(k).collect::<Vec<_>>().join(\"\")] == l {\n            c += 1;\n        }\n        if map[&lines[i].chars().rev().skip(k).collect::<Vec<_>>().join(\"\")] == i {\n            d += 1;\n        }\n    }\n\n    if a == n || b == n || c == n || d == n {\n        println!(\"aaaa\");\n    } else if a == b && b == c && c == d {\n        println!(\"aabb\");\n    } else if a == b && b == c && d == n {\n        println!(\"abab\");\n    } else if a == b && c == d && d == n {\n        println!(\"abba\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\nfn read_line() -> String {\n    std::io::stdin().read_line().unwrap().trim().to_string()\n}\n\"}]"}
{"title":"D. World of Darkraft","description":"Recently Roma has become the happy owner of a new game World of Darkraft. This game combines elements of virtually all known genres, and on one of the later stages of the game Roma faced difficulties solving a puzzle.In this part Roma fights with a cunning enemy magician. The battle takes place on a rectangular field plaid n\u00d7m. Each cell contains one magical character: L, R or X. Initially all the squares of the field are \"active\".The players, Roma and enemy magician, take turns. Roma makes the first move. During a move a player selects one of the active cells. Then depending on the image in the character in the cell one of the following actions takes place:   L \u2014 magical waves radiate from the cell to the left downwards and to the right upwards along diagonal paths. All cells on the path of the waves (including the selected cell too) become inactive. The waves continue until the next inactive cell or to the edge of the field if there are no inactive cells on the way.  R \u2014 the magical waves radiate to the left upwards and to the right downwards.  X \u2014 the magical waves radiate in all four diagonal directions. If the next player cannot make a move (i.e., all cells are inactive), he loses.Roma has been trying to defeat the computer opponent for three days but he just keeps losing. He asks you to help him and determine whether it is guaranteed that he can beat the opponent, or he will have to hack the game.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers n and m (1\u2264n,m\u226420).\nNext n lines contain m characters describing the playing field: the j-th character of the i-th line equals to the magical character of the corresponding field square.\n","output_spec":"On the first line print \"WIN\" if Roma can win or \"LOSE\" if it is impossible to win considering that the opponent pays optimally.\n","notes":"In the first test each move makes one diagonal line of the square inactive, thus it is guaranteed that Roma loses after two moves.\nThere are three variants of making a move in the second test: to \"finish off\" the main diagonal line or any of the squares that are left. That means that after three moves the game stops and Roma wins.\n","sample_inputs":["2 2\nRL\nLR\n","2 2\nRR\nRR\n"],"sample_outputs":["LOSE\n","WIN\n"],"id":"138-D","difficulty":2500,"tags":["dp","games"],"src_uid":"f6380129212b575b1a5e9861565a511a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<char>> a(n, vector<char>(m));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'X') {\n                ans++;\n            }\n        }\n    }\n\n    if (ans == 0) {\n        cout << \"WIN\" << endl;\n    } else {\n        cout << \"LOSE\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        char[][] field = new char[n][m];\n        for (int i = 0; i < n; i++) {\n            String line = scanner.nextLine();\n            for (int j = 0; j < m; j++) {\n                field[i][j] = line.charAt(j);\n            }\n        }\n\n        boolean win = false;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (field[i][j] == 'X') {\n                    win = true;\n                    break;\n                }\n            }\n            if (win) {\n                break;\n            }\n        }\n\n        if (win) {\n            System.out.println(\"WIN\");\n        } else {\n            System.out.println(\"LOSE\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ndef check(a):\n    for i in range(n):\n        for j in range(m):\n            if a[i][j] == 'X':\n                return True\n    return False\n\ndef check_win(a):\n    for i in range(n):\n        if a[i][0] == 'X' and a[i][m-1] == 'X':\n            return True\n        if a[0][i] == 'X' and a[n-1][i] == 'X':\n            return True\n    return False\n\na = []\nfor i in range(n):\n    a.append(list(input()))\n\nif check(a):\n    print('LOSE')\nelif check_win(a):\n    print('WIN')\nelse:\n    print('UNKNOWN')\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n][m];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %c \", &a[i][j]);\n        }\n    }\n    int x = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'X') {\n                x++;\n            }\n        }\n    }\n    if (x == 0) {\n        printf(\"WIN\\n\");\n    } else {\n        printf(\"LOSE\\n\");\n    }\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var field = new char[n][];\n        for (var i = 0; i < n; i++)\n        {\n            field[i] = Console.ReadLine().ToCharArray();\n        }\n\n        var win = true;\n        for (var i = 0; i < n; i++)\n        {\n            for (var j = 0; j < m; j++)\n            {\n                if (field[i][j] == 'X')\n                {\n                    win = false;\n                    break;\n                }\n            }\n        }\n\n        if (win)\n        {\n            Console.WriteLine(\"WIN\");\n        }\n        else\n        {\n            Console.WriteLine(\"LOSE\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\nfield = []\nn.times do\n  field << gets.chomp.chars\nend\n\ndef check_win(field)\n  field.each do |row|\n    return true if row.count('X') == m\n  end\n\n  field.transpose.each do |row|\n    return true if row.count('X') == n\n  end\n\n  false\nend\n\ndef check_lose(field)\n  field.each do |row|\n    return true if row.count('L') == m\n  end\n\n  field.transpose.each do |row|\n    return true if row.count('R') == n\n  end\n\n  false\nend\n\nif check_win(field)\n  puts 'WIN'\nelse\n  puts 'LOSE' if check_lose(field)\n  puts 'DRAW'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram P1010;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, k, l, s: Integer;\n  a: array[0..20, 0..20] of Char;\n\nbegin\n  Readln(n, m);\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n      Read(a[i, j]);\n    Readln;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n    begin\n      if a[i, j] = 'L' then\n      begin\n        for k := i - 1 downto 0 do\n          if a[k, j] = 'L' then\n            s := s + 1;\n        for l := j - 1 downto 0 do\n          if a[i, l] = 'L' then\n            s := s + 1;\n      end;\n      if a[i, j] = 'R' then\n      begin\n        for k := i - 1 downto 0 do\n          if a[k, j] = 'R' then\n            s := s + 1;\n        for l := j + 1 to m - 1 do\n          if a[i, l] = 'R' then\n            s := s + 1;\n      end;\n      if a[i, j] = 'X' then\n      begin\n        for k := i - 1 downto 0 do\n          if a[k, j] = 'X' then\n            s := s + 1;\n        for l := j - 1 downto 0 do\n          if a[i, l] = 'X' then\n            s := s + 1;\n        for k := i + 1 to n - 1 do\n          if a[k, j] = 'X' then\n            s := s + 1;\n        for l := j + 1 to m - 1 do\n          if a[i, l] = 'X' then\n            s := s + 1;\n      end;\n    end;\n  end;\n  if s mod 2 = 0 then\n    Writeln('WIN')\n  else\n    Writeln('LOSE');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a [][]byte\\n    for i := 0; i < n; i++ {\\n        a = append(a, make([]byte, m))\\n        for j := 0; j < m; j++ {\\n            fmt.Scanf(\\\"%c\\\", &a[i][j])\\n        }\\n    }\\n    var ans bool\\n    for i := 0; i < n; i++ {\\n        for j := 0; j < m; j++ {\\n            if a[i][j] == 'X' {\\n                ans = true\\n                break\\n            }\\n        }\\n        if ans { break }\\n    }\\n    if ans {\\n        fmt.Println(\\\"WIN\\\")\\n    } else {\\n        fmt.Println(\\\"LOSE\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst field = [];\nfor (let i = 0; i < n; i++) {\n    field.push(input[i + 1].split(''));\n}\n\nconst check = (i, j) => {\n    if (field[i][j] === 'X') {\n        return true;\n    }\n    if (field[i][j] === 'L') {\n        if (i > 0 && field[i - 1][j] === 'X') {\n            return true;\n        }\n        if (j > 0 && field[i][j - 1] === 'X') {\n            return true;\n        }\n    }\n    if (field[i][j] === 'R') {\n        if (i < n - 1 && field[i + 1][j] === 'X') {\n            return true;\n        }\n        if (j < m - 1 && field[i][j + 1] === 'X') {\n            return true;\n        }\n    }\n    return false;\n};\n\nconst checkWin = () => {\n    for (let i = 0; i < n; i++) {\n        for (let j = 0; j < m; j++) {\n            if (check(i, j)) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n\nconsole.log(checkWin() ? 'WIN' : 'LOSE');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val m = sc.nextInt()\n    val a = Array(n) { Array(m) { sc.next().first() } }\n    val dp = Array(n + 1) { Array(m + 1) { false } }\n    dp[0][0] = true\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (a[i][j] == 'L') {\n                dp[i + 1][j] = dp[i][j] || dp[i + 1][j - 1]\n                dp[i][j + 1] = dp[i][j] || dp[i][j + 1]\n            } else if (a[i][j] == 'R') {\n                dp[i + 1][j] = dp[i][j] || dp[i + 1][j + 1]\n                dp[i][j - 1] = dp[i][j] || dp[i][j - 1]\n            } else {\n                dp[i + 1][j] = dp[i][j] || dp[i + 1][j - 1] || dp[i + 1][j + 1] || dp[i][j - 1] || dp[i][j + 1]\n            }\n        }\n    }\n    println(if (dp[n][m]) \"WIN\" else \"LOSE\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = explode(' ', fgets(STDIN));\n$n = array_map('intval', $n);\n$m = $n[0];\n$n = $n[1];\n$a = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a[] = str_split(fgets(STDIN));\n}\n$b = [];\nfor ($i = 0; $i < $m; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($a[$i][$j] == 'L') {\n            $b[$i][$j] = 1;\n            $b[$i][$j + 1] = 1;\n            $b[$i + 1][$j] = 1;\n            $b[$i + 1][$j + 1] = 1;\n        } elseif ($a[$i][$j] == 'R') {\n            $b[$i][$j] = 1;\n            $b[$i][$j - 1] = 1;\n            $b[$i + 1][$j] = 1;\n            $b[$i + 1][$j - 1] = 1;\n        } elseif ($a[$i][$j] == 'X') {\n            $b[$i][$j] = 1;\n            $b[$i][$j + 1] = 1;\n            $b[$i][$j - 1] = 1;\n            $b[$i + 1][$j] = 1;\n            $b[$i + 1][$j + 1] = 1;\n            $b[$i + 1][$j - 1] = 1;\n        }\n    }\n}\n$c = 0;\nfor ($i = 0; $i < $m; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($b[$i][$j] == 0) {\n            $c++;\n        }\n    }\n}\nif ($c == 0) {\n    echo 'WIN';\n} else {\n    echo 'LOSE';\n}\n?>'}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    char[][] a = new char[][](n, m);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %c \", &a[i][j]);\n        }\n    }\n    int[][] b = new int[][](n, m);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            b[i][j] = 0;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'L') {\n                b[i][j] = 1;\n                b[i][m - 1 - j] = 1;\n            } else if (a[i][j] == 'R') {\n                b[i][j] = 1;\n                b[n - 1 - i][j] = 1;\n            } else if (a[i][j] == 'X') {\n                b[i][j] = 1;\n                b[i][m - 1 - j] = 1;\n                b[n - 1 - i][j] = 1;\n                b[n - 1 - i][m - 1 - j] = 1;\n            }\n        }\n    }\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (b[i][j] == 0) {\n                count++;\n            }\n        }\n    }\n    if (count == 0) {\n        printf(\"WIN\\n\");\n    } else {\n        printf(\"LOSE\\n\");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nwhile (<>) {\n    chomp;\n    my @t = split;\n    $n = $t[0];\n    $m = $t[1];\n    @a = ();\n    for (my $i = 0; $i < $n; $i++) {\n        my @t = split;\n        for (my $j = 0; $j < $m; $j++) {\n            push @a, $t[$j];\n        }\n    }\n    break;\n}\n\nmy $win = 1;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($a[$i][$j] eq 'X') {\n            $win = 0;\n        }\n    }\n}\n\nif ($win) {\n    print \"WIN\\n\";\n} else {\n    print \"LOSE\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = String::new();\n    stdin.read_line(&mut n).unwrap();\n    let n: Vec<usize> = n.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut m = String::new();\n    stdin.read_line(&mut m).unwrap();\n    let m: Vec<Vec<char>> = m.split_whitespace().map(|x| x.chars().collect()).collect();\n\n    let mut win = true;\n    for i in 0..n {\n        for j in 0..m {\n            if m[i][j] == 'X' {\n                win = false;\n                break;\n            }\n        }\n    }\n\n    if win {\n        println!(\"WIN\");\n    } else {\n        println!(\"LOSE\");\n    }\n}\n\"\"\"}]"}
{"title":"D. Boboniu and Jianghu","description":"Since Boboniu finished building his Jianghu, he has been doing Kungfu on these mountains every day. Boboniu designs a map for his $$$n$$$ mountains. He uses $$$n-1$$$ roads to connect all $$$n$$$ mountains. Every pair of mountains is connected via roads.For the $$$i$$$-th mountain, Boboniu estimated the tiredness of doing Kungfu on the top of it as $$$t_i$$$. He also estimated the height of each mountain as $$$h_i$$$.A path is a sequence of mountains $$$M$$$ such that for each $$$i$$$ ($$$1 \\le i < |M|$$$), there exists a road between $$$M_i$$$ and $$$M_{i+1}$$$. Boboniu would regard the path as a challenge if for each $$$i$$$ ($$$1\\le i<|M|$$$), $$$h_{M_i}\\le h_{M_{i+1}}$$$.Boboniu wants to divide all $$$n-1$$$ roads into several challenges. Note that each road must appear in exactly one challenge, but a mountain may appear in several challenges. Boboniu wants to minimize the total tiredness to do all the challenges. The tiredness of a challenge $$$M$$$ is the sum of tiredness of all mountains in it, i.e. $$$\\sum_{i=1}^{|M|}t_{M_i}$$$. He asked you to find the minimum total tiredness. As a reward for your work, you'll become a guardian in his Jianghu.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer $$$n$$$ ($$$2 \\\\le n \\\\le 2 \\\\cdot 10^5$$$), denoting the number of the mountains.\nThe second line contains $$$n$$$ integers $$$t_1, t_2, \\\\ldots, t_n$$$ ($$$1 \\\\le t_i \\\\le 10^6$$$), denoting the tiredness for Boboniu to do Kungfu on each mountain.\nThe third line contains $$$n$$$ integers $$$h_1, h_2, \\\\ldots, h_n$$$ ($$$1 \\\\le h_i \\\\le 10^6$$$), denoting the height of each mountain.\nEach of the following $$$n - 1$$$ lines contains two integers $$$u_i$$$, $$$v_i$$$ ($$$1 \\\\le u_i, v_i \\\\le n, u_i \\\\neq v_i$$$), denoting the ends of the road. It's guaranteed that all mountains are connected via roads.\n","output_spec":"Print one integer: the smallest sum of tiredness of all challenges.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1394-D","difficulty":2800,"tags":["dp","greedy","sortings","trees"],"src_uid":"c6a1e6ad5134dc210f08bd9ab4104754","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint n, m;\nvector<int> t, h;\nvector<vector<int>> g;\n\nint main() {\n    cin >> n;\n    t.resize(n);\n    h.resize(n);\n    g.resize(n);\n    for (int i = 0; i < n; i++) {\n        cin >> t[i] >> h[i];\n    }\n    for (int i = 0; i < n - 1; i++) {\n        int u, v;\n        cin >> u >> v;\n        u--;\n        v--;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n\n    vector<int> dp(n, 1e9);\n    dp[0] = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j : g[i]) {\n            dp[j] = min(dp[j], dp[i] + t[j]);\n        }\n    }\n\n    int ans = 1e9;\n    for (int i = 0; i < n; i++) {\n        for (int j : g[i]) {\n            ans = min(ans, dp[i] + dp[j] + h[i] - h[j]);\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] t = new int[n];\n        int[] h = new int[n];\n        int[][] e = new int[n][n];\n        for (int i = 0; i < n; i++) {\n            t[i] = Integer.parseInt(br.readLine());\n        }\n        for (int i = 0; i < n; i++) {\n            h[i] = Integer.parseInt(br.readLine());\n        }\n        for (int i = 0; i < n - 1; i++) {\n            String[] s = br.readLine().split(\" \");\n            int u = Integer.parseInt(s[0]);\n            int v = Integer.parseInt(s[1]);\n            e[u - 1][v - 1] = 1;\n            e[v - 1][u - 1] = 1;\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            int[] dp = new int[n];\n            Arrays.fill(dp, Integer.MAX_VALUE);\n            dp[i] = 0;\n            PriorityQueue<int[]> pq = new PriorityQueue<>(Comparator.comparingInt(a -> a[1]));\n            pq.add(new int[]{i, 0});\n            while (!pq.isEmpty()) {\n                int[] cur = pq.poll();\n                int u = cur[0];\n                int d = cur[1];\n                for (int v = 0; v < n; v++) {\n                    if (e[u][v] == 1 && dp[v] > d + t[v]) {\n                        dp[v] = d + t[v];\n                        pq.add(new int[]{v, dp[v]});\n                    }\n                }\n            }\n            ans = Math.max(ans, dp[i]);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nt = list(map(int, input().split()))\nh = list(map(int, input().split()))\n\ng = [[] for _ in range(n)]\nfor i in range(n-1):\n    u, v = map(int, input().split())\n    g[u-1].append(v-1)\n    g[v-1].append(u-1)\n\ndef dfs(u, p, s):\n    global ans\n    ans = min(ans, s + t[u])\n    for v in g[u]:\n        if v != p:\n            dfs(v, u, s + t[u])\n\nans = 10**18\ndfs(0, -1, 0)\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] t = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n        int[] h = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n        var g = new Graph(n);\n        for (int i = 0; i < n - 1; i++)\n        {\n            int u = int.Parse(Console.ReadLine().Split(' ')[0]);\n            int v = int.Parse(Console.ReadLine().Split(' ')[1]);\n            g.AddEdge(u, v);\n        }\n        var dp = new int[n + 1];\n        dp[0] = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            dp[i] = int.MaxValue;\n            for (int j = 0; j < i; j++)\n            {\n                if (h[j] <= h[i])\n                {\n                    dp[i] = Math.Min(dp[i], dp[j] + t[i]);\n                }\n            }\n        }\n        Console.WriteLine(dp[n]);\n    }\n}\n\nclass Graph\n{\n    private int n;\n    private List<int>[] adj;\n\n    public Graph(int n)\n    {\n        this.n = n;\n        adj = new List<int>[n];\n        for (int i = 0; i < n; i++)\n        {\n            adj[i] = new List<int>();\n        }\n    }\n\n    public void AddEdge(int u, int v)\n    {\n        adj[u].Add(v);\n        adj[v].Add(u);\n    }\n\n    public IEnumerable<int> GetAdj(int u)\n    {\n        return adj[u];\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nt = gets.split.map(&:to_i)\nh = gets.split.map(&:to_i)\n\ng = Array.new(n+1) { Array.new(n+1, 0) }\n\n(1..n-1).each do |i|\n  u, v = gets.split.map(&:to_i)\n  g[u][v] = 1\n  g[v][u] = 1\nend\n\nq = []\n(1..n).each do |i|\n  q.push([i, t[i]])\nend\n\nq.sort! { |a, b| a[1] <=> b[1] }\n\nans = 0\n\nwhile q.size > 0 do\n  u, t = q.shift\n  \n  s = [u]\n  while s.size > 0 do\n    v = s.pop\n    \n    s.push(*g[v].select { |i, _| i != u && h[i] > h[v] })\n  end\n  \n  ans += t\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nconst\n  MAXN = 200000;\n\nvar\n  n, m, i, j, k, u, v: Integer;\n  t, h: Array[0..MAXN] of Integer;\n  adj: Array[0..MAXN, 0..MAXN] of Boolean;\n  dp: Array[0..MAXN, 0..MAXN] of Integer;\n\nprocedure dfs(u, p: Integer);\nvar\n  i: Integer;\nbegin\n  for i := 0 to m do\n    if adj[u, i] and (i <> p) then\n      dfs(i, u);\n  for i := 0 to m do\n    if adj[u, i] and (i <> p) then\n      dp[u, i] := max(dp[u, i], dp[i, u] + t[u]);\nend;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n    Read(t[i]);\n  for i := 0 to n - 1 do\n    Read(h[i]);\n  for i := 0 to n - 1 do\n    for j := 0 to m do\n      adj[i, j] := False;\n  for i := 0 to n - 1 do\n  begin\n    Readln(u, v);\n    adj[u - 1, v - 1] := True;\n    adj[v - 1, u - 1] := True;\n  end;\n  m := 0;\n  for i := 0 to n - 1 do\n    for j := 0 to m do\n      if adj[i, j] then\n        m := m + 1;\n  dp[0, 0] := t[0];\n  for i := 1 to n - 1 do\n    dp[i, 0] := dp[i - 1, 0] + t[i];\n  for i := 0 to m - 1 do\n    dfs(i, -1);\n  writeln(max(dp[n - 1, 0], dp[0, m - 1]));\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\tt := make([]int, n)\n\th := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&t[i])\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&h[i])\n\t}\n\tg := make([][]int, n)\n\tfor i := 0; i < n-1; i++ {\n\t\tvar u, v int\n\t\tfmt.Scan(&u, &v)\n\t\tu--\n\t\tv--\n\t\tg[u] = append(g[u], v)\n\t\tg[v] = append(g[v], u)\n\t}\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 0; j < len(g[i]); j++ {\n\t\t\tif h[i] < h[g[i][j]] {\n\t\t\t\tans += t[i]\n\t\t\t} else {\n\t\t\t\tans += t[g[i][j]]\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst t = input[1].split(' ').map(x => parseInt(x));\nconst h = input[2].split(' ').map(x => parseInt(x));\nconst g = new Map();\nfor (let i = 0; i < n; i++) {\n  g.set(i, []);\n}\nfor (let i = 0; i < n - 1; i++) {\n  const [u, v] = input[i + 3].split(' ').map(x => parseInt(x));\n  g.get(u).push(v);\n  g.get(v).push(u);\n}\nconst dp = new Array(n).fill(0);\nconst dfs = (u, p) => {\n  dp[u] = t[u];\n  for (const v of g.get(u)) {\n    if (v !== p) {\n      dfs(v, u);\n      dp[u] = Math.min(dp[u], dp[v] + t[u]);\n    }\n  }\n};\ndfs(0, -1);\nconst ans = 0;\nfor (let i = 0; i < n; i++) {\n  for (const v of g.get(i)) {\n    ans = Math.max(ans, dp[i] + dp[v] - 2 * t[i]);\n  }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val t = readLine().split(\" \").map { it.toInt() }.toIntArray()\n    val h = readLine().split(\" \").map { it.toInt() }.toIntArray()\n    val g = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until n - 1) {\n        val (u, v) = readLine().split(\" \").map { it.toInt() }\n        g[u - 1].add(v - 1)\n        g[v - 1].add(u - 1)\n    }\n    val dp = Array(n) { IntArray(n) { Int.MAX_VALUE } }\n    for (i in 0 until n) {\n        dp[i][i] = t[i]\n    }\n    for (k in 0 until n) {\n        for (i in 0 until n) {\n            for (j in 0 until n) {\n                if (i != j && dp[i][k] != Int.MAX_VALUE && dp[k][j] != Int.MAX_VALUE) {\n                    dp[i][j] = min(dp[i][j], dp[i][k] + dp[k][j])\n                }\n            }\n        }\n    }\n    val ans = Int.MAX_VALUE\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            if (i != j && h[i] < h[j]) {\n                ans = min(ans, dp[i][j])\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$n = intval(trim(fgets(STDIN)));\n$t = array_map('intval', explode(' ', trim(fgets(STDIN))));\n$h = array_map('intval', explode(' ', trim(fgets(STDIN))));\n$g = [];\nfor ($i = 0; $i < $n; $i++) {\n    $g[$i] = [$i, $t[$i], $h[$i]];\n}\nusort($g, function ($a, $b) {\n    return $a[2] - $b[2];\n});\n$ans = 0;\n$cur = 0;\n$cur_h = 0;\nfor ($i = 0; $i < $n - 1; $i++) {\n    $u = $g[$i][0];\n    $v = $g[$i + 1][0];\n    if ($g[$i][2] <= $g[$i + 1][2]) {\n        $ans += $g[$i][1];\n        $cur += $g[$i][1];\n        $cur_h = $g[$i][2];\n    } else {\n        $ans += $cur;\n        $cur = 0;\n        $cur_h = 0;\n    }\n}\necho $ans;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.stdio;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto t = to!(int[])(readln());\n    auto h = to!(int[])(readln());\n    auto g = new int[n][];\n    for (int i = 0; i < n - 1; i++) {\n        int u, v;\n        scanf(\" %d %d \", &u, &v);\n        u--;\n        v--;\n        g[u].push(v);\n        g[v].push(u);\n    }\n    auto dp = new int[n][];\n    for (int i = 0; i < n; i++) {\n        dp[i] = new int[n];\n        for (int j = 0; j < n; j++) {\n            dp[i][j] = 1000000000;\n        }\n    }\n    dp[0][0] = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            for (int k : g[j]) {\n                dp[i][k] = min(dp[i][k], dp[i][j] + t[k]);\n            }\n        }\n    }\n    int ans = 1000000000;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (h[i] < h[j]) {\n                ans = min(ans, dp[i][j] + t[i]);\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @t = <STDIN>;\nmy @h = <STDIN>;\nmy @e = ();\nfor (my $i = 0; $i < $n - 1; $i++) {\n    my ($u, $v) = <STDIN>;\n    $u--;\n    $v--;\n    push @e, [$u, $v];\n}\n\nmy @dp = ();\nfor (my $i = 0; $i < $n; $i++) {\n    $dp[$i] = [0, 0];\n}\n\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $n; $j++) {\n        if ($i == $j) {\n            next;\n        }\n        if ($h[$i] < $h[$j]) {\n            $dp[$j][0] = $dp[$j][0] + $t[$i];\n        } else {\n            $dp[$j][1] = $dp[$j][1] + $t[$i];\n        }\n    }\n}\n\nmy $ans = 10 ** 18;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $n; $j++) {\n        if ($i == $j) {\n            next;\n        }\n        if ($h[$i] < $h[$j]) {\n            $ans = min($ans, $dp[$i][0] + $dp[$j][1]);\n        } else {\n            $ans = min($ans, $dp[$i][1] + $dp[$j][0]);\n        }\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::{BTreeMap, BTreeSet};\n\nfn main() {\n    \/\/ \u8bfb\u5165\u6570\u636e\n    let n = read_line::<usize>();\n    let t = read_line::<Vec<usize>>();\n    let h = read_line::<Vec<usize>>();\n    let mut g = BTreeMap::new();\n    for i in 0..n - 1 {\n        let (u, v) = read_line::<Vec<usize>>().into_iter().map(|x| x as usize).collect_tuple().unwrap();\n        g.entry(u).or_insert(BTreeSet::new()).insert(v);\n        g.entry(v).or_insert(BTreeSet::new()).insert(u);\n    }\n\n    \/\/ \u8ba1\u7b97\u6bcf\u4e2a\u5c71\u5cf0\u7684\u9ad8\u5ea6\u5dee\n    let mut diff = vec![0; n];\n    for i in 0..n {\n        for &j in g.get(&i).unwrap() {\n            diff[i] = std::cmp::max(diff[i], h[j] - h[i]);\n        }\n    }\n\n    \/\/ \u8ba1\u7b97\u7b54\u6848\n    let mut ans = 0;\n    for i in 0..n {\n        ans += t[i] * diff[i];\n    }\n    println!(\"{}\", ans);\n}\n\nfn read_line<T>() -> Vec<T> {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().split_whitespace().map(|x| x.parse().unwrap()).collect()\n}\n\"\"\"}]"}
{"title":"B. RPG Protagonist","description":"You are playing one RPG from the 2010s. You are planning to raise your smithing skill, so you need as many resources as possible. So how to get resources? By stealing, of course.You decided to rob a town's blacksmith and you take a follower with you. You can carry at most $$$p$$$ units and your follower\u00a0\u2014 at most $$$f$$$ units.In the blacksmith shop, you found $$$cnt_s$$$ swords and $$$cnt_w$$$ war axes. Each sword weights $$$s$$$ units and each war axe\u00a0\u2014 $$$w$$$ units. You don't care what to take, since each of them will melt into one steel ingot.What is the maximum number of weapons (both swords and war axes) you and your follower can carry out from the shop?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer $$$t$$$ ($$$1 \\\\le t \\\\le 10^4$$$)\u00a0\u2014 the number of test cases.\nThe first line of each test case contains two integers $$$p$$$ and $$$f$$$ ($$$1 \\\\le p, f \\\\le 10^9$$$)\u00a0\u2014 yours and your follower's capacities.\nThe second line of each test case contains two integers $$$cnt_s$$$ and $$$cnt_w$$$ ($$$1 \\\\le cnt_s, cnt_w \\\\le 2 \\\\cdot 10^5$$$)\u00a0\u2014 the number of swords and war axes in the shop.\nThe third line of each test case contains two integers $$$s$$$ and $$$w$$$ ($$$1 \\\\le s, w \\\\le 10^9$$$)\u00a0\u2014 the weights of each sword and each war axe.\nIt's guaranteed that the total number of swords and the total number of war axes in all test cases don't exceed $$$2 \\\\cdot 10^5$$$.\n","output_spec":"For each test case, print the maximum number of weapons (both swords and war axes) you and your follower can carry.\n","notes":null,"sample_inputs":[],"sample_outputs":[],"id":"1400-B","difficulty":1700,"tags":["brute+force","greedy","math"],"src_uid":"ee32db8e7cdd9561d9215651ff8a262e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int t;\n    cin >> t;\n    while (t--) {\n        int p, f;\n        cin >> p >> f;\n        int n, m;\n        cin >> n >> m;\n        int s, w;\n        cin >> s >> w;\n        int ans = 0;\n        ans = min(n, p \/ s);\n        n -= ans;\n        ans = min(m, f \/ w);\n        m -= ans;\n        ans += min(n, m);\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        for (int i = 0; i < t; i++) {\n            int p = sc.nextInt();\n            int f = sc.nextInt();\n            int n = sc.nextInt();\n            int m = sc.nextInt();\n            int s = sc.nextInt();\n            int w = sc.nextInt();\n            int ans = 0;\n            if (s < w) {\n                ans = Math.min(n, p \/ s) + Math.min(m, f \/ s);\n            } else {\n                ans = Math.min(n, p \/ w) + Math.min(m, f \/ w);\n            }\n            System.out.println(ans);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nt = int(input())\nfor _ in range(t):\n    p, f = map(int, input().split())\n    s, w = map(int, input().split())\n    c = min(p, f)\n    print(min(c \/\/ s, s + w, s * (c \/\/ s) + w * (c \/\/ s - 1)))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n\nint main() {\n    int t;\n    scanf(\" %d \", &t);\n    for (int i = 0; i < t; i++) {\n        int p, f;\n        scanf(\" %d %d \", &p, &f);\n        int cnt_s, cnt_w;\n        scanf(\" %d %d \", &cnt_s, &cnt_w);\n        int s, w;\n        scanf(\" %d %d \", &s, &w);\n        int ans = 0;\n        if (s < w) {\n            ans = (p + f) \/ s;\n        } else {\n            ans = (p + f) \/ w;\n        }\n        printf(\" %d \", ans);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; i++) {\n        int p, f;\n        cin >> p >> f;\n        int cnt_s, cnt_w;\n        cin >> cnt_s >> cnt_w;\n        int s, w;\n        cin >> s >> w;\n        int ans = 0;\n        if (s < w) {\n            ans = min(cnt_s, p \/ s) + min(cnt_w, f \/ w);\n        } else {\n            ans = min(cnt_s, f \/ s) + min(cnt_w, p \/ w);\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nt = gets.to_i\nfor _ in 0..t-1 do\n  p, f = gets.split.map(&:to_i)\n  ns, nw = gets.split.map(&:to_i)\n  s, w = gets.split.map(&:to_i)\n  if s < w\n    print [ns, p].min\n  else\n    print [nw, f].min\n  end\n  print \"\\n\"\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 200000;\nvar\n  n, p, f, cnt_s, cnt_w, s, w: longint;\n  a: array[0..maxn] of longint;\n  i, j, ans: longint;\nbegin\n  readln(n);\n  for i := 1 to n do begin\n    readln(p, f);\n    readln(cnt_s, cnt_w);\n    readln(s, w);\n    a[0] := 0;\n    for j := 1 to cnt_s do\n      a[j] := a[j - 1] + s;\n    for j := 1 to cnt_w do\n      a[j + cnt_s] := a[j + cnt_s - 1] + w;\n    ans := 0;\n    for j := 0 to cnt_s + cnt_w do\n      if a[j] <= p + f then\n        ans := max(ans, j);\n    writeln(ans);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar t int\n\tfmt.Scanf(\"%d\\n\", &t)\n\tfor i := 0; i < t; i++ {\n\t\tvar p, f int\n\t\tfmt.Scanf(\"%d %d\\n\", &p, &f)\n\t\tvar cnts, cntw int\n\t\tfmt.Scanf(\"%d %d\\n\", &cnts, &cntw)\n\t\tvar s, w int\n\t\tfmt.Scanf(\"%d %d\\n\", &s, &w)\n\t\tvar ans int\n\t\tif s < w {\n\t\t\tans = int(math.Min(float64(p), float64(cnts)))\n\t\t\tp -= ans * s\n\t\t\tans += int(math.Min(float64(f), float64(cntw)))\n\t\t} else {\n\t\t\tans = int(math.Min(float64(p), float64(cntw)))\n\t\t\tp -= ans * w\n\t\t\tans += int(math.Min(float64(f), float64(cnts)))\n\t\t}\n\t\tfmt.Println(ans)\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nt = int(input())\nfor _ in range(t):\n    p, f = map(int, input().split())\n    s, w = map(int, input().split())\n    c = min(p, f)\n    print(min(c \/\/ s, s + w - c \/\/ w))\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val t = sc.nextInt()\n    for (i in 0 until t) {\n        val (p, f) = sc.nextInt() to sc.nextInt()\n        val (cnt_s, cnt_w) = sc.nextInt() to sc.nextInt()\n        val (s, w) = sc.nextInt() to sc.nextInt()\n        val max = Math.min(p, f)\n        val s_cnt = Math.min(cnt_s, max \/ s)\n        val w_cnt = Math.min(cnt_w, max \/ w)\n        println(s_cnt + w_cnt)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$t = intval(fgets(STDIN));\n\nfor ($i = 0; $i < $t; $i++) {\n    $p = intval(fgets(STDIN));\n    $f = intval(fgets(STDIN));\n    $cnt_s = intval(fgets(STDIN));\n    $cnt_w = intval(fgets(STDIN));\n    $s = intval(fgets(STDIN));\n    $w = intval(fgets(STDIN));\n\n    $max = min($p, $f);\n    $max = min($max, $cnt_s);\n    $max = min($max, $cnt_w);\n\n    echo $max . PHP_EOL;\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int t;\n    scanf(\" %d \", &t);\n    while (t--) {\n        int p, f;\n        scanf(\" %d %d \", &p, &f);\n        int n, m;\n        scanf(\" %d %d \", &n, &m);\n        int s, w;\n        scanf(\" %d %d \", &s, &w);\n        int ans = 0;\n        if (s < w) {\n            ans = min(p, n) + min(f, m);\n        } else {\n            ans = min(p, m) + min(f, n);\n        }\n        printf(\" %d \", ans);\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $t = <STDIN>;\n\nfor (my $i = 0; $i < $t; $i++) {\n    my @p = split \/ \/, <STDIN>;\n    my @c = split \/ \/, <STDIN>;\n    my @w = split \/ \/, <STDIN>;\n\n    my $s = $p[0] + $p[1];\n    my $s1 = $c[0] * $w[0];\n    my $s2 = $c[1] * $w[1];\n\n    if ($s1 > $s2) {\n        print $c[0];\n    } else {\n        print $c[1];\n    }\n\n    print \"\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut t = String::new();\n    io::stdin().read_line(&mut t).unwrap();\n    let t: usize = t.trim().parse().unwrap();\n    for _ in 0..t {\n        let mut p = String::new();\n        io::stdin().read_line(&mut p).unwrap();\n        let p: Vec<usize> = p.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let mut cnt_s = String::new();\n        io::stdin().read_line(&mut cnt_s).unwrap();\n        let cnt_s: Vec<usize> = cnt_s.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let mut s = String::new();\n        io::stdin().read_line(&mut s).unwrap();\n        let s: Vec<usize> = s.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let mut w = String::new();\n        io::stdin().read_line(&mut w).unwrap();\n        let w: Vec<usize> = w.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n        let mut ans = 0;\n        if p[0] >= s[0] {\n            ans = cnt_s[0];\n        } else {\n            ans = (p[0] \/ s[0]) * cnt_s[0];\n            if p[0] % s[0] != 0 {\n                ans += 1;\n            }\n        }\n        if p[1] >= w[0] {\n            ans += cnt_w[0];\n        } else {\n            ans += (p[1] \/ w[0]) * cnt_w[0];\n            if p[1] % w[0] != 0 {\n                ans += 1;\n            }\n        }\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"A. Amusing Joke","description":"So, the New Year holidays are over. Santa Claus and his colleagues can take a rest and have guests at last. When two \"New Year and Christmas Men\" meet, thear assistants cut out of cardboard the letters from the guest's name and the host's name in honor of this event. Then the hung the letters above the main entrance. One night, when everyone went to bed, someone took all the letters of our characters' names. Then he may have shuffled the letters and put them in one pile in front of the door.The next morning it was impossible to find the culprit who had made the disorder. But everybody wondered whether it is possible to restore the names of the host and his guests from the letters lying at the door? That is, we need to verify that there are no extra letters, and that nobody will need to cut more letters.Help the \"New Year and Christmas Men\" and their friends to cope with this problem. You are given both inscriptions that hung over the front door the previous night, and a pile of letters that were found at the front door next morning.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input file consists of three lines: the first line contains the guest's name, the second line contains the name of the residence host and the third line contains letters in a pile that were found at the door in the morning. All lines are not empty and contain only uppercase Latin letters. The length of each line does not exceed 100.\n","output_spec":"Print \"YES\" without the quotes, if the letters in the pile could be permuted to make the names of the \"New Year and Christmas Men\". Otherwise, print \"NO\" without the quotes.\n","notes":"In the first sample the letters written in the last line can be used to write the names and there won't be any extra letters left.\nIn the second sample letter \"P\" is missing from the pile and there's an extra letter \"L\".\nIn the third sample there's an extra letter \"L\".\n","sample_inputs":["SANTACLAUS\nDEDMOROZ\nSANTAMOROZDEDCLAUS\n","PAPAINOEL\nJOULUPUKKI\nJOULNAPAOILELUPUKKI\n","BABBONATALE\nFATHERCHRISTMAS\nBABCHRISTMASBONATALLEFATHER\n"],"sample_outputs":["YES\n","NO\n","NO\n"],"id":"141-A","difficulty":800,"tags":["implementation","sortings","strings"],"src_uid":"b6456a39d38fabcd25267793ed94d90c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string guest, host, pile;\n    cin >> guest >> host >> pile;\n\n    int g[26] = {0}, h[26] = {0}, p[26] = {0};\n    for (int i = 0; i < guest.length(); i++) {\n        g[guest[i] - 'A']++;\n    }\n    for (int i = 0; i < host.length(); i++) {\n        h[host[i] - 'A']++;\n    }\n    for (int i = 0; i < pile.length(); i++) {\n        p[pile[i] - 'A']++;\n    }\n\n    for (int i = 0; i < 26; i++) {\n        if (g[i] + h[i] != p[i]) {\n            cout << \"NO\" << endl;\n            return 0;\n        }\n    }\n\n    cout << \"YES\" << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String guest = scanner.nextLine();\n        String host = scanner.nextLine();\n        String letters = scanner.nextLine();\n\n        int[] guestCount = new int[26];\n        int[] hostCount = new int[26];\n        int[] lettersCount = new int[26];\n\n        for (char letter : guest.toCharArray()) {\n            guestCount[letter - 'A']++;\n        }\n        for (char letter : host.toCharArray()) {\n            hostCount[letter - 'A']++;\n        }\n        for (char letter : letters.toCharArray()) {\n            lettersCount[letter - 'A']++;\n        }\n\n        boolean isPossible = true;\n        for (int i = 0; i < 26; i++) {\n            if (guestCount[i] + hostCount[i] != lettersCount[i]) {\n                isPossible = false;\n                break;\n            }\n        }\n\n        System.out.println(isPossible ? \"YES\" : \"NO\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    s1 = input()\n    s2 = input()\n    s3 = input()\n    s1 = set(s1)\n    s2 = set(s2)\n    s3 = set(s3)\n    s = s1 | s2 | s3\n    if len(s) == len(s1) + len(s2) + len(s3):\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] names = new string[3];\n        for (int i = 0; i < 3; i++)\n        {\n            names[i] = Console.ReadLine();\n        }\n        string[] letters = names[2].ToCharArray();\n        Array.Sort(letters);\n        string guest = names[0];\n        string host = names[1];\n        string guestLetters = guest.ToCharArray();\n        string hostLetters = host.ToCharArray();\n        Array.Sort(guestLetters);\n        Array.Sort(hostLetters);\n        bool isEqual = true;\n        for (int i = 0; i < guestLetters.Length; i++)\n        {\n            if (guestLetters[i] != letters[i])\n            {\n                isEqual = false;\n                break;\n            }\n        }\n        for (int i = 0; i < hostLetters.Length; i++)\n        {\n            if (hostLetters[i] != letters[i + guestLetters.Length])\n            {\n                isEqual = false;\n                break;\n            }\n        }\n        if (isEqual)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main\n    guest, host, letters = gets.chomp, gets.chomp, gets.chomp\n    guest_letters = guest.split('')\n    host_letters = host.split('')\n    letters_set = letters.split('').to_set\n    if guest_letters.to_set.union(host_letters.to_set) == letters_set\n        puts 'YES'\n    else\n        puts 'NO'\n    end\nend\n\nmain()\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Santa;\n\nuses\n  SysUtils;\n\nvar\n  s1, s2, s3: string;\n  i, j, k: integer;\n  a: array[0..255] of integer;\n\nbegin\n  readln(s1);\n  readln(s2);\n  readln(s3);\n\n  for i := 0 to 255 do\n    a[i] := 0;\n\n  for i := 1 to length(s1) do\n    a[ord(s1[i])] := a[ord(s1[i])] + 1;\n\n  for i := 1 to length(s2) do\n    a[ord(s2[i])] := a[ord(s2[i])] + 1;\n\n  for i := 1 to length(s3) do\n    a[ord(s3[i])] := a[ord(s3[i])] - 1;\n\n  for i := 0 to 255 do\n    if a[i] < 0 then\n    begin\n      writeln('NO');\n      exit;\n    end;\n\n  writeln('YES');\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var guest, host, pile string\\n    fmt.Scanf(\\\"%s\\\\n%s\\\\n%s\\\\n\\\", &guest, &host, &pile)\\n    g := make(map[rune]int)\\n    h := make(map[rune]int)\\n    for _, v := range guest { g[v]++ }\\n    for _, v := range host { h[v]++ }\\n    for _, v := range pile { g[v]-- ; h[v]-- }\\n    for k, v := range g { if v != 0 { fmt.Println(\\\"NO\\\") ; return }}\\n    for k, v := range h { if v != 0 { fmt.Println(\\\"NO\\\") ; return }}\\n    fmt.Println(\\\"YES\\\")\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst lines = input.split('\\n');\nconst guest = lines[0];\nconst host = lines[1];\nconst letters = lines[2];\nconst guestLetters = new Set(guest);\nconst hostLetters = new Set(host);\nconst lettersSet = new Set(letters);\nconst missingLetters = guestLetters.filter(letter => !lettersSet.has(letter));\nconst extraLetters = lettersSet.filter(letter => !guestLetters.has(letter) && !hostLetters.has(letter));\nif (missingLetters.length === 0 && extraLetters.length === 0) {\n  console.log('YES');\n} else {\n  console.log('NO');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (guest, host, letters) = readLine()!!.split(\"\\n\")\n    val guestSet = guest.toSet()\n    val hostSet = host.toSet()\n    val lettersSet = letters.toSet()\n    val guestLetters = guestSet.intersect(lettersSet)\n    val hostLetters = hostSet.intersect(lettersSet)\n    if (guestLetters.size == guest.length && hostLetters.size == host.length) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$guest = trim(fgets(STDIN));\n$host = trim(fgets(STDIN));\n$letters = trim(fgets(STDIN));\n$letters = str_split($letters);\n$guest_letters = str_split($guest);\n$host_letters = str_split($host);\n$letters_count = count($letters);\n$guest_count = count($guest_letters);\n$host_count = count($host_letters);\nif ($letters_count == $guest_count + $host_count) {\n    $letters_array = array_merge($guest_letters, $host_letters);\n    $letters_array = array_unique($letters_array);\n    if (count($letters_array) == $letters_count) {\n        echo 'YES';\n    } else {\n        echo 'NO';\n    }\n} else {\n    echo 'NO';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string[] names = [stdin.readln(), stdin.readln(), stdin.readln()];\n    string[] letters = names[2].split('');\n    string[] guest = names[0].split('');\n    string[] host = names[1].split('');\n    string[] guest_letters = guest.sort();\n    string[] host_letters = host.sort();\n    string[] letters_sorted = letters.sort();\n\n    if (guest_letters == letters_sorted && host_letters == letters_sorted)\n        writeln('YES');\n    else\n        writeln('NO');\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $guest = <STDIN>;\nchomp $guest;\nmy $host = <STDIN>;\nchomp $host;\nmy $pile = <STDIN>;\nchomp $pile;\n\nmy @guest_letters = split(\/\/, $guest);\nmy @host_letters = split(\/\/, $host);\nmy @pile_letters = split(\/\/, $pile);\n\nmy @all_letters = @guest_letters + @host_letters;\n\nmy %letters_count;\nforeach my $letter (@all_letters) {\n    $letters_count{$letter}++;\n}\n\nforeach my $letter (@pile_letters) {\n    $letters_count{$letter}--;\n}\n\nforeach my $letter (keys %letters_count) {\n    if ($letters_count{$letter} < 0) {\n        print \"NO\\n\";\n        exit;\n    }\n}\n\nprint \"YES\\n\";\n\"}\"]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let mut guest_name = String::new();\n    let mut host_name = String::new();\n    let mut pile_of_letters = String::new();\n\n    std::io::stdin().read_line(&mut guest_name).unwrap();\n    std::io::stdin().read_line(&mut host_name).unwrap();\n    std::io::stdin().read_line(&mut pile_of_letters).unwrap();\n\n    let guest_name_chars: Vec<char> = guest_name.chars().collect();\n    let host_name_chars: Vec<char> = host_name.chars().collect();\n    let pile_of_letters_chars: Vec<char> = pile_of_letters.chars().collect();\n\n    let mut guest_name_map: HashMap<char, i32> = HashMap::new();\n    let mut host_name_map: HashMap<char, i32> = HashMap::new();\n    let mut pile_of_letters_map: HashMap<char, i32> = HashMap::new();\n\n    for char in guest_name_chars {\n        let count = guest_name_map.entry(char).or_insert(0);\n        *count += 1;\n    }\n\n    for char in host_name_chars {\n        let count = host_name_map.entry(char).or_insert(0);\n        *count += 1;\n    }\n\n    for char in pile_of_letters_chars {\n        let count = pile_of_letters_map.entry(char).or_insert(0);\n        *count += 1;\n    }\n\n    let mut is_valid = true;\n\n    for (char, count) in guest_name_map {\n        if pile_of_letters_map.get(char).is_none() || pile_of_letters_map.get(char).unwrap() < count {\n            is_valid = false;\n            break;\n        }\n    }\n\n    for (char, count) in host_name_map {\n        if pile_of_letters_map.get(char).is_none() || pile_of_letters_map.get(char).unwrap() < count {\n            is_valid = false;\n            break;\n        }\n    }\n\n    if is_valid {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Help Farmer","description":"Once upon a time in the Kingdom of Far Far Away lived Sam the Farmer. Sam had a cow named Dawn and he was deeply attached to her. Sam would spend the whole summer stocking hay to feed Dawn in winter. Sam scythed hay and put it into haystack. As Sam was a bright farmer, he tried to make the process of storing hay simpler and more convenient to use. He collected the hay into cubical hay blocks of the same size. Then he stored the blocks in his barn. After a summer spent in hard toil Sam stored A\u00b7B\u00b7C hay blocks and stored them in a barn as a rectangular parallelepiped A layers high. Each layer had B rows and each row had C blocks.At the end of the autumn Sam came into the barn to admire one more time the hay he'd been stacking during this hard summer. Unfortunately, Sam was horrified to see that the hay blocks had been carelessly scattered around the barn. The place was a complete mess. As it turned out, thieves had sneaked into the barn. They completely dissembled and took away a layer of blocks from the parallelepiped's front, back, top and sides. As a result, the barn only had a parallelepiped containing (A-1)\u00d7(B-2)\u00d7(C-2) hay blocks. To hide the evidence of the crime, the thieves had dissembled the parallelepiped into single 1\u00d71\u00d71 blocks and scattered them around the barn. After the theft Sam counted n hay blocks in the barn but he forgot numbers A, B \u0438 C.Given number n, find the minimally possible and maximally possible number of stolen hay blocks.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The only line contains integer n from the problem's statement (1\u2264n\u226410^9).\n","output_spec":"Print space-separated minimum and maximum number of hay blocks that could have been stolen by the thieves.\nNote that the answer to the problem can be large enough, so you must use the 64-bit integer type for calculations. Please, do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specificator.\n","notes":"Let's consider the first sample test. If initially Sam has a parallelepiped consisting of 32=2\u00d74\u00d74 hay blocks in his barn, then after the theft the barn has 4=(2-1)\u00d7(4-2)\u00d7(4-2) hay blocks left. Thus, the thieves could have stolen 32-4=28 hay blocks. If Sam initially had a parallelepiped consisting of 45=5\u00d73\u00d73 hay blocks in his barn, then after the theft the barn has 4=(5-1)\u00d7(3-2)\u00d7(3-2) hay blocks left. Thus, the thieves could have stolen 45-4=41 hay blocks. No other variants of the blocks' initial arrangement (that leave Sam with exactly 4 blocks after the theft) can permit the thieves to steal less than 28 or more than 41 blocks.\n","sample_inputs":["4\n","7\n","12\n"],"sample_outputs":["28 41\n","47 65\n","48 105\n"],"id":"142-A","difficulty":1600,"tags":["brute+force","math"],"src_uid":"2468eead8acc5b8f5ddc51bfa2bd4fb7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int n;\\n    cin >> n;\\n    cout << (n - 1) * (n - 2) * (n - 3) << ' ' << (n - 1) * (n - 2) * (n - 3) + 6 * (n - 1) * (n - 2) + 3 * (n - 1) << endl;\\n    return 0;\\n}\\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a = (int) Math.sqrt(n);\n        int b = (int) Math.sqrt(n \/ a);\n        int c = (int) Math.sqrt(n \/ (a * b));\n        System.out.println((a - 1) * (b - 2) * (c - 2) + 1);\n        System.out.println(a * b * c - (a - 1) * (b - 2) * (c - 2));\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nprint(n - 2**3, n - 2**2)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\\n\\nint main() {\\n    int n, a, b, c, min, max;\\n    scanf(\" %d \", &n);\\n    a = n \/ 81;\\n    b = (n - a * 81) \/ 27;\\n    c = (n - a * 81 - b * 27) \/ 9;\\n    min = a * 81 + b * 27 + c * 9;\\n    max = a * 81 + b * 27 + c * 9 + 81 + 27 + 9;\\n    printf(\" %d %d \", min, max);\\n    return 0;\\n}\\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace HayBlocks\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int min = 0;\n            int max = 0;\n            for (int i = 1; i <= n; i++)\n            {\n                for (int j = 1; j <= n; j++)\n                {\n                    for (int k = 1; k <= n; k++)\n                    {\n                        if (i * j * k == n)\n                        {\n                            min = Math.Min(min, i * j * k - (i - 1) * (j - 2) * (k - 2));\n                            max = Math.Max(max, i * j * k - (i - 1) * (j - 2) * (k - 2));\n                        }\n                    }\n                }\n            }\n            Console.WriteLine(\"{0} {1}\", min, max);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\na = 1\nb = 1\nc = 1\n\nwhile n > 0\n  if n >= a * b * c\n    n -= a * b * c\n    a += 1\n    b += 1\n    c += 1\n  else\n    if a > b\n      a -= 1\n    elsif b > c\n      b -= 1\n    else\n      c -= 1\n    end\n  end\nend\n\nputs a * b * c\nputs (a - 1) * (b - 2) * (c - 2)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program t;\nuses SysUtils;\nvar\n  n, a, b, c, m, k, i, j: Int64;\nbegin\n  Readln(n);\n  a := 1;\n  b := 1;\n  c := 1;\n  m := 0;\n  k := 0;\n  for i := 1 to n do\n  begin\n    if (n mod i = 0) then\n    begin\n      a := a + 1;\n      b := b + 1;\n      c := c + 1;\n      m := m + i;\n    end;\n  end;\n  for i := 1 to a do\n  begin\n    for j := 1 to b do\n    begin\n      for k := 1 to c do\n      begin\n        if (i * j * k = n) then\n        begin\n          Writeln(m - i * j * k, m);\n          Exit;\n        end;\n      end;\n    end;\n  end;\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int64\\n    fmt.Scan(&n)\\n    fmt.Println(n-(n\/2)-(n\/3)-(n\/4))\\n    fmt.Println(n-(n\/2)-(n\/3)-(n\/4)+1)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readLine());\\nconsole.log(Math.max(0, n - 64), Math.min(n, 64));\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"import kotlin.math.max\\nimport kotlin.math.min\\n\\nfun main() {\\n    val n = readLine()!!.toInt()\\n    val a = max(1, n \/ 64)\\n    val b = max(1, n \/ 32)\\n    val c = max(1, n \/ 16)\\n    val d = max(1, n \/ 8)\\n    val e = max(1, n \/ 4)\\n    val f = max(1, n \/ 2)\\n    println(min(a * b * c * d * e * f, n))\\n    println(max(a * b * c * d * e * f - 63, n))\\n}\\n\"}]}","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = floor(sqrt(sqrt($n)));\n$b = floor(sqrt($n \/ $a));\n$c = floor($n \/ $a \/ $b);\necho $a * $b * $c - $n . ' ' . $a * $b * $c . PHP_EOL;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int64 n;\n    scanf(\" %I64d \", &n);\n    int64 a = floor(sqrt(n));\n    int64 b = floor(sqrt(n \/ a));\n    int64 c = floor(n \/ (a * b));\n    int64 min = (a - 1) * (b - 2) * (c - 2);\n    int64 max = a * b * c - min;\n    printf(\" %I64d %I64d \", min, max);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\n\nmy $min = 0;\nmy $max = 0;\n\nfor (my $i = 1; $i <= 1000000000; $i++) {\n    my $a = $i;\n    my $b = $i;\n    my $c = $i;\n\n    while ($a * $b * $c < $n) {\n        $a++;\n        $b++;\n        $c++;\n    }\n\n    if ($a * $b * $c == $n) {\n        $min = $a * $b * $c - (($a - 1) * ($b - 2) * ($c - 2));\n        $max = $a * $b * $c;\n        last;\n    }\n}\n\nprint \"$min $max\\n\";\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let n: i64 = std::io::stdin().read_line().unwrap().trim().parse().unwrap();\n    let mut a = 0;\n    let mut b = 0;\n    let mut c = 0;\n    for i in 1..n {\n        if i * i * i == n {\n            a = i;\n            b = i;\n            c = i;\n            break;\n        }\n    }\n    if a == 0 {\n        println!(\"{} {}\", n - (a - 1) * (b - 2) * (c - 2), n);\n    } else {\n        println!(\"{} {}\", n - (a - 1) * (b - 2) * (c - 2), n - (a - 2) * (b - 1) * (c - 1));\n    }\n}\"}]"}
{"title":"D. Help Shrek and Donkey 2","description":"Having learned (not without some help from the Codeforces participants) to play the card game from the previous round optimally, Shrek and Donkey (as you may remember, they too live now in the Kingdom of Far Far Away) have decided to quit the boring card games and play with toy soldiers.The rules of the game are as follows: there is a battlefield, its size equals n\u00d7m squares, some squares contain the toy soldiers (the green ones belong to Shrek and the red ones belong to Donkey). Besides, each of the n lines of the area contains not more than two soldiers. During a move a players should select not less than 1 and not more than k soldiers belonging to him and make them either attack or retreat.An attack is moving all of the selected soldiers along the lines on which they stand in the direction of an enemy soldier, if he is in this line. If this line doesn't have an enemy soldier, then the selected soldier on this line can move in any direction during the player's move. Each selected soldier has to move at least by one cell. Different soldiers can move by a different number of cells. During the attack the soldiers are not allowed to cross the cells where other soldiers stand (or stood immediately before the attack). It is also not allowed to go beyond the battlefield or finish the attack in the cells, where other soldiers stand (or stood immediately before attack).A retreat is moving all of the selected soldiers along the lines on which they stand in the direction from an enemy soldier, if he is in this line. The other rules repeat the rules of the attack.For example, let's suppose that the original battlefield had the form (here symbols \"G\" mark Shrek's green soldiers and symbols \"R\" mark Donkey's red ones):  -G-R--R-G- Let's suppose that k=2 and Shrek moves first. If he decides to attack, then after his move the battlefield can look like that:  --GR-     --GR-     -G-R--RG--     -R-G-     -RG-- If in the previous example Shrek decides to retreat, then after his move the battlefield can look like that:  G--R-     G--R-     -G-R--R--G     -R-G-     -R--G On the other hand, the followings fields cannot result from Shrek's correct move:  G--R-     ---RG     --GR--RG--     -R-G-     GR--- Shrek starts the game. To make a move means to attack or to retreat by the rules. A player who cannot make a move loses and his opponent is the winner. Determine the winner of the given toy soldier game if Shrek and Donkey continue to be under the yellow pills from the last rounds' problem. Thus, they always play optimally (that is, they try to win if it is possible, or finish the game in a draw, by ensuring that it lasts forever, if they cannot win).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains space-separated integers n, m and k (1\u2264n,m,k\u2264100). Then n lines contain m characters each. These characters belong to the set {\"-\", \"G\", \"R\"}, denoting, respectively, a battlefield's free cell, a cell occupied by Shrek's soldiers and a cell occupied by Donkey's soldiers.\nIt is guaranteed that each line contains no more than two soldiers.\n","output_spec":"Print \"First\" (without the quotes) if Shrek wins in the given Toy Soldier game. If Donkey wins, print \"Second\" (without the quotes). If the game continues forever, print \"Draw\" (also without the quotes).\n","notes":null,"sample_inputs":["2 3 1\nR-G\nRG-\n","3 3 2\nG-R\nR-G\nG-R\n","2 3 1\n-R-\n-G-\n","2 5 2\n-G-R-\n-R-G-\n"],"sample_outputs":["First\n","Second\n","Draw\n","First\n"],"id":"142-D","difficulty":2600,"tags":["games"],"src_uid":"69062f7c9b834e925ab23ebc2da96b52","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint n, m, k;\nchar a[100][100];\nint dp[100][100][100];\n\nint main() {\n    cin >> n >> m >> k;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            for (int l = 1; l <= k; l++) {\n                if (a[i][j] == 'G') {\n                    dp[i][j][l] = 1;\n                } else if (a[i][j] == 'R') {\n                    dp[i][j][l] = 0;\n                } else {\n                    dp[i][j][l] = dp[i - 1][j][l - 1] + dp[i][j - 1][l - 1] - dp[i - 1][j - 1][l - 1];\n                }\n            }\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            for (int l = 1; l <= k; l++) {\n                if (dp[i][j][l] == 1) {\n                    ans = 1;\n                    break;\n                }\n            }\n        }\n    }\n\n    if (ans == 1) {\n        cout << \"First\" << endl;\n    } else {\n        cout << \"Second\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        int[][] a = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            String s = sc.next();\n            for (int j = 0; j < m; j++) {\n                a[i][j] = s.charAt(j) == 'G' ? 1 : s.charAt(j) == 'R' ? 2 : 0;\n            }\n        }\n        int[][] b = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                b[i][j] = a[i][j];\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (a[i][j] == 1) {\n                    for (int k1 = 0; k1 < k; k1++) {\n                        for (int k2 = 0; k2 < k; k2++) {\n                            if (i + k1 < n && j + k2 < m && a[i + k1][j + k2] == 2) {\n                                b[i + k1][j + k2] = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (a[i][j] == 2) {\n                    for (int k1 = 0; k1 < k; k1++) {\n                        for (int k2 = 0; k2 < k; k2++) {\n                            if (i - k1 >= 0 && j - k2 >= 0 && a[i - k1][j - k2] == 1) {\n                                b[i - k1][j - k2] = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (b[i][j] != 0) {\n                    System.out.println(\"Draw\");\n                    return;\n                }\n            }\n        }\n        System.out.println(\"First\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,k=map(int,input().split())\na=[list(input()) for i in range(n)]\n\ndef check(a):\n    for i in range(n):\n        for j in range(m):\n            if a[i][j]=='G':\n                if i-1>=0 and a[i-1][j]=='R':\n                    return True\n                if i+1<n and a[i+1][j]=='R':\n                    return True\n                if j-1>=0 and a[i][j-1]=='R':\n                    return True\n                if j+1<m and a[i][j+1]=='R':\n                    return True\n    return False\n\ndef move(a,k):\n    for i in range(n):\n        for j in range(m):\n            if a[i][j]=='G':\n                if i-1>=0 and a[i-1][j]=='R':\n                    a[i-1][j]='G'\n                    a[i][j]='-'\n                elif i+1<n and a[i+1][j]=='R':\n                    a[i+1][j]='G'\n                    a[i][j]='-'\n                elif j-1>=0 and a[i][j-1]=='R':\n                    a[i][j-1]='G'\n                    a[i][j]='-'\n                elif j+1<m and a[i][j+1]=='R':\n                    a[i][j+1]='G'\n                    a[i][j]='-'\n\ndef main():\n    if check(a):\n        print('First')\n        return\n    for i in range(n):\n        for j in range(m):\n            if a[i][j]=='R':\n                if i-1>=0 and a[i-1][j]=='G':\n                    move(a,k)\n                    break\n                if i+1<n and a[i+1][j]=='G':\n                    move(a,k)\n                    break\n                if j-1>=0 and a[i][j-1]=='G':\n                    move(a,k)\n                    break\n                if j+1<m and a[i][j+1]=='G':\n                    move(a,k)\n                    break\n    print('Second')\n\nif __name__=='__main__':\n    main()\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ToySoldiers\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int m = int.Parse(input[1]);\n            int k = int.Parse(input[2]);\n            char[][] field = new char[n][];\n            for (int i = 0; i < n; i++)\n            {\n                field[i] = Console.ReadLine().ToCharArray();\n            }\n            int[] first = new int[n];\n            int[] second = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                first[i] = 0;\n                second[i] = 0;\n            }\n            for (int i = 0; i < n; i++)\n            {\n                for (int j = 0; j < m; j++)\n                {\n                    if (field[i][j] == 'G')\n                    {\n                        first[i]++;\n                    }\n                    else if (field[i][j] == 'R')\n                    {\n                        second[i]++;\n                    }\n                }\n            }\n            int first_win = 0;\n            int second_win = 0;\n            int draw = 0;\n            for (int i = 0; i < n; i++)\n            {\n                if (first[i] == 0)\n                {\n                    first_win++;\n                }\n                else if (second[i] == 0)\n                {\n                    second_win++;\n                }\n                else\n                {\n                    draw++;\n                }\n            }\n            if (first_win == n)\n            {\n                Console.WriteLine(\"First\");\n            }\n            else if (second_win == n)\n            {\n                Console.WriteLine(\"Second\");\n            }\n            else if (draw == n)\n            {\n                Console.WriteLine(\"Draw\");\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"","delphi":"","Go":"","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m, k) = readLine().split(\" \").map { it.toInt() }\n    val field = Array(n) { readLine().toCharArray() }\n    val shrek = Array(n) { BooleanArray(m) }\n    val donkey = Array(n) { BooleanArray(m) }\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (field[i][j] == 'G') {\n                shrek[i][j] = true\n            } else if (field[i][j] == 'R') {\n                donkey[i][j] = true\n            }\n        }\n    }\n    val shrekMoves = mutableListOf<Pair<Int, Int>>()\n    val donkeyMoves = mutableListOf<Pair<Int, Int>>()\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (shrek[i][j]) {\n                shrekMoves.add(Pair(i, j))\n            } else if (donkey[i][j]) {\n                donkeyMoves.add(Pair(i, j))\n            }\n        }\n    }\n    val shrekWin = shrekMoves.any {\n        val (i, j) = it\n        val (ni, nj) = if (i == 0) {\n            Pair(i + 1, j)\n        } else if (i == n - 1) {\n            Pair(i - 1, j)\n        } else if (j == 0) {\n            Pair(i, j + 1)\n        } else {\n            Pair(i, j - 1)\n        }\n        if (donkey[ni][nj]) {\n            return@any true\n        } else {\n            return@any shrek[ni][nj]\n        }\n    }\n    val donkeyWin = donkeyMoves.any {\n        val (i, j) = it\n        val (ni, nj) = if (i == 0) {\n            Pair(i + 1, j)\n        } else if (i == n - 1) {\n            Pair(i - 1, j)\n        } else if (j == 0) {\n            Pair(i, j + 1)\n        } else {\n            Pair(i, j - 1)\n        }\n        if (shrek[ni][nj]) {\n            return@any true\n        } else {\n            return@any donkey[ni][nj]\n        }\n    }\n    if (shrekWin) {\n        println(\"First\")\n    } else if (donkeyWin) {\n        println(\"Second\")\n    } else {\n        println(\"Draw\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$a = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a[] = explode(' ', trim(fgets(STDIN)));\n}\n\n$ans = 'First';\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $m; $j++) {\n        if ($a[$i][$j] == 'G') {\n            $ans = 'Second';\n            break 2;\n        }\n    }\n}\n\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    auto a = new char[n][];\n    for (int i = 0; i < n; i++) {\n        a[i] = new char[m];\n        scanf(\" %s \", a[i]);\n    }\n\n    int s = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'G') {\n                s++;\n            }\n        }\n    }\n\n    if (s == 0) {\n        printf(\"Second\\n\");\n        return;\n    }\n\n    int t = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'R') {\n                t++;\n            }\n        }\n    }\n\n    if (t == 0) {\n        printf(\"First\\n\");\n        return;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'G') {\n                int cnt = 0;\n                for (int l = 0; l < k; l++) {\n                    if (i + l < n && a[i + l][j] == 'R') {\n                        cnt++;\n                    }\n                    if (i - l >= 0 && a[i - l][j] == 'R') {\n                        cnt++;\n                    }\n                    if (j + l < m && a[i][j + l] == 'R') {\n                        cnt++;\n                    }\n                    if (j - l >= 0 && a[i][j - l] == 'R') {\n                        cnt++;\n                    }\n                }\n                if (cnt == 0) {\n                    ans++;\n                }\n            }\n        }\n    }\n\n    if (ans == 0) {\n        printf(\"Draw\\n\");\n    } else {\n        printf(\"First\\n\");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\nmy @a;\n\nwhile (<>) {\n    chomp;\n    my @b = split;\n    $n = $b[0];\n    $m = $b[1];\n    $k = $b[2];\n    @a = ();\n    for (my $i = 0; $i < $n; $i++) {\n        my @c = split;\n        for (my $j = 0; $j < $m; $j++) {\n            push @a, $c[$j];\n        }\n    }\n    break;\n}\n\nmy $ans = 'Draw';\n\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($a[$i * $m + $j] eq 'G') {\n            if ($j > 0 && $a[$i * $m + $j - 1] eq 'R') {\n                if ($j < $m - 1 && $a[$i * $m + $j + 1] eq 'R') {\n                    $ans = 'First';\n                } else {\n                    $ans = 'Second';\n                }\n            } else if ($j < $m - 1 && $a[$i * $m + $j + 1] eq 'R') {\n                $ans = 'First';\n            }\n        } else if ($a[$i * $m + $j] eq 'R') {\n            if ($j > 0 && $a[$i * $m + $j - 1] eq 'G') {\n                if ($j < $m - 1 && $a[$i * $m + $j + 1] eq 'G') {\n                    $ans = 'Second';\n                } else {\n                    $ans = 'First';\n                }\n            } else if ($j < $m - 1 && $a[$i * $m + $j + 1] eq 'G') {\n                $ans = 'Second';\n            }\n        }\n    }\n}\n\nprint $ans . \"\\n\";\n\"}\"]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = String::new();\n    stdin.read_line(&mut n).unwrap();\n    let n: Vec<usize> = n.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut m = String::new();\n    stdin.read_line(&mut m).unwrap();\n    let m: Vec<Vec<char>> = m.split_whitespace().map(|x| x.chars().collect()).collect();\n\n    let mut k = String::new();\n    stdin.read_line(&mut k).unwrap();\n    let k: usize = k.parse().unwrap();\n\n    let mut ans = \"First\";\n\n    for i in 0..n {\n        for j in 0..m {\n            if m[i][j] == 'G' {\n                if i > 0 && m[i - 1][j] == 'R' {\n                    ans = \"Second\";\n                } else if i < n - 1 && m[i + 1][j] == 'R' {\n                    ans = \"Second\";\n                } else if j > 0 && m[i][j - 1] == 'R' {\n                    ans = \"Second\";\n                } else if j < m - 1 && m[i][j + 1] == 'R' {\n                    ans = \"Second\";\n                }\n            }\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Arrival of the General","description":"A Ministry for Defense sent a general to inspect the Super Secret Military Squad under the command of the Colonel SuperDuper. Having learned the news, the colonel ordered to all n squad soldiers to line up on the parade ground.By the military charter the soldiers should stand in the order of non-increasing of their height. But as there's virtually no time to do that, the soldiers lined up in the arbitrary order. However, the general is rather short-sighted and he thinks that the soldiers lined up correctly if the first soldier in the line has the maximum height and the last soldier has the minimum height. Please note that the way other solders are positioned does not matter, including the case when there are several soldiers whose height is maximum or minimum. Only the heights of the first and the last soldier are important.For example, the general considers the sequence of heights (4, 3, 4, 2, 1, 1) correct and the sequence (4, 3, 1, 2, 2) wrong.Within one second the colonel can swap any two neighboring soldiers. Help him count the minimum time needed to form a line-up which the general will consider correct.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains the only integer n (2\u2264n\u2264100) which represents the number of soldiers in the line. The second line contains integers a1,a2,...,an (1\u2264ai\u2264100) the values of the soldiers' heights in the order of soldiers' heights' increasing in the order from the beginning of the line to its end. The numbers are space-separated. Numbers a1,a2,...,an are not necessarily different.\n","output_spec":"Print the only integer \u2014 the minimum number of seconds the colonel will need to form a line-up the general will like.\n","notes":"In the first sample the colonel will need to swap the first and second soldier and then the third and fourth soldier. That will take 2 seconds. The resulting position of the soldiers is (44, 33, 22, 11).\nIn the second sample the colonel may swap the soldiers in the following sequence:\n  (10, 10, 58, 31, 63, 40, 76)  (10, 58, 10, 31, 63, 40, 76)  (10, 58, 10, 31, 63, 76, 40)  (10, 58, 10, 31, 76, 63, 40)  (10, 58, 31, 10, 76, 63, 40)  (10, 58, 31, 76, 10, 63, 40)  (10, 58, 31, 76, 63, 10, 40)  (10, 58, 76, 31, 63, 10, 40)  (10, 76, 58, 31, 63, 10, 40)  (76, 10, 58, 31, 63, 10, 40)  (76, 10, 58, 31, 63, 40, 10) ","sample_inputs":["4\n33 44 11 22\n","7\n10 10 58 31 63 40 76\n"],"sample_outputs":["2\n","10\n"],"id":"144-A","difficulty":800,"tags":["implementation"],"src_uid":"ef9ff63d225811868e786e800ce49c92","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int max = a[0];\n    int min = a[n - 1];\n    int ans = 0;\n    for (int i = 1; i < n; i++) {\n        if (a[i] > max) {\n            ans++;\n        }\n        if (a[i] < min) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n - 1; i++) {\n            if (a[i] > a[i + 1]) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nif a[0] == max(a) and a[-1] == min(a):\n    print(0)\nelse:\n    print(max(a) - min(a))\n\"\"\"}]","C":"","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);\n        int ans = 0;\n        for (int i = 0; i < n - 1; i++)\n        {\n            if (a[i] > a[i + 1])\n            {\n                ans++;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nmin = a[0]\nmax = a[0]\n\ncount = 0\n\na.each do |i|\n  if i < min\n    min = i\n    count += 1\n  elsif i > max\n    max = i\n    count += 1\n  end\nend\n\nputs count\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d \\\", &a[i])\\n    }\\n    var min, max int\\n    min = a[0]\\n    max = a[n-1]\\n    var count int\\n    for i := 0; i < n; i++ {\\n        if a[i] == min {\\n            count++\\n        }\\n        if a[i] == max {\\n            count++\\n        }\\n    }\\n    fmt.Println(count)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline().trim());\nconst a = process.stdin.readline().trim().split(' ').map(Number);\nconst max = Math.max(...a);\nconst min = Math.min(...a);\nconst ans = 0;\nfor (let i = 0; i < n; i++) {\n  if (a[i] == max) {\n    ans += i;\n  }\n  if (a[i] == min) {\n    ans += n - i - 1;\n  }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val a = sc.nextLine().split(\" \").map { it.toInt() }.sorted()\n    val ans = 0\n    for (i in 0 until n - 1) {\n        if (a[i] > a[i + 1]) {\n            ans++\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$max = $a[0];\n$min = $a[0];\n$count = 0;\nfor ($i = 1; $i < $n; $i++) {\n    if ($a[$i] > $max) {\n        $max = $a[$i];\n    }\n    if ($a[$i] < $min) {\n        $min = $a[$i];\n    }\n}\nfor ($i = 0; $i < $n; $i++) {\n    if ($a[$i] == $max) {\n        $count++;\n    }\n    if ($a[$i] == $min) {\n        $count++;\n    }\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int min = a[0];\n    int max = a[n - 1];\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] < min) {\n            ans++;\n            min = a[i];\n        }\n        if (a[i] > max) {\n            ans++;\n            max = a[i];\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $max = $a[0];\nmy $min = $a[-1];\nmy $count = 0;\n\nfor (my $i = 1; $i < $n; $i++) {\n    if ($a[$i] > $max) {\n        $max = $a[$i];\n    }\n    if ($a[$i] < $min) {\n        $min = $a[$i];\n    }\n}\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] == $max) {\n        $count++;\n    }\n    if ($a[$i] == $min) {\n        $count++;\n    }\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = String::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<usize> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = 0;\n    for i in 0..n {\n        if a[i] != a[n - 1 - i] {\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Lucky Pair","description":"Petya loves lucky numbers very much. Everybody knows that lucky numbers are positive integers whose decimal record contains only the lucky digits 4 and 7. For example, numbers 47, 744, 4 are lucky and 5, 17, 467 are not.Petya has an array a of n integers. The numbers in the array are numbered starting from 1. Unfortunately, Petya has been misbehaving and so, his parents don't allow him play with arrays that have many lucky numbers. It is guaranteed that no more than 1000 elements in the array a are lucky numbers. Petya needs to find the number of pairs of non-intersecting segments [l1;r1] and [l2;r2] (1\u2264l1\u2264r1<l2\u2264r2\u2264n, all four numbers are integers) such that there's no such lucky number that occurs simultaneously in the subarray a[l1..r1] and in the subarray a[l2..r2]. Help Petya count the number of such pairs.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (2\u2264n\u226410^5) \u2014 the size of the array a. The second line contains n space-separated integers ai (1\u2264ai\u226410^9) \u2014 array a. It is guaranteed that no more than 1000 elements in the array a are lucky numbers. \n","output_spec":"On the single line print the only number \u2014 the answer to the problem.\nPlease do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specificator.\n","notes":"The subarray a[l..r] is an array that consists of elements al, al+1, ..., ar.\nIn the first sample there are 9 possible pairs that satisfy the condition: [1,1] and [2,2], [1,1] and [2,3], [1,1] and [2,4], [1,1] and [3,3], [1,1] and [3,4], [1,1] and [4,4], [1,2] and [3,3], [2,2] and [3,3], [3,3] and [4,4].\nIn the second sample there is only one pair of segments \u2014 [1;1] and [2;2] and it satisfies the condition.\n","sample_inputs":["4\n1 4 2 4\n","2\n4 7\n","4\n4 4 7 7\n"],"sample_outputs":["9\n","1\n","9\n"],"id":"145-D","difficulty":2900,"tags":["combinatorics","data+structures","implementation"],"src_uid":"b715a526d9ebdedd00d41369b9778993","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i] == 4 || a[j] == 4 || a[i] == 7 || a[j] == 7) {\n                continue;\n            }\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (a[i] == 4 || a[j] == 4 || a[i] == 7 || a[j] == 7) {\n                    continue;\n                }\n                int cnt = 0;\n                for (int k = i; k <= j; k++) {\n                    if (a[k] == 4 || a[k] == 7) {\n                        cnt++;\n                    }\n                }\n                ans += cnt * (cnt - 1) \/ 2;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    if a[i] % 10 == 4 or a[i] % 10 == 7:\n        ans += (n - i - 1) * (n - i - 2) \/\/ 2\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\nl=0\nr=0\nc=0\nfor i in range(n):\n    if a[i]%4==0 or a[i]%7==0:\n        l=i\n        while l<n and (a[l]%4==0 or a[l]%7==0):\n            l+=1\n        r=l\n        while r<n and (a[r]%4==0 or a[r]%7==0):\n            r+=1\n        c+=(r-l-1)*(r-l-2)\/\/2\nprint(c)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n        var lucky = new HashSet<int>();\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] % 10 == 4 || a[i] % 10 == 7)\n            {\n                lucky.Add(i);\n            }\n        }\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                if (!lucky.Contains(i) && !lucky.Contains(j))\n                {\n                    ans++;\n                }\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nlucky = [4, 7]\n\nans = 0\n\n(0..n-1).each do |i|\n  (i+1..n-1).each do |j|\n    if a[i] == a[j]\n      next\n    end\n\n    count = 0\n\n    (i..j).each do |k|\n      if lucky.include?(a[k])\n        count += 1\n      end\n    end\n\n    ans += (count * (count - 1)) \/ 2\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  n, i, j, k, l, r, m, t, a: Integer;\n  s: String;\n  f: Boolean;\nbegin\n  Readln(n);\n  Readln(s);\n  for i := 1 to n do\n    if (s[i] = '4') or (s[i] = '7') then\n      inc(m);\n  for i := 1 to n do\n  begin\n    for j := i + 1 to n do\n    begin\n      f := True;\n      for k := i to j - 1 do\n        if (s[k] = '4') or (s[k] = '7') then\n          f := False;\n      if f then\n        inc(t);\n    end;\n  end;\n  Writeln(t - m * (m - 1) div 2);\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\nl=0\nr=0\nc=0\nfor i in range(n):\n    if a[i]%4==0 or a[i]%7==0:\n        l=i\n        while l<n and (a[l]%4==0 or a[l]%7==0):\n            l+=1\n        r=l\n        while r<n and (a[r]%4==0 or a[r]%7==0):\n            r+=1\n        c+=(r-l-1)*(r-l-2)\/\/2\nprint(c)\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    val lucky = arrayListOf(4, 7)\n    val luckyMap = HashMap<Int, Int>()\n    for (i in 0 until n) {\n        if (lucky.contains(a[i])) {\n            luckyMap[i] = 1\n        }\n    }\n    val ans = 0\n    for (i in 0 until n) {\n        if (!luckyMap.containsKey(i)) {\n            for (j in i + 1 until n) {\n                if (!luckyMap.containsKey(j)) {\n                    ans++\n                }\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$lucky = 0;\n$notLucky = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if (preg_match('\/4|7\/', $a[$i])) {\n        $lucky++;\n    } else {\n        $notLucky++;\n    }\n}\necho ($notLucky * ($notLucky - 1) \/ 2) + ($lucky * ($lucky - 1) \/ 2);\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i] == 4 || a[i] == 7 || a[j] == 4 || a[j] == 7) {\n                continue;\n            }\n            int l = i + 1;\n            int r = j - 1;\n            while (l < r) {\n                if (a[l] == 4 || a[l] == 7 || a[r] == 4 || a[r] == 7) {\n                    l++;\n                } else {\n                    r--;\n                }\n            }\n            ans += (r - l + 1);\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = split ' ', <STDIN>;\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        if ($a[$i] !~ \/4|7\/ && $a[$j] !~ \/4|7\/) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let a = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut lucky = 0;\n    let mut unlucky = 0;\n    for i in 0..n {\n        if a[i] % 10 == 4 || a[i] % 10 == 7 {\n            lucky += 1;\n        } else {\n            unlucky += 1;\n        }\n    }\n\n    let ans = unlucky * (unlucky - 1) \/ 2 + lucky * (lucky - 1) \/ 2;\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Punctuation","description":"You are given a text that consists of lowercase Latin letters, spaces and punctuation marks (dot, comma, exclamation mark and question mark). A word is defined as a sequence of consecutive Latin letters.Your task is to add spaces to the text by the following rules:  if there is no punctuation mark between two words, then they should be separated by exactly one space  there should be no spaces before each punctuation mark  there should be exactly one space after each punctuation mark It is guaranteed that there is at least one word between any two punctuation marks. The text begins and ends with a Latin letter.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input data contains of a single non-empty line \u2014 the text whose length is no more than 10000 characters.\n","output_spec":"Print the text, edited according to the rules. In this problem you should follow the output format very strictly. For example, extra space at the end of the output line is considered as wrong answer. Note that a newline character at the end of the line doesn't matter.\n","notes":null,"sample_inputs":["galileo galilei was an   italian physicist  ,mathematician,astronomer\n","galileo  was  born  in  pisa\n"],"sample_outputs":["galileo galilei was an italian physicist, mathematician, astronomer\n","galileo was born in pisa\n"],"id":"147-A","difficulty":1300,"tags":["implementation","strings"],"src_uid":"8c26daa1eed2078af3b32737da0a0f84","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n\n    int i = 0;\n    while (i < s.length()) {\n        if (s[i] != ' ' && s[i + 1] != ' ') {\n            cout << s[i];\n        }\n        if (s[i] == ' ' && s[i + 1] != ' ') {\n            cout << ' ';\n        }\n        i++;\n    }\n\n    cout << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String text = scanner.nextLine();\n        String[] words = text.split(\"[^a-z]+\");\n        for (String word : words) {\n            System.out.print(word + \" \");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\nprint(' '.join(s.split()))\n\"\"\"}, {\"version\": \"PyPy 3\", \"target code\": \"\"\"\ns = input()\nprint(' '.join(s.split()))\n\"\"\"}, {\"version\": \"Python 2\", \"target code\": \"\"\"\ns = input()\nprint(' '.join(s.split()))\n\"\"\"}, {\"version\": \"PyPy 2\", \"target code\": \"\"\"\ns = input()\nprint(' '.join(s.split()))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    char s[10000];\n    scanf(\" %s \", s);\n    int i = 0;\n    while (s[i] != '\\0') {\n        if (s[i] != ' ' && s[i + 1] != ' ' && s[i] != ',' && s[i] != '.' && s[i] != '!' && s[i] != '?') {\n            printf(\"%c\", s[i]);\n        } else if (s[i] == ' ' && s[i + 1] != ' ' && s[i + 1] != ',' && s[i + 1] != '.' && s[i + 1] != '!' && s[i + 1] != '?') {\n            printf(\" \");\n            printf(\"%c\", s[i]);\n        } else if (s[i] == ' ' && s[i + 1] == ' ') {\n            ;\n        } else if (s[i] == ',' || s[i] == '.' || s[i] == '!' || s[i] == '?') {\n            printf(\" \");\n            printf(\"%c\", s[i]);\n        }\n        i++;\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string str = Console.ReadLine();\n            string[] words = str.Split(' ');\n            string result = \"\";\n            for (int i = 0; i < words.Length; i++)\n            {\n                if (i != 0)\n                {\n                    result += \" \";\n                }\n                result += words[i];\n            }\n            Console.WriteLine(result);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp.gsub(\/(\\w+)(\\W+)(\\w+)\/, '\\1 \\3')\nputs s\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar s:string;\nbegin\n  readln(s);\n  for i:=1 to length(s)-1 do\n    if (s[i] in ['.',',','!','?']) and (s[i+1] in ['a'..'z']) then\n      write(' ');\n  writeln(s);\nend.\"\"\"}]","Go":"[{\"version\": \"Go1.17\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var s string\\n    fmt.Scan(&s)\\n    fmt.Println(s)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = require('fs').readFileSync(0, 'utf8');\\nconst words = s.split(' ');\\nconst newStr = words.join(' ');\\nconsole.log(newStr);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val s1 = s.replace(\",\", \", \")\n    val s2 = s1.replace(\".\", \". \")\n    val s3 = s2.replace(\"!\", \"! \")\n    val s4 = s3.replace(\"?\", \"? \")\n    println(s4)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$str = trim(fgets(STDIN));\\n$str = preg_replace('\/([a-z])([a-z])\/', '$1 $2', $str);\\necho $str.\"\\n\";\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\n\nvoid main() {\n    string s = stdin.readln();\n    string[] words = s.split(' ');\n    foreach (word in words) {\n        stdout.write(word);\n        stdout.write(' ');\n    }\n    stdout.write('\\n');\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"my $s = <STDIN>;print join(' ',map {s\/\\s+\/\/g;s\/\\w+\/$& \/g} split(\/\\W+\/,$s));\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n\n    let mut output = String::new();\n    for c in input.chars() {\n        if c.is_alphabetic() {\n            output.push(c);\n        } else if c == ' ' {\n            if output.len() > 0 && output.chars().last().unwrap() != ' ' {\n                output.push(' ');\n            }\n        }\n    }\n\n    println!(\"{}\", output);\n}\n\"\"\"}]"}
{"title":"A. Insomnia cure","description":"\u00abOne dragon. Two dragon. Three dragon\u00bb, \u2014 the princess was counting. She had trouble falling asleep, and she got bored of counting lambs when she was nine.However, just counting dragons was boring as well, so she entertained herself at best she could. Tonight she imagined that all dragons were here to steal her, and she was fighting them off. Every k-th dragon got punched in the face with a frying pan. Every l-th dragon got his tail shut into the balcony door. Every m-th dragon got his paws trampled with sharp heels. Finally, she threatened every n-th dragon to call her mom, and he withdrew in panic.How many imaginary dragons suffered moral or physical damage tonight, if the princess counted a total of d dragons?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"Input data contains integer numbers k,l,m,n and d, each number in a separate line (1\u2264k,l,m,n\u226410, 1\u2264d\u226410^5).\n","output_spec":"Output the number of damaged dragons.\n","notes":"In the first case every first dragon got punched with a frying pan. Some of the dragons suffered from other reasons as well, but the pan alone would be enough.\nIn the second case dragons 1, 7, 11, 13, 17, 19 and 23 escaped unharmed.\n","sample_inputs":["1\n2\n3\n4\n12\n","2\n3\n4\n5\n24\n"],"sample_outputs":["12\n","17\n"],"id":"148-A","difficulty":800,"tags":["constructive+algorithms","implementation","math"],"src_uid":"46bfdec9bfc1e91bd2f5022f3d3c8ce7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int k, l, m, n, d;\\n    cin >> k >> l >> m >> n >> d;\\n    int ans = 0;\\n    for (int i = 1; i <= d; i++) {\\n        if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) {\\n            ans++;\\n        }\\n    }\\n    cout << ans << endl;\\n    return 0;\\n}\\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int k = scanner.nextInt();\n        int l = scanner.nextInt();\n        int m = scanner.nextInt();\n        int n = scanner.nextInt();\n        int d = scanner.nextInt();\n\n        int count = 0;\n        for (int i = 1; i <= d; i++) {\n            if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) {\n                count++;\n            }\n        }\n\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nk,l,m,n,d=map(int,input().split())\nprint(min(d\/\/k,d\/\/l,d\/\/m,d\/\/n))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int k, l, m, n, d, i, j, count = 0;\n    scanf(\" %d \", &k);\n    scanf(\" %d \", &l);\n    scanf(\" %d \", &m);\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &d);\n    for (i = 1; i <= d; i++) {\n        if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0)\n            count++;\n    }\n    printf(\" %d \", count);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\n\nnamespace Dragons\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int k = int.Parse(Console.ReadLine());\n            int l = int.Parse(Console.ReadLine());\n            int m = int.Parse(Console.ReadLine());\n            int n = int.Parse(Console.ReadLine());\n            int d = int.Parse(Console.ReadLine());\n\n            int count = 0;\n            for (int i = 1; i <= d; i++)\n            {\n                if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0)\n                {\n                    count++;\n                }\n            }\n\n            Console.WriteLine(count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"k,l,m,n,d=map(int,open(0).read().split())\nprint(sum(k%d==0 or l%d==0 or m%d==0 or n%d==0 for d in range(1,d+1)))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Dragons;\n\nuses\n  SysUtils;\n\nvar\n  k, l, m, n, d: Integer;\n\nbegin\n  Readln(k);\n  Readln(l);\n  Readln(m);\n  Readln(n);\n  Readln(d);\n\n  d := d div k + (d mod k > 0);\n  d := d div l + (d mod l > 0);\n  d := d div m + (d mod m > 0);\n  d := d div n + (d mod n > 0);\n\n  Writeln(d);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var k, l, m, n, d int\\n    fmt.Scan(&k)\\n    fmt.Scan(&l)\\n    fmt.Scan(&m)\\n    fmt.Scan(&n)\\n    fmt.Scan(&d)\\n    var count int\\n    for i := 1; i <= d; i++ {\\n        if i%k == 0 || i%l == 0 || i%m == 0 || i%n == 0 {\\n            count++\\n        }\\n    }\\n    fmt.Println(count)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst k = parseInt(stdin[0]);\nconst l = parseInt(stdin[1]);\nconst m = parseInt(stdin[2]);\nconst n = parseInt(stdin[3]);\nconst d = parseInt(stdin[4]);\n\nconst count = (a, b, c, d, n) => {\n  let count = 0;\n  for (let i = 0; i < n; i++) {\n    if (i % a == 0 || i % b == 0 || i % c == 0 || i % d == 0) {\n      count++;\n    }\n  }\n  return count;\n};\n\nconsole.log(count(k, l, m, n, d));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.ceil\n\nfun main() {\n    val k = readLine().toInt()\n    val l = readLine().toInt()\n    val m = readLine().toInt()\n    val n = readLine().toInt()\n    val d = readLine().toInt()\n\n    val k1 = ceil(d \/ k.toDouble())\n    val l1 = ceil(d \/ l.toDouble())\n    val m1 = ceil(d \/ m.toDouble())\n    val n1 = ceil(d \/ n.toDouble())\n\n    println(k1 + l1 + m1 + n1)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$k = (int)trim(fgets(STDIN));\\n$l = (int)trim(fgets(STDIN));\\n$m = (int)trim(fgets(STDIN));\\n$n = (int)trim(fgets(STDIN));\\n$d = (int)trim(fgets(STDIN));\\n\\n$count = 0;\\n\\nfor ($i = 1; $i <= $d; $i++) {\\n    if ($i % $k == 0 || $i % $l == 0 || $i % $m == 0 || $i % $n == 0) {\\n        $count++;\\n    }\\n}\\n\\necho $count;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int k, l, m, n, d;\n    scanf(\" %d \", &k);\n    scanf(\" %d \", &l);\n    scanf(\" %d \", &m);\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &d);\n\n    int count = 0;\n    for (int i = 1; i <= d; i++) {\n        if (i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0) {\n            count++;\n        }\n    }\n\n    printf(\" %d \", count);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $k = <STDIN>;\nmy $l = <STDIN>;\nmy $m = <STDIN>;\nmy $n = <STDIN>;\nmy $d = <STDIN>;\n\nmy $count = 0;\n\nfor (my $i = 1; $i <= $d; $i++) {\n    if ($i % $k == 0 || $i % $l == 0 || $i % $m == 0 || $i % $n == 0) {\n        $count++;\n    }\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut k = String::new();\n    let mut l = String::new();\n    let mut m = String::new();\n    let mut n = String::new();\n    let mut d = String::new();\n\n    std::io::stdin().read_line(&mut k).unwrap();\n    std::io::stdin().read_line(&mut l).unwrap();\n    std::io::stdin().read_line(&mut m).unwrap();\n    std::io::stdin().read_line(&mut n).unwrap();\n    std::io::stdin().read_line(&mut d).unwrap();\n\n    let k: i32 = k.trim().parse().unwrap();\n    let l: i32 = l.trim().parse().unwrap();\n    let m: i32 = m.trim().parse().unwrap();\n    let n: i32 = n.trim().parse().unwrap();\n    let d: i32 = d.trim().parse().unwrap();\n\n    let mut count = 0;\n\n    for i in 1..d + 1 {\n        if i % k == 0 || i % l == 0 || i % m == 0 || i % n == 0 {\n            count += 1;\n        }\n    }\n\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"D. Bag of mice","description":"The dragon and the princess are arguing about what to do on the New Year's Eve. The dragon suggests flying to the mountains to watch fairies dancing in the moonlight, while the princess thinks they should just go to bed early. They are desperate to come to an amicable agreement, so they decide to leave this up to chance.They take turns drawing a mouse from a bag which initially contains w white and b black mice. The person who is the first to draw a white mouse wins. After each mouse drawn by the dragon the rest of mice in the bag panic, and one of them jumps out of the bag itself (the princess draws her mice carefully and doesn't scare other mice). Princess draws first. What is the probability of the princess winning?If there are no more mice in the bag and nobody has drawn a white mouse, the dragon wins. Mice which jump out of the bag themselves are not considered to be drawn (do not define the winner). Once a mouse has left the bag, it never returns to it. Every mouse is drawn from the bag with the same probability as every other one, and every mouse jumps out of the bag with the same probability as every other one.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line of input data contains two integers w and b (0\u2264w,b\u22641000).\n","output_spec":"Output the probability of the princess winning. The answer is considered to be correct if its absolute or relative error does not exceed 10^-9.\n","notes":"Let's go through the first sample. The probability of the princess drawing a white mouse on her first turn and winning right away is 1\/4. The probability of the dragon drawing a black mouse and not winning on his first turn is 3\/4 * 2\/3 = 1\/2. After this there are two mice left in the bag \u2014 one black and one white; one of them jumps out, and the other is drawn by the princess on her second turn. If the princess' mouse is white, she wins (probability is 1\/2 * 1\/2 = 1\/4), otherwise nobody gets the white mouse, so according to the rule the dragon wins.\n","sample_inputs":["1 3\n","5 5\n"],"sample_outputs":["0.500000000\n","0.658730159\n"],"id":"148-D","difficulty":1800,"tags":["dp","games","math","probabilities"],"src_uid":"7adb8bf6879925955bf187c3d05fde8c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int w, b;\n    cin >> w >> b;\n    double p = 1.0;\n    for (int i = 0; i < b; i++) {\n        p *= (w + i) \/ (w + i + b - 1);\n    }\n    cout << p << endl;\n    return 0;\n}\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int w = sc.nextInt();\n        int b = sc.nextInt();\n        int p = w + b;\n        double p1 = w \/ p;\n        double p2 = b \/ p;\n        double p3 = 1 - p1 - p2;\n        double p4 = p1 * p3;\n        double p5 = p2 * p3;\n        System.out.println(p4 + p5);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nw,b=map(int,input().split())\nprint(1\/(1+b\/w))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int w, b;\n    scanf(\" %d %d \", &w, &b);\n    double p = 1.0;\n    if (w == 0) {\n        printf(\" 0.000000000 \");\n        return 0;\n    }\n    if (b == 0) {\n        printf(\" 1.000000000 \");\n        return 0;\n    }\n    if (w == 1) {\n        printf(\" 0.500000000 \");\n        return 0;\n    }\n    if (b == 1) {\n        printf(\" 0.500000000 \");\n        return 0;\n    }\n    for (int i = 0; i < b; i++) {\n        p *= (w - 1) \/ (w + b - 1);\n    }\n    printf(\" %.16f \", p);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int w = int.Parse(input[0]);\n            int b = int.Parse(input[1]);\n            int p = 0;\n            if (w > 0)\n            {\n                p = 1.0 \/ (w + b);\n            }\n            if (b > 0)\n            {\n                p = p * (1.0 \/ (w + b - 1)) * (2.0 \/ 3.0);\n            }\n            Console.WriteLine(p);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"w, b = gets.split.map(&:to_i)\n\np (w \/ (w + b)) * (1 - (b - 1) \/ (w + b - 1)) + (b \/ (w + b)) * (1 - (w - 1) \/ (w + b - 1))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram NewYearsEve;\n\nuses\n  SysUtils;\n\nvar\n  w, b: Integer;\n\nbegin\n  Readln(w, b);\n  Writeln(1 \/ (1 + (b - 1) \/ (w + b - 1)));\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    var w, b int\n    fmt.Scanf(\" %d %d \", &w, &b)\n    var p float64\n    if w == 0 {\n        p = 0\n    } else if b == 0 {\n        p = 1\n    } else {\n        p = math.Pow(1.0\/3.0, float64(w)) * math.Pow(2.0\/3.0, float64(b))\n    }\n    fmt.Printf(\" %.10f \", p)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [w, b] = line.split(' ').map(Number);\n  const p = (w + b) * (w + b - 1) \/ (2 * w * b);\n  console.log(p);\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (w, b) = readLine().split(\" \").map { it.toInt() }\n    val p = 1.0 \/ (w + b)\n    val q = 1.0 \/ (w + b - 1)\n    val r = 1.0 \/ (w + b - 2)\n    println(p * (1 - q) * (1 - r))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$w = intval($input[0]);\n$b = intval($input[1]);\n$p = 1;\n$q = 1;\nfor ($i = 0; $i < $b; $i++) {\n    $p *= 2;\n    $q *= 3;\n}\necho $p \/ $q . PHP_EOL;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int[2] a;\n    scanf(\" %d %d \", &a[0], &a[1]);\n    double p = 1.0;\n    for (int i = 0; i < a[1]; i++) {\n        p *= (a[0] + a[1] - 1) \/ (a[0] + a[1] - 2);\n    }\n    printf(\" %.10f \", p);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $w, $b;\n\nchomp(my $line = <STDIN>);\n\nmy @arr = split(\/ \/, $line);\n\n$w = $arr[0];\n$b = $arr[1];\n\nmy $p = 1.0;\n\nif ($w == 0) {\n    print 0.0;\n    exit;\n}\n\nif ($b == 0) {\n    print 1.0;\n    exit;\n}\n\nfor (my $i = 0; $i < $b; $i++) {\n    $p *= 2.0 \/ 3.0;\n}\n\nprint $p;\n\nexit;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut w = 0;\n    let mut b = 0;\n    for c in line.trim().split_whitespace() {\n        if c == \"0\" {\n            w += 1;\n        } else {\n            b += 1;\n        }\n    }\n\n    let p = (w as f64) \/ (w + b as f64);\n\n    writeln!(stdout, \"{:.10}\", p).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Business trip","description":"What joy! Petya's parents went on a business trip for the whole year and the playful kid is left all by himself. Petya got absolutely happy. He jumped on the bed and threw pillows all day long, until... Today Petya opened the cupboard and found a scary note there. His parents had left him with duties: he should water their favourite flower all year, each day, in the morning, in the afternoon and in the evening. \"Wait a second!\" \u2014 thought Petya. He know for a fact that if he fulfills the parents' task in the i-th (1\u2264i\u226412) month of the year, then the flower will grow by ai centimeters, and if he doesn't water the flower in the i-th month, then the flower won't grow this month. Petya also knows that try as he might, his parents won't believe that he has been watering the flower if it grows strictly less than by k centimeters. Help Petya choose the minimum number of months when he will water the flower, given that the flower should grow no less than by k centimeters.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains exactly one integer k (0\u2264k\u2264100). The next line contains twelve space-separated integers: the i-th (1\u2264i\u226412) number in the line represents ai (0\u2264ai\u2264100). \n","output_spec":"Print the only integer \u2014 the minimum number of months when Petya has to water the flower so that the flower grows no less than by k centimeters. If the flower can't grow by k centimeters in a year, print -1.\n","notes":"Let's consider the first sample test. There it is enough to water the flower during the seventh and the ninth month. Then the flower grows by exactly five centimeters.\nIn the second sample Petya's parents will believe him even if the flower doesn't grow at all (k=0). So, it is possible for Petya not to water the flower at all.\n","sample_inputs":["5\n1 1 1 1 2 2 3 2 2 1 1 1\n","0\n0 0 0 0 0 0 0 1 1 2 3 0\n","11\n1 1 4 1 1 5 1 1 4 1 1 1\n"],"sample_outputs":["2\n","0\n","3\n"],"id":"149-A","difficulty":900,"tags":["greedy","implementation","sortings"],"src_uid":"59dfa7a4988375febc5dccc27aca90a8","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"k=int(input())\na=list(map(int,input().split()))\ns=0\nfor i in range(12):\n    s+=a[i]\nif s<k:\n    print(-1)\nelse:\n    print(s\/\/k)\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int k = scanner.nextInt();\n        int[] a = new int[12];\n        for (int i = 0; i < 12; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int count = 0;\n        for (int i = 0; i < 12; i++) {\n            if (a[i] >= k) {\n                count++;\n            }\n        }\n        if (count >= 1) {\n            System.out.println(count);\n        } else {\n            System.out.println(-1);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nk = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(12):\n    if a[i] >= k:\n        ans += 1\n        break\n\nif ans == 0:\n    print(-1)\nelse:\n    print(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"k = int(input())\na = list(map(int, input().split()))\n\nif k == 0:\n    print(0)\nelse:\n    ans = 0\n    for i in range(12):\n        if a[i] >= k:\n            ans += 1\n    print(ans)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int k = int.Parse(Console.ReadLine());\n        int[] a = new int[12];\n        int sum = 0;\n        for (int i = 0; i < 12; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n            sum += a[i];\n        }\n        if (sum < k)\n        {\n            Console.WriteLine(-1);\n        }\n        else\n        {\n            int count = 0;\n            for (int i = 0; i < 12; i++)\n            {\n                if (a[i] >= k)\n                {\n                    count++;\n                }\n            }\n            Console.WriteLine(count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"k = gets.to_i\na = gets.split.map(&:to_i)\n\nans = 0\nfor i in 0..11\n  if a[i] >= k\n    ans += 1\n  end\nend\n\nif ans == 0\n  puts -1\nelse\n  puts ans\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Petya;\nuses SysUtils;\nvar\n  k, a, i, j, n, m, s: integer;\nbegin\n  readln(k);\n  readln(a);\n  n := 0;\n  for i := 1 to 12 do\n  begin\n    s := 0;\n    for j := 1 to 12 do\n    begin\n      if (i = j) then\n        s := s + a[j];\n    end;\n    if (s >= k) then\n      n := n + 1;\n  end;\n  if (n = 0) then\n    writeln(-1)\n  else\n    writeln(n);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var k, n int\\n    fmt.Scanf(\\\"%d\\n\\\", &k)\\n    var a []int\\n    for i := 0; i < 12; i++ {\\n        fmt.Scanf(\\\"%d \\\", &a[i])\\n    }\\n    var sum int\\n    for i := 0; i < 12; i++ {\\n        sum += a[i]\\n    }\\n    if sum < k {\\n        fmt.Println(-1)\\n    } else {\\n        fmt.Println(sum \/ k)\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const k = parseInt(process.argv[2]);\\nconst a = process.argv[3].split(' ').map(Number);\\nconst m = a.reduce((acc, cur) => acc + cur, 0);\\nconsole.log(m >= k ? m \/ k : -1);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val k = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    var ans = 0\n    var sum = 0\n    for (i in 0..11) {\n        sum += a[i]\n        if (sum >= k) {\n            ans = i + 1\n            break\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$k = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$sum = 0;\n$count = 0;\nfor ($i = 0; $i < 12; $i++) {\n    $sum += $a[$i];\n    if ($sum >= $k) {\n        $count = $i + 1;\n        break;\n    }\n}\nif ($sum < $k) {\n    echo -1;\n} else {\n    echo $count;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int k;\n    scanf(\" %d \", &k);\n    int a[12];\n    for (int i = 0; i < 12; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i < 12; i++) {\n        sum += a[i];\n    }\n    if (sum < k) {\n        printf(\" -1 \");\n    } else {\n        int ans = 0;\n        for (int i = 0; i < 12; i++) {\n            if (a[i] >= k) {\n                ans++;\n            }\n        }\n        printf(\" %d \", ans);\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\n$k = <STDIN>;\nchomp $k;\n\n$a = <STDIN>;\nchomp $a;\n\n$a = split ' ', $a;\n\n$i = 0;\n$j = 0;\n\nwhile ($i < 12) {\n    if ($a[$i] >= $k) {\n        $j++;\n    }\n    $i++;\n}\n\nif ($j >= 1) {\n    print $j;\n} else {\n    print -1;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\n#[allow(unused_variables)]\nfn main() {\n    let mut k = String::new();\n    std::io::stdin().read_line(&mut k).unwrap();\n    let k: i32 = k.trim().parse().unwrap();\n\n    let mut a = String::new();\n    std::io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = 0;\n    for i in 0..12 {\n        if a[i] >= k {\n            ans += 1;\n        }\n    }\n\n    if ans >= 1 {\n        println!(\"{}\", ans);\n    } else {\n        println!(\"-1\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Martian Clock","description":"Having stayed home alone, Petya decided to watch forbidden films on the Net in secret. \"What ungentlemanly behavior!\" \u2014 you can say that, of course, but don't be too harsh on the kid. In his country films about the Martians and other extraterrestrial civilizations are forbidden. It was very unfair to Petya as he adored adventure stories that featured lasers and robots. Today Petya is watching a shocking blockbuster about the Martians called \"R2:D2\". What can \"R2:D2\" possibly mean? It might be the Martian time represented in the Martian numeral system. Petya knows that time on Mars is counted just like on the Earth (that is, there are 24 hours and each hour has 60 minutes). The time is written as \"a:b\", where the string a stands for the number of hours (from 0 to 23 inclusive), and string b stands for the number of minutes (from 0 to 59 inclusive). The only thing Petya doesn't know is in what numeral system the Martian time is written.Your task is to print the radixes of all numeral system which can contain the time \"a:b\".","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single string as \"a:b\" (without the quotes). There a is a non-empty string, consisting of numbers and uppercase Latin letters. String a shows the number of hours. String b is a non-empty string that consists of numbers and uppercase Latin letters. String b shows the number of minutes. The lengths of strings a and b are from 1 to 5 characters, inclusive. Please note that strings a and b can have leading zeroes that do not influence the result in any way (for example, string \"008:1\" in decimal notation denotes correctly written time).\nWe consider characters 0, 1, ..., 9 as denoting the corresponding digits of the number's representation in some numeral system, and characters A, B, ..., Z correspond to numbers 10, 11, ..., 35.\n","output_spec":"Print the radixes of the numeral systems that can represent the time \"a:b\" in the increasing order. Separate the numbers with spaces or line breaks. If there is no numeral system that can represent time \"a:b\", print the single integer 0. If there are infinitely many numeral systems that can represent the time \"a:b\", print the single integer -1.\nNote that on Mars any positional numeral systems with positive radix strictly larger than one are possible.\n","notes":"Let's consider the first sample. String \"11:20\" can be perceived, for example, as time 4:6, represented in the ternary numeral system or as time 17:32 in hexadecimal system. \nLet's consider the second sample test. String \"2A:13\" can't be perceived as correct time in any notation. For example, let's take the base-11 numeral notation. There the given string represents time 32:14 that isn't a correct time.\nLet's consider the third sample. String \"000B:00001\" can be perceived as a correct time in the infinite number of numeral systems. If you need an example, you can take any numeral system with radix no less than 12.\n","sample_inputs":["11:20\n","2A:13\n","000B:00001\n"],"sample_outputs":["3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22","0\n","-1\n"],"id":"149-B","difficulty":1600,"tags":["implementation"],"src_uid":"c02dfe5b8d9da2818a99c3afbe7a5293","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n    int a = 0, b = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] >= '0' && s[i] <= '9') {\n            a = a * 10 + s[i] - '0';\n        } else {\n            b = b * 10 + s[i] - 'A' + 10;\n        }\n    }\n    if (a > 23 || b > 59) {\n        cout << 0 << endl;\n    } else {\n        cout << -1 << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String time = scanner.nextLine();\n        String[] parts = time.split(\":\");\n        int hours = Integer.parseInt(parts[0]);\n        int minutes = Integer.parseInt(parts[1]);\n        int max = Math.max(hours, minutes);\n        int min = Math.min(hours, minutes);\n        int radix = 1;\n        for (int i = 1; i <= max; i++) {\n            if (i >= min) {\n                System.out.print(i + \" \");\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,b=input().split(':')\na=int(a)\nb=int(b)\nif a>23 or b>59:\n    print(0)\nelse:\n    print(1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    char a[6], b[6];\n    int i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;\n    scanf(\" %s:%s \", a, b);\n    for (i = 1; i <= 36; i++) {\n        for (j = 1; j <= 36; j++) {\n            if (a[0] == '0' && b[0] == '0') {\n                if (i * j >= 24 && i * j <= 60) {\n                    printf(\"%d \", i * j);\n                }\n            } else if (a[0] == '0') {\n                if (i * j >= b[0] && i * j <= 60) {\n                    printf(\"%d \", i * j);\n                }\n            } else if (b[0] == '0') {\n                if (i * j >= 0 && i * j <= a[0]) {\n                    printf(\"%d \", i * j);\n                }\n            } else {\n                if (i * j >= a[0] && i * j <= b[0]) {\n                    printf(\"%d \", i * j);\n                }\n            }\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace MartianTime\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] time = Console.ReadLine().Split(':');\n            int a = int.Parse(time[0]);\n            int b = int.Parse(time[1]);\n            int radix = 1;\n            int max = Math.Max(a, b);\n            while (max > 0)\n            {\n                max \/= radix;\n                radix++;\n            }\n            Console.WriteLine(radix);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"#!\/usr\/bin\/env ruby\n\ndef main\n    time = gets.chomp\n    hours = time.split(':')[0]\n    minutes = time.split(':')[1]\n\n    if hours.length > 2 || minutes.length > 2\n        puts 0\n        return\n    end\n\n    if hours.include?('A') || hours.include?('B') || minutes.include?('A') || minutes.include?('B')\n        puts -1\n        return\n    end\n\n    puts (1..36).to_a.select { |i| i.to_s == hours }\nend\n\nmain\n\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram MartianTime;\n\nuses\n  SysUtils;\n\nvar\n  a, b: string;\n  i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z: integer;\n\nbegin\n  Readln(a);\n  Readln(b);\n  for i := 1 to 36 do\n  begin\n    for j := 1 to 36 do\n    begin\n      for k := 1 to 36 do\n      begin\n        for l := 1 to 36 do\n        begin\n          for m := 1 to 36 do\n          begin\n            for n := 1 to 36 do\n            begin\n              for o := 1 to 36 do\n              begin\n                for p := 1 to 36 do\n                begin\n                  for q := 1 to 36 do\n                  begin\n                    for r := 1 to 36 do\n                    begin\n                      for s := 1 to 36 do\n                      begin\n                        for t := 1 to 36 do\n                        begin\n                          for u := 1 to 36 do\n                          begin\n                            for v := 1 to 36 do\n                            begin\n                              for w := 1 to 36 do\n                              begin\n                                for x := 1 to 36 do\n                                begin\n                                  for y := 1 to 36 do\n                                  begin\n                                    for z := 1 to 36 do\n                                    begin\n                                      if (a[1] = '0') and (a[2] = '0') and (a[3] = '0') and (a[4] = '0') then\n                                        if (b[1] = '0') and (b[2] = '0') and (b[3] = '0') and (b[4] = '0') then\n                                          if (i * 36 * 36 * 36 * 36 + j * 36 * 36 * 36 + k * 36 * 36 + l * 36 + m = StrToInt(a)) and (n * 36 * 36 * 36 + o * 36 * 36 + p * 36 + q = StrToInt(b)) then\n                                            Writeln(i);\n                                    end;\n                                  end;\n                                end;\n                              end;\n                            end;\n                          end;\n                        end;\n                      end;\n                    end;\n                  end;\n                end;\n              end;\n            end;\n          end;\n        end;\n      end;\n    end;\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar s string\n\tfmt.Scan(&s)\n\ta, b := strings.Split(s, \":\")[0], strings.Split(s, \":\")[1]\n\tfor i := 1; i <= 36; i++ {\n\t\tif len(a) <= i && len(b) <= i {\n\t\t\tfmt.Println(i)\n\t\t}\n\t}\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const s = require('fs').readFileSync(0, 'utf8').trim();\nconst a = s.split(':');\nconst h = a[0];\nconst m = a[1];\nconst radixes = [];\nfor (let i = 2; i <= 36; i++) {\n  if (h.length <= i && m.length <= i) {\n    radixes.push(i);\n  }\n}\nconsole.log(radixes.join(' '));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val time = scanner.nextLine()\n    val hours = time.substring(0, 2)\n    val minutes = time.substring(3)\n    val hoursInBase10 = hours.toIntOrNull() ?: 0\n    val minutesInBase10 = minutes.toIntOrNull() ?: 0\n    val radixes = mutableListOf<Int>()\n    for (radix in 2..36) {\n        if (hoursInBase10 < radix && minutesInBase10 < radix) {\n            radixes.add(radix)\n        }\n    }\n    if (radixes.isEmpty()) {\n        println(0)\n    } else if (radixes.size == 1) {\n        println(radixes.first())\n    } else {\n        println(-1)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$time = trim(fgets(STDIN));\n$a = substr($time, 0, 2);\n$b = substr($time, 3, 2);\n$a = intval($a);\n$b = intval($b);\n$res = [];\nfor ($i = 2; $i <= 36; $i++) {\n    if ($a < $i && $b < $i) {\n        $res[] = $i;\n    }\n}\nif (count($res) == 0) {\n    echo 0;\n} else {\n    echo implode(' ', $res);\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string[] s = split(readln(), ':');\n    int a = to!int(s[0]);\n    int b = to!int(s[1]);\n    int m = 60;\n    int r = 1;\n    while (a > 0) {\n        a -= m;\n        r++;\n    }\n    while (b > 0) {\n        b -= m;\n        r++;\n    }\n    if (r == 1) {\n        writeln(0);\n    } else if (r == 2) {\n        writeln(-1);\n    } else {\n        for (int i = 2; i <= r; i++) {\n            writeln(i);\n        }\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $time = <STDIN>;\nmy @time = split(':', $time);\nmy $hours = $time[0];\nmy $minutes = $time[1];\n\nmy @radixes = ();\nfor (my $i = 1; $i <= 36; $i++) {\n    if ($hours < $i && $minutes < $i) {\n        push(@radixes, $i);\n    }\n}\n\nprint join(' ', @radixes);\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let line = lines.next().unwrap().unwrap();\n    let mut hours = line.split(':').next().unwrap();\n    let mut minutes = line.split(':').nth(1).unwrap();\n    let mut radixes = Vec::new();\n    for i in 2..=36 {\n        if hours.len() <= i && minutes.len() <= i {\n            radixes.push(i);\n        }\n    }\n    if radixes.is_empty() {\n        println!(\"0\");\n    } else {\n        println!(\"{}\", radixes.join(\" \"));\n    }\n}\n\"\"\"}]"}
{"title":"D. Coloring Brackets","description":"Once Petya read a problem about a bracket sequence. He gave it much thought but didn't find a solution. Today you will face it.You are given string s. It represents a correct bracket sequence. A correct bracket sequence is the sequence of opening (\"(\") and closing (\")\") brackets, such that it is possible to obtain a correct mathematical expression from it, inserting numbers and operators between the brackets. For example, such sequences as \"(())()\" and \"()\" are correct bracket sequences and such sequences as \")()\" and \"(()\" are not.In a correct bracket sequence each bracket corresponds to the matching bracket (an opening bracket corresponds to the matching closing bracket and vice versa). For example, in a bracket sequence shown of the figure below, the third bracket corresponds to the matching sixth one and the fifth bracket corresponds to the fourth one.  You are allowed to color some brackets in the bracket sequence so as all three conditions are fulfilled:   Each bracket is either not colored any color, or is colored red, or is colored blue.  For any pair of matching brackets exactly one of them is colored. In other words, for any bracket the following is true: either it or the matching bracket that corresponds to it is colored.  No two neighboring colored brackets have the same color. Find the number of different ways to color the bracket sequence. The ways should meet the above-given conditions. Two ways of coloring are considered different if they differ in the color of at least one bracket. As the result can be quite large, print it modulo 1000000007 (10^9+7).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains the single string s (2\u2264|s|\u2264700) which represents a correct bracket sequence. \n","output_spec":"Print the only number \u2014 the number of ways to color the bracket sequence that meet the above given conditions modulo 1000000007 (10^9+7).\n","notes":"Let's consider the first sample test. The bracket sequence from the sample can be colored, for example, as is shown on two figures below. \n  \n The two ways of coloring shown below are incorrect. \n  \n ","sample_inputs":["(())\n","(()())\n","()\n"],"sample_outputs":["12\n","40\n","4\n"],"id":"149-D","difficulty":1900,"tags":["dp"],"src_uid":"e05ef33935d04bd3714269268aceda41","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n    int n = s.size();\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        if (s[i] == '(') {\n            a[i] = 1;\n        } else {\n            a[i] = -1;\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            int j = i;\n            while (j < n && a[j] == 1) {\n                j++;\n            }\n            int k = j;\n            while (k < n && a[k] == -1) {\n                k++;\n            }\n            ans += (k - j) * (k - j - 1) \/ 2;\n        }\n    }\n    cout << ans % 1000000007 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.nextLine();\n        int n = s.length();\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        dp[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            if (s.charAt(i - 1) == '(') {\n                dp[i] = dp[i - 1] * 2 % 1000000007;\n            } else {\n                dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007;\n            }\n        }\n        System.out.println(dp[n]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\n\ndef dp(i, j, c):\n    if i == j:\n        return 1\n    if i > j:\n        return 0\n    if s[i] == '(' and s[j] == ')':\n        return dp(i + 1, j - 1, c) * 2\n    if s[i] == '(' and s[j] != ')':\n        return dp(i + 1, j, c)\n    if s[i] != '(' and s[j] == ')':\n        return dp(i, j - 1, c)\n    if s[i] != '(' and s[j] != ')':\n        return dp(i + 1, j, c) + dp(i, j - 1, c)\n\nprint(dp(0, len(s) - 1, 0) % 1000000007)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    char s[701];\n    scanf(\" %s \", s);\n    int n = strlen(s);\n    int a[n + 1];\n    a[0] = 1;\n    a[1] = 1;\n    for (int i = 2; i <= n; i++) {\n        if (s[i - 1] == '(') {\n            a[i] = a[i - 1] * 2;\n        } else {\n            a[i] = a[i - 1];\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i <= n; i++) {\n        ans = (ans + a[i]) % 1000000007;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\n\ndef dfs(i, color):\n    if i == len(s) - 1:\n        return 1\n    if s[i] == \"(\":\n        return dfs(i + 1, color) * dfs(i + 1, color ^ 1)\n    else:\n        return dfs(i + 1, color) * dfs(i + 1, color)\n\nprint(dfs(0, 0) % 1000000007)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  s: string;\n  i, j, n, k, m, t, ans: integer;\n  a: array[0..1000] of integer;\n\nbegin\n  readln(s);\n  n := length(s);\n  for i := 0 to n - 1 do\n    if s[i] = '(' then\n      a[i] := 1\n    else\n      a[i] := -1;\n  for i := 0 to n - 1 do\n    if a[i] = 1 then\n      begin\n        k := 0;\n        for j := i + 1 to n - 1 do\n          if a[j] = -1 then\n            k := k + 1;\n        for m := 0 to k - 1 do\n          a[i + m] := -a[i + m];\n      end;\n  for i := 0 to n - 1 do\n    if a[i] = 1 then\n      begin\n        t := 0;\n        for j := i + 1 to n - 1 do\n          if a[j] = 1 then\n            t := t + 1;\n        for m := 0 to t - 1 do\n          a[i + m] := -a[i + m];\n      end;\n  ans := 1;\n  for i := 0 to n - 1 do\n    if a[i] = 1 then\n      ans := ans * 2;\n  ans := ans % 1000000007;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\n\\\", &n)\\n    s := make([]byte, n)\\n    fmt.Scanf(\\\"%s\\n\\\", s)\\n    ans := 0\\n    for i := 0; i < n; i++ {\\n        if s[i] == '(' {\\n            ans = (ans + 1) % 1000000007\\n        } else {\\n            ans = (ans - 1) % 1000000007\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const s = require('fs').readFileSync('\/dev\/stdin').toString().trim();\nconst n = s.length;\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  if (s[i - 1] === '(') {\n    dp[i] = dp[i - 1] * 2;\n  } else {\n    dp[i] = dp[i - 1] + dp[i - 2];\n  }\n  dp[i] %= 1000000007;\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val n = s.length\n    val dp = Array(n + 1) { IntArray(3) }\n    dp[0][0] = 1\n    dp[0][1] = 1\n    dp[0][2] = 1\n    for (i in 1..n) {\n        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1] + dp[i - 1][2]) % 1000000007\n        dp[i][1] = (dp[i - 1][0] + dp[i - 1][2]) % 1000000007\n        dp[i][2] = (dp[i - 1][0] + dp[i - 1][1]) % 1000000007\n    }\n    println(dp[n][0])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s = trim(fgets(STDIN));\n$n = strlen($s);\n$dp = array_fill(0, $n + 1, array_fill(0, 3, 0));\n$dp[0][0] = 1;\nfor ($i = 1; $i <= $n; $i++) {\n    for ($j = 0; $j < 3; $j++) {\n        if ($s[$i - 1] == '(') {\n            $dp[$i][$j] = $dp[$i - 1][$j] + $dp[$i - 1][$(j + 1) % 3];\n        } else {\n            $dp[$i][$j] = $dp[$i - 1][$j] + $dp[$i - 1][$(j + 2) % 3];\n        }\n    }\n}\necho $dp[$n][0] % 1000000007 . PHP_EOL;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    string s;\n    scanf(\" %s \", s);\n    int n = s.length;\n    int[n] a;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == '(') {\n            a[i] = 0;\n        } else {\n            a[i] = 1;\n        }\n    }\n    int[n] b;\n    for (int i = 0; i < n; i++) {\n        b[i] = a[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 0) {\n            ans = (ans + b[i]) % 1000000007;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nmy $n = length($s);\nmy $dp = [0] x $n;\nmy $dp2 = [0] x $n;\n\n$dp[0] = 1;\n$dp2[0] = 1;\n\nfor (my $i = 1; $i < $n; $i++) {\n    if ($s[$i] eq '(') {\n        $dp[$i] = $dp[$i - 1] + $dp2[$i - 1];\n        $dp2[$i] = $dp[$i - 1];\n    } else {\n        $dp[$i] = $dp2[$i - 1];\n        $dp2[$i] = $dp[$i - 1] + $dp2[$i - 1];\n    }\n}\n\nprint $dp[$n - 1] % 1000000007 . \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let s = lines.next().unwrap().unwrap();\n\n    let mut ans = 0;\n    let mut stack = Vec::new();\n    for c in s.chars() {\n        if c == '(' {\n            stack.push(c);\n        } else {\n            if stack.len() == 0 {\n                ans += 1;\n            } else {\n                stack.pop();\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Mission Impassable","description":"Market stalls now have the long-awaited game The Colder Scrools V: Nvodsk. The game turned out to be difficult as hell and most students can't complete the last quest (\"We don't go to Nvodsk...\"). That threatened winter exams. The rector already started to wonder whether he should postpone the winter exams till April (in fact, he wanted to complete the quest himself). But all of a sudden a stranger appeared at the door of his office. \"Good afternoon. My name is Chuck and I solve any problems\" \u2014 he said.And here they are sitting side by side but still they can't complete the mission. The thing is, to kill the final boss one should prove one's perfect skills in the art of managing letters. One should be a real magician to do that. And can you imagine what happens when magicians start competing... But let's put it more formally: you are given a string and a set of integers ai. You are allowed to choose any substring that is a palindrome and delete it. At that we receive some number of points equal to ak, where k is the length of the deleted palindrome. For some k, ak=-1, which means that deleting palindrome strings of such length is forbidden. After a substring is deleted, the remaining part \"shifts together\", that is, at no moment of time the string has gaps. The process is repeated while the string has at least one palindrome substring that can be deleted. All gained points are summed up.Determine what maximum number of points can be earned.\"Oh\" \u2014 said Chuck, raising from the chair, \u2014 \"I used to love deleting palindromes, just like you, but one day I took an arrow in the Knee\".","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer l (1\u2264l\u2264150) \u2014 the length of the string.\nThe second line contains exactly l integers ak (-1\u2264ak\u226410^5) \u2014 the points a player gains for deleting.\nThe third line contains exactly l lowercase Latin letters \u2014 the original string from which a player can delete palindromes. The line contains no other characters apart from the newline character at the end of the string.\n","output_spec":"Print a single number \u2014 the maximum number of points one can gain if he plays on the given string.\n","notes":"In the first sample we cannot delete any substring, so the best result is 0. In the second sample we are allowed to delete only those palindromes whose length equals 1, thus, if we delete the whole string, we get 7 points. In the third sample the optimal strategy is: first we delete character c, then string aa, then bb, and the last one aa. At that we get 1+3*5=16 points.\n","sample_inputs":["7\n-1 -1 -1 -1 -1 -1 -1\nabacaba\n","7\n1 -1 -1 -1 -1 -1 -1\nabacaba\n","7\n1 5 -1 -1 -1 -1 10\nabacaba\n"],"sample_outputs":["0\n","7\n","16\n"],"id":"150-D","difficulty":2600,"tags":["dp","strings"],"src_uid":"dfd0814d912a7f2dfe31744ad1c778ae","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    string s;\n    cin >> s;\n    vector<int> dp(n + 1, 0);\n    dp[0] = 0;\n    for (int i = 1; i <= n; i++) {\n        dp[i] = max(dp[i - 1], a[i - 1]);\n        if (i >= 2 && s[i - 2] == s[i - 1]) {\n            dp[i] = max(dp[i], dp[i - 2] + a[i - 1]);\n        }\n    }\n    cout << dp[n] << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(reader.readLine());\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(reader.readLine());\n        }\n        String s = reader.readLine();\n        int[] dp = new int[n + 1];\n        dp[0] = 0;\n        for (int i = 1; i <= n; i++) {\n            dp[i] = dp[i - 1];\n            if (a[i - 1] != -1) {\n                int j = i - 2;\n                while (j >= 0 && s.charAt(j) == s.charAt(i - 1)) {\n                    j--;\n                }\n                dp[i] = Math.max(dp[i], dp[j + 1] + a[i - 1] * (i - j - 1));\n            }\n        }\n        System.out.println(dp[n]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nl = int(input())\na = list(map(int, input().split()))\ns = input()\n\nans = 0\nfor i in range(l):\n    if a[i] != -1:\n        if s[i] == s[i-1]:\n            ans += a[i]\n            s = s[:i-1] + s[i+1:]\n            i -= 1\n\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Palindrome\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = new int[n];\n            string s = Console.ReadLine();\n            for (int i = 0; i < n; i++)\n            {\n                a[i] = int.Parse(Console.ReadLine());\n            }\n            int ans = 0;\n            int i = 0;\n            while (i < n)\n            {\n                int j = i;\n                while (j < n && s[j] == s[i])\n                {\n                    j++;\n                }\n                int len = j - i;\n                if (a[len - 1] != -1)\n                {\n                    ans += a[len - 1];\n                }\n                i = j;\n            }\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"l = gets.to_i\na = gets.split.map(&:to_i)\ns = gets.chomp\n\nans = 0\n\n(0..l-1).each do |i|\n    if a[i] != -1\n        if s[i] == s[i+1]\n            ans += a[i]\n            s = s[0..i] + s[i+2..-1]\n        end\n    end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\ts := strings.ToLower(strings.TrimSpace(fmt.Scanln()))\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] != -1 {\n\t\t\tif i+1 < n && s[i] == s[i+1] {\n\t\t\t\tans += a[i]\n\t\t\t\ti++\n\t\t\t} else if i+2 < n && s[i] == s[i+2] {\n\t\t\t\tans += a[i] * 2\n\t\t\t\ti += 2\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"l = parseInt(process.stdin.readline());\\npoints = process.stdin.readline().split(' ').map(Number);\\nstr = process.stdin.readline();\\n\\nmax = 0;\\n\\nfor (i = 0; i < l; i++) {\\n    if (points[i] != -1) {\\n        if (str[i] == str[i + 1]) {\\n            max += points[i];\\n            str = str.slice(0, i) + str.slice(i + 2);\\n            i--;\\n        }\\n    }\\n}\\n\\nconsole.log(max);\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    val s = readLine()\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    val dp2 = Array(n + 1) { IntArray(n + 1) { 0 } }\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            if (i == j) {\n                dp[i][j] = a[i]\n            } else if (i < j) {\n                dp[i][j] = Math.max(dp[i][j - 1], dp[i + 1][j])\n            }\n        }\n    }\n    for (i in n - 1 downTo 0) {\n        for (j in 0 until n) {\n            if (i == j) {\n                dp2[i][j] = a[i]\n            } else if (i < j) {\n                dp2[i][j] = Math.max(dp2[i][j + 1], dp2[i + 1][j])\n            }\n        }\n    }\n    var ans = 0\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            if (s[i] == s[j] && i < j) {\n                ans = Math.max(ans, dp[i][j] + dp2[i + 1][j - 1])\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$s = trim(fgets(STDIN));\n$ans = 0;\n$i = 0;\nwhile ($i < $n) {\n    if ($a[$i] != -1) {\n        $ans += $a[$i];\n        $s = substr($s, 0, $i) . substr($s, $i + $a[$i]);\n    }\n    $i++;\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    foreach (i; 0 .. n) {\n        scanf(\" %d \", &a[i]);\n    }\n    char s[n];\n    scanf(\" %s \", s);\n    int dp[n + 1];\n    dp[0] = 0;\n    int i = 0;\n    while (i < n) {\n        int j = i;\n        while (j < n && s[j] == s[i]) {\n            j++;\n        }\n        int len = j - i;\n        if (len > 1 && a[len - 1] != -1) {\n            dp[j] = max(dp[j], dp[i] + a[len - 1]);\n        }\n        i = j;\n    }\n    printf(\" %d \", dp[n]);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\nmy $s = <STDIN>;\nchomp $s;\n\nmy $ans = 0;\nmy $i = 0;\nmy $j = 0;\nwhile ($i < $n) {\n    while ($j < $n) {\n        if ($s[$i] eq $s[$j]) {\n            my $len = $j - $i + 1;\n            if ($a[$len - 1] != -1) {\n                $ans += $a[$len - 1];\n            }\n            $j++;\n        } else {\n            break;\n        }\n    }\n    $i = $j;\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut a: Vec<i32> = Vec::new();\n    for _ in 0..n {\n        a.push(stdin.read_line().unwrap().trim().parse().unwrap());\n    }\n    let s: String = stdin.read_line().unwrap().trim().to_string();\n\n    let mut ans = 0;\n    let mut i = 0;\n    while i < n {\n        let mut j = i + 1;\n        while j < n && s[i..j + 1].chars().rev().eq(s[i..j + 1].chars()) {\n            j += 1;\n        }\n        ans += a[j - 1];\n        i = j;\n    }\n\n    stdout.write_fmt(format_args!(\"{}\\n\", ans)).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Marks","description":"Vasya, or Mr. Vasily Petrov is a dean of a department in a local university. After the winter exams he got his hands on a group's gradebook.Overall the group has n students. They received marks for m subjects. Each student got a mark from 1 to 9 (inclusive) for each subject.Let's consider a student the best at some subject, if there is no student who got a higher mark for this subject. Let's consider a student successful, if there exists a subject he is the best at.Your task is to find the number of successful students in the group.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first input line contains two integers n and m (1\u2264n,m\u2264100) \u2014 the number of students and the number of subjects, correspondingly. Next n lines each containing m characters describe the gradebook. Each character in the gradebook is a number from 1 to 9. Note that the marks in a rows are not sepatated by spaces.\n","output_spec":"Print the single number \u2014 the number of successful students in the given group.\n","notes":"In the first sample test the student number 1 is the best at subjects 1 and 3, student 2 is the best at subjects 1 and 2, but student 3 isn't the best at any subject.\nIn the second sample test each student is the best at at least one subject.\n","sample_inputs":["3 3\n223\n232\n112\n","3 5\n91728\n11828\n11111\n"],"sample_outputs":["2\n","3\n"],"id":"152-A","difficulty":900,"tags":["implementation"],"src_uid":"41bdb08253cf5706573f5d469ab0a7b3","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> a(n, vector<int>(m));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int flag = 1;\n        for (int j = 0; j < m; j++) {\n            for (int k = 0; k < n; k++) {\n                if (i != k && a[i][j] < a[k][j]) {\n                    flag = 0;\n                    break;\n                }\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        if (flag) {\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[] marks = new int[m];\n        for (int i = 0; i < n; i++) {\n            String line = scanner.next();\n            for (int j = 0; j < m; j++) {\n                marks[j] = Math.max(marks[j], line.charAt(j) - '0');\n            }\n        }\n        int count = 0;\n        for (int i = 0; i < m; i++) {\n            if (marks[i] == 9) {\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ns = [list(map(int, input())) for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if s[i][j] == max(s[i]):\n            ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, m = map(int, input().split())\ns = [list(map(int, input())) for _ in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if s[i][j] == max(s[i]):\n            ans += 1\nprint(ans)\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, m = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var students = new List<int[]>(n);\n        for (int i = 0; i < n; i++)\n        {\n            students.Add(Console.ReadLine().Split('').Select(int.Parse).ToArray());\n        }\n\n        var result = 0;\n        for (int i = 0; i < n; i++)\n        {\n            var isSuccessful = true;\n            for (int j = 0; j < m; j++)\n            {\n                for (int k = 0; k < n; k++)\n                {\n                    if (i != k && students[k][j] > students[i][j])\n                    {\n                        isSuccessful = false;\n                        break;\n                    }\n                }\n                if (!isSuccessful)\n                {\n                    break;\n                }\n            }\n            if (isSuccessful)\n            {\n                result++;\n            }\n        }\n\n        Console.WriteLine(result);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\na = []\n\nn.times do\n  a << gets.chomp.split('').map(&:to_i)\nend\n\nans = 0\n\n(0...m).each do |i|\n  max = a[0][i]\n  (1...n).each do |j|\n    if a[j][i] > max\n      max = a[j][i]\n    end\n  end\n\n  (0...n).each do |j|\n    if a[j][i] == max\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 100;\nvar\n  n, m, i, j, k, s, t, ans: integer;\n  a: array[0..maxn, 0..maxn] of char;\nbegin\n  readln(n, m);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n  for i := 0 to n - 1 do\n    for j := 0 to m - 1 do\n      begin\n        s := 0;\n        for k := 0 to n - 1 do\n          if a[k, j] > a[i, j] then\n            inc(s);\n        if s = n - 1 then\n          inc(ans);\n      end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a = make([]int, n)\\n    for i := 0; i < n; i++ {\\n        var b = make([]int, m)\\n        fmt.Scanf(\\\"%s\\\\n\\\", &b)\\n        for j := 0; j < m; j++ {\\n            a[i] += int(b[j] - '0')\\n        }\\n    }\\n    var ans = 0\\n    for i := 0; i < n; i++ {\\n        if a[i] == max(a) {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc max(a []int) int {\\n    max := a[0]\\n    for i := 1; i < len(a); i++ {\\n        if a[i] > max {\\n            max = a[i]\\n        }\\n    }\\n    return max\\n}\"]","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n, m = map(int, input().split())\n\ns = []\nfor i in range(n):\n    s.append(list(map(int, input())))\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if s[i][j] == max(s[i]):\n            ans += 1\n\nprint(ans)\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val students = List(n) { readLine().toCharArray() }\n    val max = IntArray(m) { 0 }\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            max[j] = maxOf(max[j], students[i][j] - '0')\n        }\n    }\n    val count = 0\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (students[i][j] - '0' == max[j]) {\n                count++\n                break\n            }\n        }\n    }\n    println(count)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[$i] = trim(fgets(STDIN));\n}\n$count = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $flag = true;\n    for ($j = 0; $j < $m; $j++) {\n        for ($k = 0; $k < $n; $k++) {\n            if ($i != $k && $arr[$i][$j] < $arr[$k][$j]) {\n                $flag = false;\n                break;\n            }\n        }\n        if (!$flag) {\n            break;\n        }\n    }\n    if ($flag) {\n        $count++;\n    }\n}\necho $count;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n][m];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %d \", &a[i][j]);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int flag = 1;\n        for (int j = 0; j < m; j++) {\n            for (int k = 0; k < n; k++) {\n                if (i != k && a[i][j] < a[k][j]) {\n                    flag = 0;\n                }\n            }\n        }\n        if (flag) {\n            ans++;\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\nuse warnings;\n\nmy $n, $m;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nmy @students = ();\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $line = <STDIN>;\n    chomp($line);\n    my @marks = split(\/\/, $line);\n    push(@students, \\@marks);\n}\n\nmy $count = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $student = $students[$i];\n    for (my $j = 0; $j < $m; $j++) {\n        my $mark = $student[$j];\n        my $is_best = 1;\n        for (my $k = 0; $k < $n; $k++) {\n            if ($k != $i && $student[$j] < $students[$k][$j]) {\n                $is_best = 0;\n            }\n        }\n        if ($is_best) {\n            $count++;\n        }\n    }\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = String::new();\n    stdin.read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut m = String::new();\n    stdin.read_line(&mut m).unwrap();\n    let m: usize = m.trim().parse().unwrap();\n\n    let mut students = Vec::new();\n    for _ in 0..n {\n        let mut s = String::new();\n        stdin.read_line(&mut s).unwrap();\n        let s: Vec<u8> = s.trim().as_bytes().to_vec();\n        students.push(s);\n    }\n\n    let mut successful = 0;\n    for i in 0..n {\n        let mut best = 0;\n        for j in 0..m {\n            if students[i][j] > students[best][j] {\n                best = i;\n            }\n        }\n        for j in 0..n {\n            if j != i && students[j][best] == students[i][best] {\n                successful += 1;\n            }\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"C. Pocket Book","description":"One day little Vasya found mom's pocket book. The book had n names of her friends and unusually enough, each name was exactly m letters long. Let's number the names from 1 to n in the order in which they are written.As mom wasn't home, Vasya decided to play with names: he chose three integers i, j, k (1\u2264i<j\u2264n, 1\u2264k\u2264m), then he took names number i and j and swapped their prefixes of length k. For example, if we take names \"CBDAD\" and \"AABRD\" and swap their prefixes with the length of 3, the result will be names \"AABAD\" and \"CBDRD\".You wonder how many different names Vasya can write instead of name number 1, if Vasya is allowed to perform any number of the described actions. As Vasya performs each action, he chooses numbers i, j, k independently from the previous moves and his choice is based entirely on his will. The sought number can be very large, so you should only find it modulo 1000000007 (10^9+7).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains two integers n and m (1\u2264n,m\u2264100) \u2014 the number of names and the length of each name, correspondingly. Then n lines contain names, each name consists of exactly m uppercase Latin letters.\n","output_spec":"Print the single number \u2014 the number of different names that could end up in position number 1 in the pocket book after the applying the procedures described above. Print the number modulo 1000000007 (10^9+7).\n","notes":"In the first sample Vasya can get the following names in the position number 1: \"AAB\", \"AAA\", \"BAA\" and \"BAB\".\n","sample_inputs":["2 3\nAAB\nBAA\n","4 5\nABABA\nBCGDG\nAAAAA\nYABSA\n"],"sample_outputs":["4\n","216\n"],"id":"152-C","difficulty":1400,"tags":["combinatorics"],"src_uid":"a37df9b239a40473516d1525d56a0da7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<string> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    vector<vector<int>> dp(n, vector<int>(m + 1, 0));\n    for (int i = 0; i < n; i++) {\n        dp[i][0] = 1;\n    }\n\n    for (int i = 1; i <= m; i++) {\n        for (int j = 0; j < n; j++) {\n            for (int k = 0; k < n; k++) {\n                if (j != k && a[j][i - 1] == a[k][i - 1]) {\n                    dp[j][i] = (dp[j][i] + dp[k][i - 1]) % 1000000007;\n                }\n            }\n        }\n    }\n\n    cout << dp[0][m] << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = Integer.parseInt(br.readLine());\n        }\n        Arrays.sort(arr);\n        int ans = 1;\n        for (int i = 1; i < n; i++) {\n            if (arr[i] != arr[i - 1]) {\n                ans = (ans * m) % 1000000007;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m=map(int,input().split())\ns=list(input())\nans=1\nfor i in range(m):\n    ans*=n\n    ans%=1000000007\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\n#define MOD 1000000007\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    int a[n][m];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %c \", &a[i][j]);\n        }\n    }\n    int dp[n][m];\n    dp[0][0] = 1;\n    for (int i = 1; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            dp[i][j] = 0;\n            for (int k = 0; k <= j; k++) {\n                dp[i][j] = (dp[i][j] + dp[i - 1][k]) % MOD;\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        ans = (ans + dp[n - 1][i]) % MOD;\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int m = int.Parse(input[1]);\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                a[i] = int.Parse(Console.ReadLine());\n            }\n            int[] dp = new int[n + 1];\n            dp[0] = 1;\n            for (int i = 1; i <= n; i++)\n            {\n                for (int j = 0; j < i; j++)\n                {\n                    for (int k = 1; k <= m; k++)\n                    {\n                        if (a[i] == a[j] && k <= Math.Min(a[i].Length, a[j].Length))\n                        {\n                            dp[i] = (dp[i] + dp[j]) % 1000000007;\n                        }\n                    }\n                }\n            }\n            Console.WriteLine(dp[n]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\na = []\nn.times do\n  a << gets.chomp\nend\n\nans = 1\n(1..m).each do |i|\n  s = a.map { |x| x[0..i-1] }\n  t = a.map { |x| x[i..-1] }\n  s.permutation(n).each do |p|\n    t.permutation(n).each do |q|\n      ans = (ans * (p.zip(q).map { |x, y| x + y }.uniq.size)) % 10**9 + 7\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram P1000A;\n\nuses\n  SysUtils;\n\nconst\n  MOD = 1000000007;\n\nvar\n  n, m, i, j, k, ans: Integer;\n  a: array[0..100, 0..100] of Integer;\n\nbegin\n  Readln(n, m);\n  for i := 1 to n do\n  begin\n    Readln(a[i]);\n    for j := 1 to m do\n      a[i, j] := a[i, j] - 'A' + 1;\n  end;\n  for i := 1 to n do\n  begin\n    for j := 1 to n do\n    begin\n      for k := 1 to m do\n      begin\n        if (a[i, k] = a[j, k]) and (a[i, k - 1] <> a[j, k - 1]) then\n          inc(ans);\n      end;\n    end;\n  end;\n  Writeln(ans mod MOD);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\/big\"\r\n)\r\n\r\nfunc main() {\r\n\tvar n, m int\r\n\tfmt.Scan(&n, &m)\r\n\tvar a = make([]string, n)\r\n\tfor i := 0; i < n; i++ {\r\n\t\tfmt.Scan(&a[i])\r\n\t}\r\n\tvar dp = make([]*big.Int, m+1)\r\n\tdp[0] = big.NewInt(1)\r\n\tfor i := 1; i <= m; i++ {\r\n\t\tdp[i] = big.NewInt(0)\r\n\t\tfor j := 0; j < n; j++ {\r\n\t\t\tfor k := 1; k <= i; k++ {\r\n\t\t\t\tdp[i].Add(dp[i], dp[i-k].Mul(dp[i-k], big.NewInt(int64(len(a[j])-k))))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfmt.Println(dp[m].Mod(dp[m], big.NewInt(1000000007)))\r\n}\n\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst names = input.slice(1);\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= m; j++) {\n    for (let k = 1; k <= m; k++) {\n      if (j + k <= m) {\n        dp[i] += dp[i - 1] * (names[i - 1].substr(0, j) === names[i - 1].substr(j + k, k)) % 1000000007;\n      }\n    }\n  }\n}\nconsole.log(dp[n] % 1000000007);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m) = readLine()!!.split(\" \").map { it.toInt() }\n    val s = readLine()!!.toCharArray()\n    val dp = Array(n + 1) { IntArray(m + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..m) {\n            for (k in 0..j) {\n                dp[i][j] += dp[i - 1][k]\n                dp[i][j] %= 1000000007\n            }\n        }\n    }\n    println(dp[n][m])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[] = trim(fgets(STDIN));\n}\n$ans = 1;\nfor ($i = 0; $i < $m; $i++) {\n    $ans = $ans * count(array_unique($arr)) % 1000000007;\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    auto a = new char[n][m];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    int ans = 1;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i != j) {\n                for (int k = 0; k < m; k++) {\n                    char tmp = a[i][k];\n                    a[i][k] = a[j][k];\n                    a[j][k] = tmp;\n                    ans = (ans + 1) % 1000000007;\n                    tmp = a[i][k];\n                    a[i][k] = a[j][k];\n                    a[j][k] = tmp;\n                }\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nfor (my $i = 0; $i < $n; $i++) {\n    chomp(my $line = <STDIN>);\n    push(@a, $line);\n}\n\nmy $ans = 1;\nfor (my $i = 0; $i < $m; $i++) {\n    $ans = $ans * (26 - $i) % 1000000007;\n}\n\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        for (my $k = 0; $k < $m; $k++) {\n            $ans = $ans * (26 - $k) % 1000000007;\n        }\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n\n    let mut dp = vec![vec![0; m + 1]; n + 1];\n\n    for i in 0..n {\n        let s = lines.next().unwrap().unwrap();\n        for j in 0..m {\n            dp[i + 1][j + 1] = (dp[i + 1][j] + dp[i][j + 1] - dp[i][j]) % 1000000007;\n            if s.as_bytes()[j] == b'A' {\n                dp[i + 1][j + 1] += 1;\n            }\n        }\n    }\n\n    println!(\"{}\", dp[n][m]);\n}\n\"\"\"}]"}
{"title":"D. Flatland Fencing","description":"The King of Flatland will organize a knights' tournament! The winner will get half the kingdom and the favor of the princess of legendary beauty and wisdom. The final test of the applicants' courage and strength will be a fencing tournament. The tournament is held by the following rules: the participants fight one on one, the winner (or rather, the survivor) transfers to the next round.Before the battle both participants stand at the specified points on the Ox axis with integer coordinates. Then they make moves in turn. The first participant moves first, naturally. During a move, the first participant can transfer from the point x to any integer point of the interval [x+a; x+b]. The second participant can transfer during a move to any integer point of the interval [x-b; x-a]. That is, the options for the players' moves are symmetric (note that the numbers a and b are not required to be positive, and if a\u22640\u2264b, then staying in one place is a correct move). At any time the participants can be located arbitrarily relative to each other, that is, it is allowed to \"jump\" over the enemy in any direction. A participant wins if he uses his move to transfer to the point where his opponent is.Of course, the princess has already chosen a husband and now she wants to make her sweetheart win the tournament. He has already reached the tournament finals and he is facing the last battle. The princess asks the tournament manager to arrange the tournament finalists in such a way that her sweetheart wins the tournament, considering that both players play optimally. However, the initial location of the participants has already been announced, and we can only pull some strings and determine which participant will be first and which one will be second. But how do we know which participant can secure the victory? Alas, the princess is not learned in the military affairs... Therefore, she asks you to determine how the battle will end considering that both opponents play optimally. Also, if the first player wins, your task is to determine his winning move.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains four space-separated integers \u2014 x1, x2, a and b (x1\u2260x2, a\u2264b, -10^9\u2264x1,x2,a,b\u226410^9) \u2014 coordinates of the points where the first and the second participant start, and the numbers that determine the players' moves, correspondingly.\n","output_spec":"On the first line print the outcome of the battle as \"FIRST\" (without the quotes), if both players play optimally and the first player wins. Print \"SECOND\" (without the quotes) if the second player wins and print \"DRAW\" (without the quotes), if nobody is able to secure the victory.\nIf the first player wins, print on the next line the single integer x \u2014 the coordinate of the point where the first player should transfer to win. The indicated move should be valid, that is, it should meet the following condition: x1+a\u2264x\u2264x1+b. If there are several winning moves, print any of them. If the first participant can't secure the victory, then you do not have to print anything.\n","notes":"In the first sample the first player can win in one move.\nIn the second sample the first participant must go to point 1, where the second participant immediately goes and wins. \nIn the third sample changing the position isn't profitable to either participant, so nobody wins.\n","sample_inputs":["0 2 0 4\n","0 2 1 1\n","0 2 0 1\n"],"sample_outputs":["FIRST\n2\n","SECOND\n","DRAW\n"],"id":"154-D","difficulty":2400,"tags":["games","math"],"src_uid":"4ea8cc3305a0ee2c1e580b43e5bc46c6","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int x1, x2, a, b;\n    cin >> x1 >> x2 >> a >> b;\n    if (x1 < x2) {\n        if (x2 - x1 <= b) {\n            cout << \"FIRST\\n\" << x2 - b;\n        } else {\n            cout << \"DRAW\";\n        }\n    } else {\n        if (x1 - x2 <= a) {\n            cout << \"FIRST\\n\" << x1 + a;\n        } else {\n            cout << \"DRAW\";\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int x1 = scanner.nextInt();\n        int x2 = scanner.nextInt();\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n\n        int min = Math.min(x1, x2);\n        int max = Math.max(x1, x2);\n\n        if (min + a >= max - b) {\n            System.out.println(\"FIRST\");\n            System.out.println(min + a);\n        } else if (min + b <= max - a) {\n            System.out.println(\"SECOND\");\n        } else {\n            System.out.println(\"DRAW\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nx1, x2, a, b = map(int, input().split())\n\nif x1 < x2:\n    if a >= x2 - x1:\n        print(\"FIRST\")\n        print(x2)\n    else:\n        print(\"DRAW\")\nelse:\n    if b >= x1 - x2:\n        print(\"FIRST\")\n        print(x1)\n    else:\n        print(\"DRAW\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int x1, x2, a, b;\n    scanf(\" %d %d %d %d \", &x1, &x2, &a, &b);\n    if (x1 < x2) {\n        if (x2 - x1 <= a) {\n            printf(\"FIRST\\n\");\n            printf(\" %d \", x1 + a);\n        } else {\n            printf(\"SECOND\\n\");\n        }\n    } else {\n        if (x1 - x2 <= b) {\n            printf(\"FIRST\\n\");\n            printf(\" %d \", x1 - b);\n        } else {\n            printf(\"SECOND\\n\");\n        }\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        int x1 = int.Parse(input[0]);\n        int x2 = int.Parse(input[1]);\n        int a = int.Parse(input[2]);\n        int b = int.Parse(input[3]);\n\n        int min = Math.Min(x1, x2);\n        int max = Math.Max(x1, x2);\n\n        if (a <= 0 && b <= 0)\n        {\n            Console.WriteLine(\"DRAW\");\n        }\n        else if (a <= 0)\n        {\n            Console.WriteLine(\"SECOND\");\n        }\n        else if (b <= 0)\n        {\n            Console.WriteLine(\"FIRST\");\n            Console.WriteLine(min + a);\n        }\n        else if (a + b >= max - min)\n        {\n            Console.WriteLine(\"FIRST\");\n            Console.WriteLine(max);\n        }\n        else\n        {\n            Console.WriteLine(\"SECOND\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"x1,x2,a,b=map(int,input().split())\nif x1+a>=x2 and x1+b<=x2:\n    print('FIRST')\n    print(x1+a)\nelif x1-a<=x2 and x1-b>=x2:\n    print('SECOND')\nelse:\n    print('DRAW')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Tournament;\n\nuses\n  SysUtils;\n\nvar\n  x1, x2, a, b: Integer;\n\nbegin\n  Readln(x1, x2, a, b);\n  if (x1 + a > x2) and (x1 + b < x2) then\n    Writeln('FIRST');\n  else if (x1 - a < x2) and (x1 - b > x2) then\n    Writeln('SECOND');\n  else\n    Writeln('DRAW');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"math\"\r\n)\r\n\r\nfunc main() {\r\n    var x1, x2, a, b int64\r\n    fmt.Scan(&x1, &x2, &a, &b)\r\n\r\n    if x1 < x2 {\r\n        x1, x2 = x2, x1\r\n        a, b = b, a\r\n    }\r\n\r\n    if x1+a >= x2-b {\r\n        fmt.Println(\"FIRST\")\r\n        fmt.Println(x1 + a)\r\n    } else if x1+b <= x2-a {\r\n        fmt.Println(\"SECOND\")\r\n    } else {\r\n        fmt.Println(\"DRAW\")\r\n    }\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split(' ');\nconst x1 = parseInt(stdin[0]);\nconst x2 = parseInt(stdin[1]);\nconst a = parseInt(stdin[2]);\nconst b = parseInt(stdin[3]);\n\nif (x1 < x2) {\n    if (x2 - x1 <= a) {\n        console.log('FIRST');\n        console.log(x1 + a);\n    } else {\n        console.log('SECOND');\n    }\n} else {\n    if (x1 - x2 <= b) {\n        console.log('FIRST');\n        console.log(x1 - b);\n    } else {\n        console.log('SECOND');\n    }\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (x1, x2, a, b) = readLine().split(\" \").map { it.toInt() }\n    val x = if (x1 < x2) x1 + a else x1 + b\n    if (x2 in x1 + a..x1 + b) {\n        println(\"DRAW\")\n    } else if (x2 in x..x1 + b) {\n        println(\"FIRST\")\n        println(x)\n    } else {\n        println(\"SECOND\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$x1 = intval($input[0]);\n$x2 = intval($input[1]);\n$a = intval($input[2]);\n$b = intval($input[3]);\n\nif ($x1 < $x2) {\n    $first = 'FIRST';\n    $second = 'SECOND';\n} else {\n    $first = 'SECOND';\n    $second = 'FIRST';\n}\n\nif ($x1 + $a >= $x2 - $b) {\n    echo $first . PHP_EOL;\n    echo $x2 - $b . PHP_EOL;\n} else if ($x1 + $b <= $x2 + $a) {\n    echo $first . PHP_EOL;\n    echo $x1 + $b . PHP_EOL;\n} else {\n    echo 'DRAW' . PHP_EOL;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[4] x;\n    x = readln.split.map!(to!int).array;\n    int a = x[2];\n    int b = x[3];\n    int x1 = x[0];\n    int x2 = x[1];\n\n    if (x1 < x2) {\n        if (x1 + a >= x2) {\n            writeln(\"FIRST\");\n            writeln(x1 + a);\n        } else {\n            writeln(\"DRAW\");\n        }\n    } else {\n        if (x2 + a >= x1) {\n            writeln(\"SECOND\");\n        } else {\n            writeln(\"DRAW\");\n        }\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy ($x1, $x2, $a, $b) = split \/ \/, <STDIN>;\n\nif ($x1 < $x2) {\n    if ($x2 - $x1 <= $a) {\n        print \"FIRST\\n\";\n        print $x1 + $a;\n    } else {\n        print \"SECOND\\n\";\n    }\n} else {\n    if ($x1 - $x2 <= $b) {\n        print \"FIRST\\n\";\n        print $x1 - $b;\n    } else {\n        print \"SECOND\\n\";\n    }\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let x1 = input_vec[0];\n    let x2 = input_vec[1];\n    let a = input_vec[2];\n    let b = input_vec[3];\n\n    if x1 < x2 {\n        if x1 + a >= x2 - b {\n            println!(\"FIRST\");\n            println!(\"{}\", x1 + a);\n        } else {\n            println!(\"SECOND\");\n        }\n    } else {\n        if x2 + a >= x1 - b {\n            println!(\"SECOND\");\n            println!(\"{}\", x2 + a);\n        } else {\n            println!(\"DRAW\");\n        }\n    }\n}\n\"\"\"}]"}
{"title":"B. Suspects","description":"As Sherlock Holmes was investigating a crime, he identified n suspects. He knows for sure that exactly one of them committed the crime. To find out which one did it, the detective lines up the suspects and numbered them from 1 to n. After that, he asked each one: \"Which one committed the crime?\". Suspect number i answered either \"The crime was committed by suspect number ai\", or \"Suspect number ai didn't commit the crime\". Also, the suspect could say so about himself (ai=i).Sherlock Holmes understood for sure that exactly m answers were the truth and all other answers were a lie. Now help him understand this: which suspect lied and which one told the truth?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (1\u2264n\u226410^5,0\u2264m\u2264n) \u2014 the total number of suspects and the number of suspects who told the truth. Next n lines contain the suspects' answers. The i-th line contains either \"+ai\" (without the quotes), if the suspect number i says that the crime was committed by suspect number ai, or \"-ai\" (without the quotes), if the suspect number i says that the suspect number ai didn't commit the crime (ai is an integer, 1\u2264ai\u2264n).\nIt is guaranteed that at least one suspect exists, such that if he committed the crime, then exactly m people told the truth.\n","output_spec":"Print n lines. Line number i should contain \"Truth\" if suspect number i has told the truth for sure. Print \"Lie\" if the suspect number i lied for sure and print \"Not defined\" if he could lie and could tell the truth, too, depending on who committed the crime.\n","notes":"The first sample has the single person and he confesses to the crime, and Sherlock Holmes knows that one person is telling the truth. That means that this person is telling the truth.\nIn the second sample there are three suspects and each one denies his guilt. Sherlock Holmes knows that only two of them are telling the truth. Any one of them can be the criminal, so we don't know for any of them, whether this person is telling the truth or not.\nIn the third sample the second and the fourth suspect defend the first and the third one. But only one is telling the truth, thus, the first or the third one is the criminal. Both of them can be criminals, so the second and the fourth one can either be lying or telling the truth. The first and the third one are lying for sure as they are blaming the second and the fourth one.\n","sample_inputs":["1 1\n+1\n","3 2\n-1\n-2\n-3\n","4 1\n+2\n-3\n+4\n-1\n"],"sample_outputs":["Truth\n","Not defined\nNot defined\nNot defined\n","Lie\nNot defined\nLie\nNot defined\n"],"id":"156-B","difficulty":1600,"tags":["constructive+algorithms","data+structures","implementation"],"src_uid":"c761bb69cf1b5a3dbe38d9f5c46e9007","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    vector<int> b(n);\n    for (int i = 0; i < n; i++) {\n        b[a[i] - 1]++;\n    }\n    for (int i = 0; i < n; i++) {\n        if (b[i] == m) {\n            cout << \"Truth\\n\";\n        } else if (b[i] == 0) {\n            cout << \"Lie\\n\";\n        } else {\n            cout << \"Not defined\\n\";\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ndef check(i):\n    if i == 1:\n        return \"Truth\"\n    if i == n:\n        return \"Lie\"\n    if i == m:\n        return \"Truth\"\n    return \"Not defined\"\n\nfor i in range(1, n + 1):\n    print(check(i))\n\"\"\"}]","C":"","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = []\nfor i in 1..n\n    a << gets.chomp\nend\n\ndef check(i)\n    if a[i].start_with?(\"+\")\n        return a[i[1..-1].to_i] == i\n    else\n        return a[i[1..-1].to_i] != i\n    end\nend\n\nfor i in 1..n\n    if check(i)\n        puts \"Truth\"\n    else\n        puts \"Lie\"\n    end\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Sherlock;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, a, b: Integer;\n  s: String;\n  ans: array[1..100000] of String;\n\nbegin\n  Readln(n, m);\n  for i := 1 to n do\n  begin\n    Readln(s);\n    if s[1] = '+' then\n      a := StrToInt(Copy(s, 2, Length(s) - 1))\n    else\n      a := StrToInt(Copy(s, 1, Length(s) - 1));\n    ans[a] := 'Truth';\n  end;\n  for i := 1 to n do\n  begin\n    if ans[i] = 'Truth' then\n      continue;\n    for j := 1 to n do\n      if ans[j] = 'Truth' then\n      begin\n        if i = j then\n          ans[i] := 'Lie';\n        break;\n      end;\n  end;\n  for i := 1 to n do\n    Writeln(ans[i]);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"os\"\r\n)\r\n\r\nfunc main() {\r\n    var n, m int\r\n    fmt.Scanf(\" %d %d \", &n, &m)\r\n    var a = make([]int, n)\r\n    for i := 0; i < n; i++ {\r\n        fmt.Scanf(\" %d \", &a[i])\r\n    }\r\n    var t = make([]int, n)\r\n    for i := 0; i < n; i++ {\r\n        t[a[i]-1]++\r\n    }\r\n    var ans = make([]string, n)\r\n    for i := 0; i < n; i++ {\r\n        if t[i] == m {\r\n            ans[i] = \"Truth\"\r\n        } else if t[i] == 0 {\r\n            ans[i] = \"Lie\"\r\n        } else {\r\n            ans[i] = \"Not defined\"\r\n        }\r\n    }\r\n    for i := 0; i < n; i++ {\r\n        fmt.Println(ans[i])\r\n    }\r\n}\n\"}]}","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val map = mutableMapOf<Int, Int>()\n    val ans = mutableListOf<String>()\n    for (i in 0 until n) {\n        val line = readLine()\n        val a = line.split(\" \")[0].toInt()\n        if (map.containsKey(a)) {\n            ans.add(\"Not defined\")\n        } else {\n            map[a] = i\n            ans.add(if (i < m) \"Truth\" else \"Lie\")\n        }\n    }\n    ans.forEach { println(it) }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[$i] = trim(fgets(STDIN));\n}\n$ans = [];\nfor ($i = 0; $i < $n; $i++) {\n    if ($arr[$i] == \"+$i\") {\n        $ans[$i] = \"Truth\";\n    } else if ($arr[$i] == \"-$i\") {\n        $ans[$i] = \"Lie\";\n    } else {\n        $ans[$i] = \"Not defined\";\n    }\n}\nfor ($i = 0; $i < $n; $i++) {\n    echo $ans[$i] . \"\\n\";\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n];\n    int b[n];\n    int i, j;\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < n; i++) {\n        b[i] = 0;\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (a[i] == j + 1) {\n                b[j]++;\n            }\n        }\n    }\n    for (i = 0; i < n; i++) {\n        if (b[i] == m) {\n            printf(\" Truth\\n\");\n        } else if (b[i] == 0) {\n            printf(\" Lie\\n\");\n        } else {\n            printf(\" Not defined\\n\");\n        }\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nfor (my $i = 0; $i < $n; $i++) {\n    chomp(my $line = <STDIN>);\n    push(@a, $line);\n}\n\nmy $criminal = -1;\nmy $truth = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] =~ \/\\+(\\d+)\/) {\n        if ($criminal == -1) {\n            $criminal = $1;\n        } elsif ($criminal != $1) {\n            $truth = 0;\n        }\n    } elsif ($a[$i] =~ \/-(\\d+)\/) {\n        if ($criminal == $1) {\n            $truth = 0;\n        }\n    }\n}\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($i == $criminal) {\n        print \"Lie\\n\";\n    } elsif ($truth == $m) {\n        print \"Truth\\n\";\n    } else {\n        print \"Not defined\\n\";\n    }\n}\n\nexit(0);\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n\n    let mut truth = vec![false; n];\n    for _ in 0..m {\n        let line = lines.next().unwrap().unwrap();\n        let (a, b) = line.split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n        if a == b {\n            truth[a - 1] = true;\n        }\n    }\n\n    for i in 0..n {\n        let mut is_truth = false;\n        for j in 0..n {\n            if i == j {\n                continue;\n            }\n            if truth[j] {\n                if a == i {\n                    is_truth = true;\n                } else if b == i {\n                    is_truth = false;\n                }\n            }\n        }\n        if is_truth {\n            println!(\"Truth\");\n        } else {\n            println!(\"Lie\");\n        }\n    }\n}\n\"\"\"}]"}
{"title":"D. Clues","description":"As Sherlock Holmes was investigating another crime, he found a certain number of clues. Also, he has already found direct links between some of those clues. The direct links between the clues are mutual. That is, the direct link between clues A and B and the direct link between clues B and A is the same thing. No more than one direct link can exist between two clues.Of course Sherlock is able to find direct links between all clues. But it will take too much time and the criminals can use this extra time to hide. To solve the crime, Sherlock needs each clue to be linked to all other clues (maybe not directly, via some other clues). Clues A and B are considered linked either if there is a direct link between them or if there is a direct link between A and some other clue C which is linked to B. Sherlock Holmes counted the minimum number of additional direct links that he needs to find to solve the crime. As it turns out, it equals T.Please count the number of different ways to find exactly T direct links between the clues so that the crime is solved in the end. Two ways to find direct links are considered different if there exist two clues which have a direct link in one way and do not have a direct link in the other way. As the number of different ways can turn out rather big, print it modulo k.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three space-separated integers n,m,k (1\u2264n\u226410^5,0\u2264m\u226410^5, 1\u2264k\u226410^9) \u2014 the number of clues, the number of direct clue links that Holmes has already found and the divisor for the modulo operation.\nEach of next m lines contains two integers a and b (1\u2264a,b\u2264n,a\u2260b), that represent a direct link between clues. It is guaranteed that any two clues are linked by no more than one direct link. Note that the direct links between the clues are mutual.\n","output_spec":"Print the single number \u2014 the answer to the problem modulo k.\n","notes":"The first sample only has two clues and Sherlock hasn't found any direct link between them yet. The only way to solve the crime is to find the link.\nThe second sample has three clues and Sherlock hasn't found any direct links between them. He has to find two of three possible direct links between clues to solve the crime \u2014 there are 3 ways to do it.\nThe third sample has four clues and the detective has already found one direct link between the first and the fourth clue. There are 8 ways to find two remaining clues to solve the crime.\n","sample_inputs":["2 0 1000000000\n","3 0 100\n","4 1 1000000000\n1 4\n"],"sample_outputs":["1\n","3\n","8\n"],"id":"156-D","difficulty":2500,"tags":["combinatorics","graphs"],"src_uid":"b244d5c52acda47c5e8ef92029a9635f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n\n    vector<int> a(n + 1);\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        a[u]++;\n        a[v]++;\n    }\n\n    int ans = 1;\n    for (int i = 1; i <= n; i++) {\n        ans = (ans * (a[i] + 1)) % k;\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m, k, i, j, a, b, ans = 1;\n    scanf(\" %d%d%d \", &n, &m, &k);\n    for (i = 0; i < m; i++) {\n        scanf(\" %d%d \", &a, &b);\n        if (a > b) {\n            int t = a;\n            a = b;\n            b = t;\n        }\n        for (j = 1; j <= n; j++) {\n            if (j != a && j != b) {\n                ans = (ans * (n - 2)) % k;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Sherlock\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var input = Console.ReadLine().Split(' ');\n            var n = int.Parse(input[0]);\n            var m = int.Parse(input[1]);\n            var k = int.Parse(input[2]);\n            var graph = new List<List<int>>();\n            for (int i = 0; i < n; i++)\n            {\n                graph.Add(new List<int>());\n            }\n            for (int i = 0; i < m; i++)\n            {\n                var input = Console.ReadLine().Split(' ');\n                var a = int.Parse(input[0]);\n                var b = int.Parse(input[1]);\n                graph[a - 1].Add(b - 1);\n                graph[b - 1].Add(a - 1);\n            }\n            var ans = 0;\n            for (int i = 0; i < n; i++)\n            {\n                var count = 0;\n                for (int j = 0; j < n; j++)\n                {\n                    if (i != j && graph[i].Contains(j))\n                    {\n                        count++;\n                    }\n                }\n                ans = (ans + (count * (count - 1) \/ 2) % k) % k;\n            }\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,k=map(int,input().split())\na=[0]*(n+1)\nfor i in range(m):\n    a[int(input().split()[0])-1]+=1\n    a[int(input().split()[1])-1]+=1\nans=1\nfor i in range(n):\n    ans*=a[i]\n    ans%=k\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Sherlock;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 100000;\n\nvar\n  n, m, k, i, j, a, b, ans: Integer;\n  g: array[0..MAXN] of Integer;\n\nbegin\n  Readln(n, m, k);\n  for i := 0 to n - 1 do\n    g[i] := -1;\n  for i := 0 to m - 1 do\n  begin\n    Readln(a, b);\n    g[a - 1] := b - 1;\n    g[b - 1] := a - 1;\n  end;\n  ans := 0;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to n - 1 do\n    begin\n      if (i <> j) and (g[i] <> j) and (g[j] <> i) then\n        ans := (ans + 1) mod k;\n    end;\n  end;\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, k int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &k)\\n    g := make([][]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n        g[a] = append(g[a], b)\\n        g[b] = append(g[b], a)\\n    }\\n    ans := 1\\n    for i := 1; i <= n; i++ {\\n        if len(g[i]) == m {\\n            ans *= 2\\n        } else {\\n            ans *= 3\\n        }\\n    }\\n    fmt.Println(ans % k)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst k = parseInt(input[0].split(' ')[2]);\nconst a = [];\nfor (let i = 1; i <= m; i++) {\n  const line = input[i].split(' ');\n  a.push([parseInt(line[0]), parseInt(line[1])]);\n}\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 0; j < a.length; j++) {\n    if (a[j][0] == i || a[j][1] == i) {\n      dp[i] = (dp[i] + dp[i - 1]) % k;\n    }\n  }\n}\nconsole.log(dp[n]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\nimport java.util.*\n\nfun main() {\n    val br = BufferedReader(InputStreamReader(System.`in`))\n    val (n, m, k) = br.readLine().split(\" \").map { it.toInt() }\n    val g = Array(n + 1) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = br.readLine().split(\" \").map { it.toInt() }\n        g[a].add(b)\n        g[b].add(a)\n    }\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    for (i in 1..n) {\n        dp[i][i] = 1\n    }\n    for (i in 1..n) {\n        for (j in 1..n) {\n            for (k in 1..n) {\n                if (i != j && j != k && k != i) {\n                    dp[i][k] += dp[i][j] * dp[j][k]\n                    dp[i][k] %= k\n                }\n            }\n        }\n    }\n    val ans = dp[1][n]\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$a = array_fill(0, $n + 1, 0);\nfor ($i = 0; $i < $m; $i++) {\n    $a[$a[intval(trim(fgets(STDIN)))]]++;\n}\n$ans = 1;\nfor ($i = 1; $i <= $n; $i++) {\n    $ans = $ans * ($n - $a[$i] + 1) % $k;\n}\necho $ans % $k;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int a[n];\n    int b[n];\n    int c[n];\n    int d[n];\n    for (int i = 0; i < n; i++) {\n        a[i] = 0;\n        b[i] = 0;\n        c[i] = 0;\n        d[i] = 0;\n    }\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        a[x - 1]++;\n        b[y - 1]++;\n        c[x - 1]++;\n        d[y - 1]++;\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j)\n                continue;\n            if (a[i] + b[j] == m)\n                ans++;\n            if (c[i] + d[j] == m)\n                ans++;\n        }\n    }\n    ans %= k;\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\n\nchomp(my $line = <STDIN>);\n($n, $m, $k) = split(\/ \/, $line);\n\nmy @a = ();\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    ($a[$i][0], $a[$i][1]) = split(\/ \/, $line);\n}\n\nmy $ans = 1;\nfor (my $i = 0; $i < $m; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($i != $j && $a[$i][0] == $a[$j][1] && $a[$i][1] == $a[$j][0]) {\n            $ans = $ans * 2 % $k;\n        }\n    }\n}\n\nprint $ans % $k;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m, k) = lines\n        .next()\n        .unwrap()\n        .split_whitespace()\n        .map(|s| s.parse::<usize>().unwrap())\n        .collect::<Vec<_>>();\n\n    let mut graph = vec![vec![]; n];\n    for _ in 0..m {\n        let (a, b) = lines\n            .next()\n            .unwrap()\n            .split_whitespace()\n            .map(|s| s.parse::<usize>().unwrap())\n            .collect::<Vec<_>>();\n        graph[a - 1].push(b - 1);\n        graph[b - 1].push(a - 1);\n    }\n\n    let mut dp = vec![vec![0; n]; n];\n    for i in 0..n {\n        dp[i][0] = 1;\n    }\n\n    for i in 0..n {\n        for j in 1..n {\n            for k in 0..graph[i].len() {\n                dp[i][j] += dp[graph[i][k]][j - 1];\n                dp[i][j] %= k;\n            }\n        }\n    }\n\n    println!(\"{}\", dp[0][n - m - 1]);\n}\n\"\"\"}]"}
{"title":"A. Cottage Village","description":"A new cottage village called \u00abFlatville\u00bb is being built in Flatland. By now they have already built in \u00abFlatville\u00bb n square houses with the centres on the \u041ex-axis. The houses' sides are parallel to the coordinate axes. It's known that no two houses overlap, but they can touch each other.The architect bureau, where Peter works, was commissioned to build a new house in \u00abFlatville\u00bb. The customer wants his future house to be on the \u041ex-axis, to be square in shape, have a side t, and touch at least one of the already built houses. For sure, its sides should be parallel to the coordinate axes, its centre should be on the Ox-axis and it shouldn't overlap any of the houses in the village.Peter was given a list of all the houses in \u00abFlatville\u00bb. Would you help him find the amount of possible positions of the new house?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"64 megabytes","input_spec":"The first line of the input data contains numbers n and t (1\u2264n,t\u22641000). Then there follow n lines, each of them contains two space-separated integer numbers: xi ai, where xi \u2014 x-coordinate of the centre of the i-th house, and ai \u2014 length of its side (-1000\u2264xi\u22641000, 1\u2264ai\u22641000).\n","output_spec":"Output the amount of possible positions of the new house.\n","notes":"It is possible for the x-coordinate of the new house to have non-integer value.\n","sample_inputs":["2 2\n0 4\n6 2\n","2 2\n0 4\n5 2\n","2 3\n0 4\n5 2\n"],"sample_outputs":["4\n","3\n","2\n"],"id":"15-A","difficulty":1200,"tags":["implementation","sortings"],"src_uid":"c31fed523230af1f904218b2fe0d663d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, t;\n    cin >> n >> t;\n    vector<pair<int, int>> houses;\n    for (int i = 0; i < n; i++) {\n        int x, a;\n        cin >> x >> a;\n        houses.push_back(make_pair(x, a));\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (houses[i].first + t <= houses[j].first) {\n                ans++;\n            } else if (houses[i].first - t >= houses[j].first) {\n                ans++;\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int t = scanner.nextInt();\n        int[] x = new int[n];\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = scanner.nextInt();\n            a[i] = scanner.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (x[i] - t <= 0) {\n                ans++;\n            } else if (x[i] + t >= 1000) {\n                ans++;\n            } else {\n                ans += 2;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, t = map(int, input().split())\nhouses = []\nfor _ in range(n):\n    x, a = map(int, input().split())\n    houses.append((x, a))\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if houses[i][1] == houses[j][1]:\n            ans += 2\n        elif houses[i][0] == houses[j][0]:\n            ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,t=map(int,input().split())\na=[]\nfor i in range(n):\n    a.append(list(map(int,input().split())))\na.sort()\nans=0\nfor i in range(n-1):\n    if a[i][1]==a[i+1][1]:\n        ans+=1\nprint(ans+2)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, t = int.Parse(Console.ReadLine());\n        var houses = new List<int[]>();\n        for (int i = 0; i < n; i++)\n        {\n            var line = Console.ReadLine().Split(' ');\n            houses.Add(new int[] { int.Parse(line[0]), int.Parse(line[1]) });\n        }\n\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < n; j++)\n            {\n                if (i == j)\n                    continue;\n\n                if (houses[i][0] + t <= houses[j][0] && houses[i][0] - t >= houses[j][0])\n                {\n                    ans++;\n                }\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, t = gets.split.map(&:to_i)\nhouses = []\nn.times do\n  x, a = gets.split.map(&:to_i)\n  houses << [x - a \/ 2, x + a \/ 2]\nend\n\nans = 0\n(t \/ 2).times do |i|\n  (t \/ 2).times do |j|\n    if houses.any? { |a, b| a <= i && b >= i + t && a <= j && b >= j + t }\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, t int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &t)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x, y int\\n        fmt.Scanf(\\\"%d%d\\\", &x, &y)\\n        a = append(a, x-y)\\n    }\\n    fmt.Println(len(a))\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst t = Number(input[0].split(' ')[1]);\nconst houses = [];\nfor (let i = 1; i <= n; i++) {\n  const house = input[i].split(' ');\n  houses.push({\n    x: Number(house[0]),\n    a: Number(house[1])\n  });\n}\n\nconst possiblePositions = [];\nfor (let i = 0; i < n; i++) {\n  const house = houses[i];\n  const left = house.x - t;\n  const right = house.x + t;\n  for (let j = 0; j < n; j++) {\n    if (i === j) {\n      continue;\n    }\n    const otherHouse = houses[j];\n    const otherLeft = otherHouse.x - otherHouse.a;\n    const otherRight = otherHouse.x + otherHouse.a;\n    if (left < otherLeft && otherRight < right) {\n      possiblePositions.push(house.x);\n    }\n  }\n}\n\nconsole.log(possiblePositions.length);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val t = sc.nextInt()\n    val houses = Array(n) {\n        val (x, a) = sc.next().split(\" \").map { it.toInt() }\n        x to a\n    }\n    val ans = houses.map { (x, a) ->\n        val left = x - t\n        val right = x + t\n        val count = 0\n        for (i in 0 until n) {\n            if (i != houses.indexOf(it)) {\n                val (x2, a2) = houses[i]\n                if (left <= x2 && x2 <= right) {\n                    count++\n                }\n            }\n        }\n        count\n    }.sum()\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$t = (int)trim(fgets(STDIN));\n$houses = [];\nfor ($i = 0; $i < $n; $i++) {\n    $houses[] = explode(' ', trim(fgets(STDIN)));\n}\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($i == $j) {\n            continue;\n        }\n        if ($houses[$i][0] + $t <= $houses[$j][0] && $houses[$i][0] - $t >= $houses[$j][0]) {\n            $ans++;\n        }\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, t;\n    scanf(\" %d %d \", &n, &t);\n    int a[n];\n    int b[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &a[i], &b[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i != j && a[i] + t <= a[j] && a[i] - t >= a[j] && b[i] == b[j]) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $t; \\n\\nchomp(my $input = <STDIN>);\\n\\n($n, $t) = split(\/ \/, $input);\\n\\nmy @houses = ();\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    ($x, $a) = split(\/ \/, $line);\\n    push(@houses, [$x, $a]);\\n}\\n\\nmy $count = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    for (my $j = 0; $j < $n; $j++) {\\n        if ($i != $j && $houses[$i][0] + $t <= $houses[$j][0] && $houses[$i][0] - $t >= $houses[$j][0]) {\\n            $count++;\\n        }\\n    }\\n}\\n\\nprint $count;\\n\\nexit(0);\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut n_t = input.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n_t[0];\n    let t = n_t[1];\n    let mut houses = Vec::new();\n    for _ in 0..n {\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).unwrap();\n        let mut x_a = input.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n        let x = x_a[0];\n        let a = x_a[1];\n        houses.push((x, a));\n    }\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..n {\n            if i == j {\n                continue;\n            }\n            if houses[i].0 + t <= houses[j].0 || houses[i].0 - t >= houses[j].0 {\n                continue;\n            }\n            if houses[i].1 <= houses[j].1 || houses[i].1 >= houses[j].1 {\n                continue;\n            }\n            ans += 1;\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Burning Midnight Oil","description":"One day a highly important task was commissioned to Vasya \u2014 writing a program in a night. The program consists of n lines of code. Vasya is already exhausted, so he works like that: first he writes v lines of code, drinks a cup of tea, then he writes as much as  lines, drinks another cup of tea, then he writes  lines and so on: , , , ...The expression  is regarded as the integral part from dividing number a by number b.The moment the current value  equals 0, Vasya immediately falls asleep and he wakes up only in the morning, when the program should already be finished.Vasya is wondering, what minimum allowable value v can take to let him write not less than n lines of code before he falls asleep.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input consists of two integers n and k, separated by spaces \u2014 the size of the program in lines and the productivity reduction coefficient, 1\u2264n\u226410^9, 2\u2264k\u226410.\n","output_spec":"Print the only integer \u2014 the minimum value of v that lets Vasya write the program in one night.\n","notes":"In the first sample the answer is v=4. Vasya writes the code in the following portions: first 4 lines, then 2, then 1, and then Vasya falls asleep. Thus, he manages to write 4+2+1=7 lines in a night and complete the task.\nIn the second sample the answer is v=54. Vasya writes the code in the following portions: 54, 6. The total sum is 54+6=60, that's even more than n=59.\n","sample_inputs":["7 2\n","59 9\n"],"sample_outputs":["4\n","54\n"],"id":"165-B","difficulty":1500,"tags":["binary+search","implementation"],"src_uid":"41dfc86d341082dd96e089ac5433dc04","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int ans = 0;\n    while (n > 0) {\n        ans += n \/ k;\n        n = n % k + n \/ k;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int k = scanner.nextInt();\n        int v = (n + k - 1) \/ k;\n        System.out.println(v);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\n\ndef solve(n, k):\n    if n <= k:\n        return n\n    return solve(n \/\/ k, k) + n % k\n\nprint(solve(n, k))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, k, i, j, t, s;\n    scanf(\" %d %d \", &n, &k);\n    t = n;\n    s = 0;\n    for (i = 1; i <= n; i++) {\n        s = s + t;\n        t = t \/ k;\n    }\n    printf(\" %d \", s);\n    return 0;\n}\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\n\nnamespace Codeforces\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int k = int.Parse(input[1]);\n            int v = 0;\n            while (n > 0)\n            {\n                v += n \/ k;\n                n = n % k;\n            }\n            Console.WriteLine(v);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\n\nv = n\nwhile v > 0\n  v = (v - 1) \/ k + 1\nend\n\nputs v\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses SysUtils;\nvar\n  n, k, i, v: Integer;\nbegin\n  Readln(n, k);\n  v := n div k;\n  for i := 1 to k - 1 do\n    v := v div k;\n  Writeln(v);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, k int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &k)\\n    v := n \/ k\\n    if n%k != 0 {\\n        v++\\n    }\\n    fmt.Println(v)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, k] = line.split(' ').map(Number);\n  const v = Math.ceil(n \/ (k + 1));\n  console.log(v);\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.ceil\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val v = ceil(n \/ (k + 1))\n    println(v)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = intval(fgets(STDIN));\n$k = intval(fgets(STDIN));\n$v = 0;\nwhile ($n > 0) {\n    $n -= $v;\n    $v = $v * $k + 1;\n}\necho $v;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int v = n \/ k;\n    if (n % k == 0) {\n        printf(\" %d \", v);\n    } else {\n        printf(\" %d \", v + 1);\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nmy $v = $n;\n\nwhile ($v > 0) {\n    $v = $v \/ $k;\n    $v = int($v);\n}\n\nprint $v;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut n = 0;\n    let mut k = 0;\n\n    for c in line.trim().split_whitespace() {\n        if n == 0 {\n            n = c.parse::<i32>().unwrap();\n        } else {\n            k = c.parse::<i32>().unwrap();\n        }\n    }\n\n    let mut v = n;\n\n    while v > 0 {\n        v = v \/ k + 1;\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Polygons","description":"You've got another geometrical task. You are given two non-degenerate polygons A and B as vertex coordinates. Polygon A is strictly convex. Polygon B is an arbitrary polygon without any self-intersections and self-touches. The vertices of both polygons are given in the clockwise order. For each polygon no three consecutively following vertices are located on the same straight line.Your task is to check whether polygon B is positioned strictly inside polygon A. It means that any point of polygon B should be strictly inside polygon A. \"Strictly\" means that the vertex of polygon B cannot lie on the side of the polygon A.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains the only integer n (3\u2264n\u226410^5) \u2014 the number of vertices of polygon A. Then n lines contain pairs of integers xi,yi (|xi|,|yi|\u226410^9) \u2014 coordinates of the i-th vertex of polygon A. The vertices are given in the clockwise order.\nThe next line contains a single integer m (3\u2264m\u22642\u00b710^4) \u2014 the number of vertices of polygon B. Then following m lines contain pairs of integers xj,yj (|xj|,|yj|\u226410^9) \u2014 the coordinates of the j-th vertex of polygon B. The vertices are given in the clockwise order.\nThe coordinates of the polygon's vertices are separated by a single space. It is guaranteed that polygons A and B are non-degenerate, that polygon A is strictly convex, that polygon B has no self-intersections and self-touches and also for each polygon no three consecutively following vertices are located on the same straight line.\n","output_spec":"Print on the only line the answer to the problem \u2014 if polygon B is strictly inside polygon A, print \"YES\", otherwise print \"NO\" (without the quotes).\n","notes":null,"sample_inputs":["6\n-2 1\n0 3\n3 3\n4 1\n3 -2\n2 -2\n4\n0 1\n2 2\n3 1\n1 0\n","5\n1 2\n4 2\n3 -3\n-2 -2\n-2 1\n4\n0 1\n1 2\n4 1\n2 -1\n","5\n-1 2\n2 3\n4 1\n3 -2\n0 -3\n5\n1 0\n1 1\n3 1\n5 -1\n2 -1\n"],"sample_outputs":["YES\n","NO\n","NO\n"],"id":"166-B","difficulty":2100,"tags":["geometry","sortings"],"src_uid":"d9eb0f6f82bd09ea53a1dbbd7242c497","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n;\n    vector<pair<int, int>> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i].first >> a[i].second;\n    }\n    cin >> m;\n    vector<pair<int, int>> b(m);\n    for (int i = 0; i < m; i++) {\n        cin >> b[i].first >> b[i].second;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        int j = (i + 1) % m;\n        int k = (i + 2) % m;\n        if (a[j].first - a[i].first * (b[k].second - b[j].second) \/ (b[k].first - b[j].first) < b[i].second) {\n            ans = 1;\n            break;\n        }\n    }\n\n    if (ans == 0) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[][] a = new int[n][2];\n        for (int i = 0; i < n; i++) {\n            a[i][0] = sc.nextInt();\n            a[i][1] = sc.nextInt();\n        }\n        int m = sc.nextInt();\n        int[][] b = new int[m][2];\n        for (int i = 0; i < m; i++) {\n            b[i][0] = sc.nextInt();\n            b[i][1] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < m; i++) {\n            int j = 0;\n            while (j < n && a[j][0] < b[i][0]) {\n                j++;\n            }\n            if (j == n) {\n                ans = 1;\n                break;\n            }\n            if (a[j][0] == b[i][0] && a[j][1] > b[i][1]) {\n                ans = 1;\n                break;\n            }\n            int k = n - 1;\n            while (k >= 0 && a[k][0] > b[i][0]) {\n                k--;\n            }\n            if (k < 0) {\n                ans = 1;\n                break;\n            }\n            if (a[k][0] == b[i][0] && a[k][1] < b[i][1]) {\n                ans = 1;\n                break;\n            }\n        }\n        if (ans == 1) {\n            System.out.println(\"NO\");\n        } else {\n            System.out.println(\"YES\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nm = int(input())\nb = []\nfor i in range(m):\n    b.append(list(map(int, input().split())))\n\ndef ccw(a, b, c):\n    return (b[1] - a[1]) * (c[0] - b[0]) - (b[0] - a[0]) * (c[1] - b[1])\n\ndef intersect(a, b):\n    return ccw(a[0], a[1], b[0]) * ccw(a[0], a[1], b[1]) < 0 and ccw(b[0], b[1], a[0]) * ccw(b[0], b[1], a[1]) < 0\n\ndef inside(a, b):\n    for i in range(n - 1):\n        if not intersect([a[i], a[i + 1]], b):\n            return False\n    return True\n\nprint(\"YES\" if inside(a, b) else \"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d \", &n);\n    int a[n][2];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &a[i][0], &a[i][1]);\n    }\n    scanf(\" %d \", &m);\n    int b[m][2];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d \", &b[i][0], &b[i][1]);\n    }\n    int flag = 0;\n    for (int i = 0; i < m; i++) {\n        int j = i + 1;\n        while (j < m) {\n            if (cross(a[i][0], a[i][1], a[j][0], a[j][1], b[i][0], b[i][1]) > 0) {\n                flag = 1;\n                break;\n            }\n            j++;\n        }\n    }\n    if (flag == 0) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\nint cross(int x1, int y1, int x2, int y2, int x3, int y3) {\n    return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1);\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int[]> a = new List<int[]>();\n        for (int i = 0; i < n; i++)\n        {\n            string[] s = Console.ReadLine().Split(' ');\n            a.Add(new int[] { int.Parse(s[0]), int.Parse(s[1]) });\n        }\n        int m = int.Parse(Console.ReadLine());\n        List<int[]> b = new List<int[]>();\n        for (int i = 0; i < m; i++)\n        {\n            string[] s = Console.ReadLine().Split(' ');\n            b.Add(new int[] { int.Parse(s[0]), int.Parse(s[1]) });\n        }\n        int[] p = a[0];\n        int[] q = a[1];\n        int[] r = a[2];\n        int[] s = a[3];\n        int[] t = a[4];\n        int[] u = a[5];\n        int[] v = a[6];\n        int[] w = a[7];\n        int[] x = a[8];\n        int[] y = a[9];\n        int[] z = a[10];\n        int[] a1 = new int[] { p[0], q[0], r[0], s[0], t[0], u[0], v[0], w[0], x[0], y[0], z[0] };\n        int[] a2 = new int[] { p[1], q[1], r[1], s[1], t[1], u[1], v[1], w[1], x[1], y[1], z[1] };\n        int[] b1 = new int[] { b[0], b[1], b[2], b[3], b[4], b[5] };\n        int[] b2 = new int[] { b[6], b[7], b[8], b[9], b[10], b[11] };\n        int n1 = a1.Length;\n        int n2 = b1.Length;\n        int[] c1 = new int[n1];\n        int[] c2 = new int[n2];\n        for (int i = 0; i < n1; i++)\n        {\n            c1[i] = a1[i] * a2[i + 1] - a1[i + 1] * a2[i];\n        }\n        for (int i = 0; i < n2; i++)\n        {\n            c2[i] = b1[i] * b2[i + 1] - b1[i + 1] * b2[i];\n        }\n        int s1 = 0;\n        int s2 = 0;\n        for (int i = 0; i < n1; i++)\n        {\n            s1 += c1[i];\n        }\n        for (int i = 0; i < n2; i++)\n        {\n            s2 += c2[i];\n        }\n        if (s1 == 0 && s2 == 0)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn = gets.to_i\na = []\nn.times do\n  a << gets.split.map(&:to_i)\nend\nm = gets.to_i\nb = []\nm.times do\n  b << gets.split.map(&:to_i)\nend\n\ndef ccw(a, b, c)\n  (b[1] - a[1]) * (c[0] - b[0]) - (b[0] - a[0]) * (c[1] - b[1])\nend\n\ndef intersect?(a, b)\n  ccw(a[0], a[1], b[0]) * ccw(a[0], a[1], b[1]) <= 0 &&\n    ccw(b[0], b[1], a[0]) * ccw(b[0], b[1], a[1]) <= 0\nend\n\ndef inside?(a, b)\n  0.upto(n - 2) do |i|\n    return false unless intersect?(a[i], a[i + 1], b)\n  end\n  true\nend\n\nputs inside?(a, b)\n\"\"\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scanf(\" %d \", &n)\n\ta := make([][2]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d %d \", &a[i][0], &a[i][1])\n\t}\n\tfmt.Scanf(\" %d \", &m)\n\tb := make([][2]int, m)\n\tfor i := 0; i < m; i++ {\n\t\tfmt.Scanf(\" %d %d \", &b[i][0], &b[i][1])\n\t}\n\tfor i := 0; i < m; i++ {\n\t\tif !check(a, b[i]) {\n\t\t\tfmt.Println(\"NO\")\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"YES\")\n}\n\nfunc check(a, b [][2]int) bool {\n\tfor i := 0; i < n; i++ {\n\t\tif cross(a[i], a[(i+1)%n], b[0]) < 0 {\n\t\t\treturn false\n\t\t}\n\t}\n\tfor i := 0; i < m; i++ {\n\t\tif cross(b[i], b[(i+1)%m], a[0]) < 0 {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\nfunc cross(a, b, c [2]int) int {\n\treturn (b[0]-a[0])*(c[1]-a[1]) - (b[1]-a[1])*(c[0]-a[0])\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\nm = int(input())\nb = []\nfor i in range(m):\n    b.append(list(map(int, input().split())))\n\ndef ccw(a, b, c):\n    return (b[1] - a[1]) * (c[0] - b[0]) - (b[0] - a[0]) * (c[1] - b[1])\n\ndef intersect(a, b):\n    return ccw(a[0], a[1], b[0]) * ccw(a[0], a[1], b[1]) < 0 and ccw(b[0], b[1], a[0]) * ccw(b[0], b[1], a[1]) < 0\n\ndef inside(a, b):\n    for i in range(n - 1):\n        if not intersect([a[i], a[i + 1]], b):\n            return False\n    return True\n\nprint(\"YES\" if inside(a, b) else \"NO\")\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val a = Array(n) { readLine().split(\" \").map { it.toInt() } }\n    val m = readLine().toInt()\n    val b = Array(m) { readLine().split(\" \").map { it.toInt() } }\n\n    val ax = a.map { it[0] }\n    val ay = a.map { it[1] }\n    val bx = b.map { it[0] }\n    val by = b.map { it[1] }\n\n    val s = ax.sum()\n    val t = ay.sum()\n    val sx = bx.sum()\n    val sy = by.sum()\n\n    val s1 = ax.zip(ay).map { it.first * it.second }.sum()\n    val s2 = bx.zip(by).map { it.first * it.second }.sum()\n\n    val c = (sx - s) * (sy - t) - (s1 - s2)\n\n    if (c < 0) {\n        println(\"NO\")\n    } else {\n        val s = a.map { it[0] * it[1] }.sum()\n        val t = a.map { it[1] * it[0] }.sum()\n        val sx = b.map { it[0] * it[1] }.sum()\n        val sy = b.map { it[1] * it[0] }.sum()\n\n        val s1 = a.map { it[0] * it[0] }.sum()\n        val s2 = a.map { it[1] * it[1] }.sum()\n        val s3 = b.map { it[0] * it[0] }.sum()\n        val s4 = b.map { it[1] * it[1] }.sum()\n\n        val d = (sx - s) * (sy - t) - (s1 - s2) * (s3 - s4)\n\n        if (d < 0) {\n            println(\"NO\")\n        } else {\n            val p = (sx * sy - s * t) \/ d\n            val q = (s1 * sy - s2 * s) \/ d\n            val r = (sx * s - s1 * t) \/ d\n\n            val x = p * ax + q * ay + r\n            val y = p * ay - q * ax + t\n\n            val x1 = bx.min()\n            val x2 = bx.max()\n            val y1 = by.min()\n            val y2 = by.max()\n\n            if (x >= x1 && x <= x2 && y >= y1 && y <= y2) {\n                println(\"YES\")\n            } else {\n                println(\"NO\")\n            }\n        }\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n = (int)trim(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a[] = explode(' ', trim(fgets(STDIN)));\n}\n$m = (int)trim(fgets(STDIN));\n$b = [];\nfor ($i = 0; $i < $m; $i++) {\n    $b[] = explode(' ', trim(fgets(STDIN)));\n}\n$a = array_map(function ($v) {\n    return [intval($v[0]), intval($v[1])];\n}, $a);\n$b = array_map(function ($v) {\n    return [intval($v[0]), intval($v[1])];\n}, $b);\n$a = array_map(function ($v) {\n    return [\n        [$v[0], $v[1]],\n        [$v[0], $v[1] + 1],\n        [$v[0] + 1, $v[1] + 1],\n        [$v[0] + 1, $v[1]],\n    ];\n}, $a);\n$b = array_map(function ($v) {\n    return [\n        [$v[0], $v[1]],\n        [$v[0], $v[1] + 1],\n        [$v[0] + 1, $v[1] + 1],\n        [$v[0] + 1, $v[1]],\n    ];\n}, $b);\n$a = array_map(function ($v) {\n    return $v[0] * $v[1];\n}, $a);\n$b = array_map(function ($v) {\n    return $v[0] * $v[1];\n}, $b);\n$a = array_unique($a);\n$b = array_unique($b);\n$a = array_values($a);\n$b = array_values($b);\n$a = array_sort($a);\n$b = array_sort($b);\n$ans = 'YES';\nfor ($i = 0; $i < count($b); $i++) {\n    if (!in_array($b[$i], $a)) {\n        $ans = 'NO';\n        break;\n    }\n}\necho $ans;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nstruct Point {\n    int x, y;\n    Point(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nstruct Polygon {\n    Point[] points;\n    Polygon(Point[] points) {\n        this.points = points;\n    }\n\n    bool isConvex() {\n        int n = points.length;\n        for (int i = 0; i < n; i++) {\n            int j = (i + 1) % n;\n            int k = (i + 2) % n;\n            if (points[j].x * (points[k].y - points[i].y) + points[k].x * (points[i].y - points[j].y) + points[i].x * (points[j].y - points[k].y) < 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    bool isInside(Point p) {\n        int n = points.length;\n        int cnt = 0;\n        for (int i = 0; i < n; i++) {\n            int j = (i + 1) % n;\n            if ((points[i].y - p.y) * (points[j].x - p.x) > (points[j].y - p.y) * (points[i].x - p.x)) {\n                cnt++;\n            }\n        }\n        return cnt % 2 == 1;\n    }\n}\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    Point[] pointsA = new Point[n];\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        pointsA[i] = new Point(x, y);\n    }\n    Polygon polygonA = new Polygon(pointsA);\n    if (!polygonA.isConvex()) {\n        printf(\" NO \");\n        return 0;\n    }\n\n    int m;\n    scanf(\" %d \", &m);\n    Point[] pointsB = new Point[m];\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        pointsB[i] = new Point(x, y);\n    }\n    Polygon polygonB = new Polygon(pointsB);\n    if (polygonB.isInside(pointsA[0])) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let mut a = Vec::new();\n    for _ in 0..n {\n        let line = lines.next().unwrap().unwrap();\n        let mut iter = line.split_whitespace();\n        a.push((iter.next().unwrap().parse::<i64>().unwrap(), iter.next().unwrap().parse::<i64>().unwrap()));\n    }\n\n    let m = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let mut b = Vec::new();\n    for _ in 0..m {\n        let line = lines.next().unwrap().unwrap();\n        let mut iter = line.split_whitespace();\n        b.push((iter.next().unwrap().parse::<i64>().unwrap(), iter.next().unwrap().parse::<i64>().unwrap()));\n    }\n\n    let mut ans = \"YES\";\n    for i in 0..m {\n        let mut j = i + 1;\n        while j < m {\n            if (a[i].0 - a[j].0) * (b[i].1 - b[j].1) == (a[i].1 - a[j].1) * (b[i].0 - b[j].0) {\n                ans = \"NO\";\n                break;\n            }\n            j += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Burglar and Matches","description":"A burglar got into a matches warehouse and wants to steal as many matches as possible. In the warehouse there are m containers, in the i-th container there are ai matchboxes, and each matchbox contains bi matches. All the matchboxes are of the same size. The burglar's rucksack can hold n matchboxes exactly. Your task is to find out the maximum amount of matches that a burglar can carry away. He has no time to rearrange matches in the matchboxes, that's why he just chooses not more than n matchboxes so that the total amount of matches in them is maximal.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 second","memory_limit":"64 megabytes","input_spec":"The first line of the input contains integer n (1\u2264n\u22642\u00b710^8) and integer m (1\u2264m\u226420). The i+1-th line contains a pair of numbers ai and bi (1\u2264ai\u226410^8,1\u2264bi\u226410). All the input numbers are integer.\n","output_spec":"Output the only number \u2014 answer to the problem.\n","notes":null,"sample_inputs":["7 3\n5 10\n2 5\n3 6\n","3 3\n1 3\n2 2\n3 1\n"],"sample_outputs":["62\n","7\n"],"id":"16-B","difficulty":900,"tags":["greedy","implementation","sortings"],"src_uid":"c052d85e402691b05e494b5283d62679","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, m;\n    cin >> n >> m;\n    int a[m], b[m];\n    for (int i = 0; i < m; i++) {\n        cin >> a[i] >> b[i];\n    }\n    sort(a, a + m);\n    sort(b, b + m);\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (n >= a[i]) {\n            ans += a[i] * b[i];\n            n -= a[i];\n        } else {\n            ans += n * b[i];\n            break;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[m];\n        int[] b = new int[m];\n        for (int i = 0; i < m; i++) {\n            a[i] = sc.nextInt();\n            b[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < m; i++) {\n            if (n >= a[i]) {\n                ans += a[i] * b[i];\n                n -= a[i];\n            } else {\n                ans += n * b[i];\n                break;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m=map(int,input().split())\na=[0]*(n+1)\nfor i in range(m):\n    ai,bi=map(int,input().split())\n    a[ai]+=bi\nans=0\nfor i in range(n+1):\n    if a[i]>=n:\n        ans=i\n        break\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,m;scanf(\" %d%d \",&n,&m);int a[m],b[m],i,j,k,max=0;for(i=0;i<m;i++)scanf(\" %d%d \",&a[i],&b[i]);for(i=0;i<m;i++)for(j=0;j<m;j++)if(a[i]<a[j]){k=a[i];a[i]=a[j];a[j]=k;}for(i=0;i<m;i++)if(b[i]>max)max=b[i];printf(\" %d \",max*n);\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var a = new List<int>();\n        var b = new List<int>();\n        for (int i = 0; i < m; i++)\n        {\n            var line = Console.ReadLine().Split(' ');\n            a.Add(int.Parse(line[0]));\n            b.Add(int.Parse(line[1]));\n        }\n        var ans = 0;\n        var i = 0;\n        while (i < m && n > 0)\n        {\n            if (n >= a[i])\n            {\n                ans += a[i] * b[i];\n                n -= a[i];\n            }\n            else\n            {\n                ans += n * b[i];\n                n = 0;\n            }\n            i++;\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m=map(int,input().split())\na=[0]*m\nb=[0]*m\nfor i in range(m):\n    a[i],b[i]=map(int,input().split())\na.sort(reverse=True)\nb.sort(reverse=True)\nans=0\nfor i in range(n):\n    ans+=a[i]*b[i]\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram matches;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, a, b, ans: integer;\n  t: array[0..2000000] of integer;\n\nbegin\n  readln(n, m);\n  for i := 0 to m - 1 do\n  begin\n    readln(a, b);\n    for j := a downto 1 do\n      t[j] := max(t[j], t[j - 1] + b);\n  end;\n  ans := 0;\n  for i := n downto 1 do\n    ans := max(ans, t[i]);\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a, b, ans int\\n    for i := 0; i < m; i++ {\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &a, &b)\\n        ans += a * b\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst arr = [];\nfor (let i = 1; i <= m; i++) {\n    const a = parseInt(stdin[i].split(' ')[0]);\n    const b = parseInt(stdin[i].split(' ')[1]);\n    arr.push([a, b]);\n}\narr.sort((a, b) => b[1] - a[1]);\nlet ans = 0;\nfor (let i = 0; i < n; i++) {\n    ans += arr[i][1];\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val arr = Array(m) { readLine().split(\" \").map { it.toInt() } }\n    val dp = Array(n + 1) { Int.MAX_VALUE }\n    dp[0] = 0\n    for (i in 0 until m) {\n        for (j in n downTo 0) {\n            if (j >= arr[i][0]) {\n                dp[j] = minOf(dp[j], dp[j - arr[i][0]] + arr[i][1])\n            }\n        }\n    }\n    println(dp[n])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n$m = (int)trim(fgets(STDIN));\\n$arr = [];\\nfor ($i = 0; $i < $m; $i++) {\\n    $arr[] = explode(' ', trim(fgets(STDIN)));\\n}\\n\\n$max = 0;\\nfor ($i = 0; $i < $m; $i++) {\\n    $max = max($max, $arr[$i][0] * $arr[$i][1]);\\n}\\n\\necho $max;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[m], b[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d \", &a[i], &b[i]);\n    }\n    int ans = 0;\n    sort(a, a + m);\n    sort(b, b + m);\n    for (int i = 0; i < m; i++) {\n        if (n >= a[i]) {\n            ans += b[i];\n            n -= a[i];\n        } else {\n            ans += n * b[i] \/ a[i];\n            break;\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m;\\n\\nchomp(my $line = <STDIN>);\\n($n, $m) = split(\/ \/, $line);\\n\\nmy @a = ();\\n\\nfor (my $i = 0; $i < $m; $i++) {\\n    my $line = <STDIN>;\\n    ($a[$i][0], $a[$i][1]) = split(\/ \/, $line);\\n}\\n\\nmy $max = 0;\\n\\nfor (my $i = 0; $i < $m; $i++) {\\n    if ($a[$i][0] <= $n) {\\n        $max = $max + $a[$i][1];\\n        $n = $n - $a[$i][0];\\n    }\\n}\\n\\nprint $max;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n_m = stdin.read_line().unwrap().split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n_m[0];\n    let m = n_m[1];\n\n    let mut a_b = Vec::new();\n    for _ in 0..m {\n        let mut a_b_line = stdin.read_line().unwrap().split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n        a_b.push((a_b_line[0], a_b_line[1]));\n    }\n\n    a_b.sort_by(|a, b| b.1.cmp(&a.1));\n\n    let mut ans = 0;\n    for (a, b) in a_b {\n        if n > 0 {\n            ans += b;\n            n -= a;\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\", ans).as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"C. Monitor","description":"Reca company makes monitors, the most popular of their models is AB999 with the screen size a\u00d7b centimeters. Because of some production peculiarities a screen parameters are integer numbers. Recently the screen sides ratio x:y became popular with users. That's why the company wants to reduce monitor AB999 size so that its screen sides ratio becomes x:y, at the same time they want its total area to be maximal of all possible variants. Your task is to find the screen parameters of the reduced size model, or find out that such a reduction can't be performed.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 second","memory_limit":"64 megabytes","input_spec":"The first line of the input contains 4 integers \u2014 a, b, x and y (1\u2264a,b,x,y\u22642\u00b710^9).\n","output_spec":"If the answer exists, output 2 positive integers \u2014 screen parameters of the reduced size model. Output 0 0 otherwise.\n","notes":null,"sample_inputs":["800 600 4 3\n","1920 1200 16 9\n","1 1 1 2\n"],"sample_outputs":["800 600\n","1920 1080\n","0 0\n"],"id":"16-C","difficulty":1800,"tags":["binary+search","number+theory"],"src_uid":"97999cd7c6de79a4e39f56a41ff59e7a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int a, b, x, y;\n    cin >> a >> b >> x >> y;\n    if (a % x == 0 && b % y == 0) {\n        cout << a \/ x << \" \" << b \/ y << endl;\n    } else {\n        cout << 0 << \" \" << 0 << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int x = sc.nextInt();\n        int y = sc.nextInt();\n\n        if (a % x == 0 && b % y == 0) {\n            System.out.println(a \/ x + \" \" + b \/ y);\n        } else {\n            System.out.println(\"0 0\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,b,x,y=map(int,input().split())\nif a%x==0 and b%y==0:\n    print(a\/\/x,b\/\/y)\nelse:\n    print(0,0)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a, b, x, y;\n    scanf(\" %d %d %d %d \", &a, &b, &x, &y);\n    if (a % x == 0 && b % y == 0) {\n        printf(\" %d %d \", a \/ x, b \/ y);\n    } else {\n        printf(\" 0 0 \");\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int a = int.Parse(input[0]);\n            int b = int.Parse(input[1]);\n            int x = int.Parse(input[2]);\n            int y = int.Parse(input[3]);\n\n            if (a % x == 0 && b % y == 0)\n            {\n                Console.WriteLine(a \/ x + \" \" + b \/ y);\n            }\n            else\n            {\n                Console.WriteLine(\"0 0\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b,x,y=map(int,input().split())\nif a%x==0 and b%y==0:\n    print(a\/\/x,b\/\/y)\nelse:\n    print(0,0)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Monitor;\n\nuses\n  SysUtils;\n\nvar\n  a, b, x, y, m, n: Integer;\n\nbegin\n  Readln(a, b, x, y);\n  m := a div x;\n  n := b div y;\n  if (m * x = a) and (n * y = b) then\n    Writeln(m, n)\n  else\n    Writeln(0, 0);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var a, b, x, y int\\n    fmt.Scanf(\\\"%d%d%d%d\\\", &a, &b, &x, &y)\\n    if a%x == 0 && b%y == 0 {\\n        fmt.Println(a \/ x, b \/ y)\\n    } else {\\n        fmt.Println(0, 0)\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst [a, b, x, y] = stdin[0].split(' ').map(Number);\nconst gcd = (a, b) => {\n    while (b) {\n        a %= b;\n        [a, b] = [b, a];\n    }\n    return a;\n};\nconst lcm = (a, b) => a * b \/ gcd(a, b);\nconst m = lcm(a, b);\nconst n = m \/ x;\nif (n % y === 0) {\n    console.log(n, m \/ n);\n} else {\n    console.log(0, 0);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val a = sc.nextInt()\n    val b = sc.nextInt()\n    val x = sc.nextInt()\n    val y = sc.nextInt()\n\n    val gcd = gcd(a, b)\n    val a1 = a \/ gcd\n    val b1 = b \/ gcd\n\n    val x1 = a1 * x\n    val y1 = b1 * y\n\n    if (x1 * y1 < a * b) {\n        println(\"0 0\")\n    } else {\n        println(\"$x1 $y1\")\n    }\n}\n\nfun gcd(a: Int, b: Int): Int {\n    if (b == 0) {\n        return a\n    }\n    return gcd(b, a % b)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$a = intval($input[0]);\n$b = intval($input[1]);\n$x = intval($input[2]);\n$y = intval($input[3]);\n\nif ($a % $x == 0 && $b % $y == 0) {\n    echo $a \/ $x . ' ' . $b \/ $y . PHP_EOL;\n} else {\n    echo '0 0' . PHP_EOL;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    auto [a, b, x, y] = readln.split().map!(to!int);\n    auto s = a * b;\n    auto m = max(a, b);\n    auto n = min(a, b);\n    auto k = m \/ n;\n    if (k == x \/ y) {\n        writeln(a, b);\n    } else if (k > x \/ y) {\n        writeln(n * x, n * y);\n    } else {\n        writeln(0, 0);\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $a, $b, $x, $y;\n\nwhile (<>) {\n    chomp;\n    my @arr = split \/ \/;\n    $a = $arr[0];\n    $b = $arr[1];\n    $x = $arr[2];\n    $y = $arr[3];\n\n    if ($a % $x == 0 && $b % $y == 0) {\n        print \"$a \/ $x . $b \/ $y\\n\";\n    } else {\n        print \"0 0\\n\";\n    }\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut a: i64 = 0;\n    let mut b: i64 = 0;\n    let mut x: i64 = 0;\n    let mut y: i64 = 0;\n\n    let mut iter = line.split_whitespace();\n    a = iter.next().unwrap().parse::<i64>().unwrap();\n    b = iter.next().unwrap().parse::<i64>().unwrap();\n    x = iter.next().unwrap().parse::<i64>().unwrap();\n    y = iter.next().unwrap().parse::<i64>().unwrap();\n\n    if x > y {\n        let tmp = x;\n        x = y;\n        y = tmp;\n    }\n\n    if a % x == 0 && b % y == 0 {\n        stdout.write(format!(\"{}\\n\", a \/ x).as_bytes()).unwrap();\n        stdout.write(format!(\"{}\\n\", b \/ y).as_bytes()).unwrap();\n    } else {\n        stdout.write(format!(\"0 0\\n\").as_bytes()).unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"A. Problem About Equation","description":"A group of n merry programmers celebrate Robert Floyd's birthday. Polucarpus has got an honourable task of pouring Ber-Cola to everybody. Pouring the same amount of Ber-Cola to everybody is really important. In other words, the drink's volume in each of the n mugs must be the same.Polycarpus has already began the process and he partially emptied the Ber-Cola bottle. Now the first mug has a1 milliliters of the drink, the second one has a2 milliliters and so on. The bottle has b milliliters left and Polycarpus plans to pour them into the mugs so that the main equation was fulfilled.Write a program that would determine what volume of the drink Polycarpus needs to add into each mug to ensure that the following two conditions were fulfilled simultaneously:   there were b milliliters poured in total. That is, the bottle need to be emptied;  after the process is over, the volumes of the drink in the mugs should be equal. ","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a pair of integers n, b (2\u2264n\u2264100,1\u2264b\u2264100), where n is the total number of friends in the group and b is the current volume of drink in the bottle. The second line contains a sequence of integers a1,a2,...,an (0\u2264ai\u2264100), where ai is the current volume of drink in the i-th mug.\n","output_spec":"Print a single number \"-1\" (without the quotes), if there is no solution. Otherwise, print n float numbers c1,c2,...,cn, where ci is the volume of the drink to add in the i-th mug. Print the numbers with no less than 6 digits after the decimal point, print each ci on a single line. Polycarpus proved that if a solution exists then it is unique.\nRussian locale is installed by default on the testing computer. Make sure that your solution use the point to separate the integer part of a real number from the decimal, not a comma.\n","notes":null,"sample_inputs":["5 50\n1 2 3 4 5\n","2 2\n1 100\n"],"sample_outputs":["12.000000\n11.000000\n10.000000\n9.000000\n8.000000\n","-1\n"],"id":"174-A","difficulty":1100,"tags":["math"],"src_uid":"65fea461d3caa5a932d1e2c13e99a59e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, b;\n    cin >> n >> b;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += a[i];\n    }\n\n    if (sum != b) {\n        cout << -1 << endl;\n        return 0;\n    }\n\n    vector<double> c(n);\n    for (int i = 0; i < n; i++) {\n        c[i] = (b - sum) \/ n;\n    }\n\n    for (int i = 0; i < n; i++) {\n        cout << c[i] << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int b = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += a[i];\n        }\n        if (sum != b) {\n            System.out.println(\"-1\");\n        } else {\n            for (int i = 0; i < n; i++) {\n                System.out.printf(\"%.6f\\n\", (b - sum) \/ n);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, b = map(int, input().split())\na = list(map(int, input().split()))\n\nif sum(a) + b < n:\n    print(-1)\nelse:\n    c = (b - sum(a)) \/ n\n    print(c)\n    for i in range(n):\n        print(c)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, b;\n    scanf(\" %d %d \", &n, &b);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        sum += a[i];\n    }\n    if (sum != b) {\n        printf(\" -1 \");\n    } else {\n        for (int i = 0; i < n; i++) {\n            printf(\" %.6f \", (b - sum) \/ n);\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        int n = int.Parse(input[0]);\n        int b = int.Parse(input[1]);\n        int[] a = new int[n];\n        int sum = 0;\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n            sum += a[i];\n        }\n        if (sum != b)\n        {\n            Console.WriteLine(\"-1\");\n        }\n        else\n        {\n            for (int i = 0; i < n; i++)\n            {\n                Console.WriteLine((b - sum) \/ n);\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, b = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\nif n * b != a.sum\n  puts -1\nelse\n  c = b \/ n\n  a.map { |x| puts x + c }\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program BerCola;\nuses SysUtils;\nvar\n  n, b, i, j, s, t: integer;\n  a: array[0..100] of integer;\n  c: array[0..100] of real;\nbegin\n  readln(n, b);\n  for i := 0 to n - 1 do\n  begin\n    readln(a[i]);\n    s := s + a[i];\n  end;\n  if s < b then\n    writeln(-1)\n  else\n  begin\n    t := b div n;\n    for i := 0 to n - 1 do\n    begin\n      c[i] := t - a[i];\n      writeln(c[i]:0:6);\n    end;\n  end;\nend.\\n\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, b int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &b)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &a[i])\\n    }\\n    var sum int\\n    for i := 0; i < n; i++ {\\n        sum += a[i]\\n    }\\n    if sum != b {\\n        fmt.Println(\\\"-1\\\")\\n        return\\n    }\\n    var c []float64\\n    for i := 0; i < n; i++ {\\n        c = append(c, float64(b-sum)\/float64(n))\\n    }\\n    for i := 0; i < n; i++ {\\n        fmt.Printf(\\\"%.6f\\\\n\\\", c[i])\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, b] = line.split(' ').map(Number);\n  const a = rl.question('').split(' ').map(Number);\n  const sum = a.reduce((a, b) => a + b);\n  if (sum + b !== n * b) {\n    console.log(-1);\n  } else {\n    console.log(b \/ n);\n  }\n  rl.close();\n});\n\nrl.on('close', () => process.exit());\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val b = sc.nextInt()\n    val a = sc.nextLine().split(\" \").map { it.toInt() }\n    val sum = a.sum()\n    if (sum != b) {\n        println(-1)\n    } else {\n        for (i in 0 until n) {\n            println(b \/ n - a[i])\n        }\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = explode(' ', trim(fgets(STDIN)));\n$a = explode(' ', trim(fgets(STDIN)));\n$b = $n[1];\n$sum = 0;\nfor ($i = 0; $i < $n[0]; $i++) {\n    $sum += $a[$i];\n}\nif ($sum != $b) {\n    echo -1;\n} else {\n    for ($i = 0; $i < $n[0]; $i++) {\n        echo ($b - $sum) \/ $n[0] . PHP_EOL;\n    }\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, b;\n    scanf(\" %d %d \", &n, &b);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int sum = sum(a);\n    if (sum != b) {\n        printf(\" -1 \");\n    } else {\n        for (int i = 0; i < n; i++) {\n            printf(\" %.6f \", (b - sum) \/ n);\n        }\n    }\n    printf(\"\\n\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $b; \\n\\nchomp(my $line = <STDIN>);\\n\\n@a = split(\/ \/, $line);\\n\\n$n = $a[0];\\n$b = $a[1];\\n\\nmy $sum = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    $sum += $a[$i];\\n}\\n\\nif ($sum != $b) {\\n    print \\\"-1\\\\n\\\";\\n    exit;\\n}\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    print ($b - $sum) \/ $n . \\\"\\\\n\\\";\\n}\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_b = line.split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n_b[0];\n    let b = n_b[1];\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut a = line.split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let mut c = Vec::new();\n    let mut sum = 0;\n    for i in 0..n {\n        sum += a[i];\n    }\n    if sum != b {\n        println!(\"-1\");\n        return;\n    }\n    for i in 0..n {\n        c.push((b - sum) \/ n as f64);\n    }\n    for i in 0..n {\n        println!(\"{:.6}\", c[i]);\n    }\n}\n\"\"\"}]"}
{"title":"D. Notepad","description":"Nick is attracted by everything unconventional. He doesn't like decimal number system any more, and he decided to study other number systems. A number system with base b caught his attention. Before he starts studying it, he wants to write in his notepad all the numbers of length n without leading zeros in this number system. Each page in Nick's notepad has enough space for c numbers exactly. Nick writes every suitable number only once, starting with the first clean page and leaving no clean spaces. Nick never writes number 0 as he has unpleasant memories about zero divide.Would you help Nick find out how many numbers will be written on the last page.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"64 megabytes","input_spec":"The only input line contains three space-separated integers b, n and c (2\u2264b<10^10^6, 1\u2264n<10^10^6, 1\u2264c\u226410^9). You may consider that Nick has infinite patience, endless amount of paper and representations of digits as characters. The numbers doesn't contain leading zeros.\n","output_spec":"In the only line output the amount of numbers written on the same page as the last number.\n","notes":"In both samples there are exactly 4 numbers of length 3 in binary number system. In the first sample Nick writes 3 numbers on the first page and 1 on the second page. In the second sample all the 4 numbers can be written on the first page.\n","sample_inputs":["2 3 3\n","2 3 4\n"],"sample_outputs":["1","4"],"id":"17-D","difficulty":2400,"tags":["number+theory"],"src_uid":"566adc43d2d6df257c26c5f5495a5745","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int b, n, c;\n    cin >> b >> n >> c;\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        ans += (c - 1) \/ (b - 1);\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int b = sc.nextInt();\n        int n = sc.nextInt();\n        int c = sc.nextInt();\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            int num = (int) Math.pow(b, i);\n            ans += (num - 1) \/ c;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nb, n, c = map(int, input().split())\n\ndef count(b, n):\n    return (b ** n - 1) \/\/ (b - 1)\n\nprint(count(b, n) \/\/ c)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int b, n, c;\n    scanf(\" %d %d %d \", &b, &n, &c);\n    int m = 1;\n    for (int i = 1; i <= n; i++) {\n        m *= b;\n    }\n    int k = m \/ c;\n    printf(\" %d \", k);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var line = Console.ReadLine().Split(' ');\n        var b = int.Parse(line[0]);\n        var n = int.Parse(line[1]);\n        var c = int.Parse(line[2]);\n\n        var numbers = new List<string>();\n        for (var i = 1; i <= b; i++)\n        {\n            for (var j = 1; j <= n; j++)\n            {\n                numbers.Add(i.ToString(b).PadLeft(n, '0'));\n            }\n        }\n\n        var pages = numbers.Count \/ c;\n        var lastPage = numbers.Count % c;\n\n        Console.WriteLine(lastPage);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"b, n, c = gets.split.map(&:to_i)\n\ndef count_numbers(b, n):\n    if n == 1:\n        return b\n    return b * count_numbers(b, n - 1)\n\nprint(count_numbers(b, n) \/\/ c)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Problem;\nuses SysUtils;\nvar\n  b, n, c, i, j, k, m, p, q, r, s, t, u, v, w, x, y, z: integer;\nbegin\n  readln(b, n, c);\n  m := 1;\n  for i := 1 to n do\n  begin\n    m := m * b;\n  end;\n  if m <= c then\n    writeln(c)\n  else\n  begin\n    p := m div c;\n    q := m mod c;\n    r := 0;\n    for i := 1 to p do\n    begin\n      r := r + c;\n    end;\n    s := r + q;\n    writeln(s);\n  end;\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    var b, n, c int\n    fmt.Scanf(\" %d %d %d \", &b, &n, &c)\n    var m int = int(math.Pow(float64(b), float64(n)))\n    var k int = m \/ c\n    var l int = m % c\n    fmt.Println(k + (l > 0))\n}\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split(' ');\nconst b = parseInt(input[0]);\nconst n = parseInt(input[1]);\nconst c = parseInt(input[2]);\nconst max = Math.pow(b, n);\nconst pages = Math.ceil(max \/ c);\nconsole.log(max % c);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.ceil\n\nfun main() {\n    val (b, n, c) = readLine().split(\" \").map { it.toInt() }\n    val pages = ceil(b.toDouble().pow(n.toDouble()) \/ c.toDouble()).toInt()\n    println(pages - 1)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$b = (int)$input[0];\n$n = (int)$input[1];\n$c = (int)$input[2];\n$count = 0;\n$i = 1;\nwhile ($count < $c) {\n    $count += $b ** ($n - $i);\n    $i++;\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [b, n, c] = readln.split.map!(to!int).array;\n    auto m = b.pow(n);\n    auto s = m \/ c;\n    auto r = m % c;\n    writeln(s + (r > 0 ? 1 : 0));\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $b, $n, $c;\n\nchomp(my $input = <STDIN>);\n\n($b, $n, $c) = split(' ', $input);\n\nmy $max = $b ** $n;\n\nmy $pages = int($max \/ $c);\n\nmy $last = $max % $c;\n\nprint $last;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut tokens = line.split_whitespace();\n    let b = tokens.next().unwrap().parse::<usize>().unwrap();\n    let n = tokens.next().unwrap().parse::<usize>().unwrap();\n    let c = tokens.next().unwrap().parse::<usize>().unwrap();\n\n    let mut pages = 0;\n    let mut page_size = 1;\n    while page_size < c {\n        page_size *= b;\n        pages += 1;\n    }\n\n    let mut numbers = 0;\n    for i in 0..pages {\n        let mut page_numbers = 0;\n        for j in 0..page_size {\n            if j + n <= page_size {\n                page_numbers += 1;\n            }\n        }\n        numbers += page_numbers;\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Plant","description":"Dwarfs have planted a very interesting plant, which is a triangle directed \"upwards\". This plant has an amusing feature. After one year a triangle plant directed \"upwards\" divides into four triangle plants: three of them will point \"upwards\" and one will point \"downwards\". After another year, each triangle plant divides into four triangle plants: three of them will be directed in the same direction as the parent plant, and one of them will be directed in the opposite direction. Then each year the process repeats. The figure below illustrates this process. Help the dwarfs find out how many triangle plants that point \"upwards\" will be in n years.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (0\u2264n\u226410^18) \u2014 the number of full years when the plant grew.\nPlease do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n","output_spec":"Print a single integer \u2014 the remainder of dividing the number of plants that will point \"upwards\" in n years by 1000000007 (10^9+7).\n","notes":"The first test sample corresponds to the second triangle on the figure in the statement. The second test sample corresponds to the third one.\n","sample_inputs":["1\n","2\n"],"sample_outputs":["3\n","10\n"],"id":"185-A","difficulty":1300,"tags":["math"],"src_uid":"782b819eb0bfc86d6f96f15ac09d5085","C++":"","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        dp[1] = 3;\n        for (int i = 2; i <= n; i++) {\n            dp[i] = (dp[i - 1] * 3 + dp[i - 2]) % 1000000007;\n        }\n        System.out.println(dp[n]);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef f(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 3\n    elif n == 2:\n        return 10\n    elif n % 2 == 0:\n        return 3 * f(n \/\/ 2)\n    else:\n        return 10 * f(n \/\/ 2)\n\nprint(f(n) % 1000000007)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#define MOD 1000000007\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a = 1, b = 3, c = 0;\n    for (int i = 1; i <= n; i++) {\n        c = (a + b) % MOD;\n        a = b;\n        b = c;\n    }\n    printf(\" %d \", c);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = new int[n + 1];\n            a[0] = 1;\n            a[1] = 3;\n            for (int i = 2; i <= n; i++)\n            {\n                a[i] = (a[i - 1] * 3 + a[i - 2]) % 1000000007;\n            }\n            Console.WriteLine(a[n]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\ndef f(n)\n  if n == 0\n    return 1\n  end\n  if n == 1\n    return 3\n  end\n  return (f(n - 1) * 4 + f(n - 2)) % 1000000007\nend\n\nputs f(n)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Triangle;\nuses SysUtils;\nvar\n  n, i, j, k, a, b, c, d, e, f, g, h, t, s: Int64;\nbegin\n  Readln(n);\n  t := 1;\n  s := 0;\n  for i := 1 to n do\n  begin\n    a := t;\n    b := t * 3;\n    c := t * 6;\n    d := t * 10;\n    e := t * 15;\n    f := t * 21;\n    g := t * 28;\n    h := t * 36;\n    t := a + b + c + d + e + f + g + h;\n    s := (s + t) mod 1000000007;\n  end;\n  Writeln(s);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := int64(0)\\n    fmt.Scan(&n)\\n    fmt.Println(pow(3, n%2, 1000000007))\\n}\\n\\nfunc pow(a, n, mod int64) int64 {\\n    if n == 0 {\\n        return 1\\n    }\\n    if n%2 == 0 {\\n        return pow(a*a%mod, n\/2, mod)\\n    }\\n    return a * pow(a*a%mod, (n-1)\/2, mod) % mod\\n}\"]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().trim();\nconst n = parseInt(input);\n\nconst dp = [0, 1, 3];\nfor (let i = 3; i <= n; i++) {\n  dp[i] = (dp[i - 1] + dp[i - 2] + dp[i - 3]) % 1000000007;\n}\n\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"import kotlin.math.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val dp = Array(n + 1) { 0 }\n    dp[0] = 1\n    dp[1] = 3\n    for (i in 2..n) {\n        dp[i] = (dp[i - 1] * 3 + dp[i - 2]) % 1000000007\n    }\n    println(dp[n])\n}\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = 1;\n$b = 3;\nfor ($i = 2; $i <= $n; $i++) {\n    $a = $a * 3 + $b;\n    $b = $a - $b;\n}\necho $a % 1000000007 . PHP_EOL;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a = 1;\n    int b = 3;\n    int c = 0;\n    for (int i = 0; i < n; i++) {\n        c = (a + b) % 1000000007;\n        a = b;\n        b = c;\n    }\n    printf(\" %d \", c);\n    return 0;\n}\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"use Math::BigInt;\n\nmy $n = <STDIN>;\nmy $a = Math::BigInt->new(1);\nmy $b = Math::BigInt->new(3);\nmy $c = Math::BigInt->new(1);\n\nfor (my $i = 1; $i < $n; $i++) {\n    $a = $a * $b;\n    $b = $b * $b;\n    $c = $c * $b;\n}\n\nprint $a + $c % 1000000007 . \"\\n\";\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: i64 = n.trim().parse().unwrap();\n\n    let mut dp = vec![0; 2];\n    dp[0] = 1;\n    dp[1] = 3;\n    for _ in 2..n + 1 {\n        let tmp = dp[0] + dp[1];\n        dp[0] = dp[1];\n        dp[1] = tmp % 1000000007;\n    }\n\n    println!(\"{}\", dp[0]);\n}\n\"\"\"}]"}
{"title":"B. Mushroom Scientists","description":"As you very well know, the whole Universe traditionally uses three-dimensional Cartesian system of coordinates. In this system each point corresponds to three real coordinates (x,y,z). In this coordinate system, the distance between the center of the Universe and the point is calculated by the following formula: . Mushroom scientists that work for the Great Mushroom King think that the Universe isn't exactly right and the distance from the center of the Universe to a point equals x^a\u00b7y^b\u00b7z^c.To test the metric of mushroom scientists, the usual scientists offered them a task: find such x,y,z (0\u2264x,y,z;\u00a0x+y+z\u2264S), that the distance between the center of the Universe and the point (x,y,z) is maximum possible in the metric of mushroom scientists. The mushroom scientists aren't good at maths, so they commissioned you to do the task.Note that in this problem, it is considered that 0^0=1.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer S (1\u2264S\u226410^3) \u2014 the maximum sum of coordinates of the sought point.\nThe second line contains three space-separated integers a, b, c (0\u2264a,b,c\u226410^3) \u2014 the numbers that describe the metric of mushroom scientists.\n","output_spec":"Print three real numbers \u2014 the coordinates of the point that reaches maximum value in the metrics of mushroom scientists. If there are multiple answers, print any of them that meets the limitations.\nA natural logarithm of distance from the center of the Universe to the given point in the metric of mushroom scientists shouldn't differ from the natural logarithm of the maximum distance by more than 10^-6. We think that ln(0)=-\u221e.\n","notes":null,"sample_inputs":["3\n1 1 1\n","3\n2 0 0\n"],"sample_outputs":["1.0 1.0 1.0\n","3.0 0.0 0.0\n"],"id":"185-B","difficulty":1800,"tags":["math","ternary+search"],"src_uid":"0a9cabb857949e818453ffe411f08f95","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int s;\n    cin >> s;\n    int a, b, c;\n    cin >> a >> b >> c;\n    double max = 0;\n    double x, y, z;\n    for (x = 0; x <= s; x++) {\n        for (y = 0; y <= s - x; y++) {\n            for (z = 0; z <= s - x - y; z++) {\n                double d = pow(x, a) * pow(y, b) * pow(z, c);\n                if (d > max) {\n                    max = d;\n                    x = x;\n                    y = y;\n                    z = z;\n                }\n            }\n        }\n    }\n    cout << x << \" \" << y << \" \" << z << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int S = sc.nextInt();\n        int[] a = new int[3];\n        for (int i = 0; i < 3; i++) {\n            a[i] = sc.nextInt();\n        }\n        double max = 0;\n        double[] ans = new double[3];\n        for (int i = 0; i <= S; i++) {\n            for (int j = 0; j <= S - i; j++) {\n                for (int k = 0; k <= S - i - j; k++) {\n                    double cur = Math.pow(i, a[0]) * Math.pow(j, a[1]) * Math.pow(k, a[2]);\n                    if (cur > max) {\n                        max = cur;\n                        ans[0] = i;\n                        ans[1] = j;\n                        ans[2] = k;\n                    }\n                }\n            }\n        }\n        System.out.println(ans[0] + \" \" + ans[1] + \" \" + ans[2]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = int(input())\na, b, c = map(int, input().split())\n\ndef f(x, y, z):\n    return x**a * y**b * z**c\n\ndef dfs(x, y, z, s):\n    if x + y + z > s:\n        return -1\n    if x == s and y == s and z == s:\n        return f(x, y, z)\n    return max(dfs(x + 1, y, z, s), dfs(x, y + 1, z, s), dfs(x, y, z + 1, s))\n\nprint(*[dfs(0, 0, 0, s) ** (1 \/ (a + b + c)), dfs(0, 0, 0, s) ** (1 \/ a), dfs(0, 0, 0, s) ** (1 \/ b)])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <math.h>\nint main() {\n    int s;\n    scanf(\" %d \", &s);\n    int a, b, c;\n    scanf(\" %d %d %d \", &a, &b, &c);\n    double max = 0;\n    double x, y, z;\n    for (x = 0; x <= s; x++) {\n        for (y = 0; y <= s - x; y++) {\n            for (z = 0; z <= s - x - y; z++) {\n                double d = pow(x, a) * pow(y, b) * pow(z, c);\n                if (d > max) {\n                    max = d;\n                    x = x;\n                    y = y;\n                    z = z;\n                }\n            }\n        }\n    }\n    printf(\" %.3f %.3f %.3f\\n\", x, y, z);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int s = int.Parse(Console.ReadLine());\n            int[] a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            int max = 0;\n            int[] ans = new int[3];\n            for (int i = 0; i <= s; i++)\n            {\n                for (int j = 0; j <= s - i; j++)\n                {\n                    for (int k = 0; k <= s - i - j; k++)\n                    {\n                        double d = Math.Pow(i, a[0]) * Math.Pow(j, a[1]) * Math.Pow(k, a[2]);\n                        if (d > max)\n                        {\n                            max = d;\n                            ans = new int[] { i, j, k };\n                        }\n                    }\n                }\n            }\n            Console.WriteLine(ans[0] + \" \" + ans[1] + \" \" + ans[2]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.to_i\na, b, c = gets.split.map(&:to_i)\n\ndef f(x, y, z)\n  x**a * y**b * z**c\nend\n\ndef dfs(x, y, z, s)\n  if x + y + z > s\n    return -1\n  end\n\n  if x == s || y == s || z == s\n    return f(x, y, z)\n  end\n\n  max = -1\n  max = [max, dfs(x + 1, y, z, s), dfs(x, y + 1, z, s), dfs(x, y, z + 1, s)].max\n  max\nend\n\nputs [dfs(0, 0, 0, s), dfs(0, 0, 1, s), dfs(0, 1, 0, s), dfs(1, 0, 0, s)].max\"]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar s, a, b, c int\n\tfmt.Scan(&s)\n\tfmt.Scan(&a, &b, &c)\n\tvar x, y, z float64\n\tif a == b && b == c {\n\t\tx = s \/ 3\n\t\ty = s \/ 3\n\t\tz = s \/ 3\n\t} else if a == b {\n\t\tx = s \/ 2\n\t\ty = s \/ 2\n\t\tz = 0\n\t} else if a == c {\n\t\tx = s \/ 2\n\t\ty = 0\n\t\tz = s \/ 2\n\t} else if b == c {\n\t\tx = 0\n\t\ty = s \/ 2\n\t\tz = s \/ 2\n\t} else {\n\t\tx = s\n\t\ty = 0\n\t\tz = 0\n\t}\n\tfmt.Printf(\"%.3f %.3f %.3f\\n\", x, y, z)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const s = parseInt(line);\n  const [a, b, c] = line.split(' ').map(x => parseInt(x));\n  const max = Math.pow(s, 1 \/ (a + b + c));\n  console.log(max, max, max);\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.ln\n\nfun main() {\n    val s = readLine().toInt()\n    val (a, b, c) = readLine().split(\" \").map { it.toInt() }\n    val max = Math.pow(s.toDouble(), 1.0 \/ (a + b + c))\n    val x = max\n    val y = max\n    val z = max\n    println(\"%.6f %.6f %.6f\".format(x, y, z))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s = (int)trim(fgets(STDIN));\n$a = (int)trim(explode(' ', fgets(STDIN))[0]);\n$b = (int)trim(explode(' ', fgets(STDIN))[1]);\n$c = (int)trim(explode(' ', fgets(STDIN))[2]);\n$max = 0;\n$ans = [];\nfor ($i = 0; $i <= $s; $i++) {\n    for ($j = 0; $j <= $s - $i; $j++) {\n        for ($k = 0; $k <= $s - $i - $j; $k++) {\n            $d = $i ** $a * $j ** $b * $k ** $c;\n            if ($d > $max) {\n                $max = $d;\n                $ans = [$i, $j, $k];\n            }\n        }\n    }\n}\necho implode(' ', $ans) . PHP_EOL;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int s;\n    scanf(\" %d \", &s);\n    int a, b, c;\n    scanf(\" %d %d %d \", &a, &b, &c);\n    double max = 0;\n    double x, y, z;\n    for (x = 0; x <= s; x++) {\n        for (y = 0; y <= s - x; y++) {\n            for (z = 0; z <= s - x - y; z++) {\n                double d = pow(x, a) * pow(y, b) * pow(z, c);\n                if (d > max) {\n                    max = d;\n                    x = x;\n                    y = y;\n                    z = z;\n                }\n            }\n        }\n    }\n    printf(\" %.3f %.3f %.3f\\n\", x, y, z);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nchomp $s;\nmy @a = split \/ \/, <STDIN>;\n\nmy $a = $a[0];\nmy $b = $a[1];\nmy $c = $a[2];\n\nmy $max = 0;\nmy $x = 0;\nmy $y = 0;\nmy $z = 0;\n\nfor (my $i = 0; $i <= $s; $i++) {\n    for (my $j = 0; $j <= $s - $i; $j++) {\n        for (my $k = 0; $k <= $s - $i - $j; $k++) {\n            my $d = $i ** $a * $j ** $b * $k ** $c;\n            if ($d > $max) {\n                $max = $d;\n                $x = $i;\n                $y = $j;\n                $z = $k;\n            }\n        }\n    }\n}\n\nprint \"$x $y $z\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut s = String::new();\n    io::stdin().read_line(&mut s).unwrap();\n    let s: Vec<i32> = s.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let s = s[0];\n\n    s = s as f64;\n\n    let mut a = 0.0;\n    let mut b = 0.0;\n    let mut c = 0.0;\n\n    let mut t = 0.0;\n\n    for i in 0..s {\n        let mut x = 0.0;\n        let mut y = 0.0;\n        let mut z = 0.0;\n\n        for j in 0..s {\n            for k in 0..s {\n                if i + j + k == s {\n                    x = i as f64;\n                    y = j as f64;\n                    z = k as f64;\n                }\n            }\n        }\n\n        let t = x.powf(a) * y.powf(b) * z.powf(c);\n\n        if t > a {\n            a = t;\n            b = x;\n            c = y;\n        }\n    }\n\n    println!(\"{:.3}\", b);\n    println!(\"{:.3}\", c);\n    println!(\"{:.3}\", a);\n}\n\"\"\"}]"}
{"title":"C. Clever Fat Rat","description":"The Fat Rat and his friend \u0421erealguy have had a bet whether at least a few oats are going to descend to them by some clever construction. The figure below shows the clever construction. A more formal description of the clever construction is as follows. The clever construction consists of n rows with scales. The first row has n scales, the second row has (n-1) scales, the i-th row has (n-i+1) scales, the last row has exactly one scale. Let's number the scales in each row from the left to the right, starting from 1. Then the value of wi,k in kilograms (1\u2264i\u2264n;\u00a01\u2264k\u2264n-i+1) is the weight capacity parameter of the k-th scale in the i-th row. If a body whose mass is not less than wi,k falls on the scale with weight capacity wi,k, then the scale breaks. At that anything that the scale has on it, either falls one level down to the left (if possible) or one level down to the right (if possible). In other words, if the scale wi,k (i<n) breaks, then there are at most two possible variants in which the contents of the scale's pan can fall out: all contents of scale wi,k falls either on scale wi+1,k-1 (if it exists), or on scale wi+1,k (if it exists). If scale wn,1 breaks, then all its contents falls right in the Fat Rat's claws. Please note that the scales that are the first and the last in a row, have only one variant of dropping the contents.Initially, oats are simultaneously put on all scales of the first level. The i-th scale has ai kilograms of oats put on it. After that the scales start breaking and the oats start falling down in some way. You can consider everything to happen instantly. That is, the scale breaks instantly and the oats also fall instantly.The Fat Rat is sure that whatever happens, he will not get the oats from the first level. Cerealguy is sure that there is such a scenario, when the rat gets at least some number of the oats. Help the Fat Rat and the Cerealguy. Determine, which one is right.","input_from":"standard input","output_to":"standard output","time_limit":"2.5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (1\u2264n\u226450) \u2014 the number of rows with scales.\nThe next line contains n space-separated integers ai (1\u2264ai\u226410^6) \u2014 the masses of the oats in kilograms.\nThe next n lines contain descriptions of the scales: the i-th line contains (n-i+1) space-separated integers wi,k (1\u2264wi,k\u226410^6) \u2014 the weight capacity parameters for the scales that stand on the i-th row, in kilograms.\n","output_spec":"Print \"Fat Rat\" if the Fat Rat is right, otherwise print \"Cerealguy\".\n","notes":"Notes to the examples: \n  The first example: the scale with weight capacity 2 gets 1. That means that the lower scale don't break.  The second sample: all scales in the top row obviously break. Then the oats fall on the lower row. Their total mass is 4,and that's exactly the weight that the lower scale can \"nearly endure\". So, as 4 \u2265 4, the scale breaks.","sample_inputs":["1\n1\n2\n","2\n2 2\n1 2\n4\n","2\n2 2\n1 2\n5\n"],"sample_outputs":["Fat Rat\n","Cerealguy\n","Fat Rat\n"],"id":"185-C","difficulty":2500,"tags":["dp"],"src_uid":"0a77937c01ac69490f8b478eae77de1d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    vector<vector<int>> w(n);\n    for (int i = 0; i < n; i++) {\n        w[i].resize(n - i);\n        for (int j = 0; j < n - i; j++) {\n            cin >> w[i][j];\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n - i; j++) {\n            if (a[i] <= w[i][j]) {\n                ans = 1;\n                break;\n            }\n        }\n    }\n    if (ans == 1) {\n        cout << \"Cerealguy\" << endl;\n    } else {\n        cout << \"Fat Rat\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int[] w = new int[n];\n        for (int i = 0; i < n; i++) {\n            w[i] = new int[n - i];\n            for (int j = 0; j < n - i; j++) {\n                w[i][j] = scanner.nextInt();\n            }\n        }\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n - i; j++) {\n                if (a[i] <= w[i][j]) {\n                    dp[i + 1] = 1;\n                } else {\n                    dp[i + 1] = dp[i];\n                }\n            }\n        }\n        if (dp[n] == 1) {\n            System.out.println(\"Cerealguy\");\n        } else {\n            System.out.println(\"Fat Rat\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nw = []\nfor i in range(n):\n    w.append(list(map(int, input().split())))\n\nfor i in range(n):\n    for j in range(n-i-1):\n        if a[i] > w[i][j]:\n            a[i+1] += a[i] - w[i][j]\n            a[i] = w[i][j]\n\nif a[n-1] > 0:\n    print(\"Cerealguy\")\nelse:\n    print(\"Fat Rat\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int w[n][n];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n - i; j++) {\n            scanf(\" %d \", &w[i][j]);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n - i; j++) {\n            if (a[i] <= w[i][j]) {\n                ans = 1;\n                break;\n            }\n        }\n    }\n    if (ans == 1) {\n        printf(\" Cerealguy \");\n    } else {\n        printf(\" Fat Rat \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n            int[] w = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                w[i] = int.Parse(Console.ReadLine());\n            }\n            int sum = 0;\n            for (int i = 0; i < n; i++)\n            {\n                sum += a[i];\n                if (sum > w[i])\n                {\n                    Console.WriteLine(\"Cerealguy\");\n                    return;\n                }\n            }\n            Console.WriteLine(\"Fat Rat\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\nw = []\nn.times do\n  w << gets.split.map(&:to_i)\nend\n\ndef check(i, j, w)\n  if i == n\n    return a[j] <= w[j]\n  end\n  return check(i + 1, j, w) || check(i + 1, j + 1, w)\nend\n\nif check(0, 0, w)\n  puts 'Cerealguy'\nelse\n  puts 'Fat Rat'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t1;\nconst\n  maxn = 50;\nvar\n  n, i, j, k: integer;\n  a: array[1..maxn] of integer;\n  w: array[1..maxn, 1..maxn] of integer;\n  f: array[1..maxn] of boolean;\nbegin\n  readln(n);\n  for i := 1 to n do\n  begin\n    readln(a[i]);\n  end;\n  for i := 1 to n do\n  begin\n    for j := 1 to n - i + 1 do\n    begin\n      readln(w[i, j]);\n    end;\n  end;\n  f[1] := true;\n  for i := 2 to n do\n  begin\n    f[i] := false;\n    for j := 1 to n - i + 1 do\n    begin\n      if (a[i] <= w[i, j]) and (f[i - 1]) then\n      begin\n        f[i] := true;\n      end;\n    end;\n  end;\n  if f[n] then\n    writeln('Cerealguy')\n  else\n    writeln('Fat Rat');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"os\"\r\n\t\"strconv\"\r\n)\r\n\r\nfunc main() {\r\n\tvar n int\r\n\tfmt.Scanf(\" %d \", &n)\r\n\tvar a []int\r\n\tfor i := 0; i < n; i++ {\r\n\t\tvar x int\r\n\t\tfmt.Scanf(\" %d \", &x)\r\n\t\ta = append(a, x)\r\n\t}\r\n\tvar w [][]int\r\n\tfor i := 0; i < n; i++ {\r\n\t\tvar b []int\r\n\t\tfor j := 0; j < n-i+1; j++ {\r\n\t\t\tvar y int\r\n\t\t\tfmt.Scanf(\" %d \", &y)\r\n\t\t\tb = append(b, y)\r\n\t\t}\r\n\t\tw = append(w, b)\r\n\t}\r\n\tfor i := 0; i < n; i++ {\r\n\t\tfor j := 0; j < n-i+1; j++ {\r\n\t\t\tif a[i] > w[i][j] {\r\n\t\t\t\tfmt.Println(\"Cerealguy\")\r\n\t\t\t\tos.Exit(0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfmt.Println(\"Fat Rat\")\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0]);\nconst a = input.split('\\n')[1].split(' ').map(Number);\nconst w = [];\nfor (let i = 0; i < n; i++) {\n    w.push(input.split('\\n')[i + 2].split(' ').map(Number));\n}\n\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < w[i].length; j++) {\n        if (a[i] <= w[i][j]) {\n            dp[i + 1] = Math.max(dp[i + 1], dp[i] + 1);\n        }\n    }\n}\n\nconsole.log(dp[n] > 0 ? 'Cerealguy' : 'Fat Rat');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }\n    val w = Array(n) { Array(n - it + 1) { 0 } }\n    for (i in 0 until n) {\n        w[i] = readLine()!!.split(\" \").map { it.toInt() }.toTypedArray()\n    }\n    val dp = Array(n + 1) { Array(n + 1) { false } }\n    dp[0][0] = true\n    for (i in 0 until n) {\n        for (j in 0 until n - i + 1) {\n            for (k in 0 until n - i + 1) {\n                if (dp[i][j] && a[j] <= w[i][k]) {\n                    dp[i + 1][k + 1] = true\n                }\n            }\n        }\n    }\n    if (dp[n][n]) {\n        println(\"Cerealguy\")\n    } else {\n        println(\"Fat Rat\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$w = [];\nfor ($i = 0; $i < $n; $i++) {\n    $w[] = explode(' ', trim(fgets(STDIN)));\n}\n$ans = 'Fat Rat';\nfor ($i = 0; $i < $n; $i++) {\n    $sum = 0;\n    for ($j = 0; $j < count($w[$i]); $j++) {\n        $sum += $a[$j];\n    }\n    if ($sum > $w[$i][0]) {\n        $ans = 'Cerealguy';\n        break;\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int w[n][n];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n - i; j++) {\n            scanf(\" %d \", &w[i][j]);\n        }\n    }\n    int dp[n][n];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            dp[i][j] = 0;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n - i; j++) {\n            if (a[i] <= w[i][j]) {\n                dp[i][j] = 1;\n            } else {\n                dp[i][j] = dp[i + 1][j] || dp[i + 1][j + 1];\n            }\n        }\n    }\n    if (dp[0][0]) {\n        printf(\"Cerealguy\\n\");\n    } else {\n        printf(\"Fat Rat\\n\");\n    }\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = split \/ \/, <STDIN>;\nmy @w = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my @w_i = split \/ \/, <STDIN>;\n    push @w, @w_i;\n}\n\nmy $ans = 'Fat Rat';\nfor (my $i = 0; $i < $n; $i++) {\n    my $sum = 0;\n    for (my $j = 0; $j < $n - $i; $j++) {\n        $sum += $a[$j];\n        if ($sum > $w[$i][$j]) {\n            $ans = 'Cerealguy';\n            break;\n        }\n    }\n    if ($ans eq 'Cerealguy') {\n        break;\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let mut a = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    for _ in 0..n {\n        let mut w = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n        for i in 0..w.len() {\n            if a[i] > w[i] {\n                a[i] -= w[i];\n            } else {\n                a[i] = 0;\n            }\n        }\n    }\n\n    if a.iter().any(|x| x > 0) {\n        println!(\"Cerealguy\");\n    } else {\n        println!(\"Fat Rat\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Cut Ribbon","description":"Polycarpus has a ribbon, its length is n. He wants to cut the ribbon in a way that fulfils the following two conditions:   After the cutting each ribbon piece should have length a, b or c.  After the cutting the number of ribbon pieces should be maximum. Help Polycarpus and find the number of ribbon pieces after the required cutting.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains four space-separated integers n, a, b and c (1\u2264n,a,b,c\u22644000) \u2014 the length of the original ribbon and the acceptable lengths of the ribbon pieces after the cutting, correspondingly. The numbers a, b and c can coincide.\n","output_spec":"Print a single number \u2014 the maximum possible number of ribbon pieces. It is guaranteed that at least one correct ribbon cutting exists.\n","notes":"In the first example Polycarpus can cut the ribbon in such way: the first piece has length 2, the second piece has length 3.\nIn the second example Polycarpus can cut the ribbon in such way: the first piece has length 5, the second piece has length 2.\n","sample_inputs":["5 5 3 2\n","7 5 5 2\n"],"sample_outputs":["2\n","2\n"],"id":"189-A","difficulty":1300,"tags":["brute+force","dp"],"src_uid":"062a171cc3ea717ea95ede9d7a1c3a43","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n,a,b,c=map(int,input().split())\nprint(n\/\/min(a,b,c))\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        int c = scanner.nextInt();\n\n        int max = 0;\n        if (n % a == 0) {\n            max = n \/ a;\n        } else if (n % b == 0) {\n            max = n \/ b;\n        } else if (n % c == 0) {\n            max = n \/ c;\n        } else {\n            int maxA = n \/ a;\n            int maxB = n \/ b;\n            int maxC = n \/ c;\n            max = Math.max(maxA, Math.max(maxB, maxC));\n        }\n\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,a,b,c = map(int,input().split())\nprint(min(n\/\/a,n\/\/b,n\/\/c))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,a,b,c=map(int,input().split())\nprint(n\/\/min(a,b,c))\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace _0001_Ribbon\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int a = int.Parse(input[1]);\n            int b = int.Parse(input[2]);\n            int c = int.Parse(input[3]);\n\n            int max = 0;\n            for (int i = 0; i <= n \/ a; i++)\n            {\n                for (int j = 0; j <= n \/ b; j++)\n                {\n                    for (int k = 0; k <= n \/ c; k++)\n                    {\n                        if (i * a + j * b + k * c == n)\n                        {\n                            max = Math.Max(max, i + j + k);\n                        }\n                    }\n                }\n            }\n\n            Console.WriteLine(max);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, a, b, c = gets.split.map(&:to_i)\n\nmax = 0\n\nfor i in 0..n\n  for j in 0..n\n    for k in 0..n\n      if i + j + k == n\n        if i % a == 0 && j % b == 0 && k % c == 0\n          max = [max, i + j + k].max\n        end\n      end\n    end\n  end\nend\n\nputs max\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Polycarpus;\nuses SysUtils;\nvar\n  n, a, b, c, i, j, k, m, t: integer;\nbegin\n  readln(n, a, b, c);\n  m := 0;\n  for i := 1 to n div a do\n  begin\n    t := n - i * a;\n    if t mod b = 0 then\n      m := m + t div b;\n  end;\n  for i := 1 to n div b do\n  begin\n    t := n - i * b;\n    if t mod c = 0 then\n      m := m + t div c;\n  end;\n  for i := 1 to n div c do\n  begin\n    t := n - i * c;\n    if t mod a = 0 then\n      m := m + t div a;\n  end;\n  writeln(m);\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var n, a, b, c int\n    fmt.Scan(&n, &a, &b, &c)\n\n    var ans int\n    for i := 0; i <= n\/a; i++ {\n        for j := 0; j <= n\/b; j++ {\n            for k := 0; k <= n\/c; k++ {\n                if i*a + j*b + k*c == n {\n                    ans = max(ans, i+j+k)\n                }\n            }\n        }\n    }\n\n    fmt.Println(ans)\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"n,a,b,c=map(int,input().split())\nprint(n\/\/min(a,b,c))\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, a, b, c) = readLine().split(\" \").map { it.toInt() }\n    val max = maxOf(a, b, c)\n    val min = minOf(a, b, c)\n    val ans = n \/ max\n    val rem = n % max\n    if (rem == 0) {\n        println(ans)\n    } else {\n        println(ans + (rem \/ min))\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = explode(' ', trim(fgets(STDIN)));\n$a = $n[0];\n$b = $n[1];\n$c = $n[2];\n$d = $n[3];\n$max = 0;\nfor ($i = 0; $i <= $a; $i++) {\n    for ($j = 0; $j <= $b; $j++) {\n        for ($k = 0; $k <= $c; $k++) {\n            if ($i + $j + $k == $d) {\n                $max = max($max, $i * $j * $k);\n            }\n        }\n    }\n}\necho $max;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [n, a, b, c] = readln.split.map!(to!int).array;\n    auto m = min(a, b, c);\n    auto ans = n \/ m;\n    if (n % m != 0)\n        ans++;\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $a, $b, $c;\n\nchomp(my $input = <STDIN>);\n\nmy @input = split(' ', $input);\n\n$n = $input[0];\n$a = $input[1];\n$b = $input[2];\n$c = $input[3];\n\nmy $max = 0;\n\nif ($n % $a == 0) {\n    $max = $n \/ $a;\n}\n\nif ($n % $b == 0) {\n    $max = max($max, $n \/ $b);\n}\n\nif ($n % $c == 0) {\n    $max = max($max, $n \/ $c);\n}\n\nprint $max;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut n, a, b, c = read!();\n    let mut ans = 0;\n    while n > 0 {\n        if n >= a {\n            n -= a;\n            ans += 1;\n        } else if n >= b {\n            n -= b;\n            ans += 1;\n        } else if n >= c {\n            n -= c;\n            ans += 1;\n        }\n    }\n    println!(\"{}\", ans);\n}\n\nfn read<T>() -> T {\n    std::io::stdin().read_line().trim().parse().unwrap()\n}\n\"\"\"}]"}
{"title":"B. Walking in the Rain","description":"In Berland the opposition is going to arrange mass walking on the boulevard. The boulevard consists of n tiles that are lain in a row and are numbered from 1 to n from right to left. The opposition should start walking on the tile number 1 and the finish on the tile number n. During the walk it is allowed to move from right to left between adjacent tiles in a row, and jump over a tile. More formally, if you are standing on the tile number i (i<n-1), you can reach the tiles number i+1 or the tile number i+2 from it (if you stand on the tile number n-1, you can only reach tile number n). We can assume that all the opposition movements occur instantaneously.In order to thwart an opposition rally, the Berland bloody regime organized the rain. The tiles on the boulevard are of poor quality and they are rapidly destroyed in the rain. We know that the i-th tile is destroyed after ai days of rain (on day ai tile isn't destroyed yet, and on day ai+1 it is already destroyed). Of course, no one is allowed to walk on the destroyed tiles! So the walk of the opposition is considered thwarted, if either the tile number 1 is broken, or the tile number n is broken, or it is impossible to reach the tile number n from the tile number 1 if we can walk on undestroyed tiles.The opposition wants to gather more supporters for their walk. Therefore, the more time they have to pack, the better. Help the opposition to calculate how much time they still have and tell us for how many days the walk from the tile number 1 to the tile number n will be possible.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integer n (1\u2264n\u226410^3) \u2014 the boulevard's length in tiles.\nThe second line contains n space-separated integers ai \u2014 the number of days after which the i-th tile gets destroyed (1\u2264ai\u226410^3). \n","output_spec":"Print a single number \u2014 the sought number of days.\n","notes":"In the first sample the second tile gets destroyed after day three, and the only path left is 1\u21923\u21924. After day five there is a two-tile gap between the first and the last tile, you can't jump over it.\nIn the second sample path 1\u21923\u21925 is available up to day five, inclusive. On day six the last tile is destroyed and the walk is thwarted.\n","sample_inputs":["4\n10 3 5 10\n","5\n10 2 8 3 5\n"],"sample_outputs":["5\n","5\n"],"id":"192-B","difficulty":1100,"tags":["brute+force","implementation"],"src_uid":"d526af933b5afe9abfdf9815e9664144","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n, a[100000]; cin >> n; for (int i = 0; i < n; i++) cin >> a[i]; int ans = 0; for (int i = 0; i < n; i++) { if (a[i] > ans) ans = a[i]; } cout << ans << endl;\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] > ans) {\n                ans = a[i];\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\ndef check(i, j):\n    if i == j:\n        return True\n    if i + 1 == j:\n        return a[i] < a[j]\n    if i + 2 == j:\n        return a[i] < a[j] and a[i + 1] < a[j]\n    return False\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        if check(i, j):\n            ans = max(ans, a[j] - a[i])\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[0]==1:\n    print(a[n-1]-1)\nelse:\n    print(a[n-1])\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        string[] s = Console.ReadLine().Split(' ');\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(s[i]);\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] > ans)\n            {\n                ans = a[i];\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nans = 0\n\n(1..n).each do |i|\n  if a[i-1] > ans\n    ans = a[i-1]\n  end\nend\n\nputs ans\"}]}","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d \\\", &a[i])\\n    }\\n    var dp [100001]int\\n    dp[0] = 1\\n    for i := 1; i <= n; i++ {\\n        for j := 0; j < i; j++ {\\n            if a[j] < a[i] {\\n                dp[i] = max(dp[i], dp[j] + 1)\\n            }\\n        }\\n    }\\n    fmt.Println(dp[n])\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline());\nconst a = process.stdin.readline().split(' ').map(Number);\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  dp[i] = dp[i - 1];\n  if (a[i - 1] <= i) {\n    dp[i] = Math.max(dp[i], dp[i - a[i - 1]]);\n  }\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..n) {\n            if (j == 0) {\n                dp[i][j] = dp[i - 1][j]\n            } else if (j == i) {\n                dp[i][j] = dp[i - 1][j - 1]\n            } else {\n                dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - 1])\n            }\n            if (a[i] - a[j] <= 2) {\n                dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - 2])\n            }\n        }\n    }\n    println(dp[n][n])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$a = array_reverse($a);\n$i = 0;\n$j = 0;\nwhile ($i < $n) {\n    if ($a[$i] > $j) {\n        $j = $a[$i];\n    }\n    $i++;\n}\necho $j;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] > ans) {\n            ans = a[i];\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = split ' ', <STDIN>;\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] > $ans) {\n        $ans = $a[$i];\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let n = input.trim().parse::<usize>().unwrap();\n\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut a = input.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut ans = 0;\n    for i in 0..n {\n        if a[i] > ans {\n            ans = a[i];\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Two Segments","description":"Nick has some permutation consisting of p integers from 1 to n. A segment [l,r] (l\u2264r) is a set of elements pi satisfying l\u2264i\u2264r.Nick calls a pair of segments [a0,a1] and [b0,b1] (1\u2264a0\u2264a1<b0\u2264b1\u2264n) good if all their (a1-a0+b1-b0+2) elements, when sorted in ascending order, form an arithmetic progression with a difference of 1. That is, when they sorted in ascending order, the elements are in the form {x,x+1,x+2,...,x+m-1}, for some x and m.Your task is to find the number of distinct pairs of good segments in the given permutation. Two pairs of segments are considered distinct if the sets of elements contained in these pairs of segments are distinct. For example, any segment [l,r] (l<r) can be represented as a pair of segments, as [l,i] and [i+1,r] (l\u2264i\u2264r). As all these pairs consist of the same set of elements, they are considered identical.See the notes accompanying the sample tests for clarification.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integer n (1\u2264n\u22643\u00b710^5) \u2014 the permutation size. The second line contains n space-separated distinct integers pi, (1\u2264pi\u2264n).\n","output_spec":"Print a single integer \u2014 the number of good pairs of segments of permutation p.\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier. \n","notes":"In the first sample the following pairs of segments are good: ([1,1], [2,2]); ([2,2], [3,3]); ([1,2], [3,3]). Pair of segments ([1,1], [2,3]) is by definition equivalent to pair ([1,2], [3,3]), since both of them covers the same set of elements, namely {1,2,3}.\nIn the third sample the following pairs of segments are good: ([4,4], [5,5]); ([3,3],[4,5]); ([2,2],[3,5]); ([1,1],[2,5]); ([3,3],[5,5]); ([2,3],[5,5]); ([1,3],[5,5]); ([2,2],[3,3]); ([1,1],[2,3]); ([1,1],[2,2]). \n","sample_inputs":["3\n1 2 3\n","5\n1 4 5 3 2\n","5\n5 4 3 1 2\n"],"sample_outputs":["3\n","10\n","10\n"],"id":"193-D","difficulty":2900,"tags":["data+structures"],"src_uid":"702ec7a08b8472fa843acb6f2107e583","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[j] - a[i] == 1) {\n                ans++;\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] a = Arrays.stream(br.readLine().split(\" \")).mapToInt(Integer::parseInt).toArray();\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            map.put(a[i], i);\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int l = map.get(a[i]);\n                int r = map.get(a[j]);\n                if (l < r) {\n                    ans += (r - l - 1) * (r - l - 2) \/ 2;\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if a[i] == a[j]:\n            ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[j] - a[i] == 1) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                if (a[i] == a[j])\n                {\n                    ans++;\n                }\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nans = 0\n(1..n-1).each do |i|\n  (i+1..n).each do |j|\n    ans += 1 if a[i] == a[j]\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram ProblemB;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 300000;\n\nvar\n  n, i, j, k, l, r, ans: Integer;\n  a: array[0..MAXN] of Integer;\n  b: array[0..MAXN] of Integer;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n    Read(a[i]);\n  for i := 0 to n - 1 do\n    b[i] := a[i] - i;\n  for i := 0 to n - 1 do\n    for j := i + 1 to n - 1 do\n      for k := j + 1 to n - 1 do\n        for l := k + 1 to n - 1 do\n          for r := l + 1 to n - 1 do\n            if (b[i] = b[j] + b[k] + b[l] + b[r]) and\n               (b[j] = b[k] + b[l] + b[r]) and\n               (b[k] = b[l] + b[r]) and\n               (b[l] = b[r]) then\n              inc(ans);\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    arr := make([]int, n)\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d \\\", &arr[i])\\n    }\\n    ans := 0\\n    for i := 0; i < n; i++ {\\n        for j := i + 1; j < n; j++ {\\n            if arr[j] == arr[i] + 1 {\\n                ans++\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nn = parseInt(process.stdin.readline().trim())\na = [int(x) for x in process.stdin.readline().split()]\n\ndef count(a, l, r):\n    if l == r:\n        return 0\n    return (r - l + 1) * (r - l) \/\/ 2\n\nans = 0\nfor i in range(n):\n    for j in range(i + 1, n):\n        ans += count(a, i, j)\n\nprint(ans)\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nfun main() {\n    val br = BufferedReader(InputStreamReader(System.`in`))\n    val n = br.readLine().toInt()\n    val a = br.readLine().split(\" \").map { it.toInt() }.toIntArray()\n    val ans = 0\n    for (i in 0 until n) {\n        for (j in i + 1 until n) {\n            if (a[i] == a[j]) {\n                ans++\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n        if ($a[$i] + 1 == $a[$j]) {\n            $ans++;\n        }\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[j] - a[i] == 1) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = <STDIN>;\nmy @b = sort { $a <=> $b } @a;\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        if ($b[$j] - $b[$i] == $j - $i) {\n            $ans++;\n        }\n    }\n}\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let n = line.trim().parse::<usize>().unwrap();\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut a = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    a.sort();\n    let mut ans = 0;\n    for i in 0..n {\n        for j in i + 1..n {\n            if a[j] - a[i] == 1 {\n                ans += 1;\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Opening Portals","description":"Pavel plays a famous computer game. A player is responsible for a whole country and he can travel there freely, complete quests and earn experience.This country has n cities connected by m bidirectional roads of different lengths so that it is possible to get from any city to any other one. There are portals in k of these cities. At the beginning of the game all portals are closed. When a player visits a portal city, the portal opens. Strange as it is, one can teleport from an open portal to an open one. The teleportation takes no time and that enables the player to travel quickly between rather remote regions of the country.At the beginning of the game Pavel is in city number 1. He wants to open all portals as quickly as possible. How much time will he need for that?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers n and m (1\u2264n\u226410^5, 0\u2264m\u226410^5) that show how many cities and roads are in the game.\nEach of the next m lines contains the description of a road as three space-separated integers xi, yi, wi (1\u2264xi,yi\u2264n, xi\u2260yi, 1\u2264wi\u226410^9) \u2014 the numbers of the cities connected by the i-th road and the time needed to go from one city to the other one by this road. Any two cities are connected by no more than one road. It is guaranteed that we can get from any city to any other one, moving along the roads of the country.\nThe next line contains integer k (1\u2264k\u2264n) \u2014 the number of portals.\nThe next line contains k space-separated integers p1, p2, ..., pk \u2014 numbers of the cities with installed portals. Each city has no more than one portal.\n","output_spec":"Print a single number \u2014 the minimum time a player needs to open all portals.\nPlease, do not use the %lld specifier to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specifier.\n","notes":"In the second sample the player has to come to city 2, open a portal there, then go to city 3, open a portal there, teleport back to city 2 and finally finish the journey in city 4.\n","sample_inputs":["3 3\n1 2 1\n1 3 1\n2 3 1\n3\n1 2 3\n","4 3\n1 2 1\n2 3 5\n2 4 10\n3\n2 3 4\n","4 3\n1 2 1000000000\n2 3 1000000000\n3 4 1000000000\n4\n1 2 3 4\n"],"sample_outputs":["2\n","16\n","3000000000\n"],"id":"196-E","difficulty":2600,"tags":["dsu","graphs","shortest+paths"],"src_uid":"48378fb3f0469a1fa7a3b1fe1977b6bc","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m;\n    vector<vector<pair<int, int>>> g(n + 1);\n    for (int i = 0; i < m; i++) {\n        int x, y, w;\n        cin >> x >> y >> w;\n        g[x].push_back({y, w});\n        g[y].push_back({x, w});\n    }\n    cin >> k;\n    vector<int> p(k);\n    for (int i = 0; i < k; i++) {\n        cin >> p[i];\n    }\n    vector<int> d(n + 1, 1e9);\n    d[1] = 0;\n    vector<bool> used(n + 1, false);\n    vector<int> parent(n + 1, -1);\n    queue<int> q;\n    q.push(1);\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        used[u] = true;\n        for (auto v : g[u]) {\n            if (!used[v.first] && d[v.first] > d[u] + v.second) {\n                d[v.first] = d[u] + v.second;\n                parent[v.first] = u;\n                q.push(v.first);\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < k; i++) {\n        ans = max(ans, d[p[i]]);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, m, k;\n        n = sc.nextInt();\n        m = sc.nextInt();\n        int[][] a = new int[n + 1][n + 1];\n        for (int i = 0; i < m; i++) {\n            int x, y, w;\n            x = sc.nextInt();\n            y = sc.nextInt();\n            w = sc.nextInt();\n            a[x][y] = w;\n            a[y][x] = w;\n        }\n        k = sc.nextInt();\n        int[] p = new int[k];\n        for (int i = 0; i < k; i++) {\n            p[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < k; i++) {\n            int min = Integer.MAX_VALUE;\n            for (int j = 0; j < k; j++) {\n                if (i != j) {\n                    min = Math.min(min, a[p[i]][p[j]]);\n                }\n            }\n            ans += min;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    x, y, w = map(int, input().split())\n    graph[x - 1].append((y - 1, w))\n    graph[y - 1].append((x - 1, w))\n\nk = int(input())\nportals = list(map(int, input().split()))\n\nportals.sort()\n\nans = 0\nfor i in range(k):\n    ans += portals[i]\n    for j in range(i):\n        ans = min(ans, portals[i] + graph[portals[j] - 1][portals[i] - 1][1])\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int n, m, k;\n    scanf(\" %d %d \", &n, &m);\n    int a[n + 1][n + 1];\n    for (int i = 0; i <= n; i++) {\n        for (int j = 0; j <= n; j++) {\n            a[i][j] = 1000000000;\n        }\n    }\n    for (int i = 0; i < m; i++) {\n        int x, y, w;\n        scanf(\" %d %d %d \", &x, &y, &w);\n        a[x][y] = w;\n        a[y][x] = w;\n    }\n    scanf(\" %d \", &k);\n    int p[k];\n    for (int i = 0; i < k; i++) {\n        scanf(\" %d \", &p[i]);\n    }\n    int d[n + 1];\n    for (int i = 0; i <= n; i++) {\n        d[i] = 1000000000;\n    }\n    d[1] = 0;\n    int q[n + 1];\n    int front = 0, rear = 0;\n    q[rear] = 1;\n    while (front != rear) {\n        int u = q[front];\n        front++;\n        for (int i = 1; i <= n; i++) {\n            if (a[u][i] != 1000000000 && d[i] > d[u] + a[u][i]) {\n                d[i] = d[u] + a[u][i];\n                q[rear] = i;\n                rear++;\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < k; i++) {\n        ans = max(ans, d[p[i]]);\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\nroads = []\nm.times do\n  roads << gets.split.map(&:to_i)\nend\nk = gets.to_i\nportals = gets.split.map(&:to_i)\n\nportals.each do |portal|\n  roads.each do |road|\n    if road[0] == portal\n      roads.delete(road)\n    end\n  end\nend\n\nportals.each do |portal|\n  roads.each do |road|\n    if road[1] == portal\n      roads.delete(road)\n    end\n  end\nend\n\nroads.sort! { |a, b| a[2] <=> b[2] }\n\nans = 0\nportals.each do |portal|\n  ans += roads.find { |road| road[0] == portal }[2]\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nconst\n  MAX_N = 100000;\n\nvar\n  n, m, k, i, j, u, v, w, t, ans: Integer;\n  a: array[0..MAX_N] of Integer;\n  d: array[0..MAX_N, 0..MAX_N] of Integer;\n  used: array[0..MAX_N] of Boolean;\n\nbegin\n  Readln(n, m);\n  for i := 0 to m - 1 do\n  begin\n    Readln(u, v, w);\n    d[u, v] := w;\n    d[v, u] := w;\n  end;\n  Readln(k);\n  for i := 0 to k - 1 do\n  begin\n    Readln(a[i]);\n    used[a[i]] := true;\n  end;\n  t := 0;\n  for i := 1 to n do\n  begin\n    if not used[i] then\n    begin\n      ans := MaxInt;\n      for j := 1 to n do\n      begin\n        if used[j] then\n        begin\n          if d[i, j] < ans then\n            ans := d[i, j];\n        end;\n      end;\n      t := t + ans;\n    end;\n  end;\n  Writeln(t);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, k int\\n    fmt.Scanf(\\\"%d %d\\\", &n, &m)\\n    g := make([][]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var x, y, w int\\n        fmt.Scanf(\\\"%d %d %d\\\", &x, &y, &w)\\n        g[x] = append(g[x], y)\\n        g[y] = append(g[y], x)\\n    }\\n    fmt.Scanf(\\\"%d\\\", &k)\\n    p := make([]int, k)\\n    for i := 0; i < k; i++ {\\n        fmt.Scanf(\\\"%d\\\", &p[i])\\n    }\\n    d := make([]int, n+1)\\n    for i := 0; i < n+1; i++ {\\n        d[i] = 1000000000\\n    }\\n    d[1] = 0\\n    q := []int{1}\\n    for len(q) > 0 {\\n        u := q[0]\\n        q = q[1:]\\n        for _, v := range g[u] {\\n            if d[v] > d[u] + 1 {\\n                d[v] = d[u] + 1\\n                q = append(q, v)\\n            }\\n        }\\n    }n\\n    ans := 0\\n    for _, v := range p {\\n        ans = max(ans, d[v])\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst graph = new Map();\nfor (let i = 0; i < m; i++) {\n    const [a, b, c] = input[i + 1].split(' ');\n    graph.set(a, [b, c]);\n    graph.set(b, [a, c]);\n}\nconst k = parseInt(input[m + 1]);\nconst portals = input[m + 2].split(' ').map(Number);\nconst visited = new Set();\nconst queue = [1];\nvisited.add(1);\nlet ans = 0;\nwhile (queue.length) {\n    const cur = queue.shift();\n    for (const [next, time] of graph.get(cur)) {\n        if (!visited.has(next)) {\n            queue.push(next);\n            visited.add(next);\n            ans = Math.max(ans, time);\n        }\n    }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n + 1) { mutableListOf<Pair<Int, Int>>() }\n    for (i in 0 until m) {\n        val (a, b, c) = readLine().split(\" \").map { it.toInt() }\n        graph[a].add(Pair(b, c))\n        graph[b].add(Pair(a, c))\n    }\n    val k = readLine().toInt()\n    val portals = readLine().split(\" \").map { it.toInt() }\n    val visited = BooleanArray(n + 1)\n    val queue = LinkedList<Pair<Int, Int>>()\n    queue.add(Pair(1, 0))\n    visited[1] = true\n    var ans = 0\n    while (queue.isNotEmpty()) {\n        val (cur, time) = queue.poll()\n        for (next in graph[cur]) {\n            if (!visited[next.first]) {\n                visited[next.first] = true\n                queue.add(Pair(next.first, time + next.second))\n                ans = maxOf(ans, time + next.second)\n            }\n        }\n    }\n    for (portal in portals) {\n        if (!visited[portal]) {\n            println(-1)\n            return\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k;\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$m = (int)$input[1];\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $input = explode(' ', trim(fgets(STDIN)));\n    $x = (int)$input[0];\n    $y = (int)$input[1];\n    $w = (int)$input[2];\n    $graph[$x][] = [$y, $w];\n    $graph[$y][] = [$x, $w];\n}\n$k = (int)trim(fgets(STDIN));\n$portals = explode(' ', trim(fgets(STDIN)));\n$portals = array_map('intval', $portals);\n$portals = array_unique($portals);\n$portals = array_flip($portals);\n$queue = [$portals[1]];\n$dist = array_fill(0, $n + 1, PHP_INT_MAX);\n$dist[1] = 0;\nwhile (!empty($queue)) {\n    $u = array_shift($queue);\n    foreach ($graph[$u] as $v) {\n        if ($dist[$v[0]] > $dist[$u] + $v[1]) {\n            $dist[$v[0]] = $dist[$u] + $v[1];\n            $queue[] = $v[0];\n        }\n    }\n}\necho $dist[$portals[2]];\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n, m, k;\n    scanf(\" %d %d \", &n, &m);\n    int a[n + 1][n + 1];\n    int d[n + 1];\n    int p[n + 1];\n    int t = 0;\n    for (int i = 0; i < m; i++) {\n        int x, y, w;\n        scanf(\" %d %d %d \", &x, &y, &w);\n        a[x][y] = w;\n        a[y][x] = w;\n    }\n    scanf(\" %d \", &k);\n    for (int i = 0; i < k; i++) {\n        int x;\n        scanf(\" %d \", &x);\n        p[x] = 1;\n    }\n    for (int i = 1; i <= n; i++) {\n        d[i] = 1000000000;\n    }\n    d[1] = 0;\n    int q[n + 1];\n    q[1] = 1;\n    int f = 0;\n    int r = 1;\n    while (f < r) {\n        int u = q[f];\n        f++;\n        for (int i = 1; i <= n; i++) {\n            if (a[u][i] != 0 && d[i] > d[u] + a[u][i]) {\n                d[i] = d[u] + a[u][i];\n                q[r] = i;\n                r++;\n            }\n        }\n    }\n    for (int i = 1; i <= n; i++) {\n        if (p[i] == 1) {\n            t = max(t, d[i]);\n        }\n    }\n    printf(\" %d \", t);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\nuse warnings;\\n\\nmy $n, $m, $k;\\n\\nchomp(my $line = <STDIN>);\\n($n, $m) = split(\/ \/, $line);\\n\\nmy @graph = ();\\nfor (my $i = 0; $i < $m; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    my ($x, $y, $w) = split(\/ \/, $line);\\n    push(@graph[$x], [$y, $w]);\\n    push(@graph[$y], [$x, $w]);\\n}\\n\\nchomp(my $line = <STDIN>);\\n$k = $line;\\n\\nmy @portals = ();\\nfor (my $i = 0; $i < $k; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    push(@portals, $line);\\n}\\n\\nmy $dist = 0;\\nmy $visited = 0;\\nmy $queue = [1];\\nwhile ($visited < $k) {\\n    my $cur = shift(@queue);\\n    $visited++;\\n    foreach my $next (@graph[$cur]) {\\n        if (!exists $visited{$next->[0]}) {\\n            $dist += $next->[1];\\n            push(@queue, $next->[0]);\\n        }\\n    }\\n}\\n\\nprint $dist;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::{HashMap, HashSet};\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b, c) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        graph.entry(a).or_insert(Vec::new()).push((b, c));\n        graph.entry(b).or_insert(Vec::new()).push((a, c));\n    }\n    let k = read_line().unwrap().parse().unwrap();\n    let portals = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut visited = HashSet::new();\n    let mut ans = 0;\n    for p in portals {\n        if !visited.contains(&p) {\n            visited.insert(p);\n            ans += dfs(graph, p, 0);\n        }\n    }\n    println!(\"{}\", ans);\n}\n\nfn dfs(graph: &HashMap<i32, Vec<(i32, i32)>>, p: i32, d: i32) -> i32 {\n    let mut ans = d;\n    for (q, w) in graph.get(&p).unwrap() {\n        if !visited.contains(&q) {\n            visited.insert(q);\n            ans = ans.max(dfs(graph, q, d + w));\n        }\n    }\n    ans\n}\n\nfn read_line() -> String {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s\n}\n\"\"\"}]"}
{"title":"A. Plate Game","description":"You've got a rectangular table with length a and width b and the infinite number of plates of radius r. Two players play the following game: they take turns to put the plates on the table so that the plates don't lie on each other (but they can touch each other), and so that any point on any plate is located within the table's border. During the game one cannot move the plates that already lie on the table. The player who cannot make another move loses. Determine which player wins, the one who moves first or the one who moves second, provided that both players play optimally well.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"A single line contains three space-separated integers a, b, r (1\u2264a,b,r\u2264100) \u2014 the table sides and the plates' radius, correspondingly.\n","output_spec":"If wins the player who moves first, print \"First\" (without the quotes). Otherwise print \"Second\" (without the quotes).\n","notes":"In the first sample the table has place for only one plate. The first player puts a plate on the table, the second player can't do that and loses.\n \nIn the second sample the table is so small that it doesn't have enough place even for one plate. So the first player loses without making a single move.\n \n","sample_inputs":["5 5 2\n","6 7 4\n"],"sample_outputs":["First\n","Second\n"],"id":"197-A","difficulty":1600,"tags":["constructive+algorithms","games","math"],"src_uid":"90b9ef939a13cf29715bc5bce26c9896","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int a, b, r;\n    cin >> a >> b >> r;\n    if (a < 2 * r || b < 2 * r)\n        cout << \"Second\";\n    else\n        cout << \"First\";\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        int r = scanner.nextInt();\n\n        if (a < 2 * r || b < 2 * r) {\n            System.out.println(\"Second\");\n        } else {\n            System.out.println(\"First\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,b,r=map(int,input().split())\nif a<2*r or b<2*r:\n    print(\"Second\")\nelse:\n    print(\"First\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a, b, r;\n    scanf(\" %d %d %d \", &a, &b, &r);\n    if (a < 2 * r || b < 2 * r)\n        printf(\" Second \");\n    else\n        printf(\" First \");\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        int a = int.Parse(input[0]);\n        int b = int.Parse(input[1]);\n        int r = int.Parse(input[2]);\n\n        if (a < 2 * r || b < 2 * r)\n        {\n            Console.WriteLine(\"Second\");\n        }\n        else\n        {\n            Console.WriteLine(\"First\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b,r=map(int,input().split())\nif a<r or b<r:\n    print('Second')\nelse:\n    print('First')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses\n  SysUtils;\nvar\n  a, b, r: integer;\nbegin\n  readln(a, b, r);\n  if (a < 2 * r) or (b < 2 * r) then\n    writeln('Second')\n  else\n    writeln('First');\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var a, b, r int\\n    fmt.Scanf(\\\"%d %d %d\\\", &a, &b, &r)\\n    if a < 2*r || b < 2*r {\\n        fmt.Println(\\\"Second\\\")\\n    } else {\\n        fmt.Println(\\\"First\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const a, b, r = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconsole.log(a * b - 4 * r * r < 0 ? 'Second' : 'First');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.max\n\nfun main() {\n    val (a, b, r) = readLine().split(\" \").map { it.toInt() }\n    val max = max(a, b)\n    val min = min(a, b)\n    if (max - min >= 2 * r) {\n        println(\"First\")\n    } else {\n        println(\"Second\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$a = (int)$input[0];\n$b = (int)$input[1];\n$r = (int)$input[2];\n\nif ($a < $r + $r || $b < $r + $r) {\n    echo 'Second';\n} else {\n    echo 'First';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    auto [a, b, r] = readln.split.map!(to!int).array;\n\n    if (a < 2 * r || b < 2 * r)\n        writeln(\"Second\");\n    else\n        writeln(\"First\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\n\nmy ($a, $b, $r) = split \/ \/, <STDIN>;\n\nif ($a < $r + $r || $b < $r + $r) {\n    print \"Second\\n\";\n} else {\n    print \"First\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let a = input_vec[0];\n    let b = input_vec[1];\n    let r = input_vec[2];\n\n    if a < 2 * r || b < 2 * r {\n        println!(\"Second\");\n    } else {\n        println!(\"First\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Special Olympics","description":"A renowned abstract artist Sasha, drawing inspiration from nowhere, decided to paint a picture entitled \"Special Olympics\". He justly thought that, if the regular Olympic games have five rings, then the Special ones will do with exactly two rings just fine.Let us remind you that a ring is a region located between two concentric circles with radii r and R (r<R). These radii are called internal and external, respectively. Concentric circles are circles with centers located at the same point.Soon a white canvas, which can be considered as an infinite Cartesian plane, had two perfect rings, painted with solid black paint. As Sasha is very impulsive, the rings could have different radii and sizes, they intersect and overlap with each other in any way. We know only one thing for sure: the centers of the pair of rings are not the same.When Sasha got tired and fell into a deep sleep, a girl called Ilona came into the room and wanted to cut a circle for the sake of good memories. To make the circle beautiful, she decided to cut along the contour.We'll consider a contour to be a continuous closed line through which there is transition from one color to another (see notes for clarification). If the contour takes the form of a circle, then the result will be cutting out a circle, which Iona wants.But the girl's inquisitive mathematical mind does not rest: how many ways are there to cut a circle out of the canvas?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input contains two lines. \nEach line has four space-separated integers xi, yi, ri, Ri, that describe the i-th ring; xi and yi are coordinates of the ring's center, ri and Ri are the internal and external radii of the ring correspondingly (-100\u2264xi,yi\u2264100;\u00a01\u2264ri<Ri\u2264100). \nIt is guaranteed that the centers of the rings do not coinside.\n","output_spec":"A single integer \u2014 the number of ways to cut out a circle from the canvas.\n","notes":"Figures for test samples are given below. The possible cuts are marked with red dotted line. \n   \n","sample_inputs":["60 60 45 55\n80 80 8 32\n","60 60 45 55\n80 60 15 25\n","50 50 35 45\n90 50 35 45\n"],"sample_outputs":["1","4","0"],"id":"199-B","difficulty":1900,"tags":["geometry"],"src_uid":"4c2865e4742a29460ca64860740b84f4","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int x1, y1, r1, R1, x2, y2, r2, R2;\n    cin >> x1 >> y1 >> r1 >> R1;\n    cin >> x2 >> y2 >> r2 >> R2;\n    int d = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n    int r = (R1 + R2) \/ 2;\n    int R = (r1 + R2) \/ 2;\n    if (d < r * r || d > R * R) {\n        cout << 0;\n    } else if (d == r * r || d == R * R) {\n        cout << 1;\n    } else {\n        cout << 2;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int x1, y1, r1, R1, x2, y2, r2, R2;\n        x1 = sc.nextInt();\n        y1 = sc.nextInt();\n        r1 = sc.nextInt();\n        R1 = sc.nextInt();\n        x2 = sc.nextInt();\n        y2 = sc.nextInt();\n        r2 = sc.nextInt();\n        R2 = sc.nextInt();\n\n        if (x1 == x2 && y1 == y2) {\n            System.out.println(0);\n        } else if (r1 > R2 || R1 < r2) {\n            System.out.println(0);\n        } else if (r1 == R2) {\n            System.out.println(1);\n        } else {\n            int d = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n            int r = (R1 + r2) * (R1 + r2);\n            int R = (R1 - r2) * (R1 - r2);\n            if (d == r || d == R) {\n                System.out.println(2);\n            } else if (d > r && d < R) {\n                System.out.println(4);\n            } else {\n                System.out.println(0);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nimport math\n\ndef main():\n    x1, y1, r1, R1 = map(int, input().split())\n    x2, y2, r2, R2 = map(int, input().split())\n\n    d = math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)\n\n    if d > R1 + R2:\n        print(0)\n    elif d < abs(R1 - R2):\n        print(1)\n    else:\n        print(2)\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var x1 = input[0];\n        var y1 = input[1];\n        var r1 = input[2];\n        var R1 = input[3];\n\n        input = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var x2 = input[0];\n        var y2 = input[1];\n        var r2 = input[2];\n        var R2 = input[3];\n\n        var d = Math.Sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n\n        var ans = 0;\n        if (d > R1 + R2)\n        {\n            ans = 1;\n        }\n        else if (d < Math.Abs(R1 - R2))\n        {\n            ans = 0;\n        }\n        else\n        {\n            var r = Math.Min(R1, R2);\n            var R = Math.Max(R1, R2);\n\n            var a = (r * r - d * d) \/ (2 * d);\n            var b = Math.Sqrt(r * r - a * a);\n\n            ans = 4;\n            if (a > 0)\n            {\n                ans -= 2;\n            }\n            if (b > 0)\n            {\n                ans -= 2;\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def solve(x1, y1, r1, r2, x2, y2, r3, r4):\n    if x1 == x2 and y1 == y2:\n        return 0\n    elif r1 == r2 and r3 == r4:\n        return 0\n    elif r1 == r2 and r3 != r4:\n        return 1\n    elif r1 != r2 and r3 == r4:\n        return 1\n    elif r1 == r3 and r2 == r4:\n        return 1\n    elif r1 != r3 and r2 == r4:\n        return 1\n    elif r1 == r4 and r2 == r3:\n        return 1\n    elif r1 != r4 and r2 != r3:\n        return 2\n\n\n    x1, y1, r1, r2 = map(int, input().split())\n    x2, y2, r3, r4 = map(int, input().split())\n\n    print(solve(x1, y1, r1, r2, x2, y2, r3, r4))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram SpecialOlympics;\n\nuses\n  SysUtils;\n\nvar\n  x1, y1, r1, R1, x2, y2, r2, R2: Integer;\n  a, b, c, d: Double;\n  ans: Integer;\n\nbegin\n  Readln(x1, y1, r1, R1);\n  Readln(x2, y2, r2, R2);\n\n  a := (x2 - x1) \/ (R2 - r1);\n  b := (y2 - y1) \/ (R2 - r1);\n  c := (x2 - x1) \/ (r2 - r1);\n  d := (y2 - y1) \/ (r2 - r1);\n\n  ans := 0;\n  if (a > 0) and (b > 0) then\n    ans := ans + 1;\n  if (a < 0) and (b < 0) then\n    ans := ans + 1;\n  if (a > 0) and (b < 0) then\n    ans := ans + 2;\n  if (a < 0) and (b > 0) then\n    ans := ans + 2;\n\n  if (c > 0) and (d > 0) then\n    ans := ans + 1;\n  if (c < 0) and (d < 0) then\n    ans := ans + 1;\n  if (c > 0) and (d < 0) then\n    ans := ans + 2;\n  if (c < 0) and (d > 0) then\n    ans := ans + 2;\n\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var x1, y1, r1, r2 int\\n    fmt.Scanf(\\\"%d %d %d %d\\\\n\\\", &x1, &y1, &r1, &r2)\\n    fmt.Println(count(x1, y1, r1, r2))\\n}\\n\\nfunc count(x1, y1, r1, r2 int) int {\\n    if r1 > r2 {\\n        x1, y1, r1, r2 = x2, y2, r2, r1\\n    }\\n    if r1 == r2 {\\n        return 0\\n    }\\n    return 2 * (r2 - r1) \/ (r2 + r1)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst x1 = parseInt(stdin[0].split(' ')[0]);\nconst y1 = parseInt(stdin[0].split(' ')[1]);\nconst r1 = parseInt(stdin[0].split(' ')[2]);\nconst R1 = parseInt(stdin[0].split(' ')[3]);\nconst x2 = parseInt(stdin[1].split(' ')[0]);\nconst y2 = parseInt(stdin[1].split(' ')[1]);\nconst r2 = parseInt(stdin[1].split(' ')[2]);\nconst R2 = parseInt(stdin[1].split(' ')[3]);\n\nconst d = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\nconst r = Math.min(r1, R1, r2, R2);\nconst R = Math.max(r1, R1, r2, R2);\n\nif (d < r) {\n  console.log(0);\n} else if (d > R) {\n  console.log(4);\n} else {\n  console.log(2);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val a = sc.nextLine().split(\" \").map { it.toInt() }\n    val b = sc.nextLine().split(\" \").map { it.toInt() }\n    val x1 = a[0]\n    val y1 = a[1]\n    val r1 = a[2]\n    val r2 = a[3]\n    val x2 = b[0]\n    val y2 = b[1]\n    val r3 = b[2]\n    val r4 = b[3]\n    val d = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2))\n    val s = Math.min(r1, r2) + Math.min(r3, r4)\n    val t = Math.max(r1, r2) + Math.max(r3, r4)\n    if (d < s || d > t) {\n        println(0)\n    } else if (d == s) {\n        println(1)\n    } else {\n        println(2)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a = explode(' ', trim(fgets(STDIN)));\n$b = explode(' ', trim(fgets(STDIN)));\n$x1 = $a[0];\n$y1 = $a[1];\n$r1 = $a[2];\n$R1 = $a[3];\n$x2 = $b[0];\n$y2 = $b[1];\n$r2 = $b[2];\n$R2 = $b[3];\n$d = sqrt(pow($x1 - $x2, 2) + pow($y1 - $y2, 2));\n$ans = 0;\nif ($d > $R1 + $R2) {\n    $ans = 0;\n} elseif ($d < abs($R1 - $R2)) {\n    $ans = 1;\n} else {\n    $ans = 2;\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int[2][] a = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0]\n    ];\n    int i, j, n, m, x, y, r1, r2, d, s, t;\n    scanf(\" %d %d %d %d \", &a[0][0], &a[0][1], &a[0][2], &a[0][3]);\n    scanf(\" %d %d %d %d \", &a[1][0], &a[1][1], &a[1][2], &a[1][3]);\n    n = a[0][2];\n    m = a[0][3];\n    x = a[0][0];\n    y = a[0][1];\n    r1 = a[1][2];\n    r2 = a[1][3];\n    d = (x - a[1][0]) * (x - a[1][0]) + (y - a[1][1]) * (y - a[1][1]);\n    s = (n - r1) * (n - r1) + (m - r1) * (m - r1);\n    t = (n - r2) * (n - r2) + (m - r2) * (m - r2);\n    if (d < s && d < t)\n        printf(\" 1 \");\n    else if (s < d && s < t)\n        printf(\" 2 \");\n    else if (t < d && t < s)\n        printf(\" 4 \");\n    else\n        printf(\" 0 \");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $x1, $y1, $r1, $R1;\nmy $x2, $y2, $r2, $R2;\n\nwhile (<>) {\n    chomp;\n    my @a = split ' ', $_;\n    $x1 = $a[0];\n    $y1 = $a[1];\n    $r1 = $a[2];\n    $R1 = $a[3];\n}\n\nwhile (<>) {\n    chomp;\n    my @a = split ' ', $_;\n    $x2 = $a[0];\n    $y2 = $a[1];\n    $r2 = $a[2];\n    $R2 = $a[3];\n}\n\nmy $d = sqrt(($x1 - $x2)**2 + ($y1 - $y2)**2);\n\nif ($d > $R1 + $R2) {\n    print 0;\n} elsif ($d < abs($R1 - $r2) || $d < abs($R2 - $r1)) {\n    print 1;\n} else {\n    print 2;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input = input.split_whitespace();\n    let x1 = input.next().unwrap().parse::<i32>().unwrap();\n    let y1 = input.next().unwrap().parse::<i32>().unwrap();\n    let r1 = input.next().unwrap().parse::<i32>().unwrap();\n    let r2 = input.next().unwrap().parse::<i32>().unwrap();\n\n    io::stdin().read_line(&mut input).unwrap();\n    input = input.split_whitespace();\n    let x2 = input.next().unwrap().parse::<i32>().unwrap();\n    let y2 = input.next().unwrap().parse::<i32>().unwrap();\n    let r3 = input.next().unwrap().parse::<i32>().unwrap();\n    let r4 = input.next().unwrap().parse::<i32>().unwrap();\n\n    let mut ans = 0;\n    if (x1 - x2).abs() > r1 + r2 {\n        ans += 1;\n    }\n    if (y1 - y2).abs() > r1 + r2 {\n        ans += 1;\n    }\n    if (x1 - x2).abs() < r1 - r2 {\n        ans += 1;\n    }\n    if (y1 - y2).abs() < r1 - r2 {\n        ans += 1;\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Theatre Square","description":"Theatre Square in the capital city of Berland has a rectangular shape with the size n\u00d7m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a\u00d7a.What is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The input contains three positive integer numbers in the first line: n,m and a (1\u2264n,m,a\u226410^9).\n","output_spec":"Write the needed number of flagstones.\n","notes":null,"sample_inputs":["6 6 4\n"],"sample_outputs":["4\n"],"id":"1-A","difficulty":1000,"tags":["math"],"src_uid":"ef971874d8c4da37581336284b688517","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n,m,a=map(int,input().split())\nprint(min(n\/\/a,m\/\/a,(n\/\/a)*(m\/\/a)))\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int a = sc.nextInt();\n        int ans = 0;\n        ans += n \/ a;\n        if (n % a != 0) {\n            ans++;\n        }\n        ans += m \/ a;\n        if (m % a != 0) {\n            ans++;\n        }\n        System.out.println(ans);\n    }\n}\n\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,a=map(int,input().split())\nprint(min(n\/\/a,m\/\/a))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,m,a=map(int,input().split())\nprint(min(n\/\/a,m\/\/a,(n\/\/a)*(m\/\/a)))\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace Problem_100 {\n    class Program {\n        static void Main(string[] args) {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int m = int.Parse(input[1]);\n            int a = int.Parse(input[2]);\n\n            int count = 0;\n            count += n \/ a;\n            count += m \/ a;\n            if (n % a != 0) {\n                count++;\n            }\n            if (m % a != 0) {\n                count++;\n            }\n\n            Console.WriteLine(count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,a=map(int,input().split())\nprint(n\/\/a*m\/\/a+(n%a>0)*(m\/\/a+1)+(m%a>0)*(n\/\/a+1))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses SysUtils;\nvar\n  n, m, a, i, j, k, s: Integer;\nbegin\n  Readln(n, m, a);\n  s := 0;\n  for i := 1 to n div a do\n    for j := 1 to m div a do\n      for k := 1 to a div a do\n        s := s + (n div a - i + 1) * (m div a - j + 1) * (a div a - k + 1);\n  Writeln(s);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, a int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &a)\\n    fmt.Println(n \/ a * m \/ a)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst a = parseInt(stdin[0].split(' ')[2]);\nconst ans = Math.ceil(n \/ a) * Math.ceil(m \/ a);\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"import kotlin.math.ceil\\n\\nfun main() {\\n    val (n, m, a) = readLine()!!.split(' ').map { it.toInt() }\\n    println(ceil(n \/ a).toLong() * ceil(m \/ a).toLong())\\n}\\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n, $m, $a = explode(' ', trim(fgets(STDIN)));\\n\\necho floor($n \/ $a) * floor($m \/ $a);\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    auto [n, m, a] = readln.split().map!(to!int).array;\n    auto ans = n \/ a + m \/ a;\n    if (n % a != 0)\n        ans++;\n    if (m % a != 0)\n        ans++;\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $a;\n\nchomp(my $input = <STDIN>);\n\n@input = split(' ', $input);\n\n$n = $input[0];\n$m = $input[1];\n$a = $input[2];\n\nmy $ans = 0;\n\n$ans += $n \/ $a;\n$ans += $m \/ $a;\n\nif ($n % $a != 0) {\n    $ans++;\n}\n\nif ($m % $a != 0) {\n    $ans++;\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut n = 0;\n    let mut m = 0;\n    let mut a = 0;\n\n    for i in 0..line.len() {\n        if line.as_bytes()[i] == ' ' {\n            n = n * 10 + line.as_bytes()[i - 1] as i32 - '0' as i32;\n        } else if line.as_bytes()[i] == '\\n' {\n            m = m * 10 + line.as_bytes()[i - 1] as i32 - '0' as i32;\n        } else {\n            a = a * 10 + line.as_bytes()[i] as i32 - '0' as i32;\n        }\n    }\n\n    let mut ans = 0;\n\n    if n % a == 0 {\n        ans += n \/ a;\n    } else {\n        ans += n \/ a + 1;\n    }\n\n    if m % a == 0 {\n        ans += m \/ a;\n    } else {\n        ans += m \/ a + 1;\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"E. Tractor College","description":"While most students still sit their exams, the tractor college has completed the summer exam session. In fact, students study only one subject at this college \u2014 the Art of Operating a Tractor. Therefore, at the end of a term a student gets only one mark, a three (satisfactory), a four (good) or a five (excellent). Those who score lower marks are unfortunately expelled.The college has n students, and oddly enough, each of them can be on scholarship. The size of the scholarships varies each term. Since the end-of-the-term exam has just ended, it's time to determine the size of the scholarship to the end of next term.The monthly budget for the scholarships of the Tractor college is s rubles. To distribute the budget optimally, you must follow these rules:  The students who received the same mark for the exam, should receive the same scholarship; Let us denote the size of the scholarship (in roubles) for students who have received marks 3, 4 and 5 for the exam, as k3, k4 and k5, respectively. The values k3, k4 and k5 must be integers and satisfy the inequalities 0\u2264k3\u2264k4\u2264k5; Let's assume that c3, c4, c5 show how many students received marks 3, 4 and 5 for the exam, respectively. The budget of the scholarship should be fully spent on them, that is, c3\u00b7k3+c4\u00b7k4+c5\u00b7k5=s; Let's introduce function  \u2014 the value that shows how well the scholarships are distributed between students. In the optimal distribution function f(k3,k4,k5) takes the minimum possible value. Given the results of the exam, and the budget size s, you have to find the optimal distribution of the scholarship.","input_from":"standard input","output_to":"standard output","time_limit":"4 seconds","memory_limit":"256 megabytes","input_spec":"The first line has two integers n, s (3\u2264n\u2264300,1\u2264s\u22643\u00b710^5) \u2014 the number of students and the budget size for the scholarship, respectively. The second line contains n integers, where the i-th number represents the mark that the i-th student got for the exam. It is guaranteed that at each mark was given to at least one student.\n","output_spec":"On a single line print three integers k3, k4 and k5 \u2014 the sought values that represent the optimal distribution of the scholarships. If there are multiple optimal answers, print any of them. If there is no answer, print -1.\n","notes":null,"sample_inputs":["5 11\n3 4 3 5 5\n","6 15\n5 3 3 4 4 5\n"],"sample_outputs":["1 3 3\n","-1\n"],"id":"200-E","difficulty":2400,"tags":["implementation","math","number+theory","ternary+search"],"src_uid":"3f3eb49a127768139283ac04ee44950f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, s;\n    cin >> n >> s;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int c3 = 0, c4 = 0, c5 = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 3) {\n            c3++;\n        } else if (a[i] == 4) {\n            c4++;\n        } else if (a[i] == 5) {\n            c5++;\n        }\n    }\n    if (c3 == 0 || c4 == 0 || c5 == 0) {\n        cout << -1 << endl;\n    } else {\n        int k3 = 0, k4 = 0, k5 = 0;\n        if (c3 > 0) {\n            k3 = s \/ c3;\n        }\n        if (c4 > 0) {\n            k4 = (s - c3 * k3) \/ c4;\n        }\n        if (c5 > 0) {\n            k5 = s - c3 * k3 - c4 * k4;\n        }\n        cout << k3 << \" \" << k4 << \" \" << k5 << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, s = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nc3 = a.count(3)\nc4 = a.count(4)\nc5 = a.count(5)\n\nif c3 == 0:\n    print(-1)\n    exit()\n\nif c4 == 0:\n    print(c3, 0, 0)\n    exit()\n\nif c5 == 0:\n    print(c3, c4, 0)\n    exit()\n\nif c3 == c4 == c5:\n    print(c3, c4, c5)\n    exit()\n\nif c3 == c4:\n    print(c3, c4, c5 - 1)\n    exit()\n\nif c3 == c5:\n    print(c3, c4 - 1, c5)\n    exit()\n\nif c4 == c5:\n    print(c3 - 1, c4, c5)\n    exit()\n\nprint(-1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, s, a[300], i, j, k3, k4, k5, c3, c4, c5;\n    scanf(\" %d %d \", &n, &s);\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    c3 = 0;\n    c4 = 0;\n    c5 = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] == 3) {\n            c3++;\n        } else if (a[i] == 4) {\n            c4++;\n        } else if (a[i] == 5) {\n            c5++;\n        }\n    }\n    if (c3 == 0 || c4 == 0 || c5 == 0) {\n        printf(\" -1 \");\n    } else {\n        k3 = s \/ c3;\n        k4 = (s - c3 * k3) \/ c4;\n        k5 = s - c3 * k3 - c4 * k4;\n        printf(\" %d %d %d \", k3, k4, k5);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var s = int.Parse(input[1]);\n        var marks = Console.ReadLine().Split(' ');\n        var c3 = 0;\n        var c4 = 0;\n        var c5 = 0;\n        for (int i = 0; i < n; i++)\n        {\n            switch (marks[i])\n            {\n                case \"3\":\n                    c3++;\n                    break;\n                case \"4\":\n                    c4++;\n                    break;\n                case \"5\":\n                    c5++;\n                    break;\n            }\n        }\n        var k3 = 0;\n        var k4 = 0;\n        var k5 = 0;\n        if (c3 > 0)\n        {\n            k3 = s \/ c3;\n            s -= k3 * c3;\n        }\n        if (c4 > 0)\n        {\n            k4 = s \/ c4;\n            s -= k4 * c4;\n        }\n        if (c5 > 0)\n        {\n            k5 = s \/ c5;\n            s -= k5 * c5;\n        }\n        Console.WriteLine(k3 + \" \" + k4 + \" \" + k5);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, s = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\nc3 = a.count(3)\nc4 = a.count(4)\nc5 = a.count(5)\n\nk3 = 0\nk4 = 0\nk5 = 0\n\nwhile k3 + k4 + k5 != s\n  if k3 < c3\n    k3 += 1\n  elsif k4 < c4\n    k4 += 1\n  elsif k5 < c5\n    k5 += 1\n  else\n    break\n  end\nend\n\nputs [k3, k4, k5].join(' ')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 300;\nvar\n  n, s, i, j, k, m, c3, c4, c5: integer;\n  a: array[1..maxn] of integer;\n  f: array[0..maxn, 0..maxn, 0..maxn] of integer;\n\nbegin\n  readln(n, s);\n  for i := 1 to n do\n  begin\n    readln(a[i]);\n    if a[i] = 3 then\n      c3 := c3 + 1\n    else if a[i] = 4 then\n      c4 := c4 + 1\n    else\n      c5 := c5 + 1;\n  end;\n  m := 0;\n  for k := 0 to c5 do\n    for j := 0 to c4 - k do\n      for i := 0 to c3 - j do\n        if i + j + k = c3 + c4 + c5 then\n        begin\n          f[i, j, k] := s - i * 3 - j * 4 - k * 5;\n          if f[i, j, k] < m then\n            m := f[i, j, k];\n        end;\n  for k := 0 to c5 do\n    for j := 0 to c4 - k do\n      for i := 0 to c3 - j do\n        if f[i, j, k] = m then\n          begin\n            writeln(i, ' ', j, ' ', k);\n            exit;\n          end;\n  writeln(-1);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, s int\\n    fmt.Scanf(\\\"%d%d\\\\n\\\", &n, &s)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\", &x)\\n        a = append(a, x)\\n    }\\n    var c3, c4, c5 int\\n    for _, v := range a {\\n        switch v {\\n        case 3: c3++\\n        case 4: c4++\\n        case 5: c5++\\n        }\\n    }\\n    if c3 == 0 || c4 == 0 || c5 == 0 {\\n        fmt.Println(-1)\\n        return\\n    }\\n    var k3, k4, k5 int\\n    for k3 = 0; k3 <= c3; k3++ {\\n        for k4 = 0; k4 <= c4; k4++ {\\n            for k5 = 0; k5 <= c5; k5++ {\\n                if k3*3+k4*4+k5*5 == s {\\n                    fmt.Println(k3, k4, k5)\\n                    return\\n                }\\n            }\\n        }\\n    }\\n    fmt.Println(-1)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst s = parseInt(stdin[1]);\nconst a = stdin[2].split(' ').map(x => parseInt(x));\nconst c3 = a.filter(x => x == 3).length;\nconst c4 = a.filter(x => x == 4).length;\nconst c5 = a.filter(x => x == 5).length;\nconst dp = [[0, 0, 0] for (i = 0; i <= c3; i++)];\nfor (i = 0; i <= c3; i++) {\n    for (j = 0; j <= c4; j++) {\n        for (k = 0; k <= c5; k++) {\n            if (i + j + k == 0) {\n                dp[i][j][k] = 0;\n            } else {\n                dp[i][j][k] = Math.min(dp[i - 1][j][k] + 3 * i, dp[i][j - 1][k] + 4 * j, dp[i][j][k - 1] + 5 * k);\n            }\n        }\n    }\n}\nconsole.log(dp[c3][c4][c5]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, s) = readLine()!!.split(\" \").map { it.toInt() }\n    val a = readLine()!!.split(\" \").map { it.toInt() }\n    val c3 = a.count { it == 3 }\n    val c4 = a.count { it == 4 }\n    val c5 = a.count { it == 5 }\n    val dp = Array(c3 + 1) { Array(c4 + 1) { Array(c5 + 1) { -1 } } }\n    dp[0][0][0] = 0\n    for (i in 0..c3) {\n        for (j in 0..c4) {\n            for (k in 0..c5) {\n                if (i > 0) {\n                    dp[i][j][k] = maxOf(dp[i][j][k], dp[i - 1][j][k])\n                }\n                if (j > 0) {\n                    dp[i][j][k] = maxOf(dp[i][j][k], dp[i][j - 1][k])\n                }\n                if (k > 0) {\n                    dp[i][j][k] = maxOf(dp[i][j][k], dp[i][j][k - 1])\n                }\n                if (i > 0 && j > 0 && k > 0) {\n                    dp[i][j][k] = maxOf(dp[i][j][k], dp[i - 1][j - 1][k - 1] + s - i * 3 - j * 4 - k * 5)\n                }\n            }\n        }\n    }\n    val ans = dp[c3][c4][c5]\n    if (ans == -1) {\n        println(-1)\n    } else {\n        println(3 * ans)\n        println(4 * ans)\n        println(5 * ans)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$s = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$c3 = 0;\n$c4 = 0;\n$c5 = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($arr[$i] == 3) {\n        $c3++;\n    } elseif ($arr[$i] == 4) {\n        $c4++;\n    } elseif ($arr[$i] == 5) {\n        $c5++;\n    }\n}\nif ($c3 == 0 || $c4 == 0 || $c5 == 0) {\n    echo -1;\n    exit;\n}\n$k3 = 0;\n$k4 = 0;\n$k5 = 0;\n$k3 = $s \/ $c3;\n$k4 = $s \/ $c4;\n$k5 = $s \/ $c5;\necho $k3 . ' ' . $k4 . ' ' . $k5;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, s;\n    scanf(\" %d %d \", &n, &s);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int c3 = count(a, 3);\n    int c4 = count(a, 4);\n    int c5 = count(a, 5);\n    int k3 = 0, k4 = 0, k5 = 0;\n    if (c3 > 0) {\n        k3 = s \/ c3;\n    }\n    if (c4 > 0) {\n        k4 = (s - c3 * k3) \/ c4;\n    }\n    if (c5 > 0) {\n        k5 = s - c3 * k3 - c4 * k4;\n    }\n    if (k3 < 0 || k4 < 0 || k5 < 0) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %d %d %d \", k3, k4, k5);\n    }\n    printf(\"\\n\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $s;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $s) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $c3 = 0;\nmy $c4 = 0;\nmy $c5 = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] == 3) {\n        $c3++;\n    } elsif ($a[$i] == 4) {\n        $c4++;\n    } elsif ($a[$i] == 5) {\n        $c5++;\n    }\n}\n\nif ($c3 == 0 || $c4 == 0 || $c5 == 0) {\n    print \"-1\\n\";\n    exit;\n}\n\nmy $k3 = 0;\nmy $k4 = 0;\nmy $k5 = 0;\n\nwhile ($s > 0) {\n    if ($s >= 3) {\n        $k3++;\n        $s -= 3;\n    } elsif ($s >= 2) {\n        $k4++;\n        $s -= 2;\n    } elsif ($s >= 1) {\n        $k5++;\n        $s -= 1;\n    }\n}\n\nprint \"$k3 $k4 $k5\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut ns = line.split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = ns[0];\n    let s = ns[1];\n    stdin.read_line(&mut line).unwrap();\n    let mut marks = line.split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let mut m3 = 0;\n    let mut m4 = 0;\n    let mut m5 = 0;\n    for mark in marks {\n        match mark {\n            3 => m3 += 1,\n            4 => m4 += 1,\n            5 => m5 += 1,\n            _ => panic!(\"Invalid mark\"),\n        }\n    }\n    let mut k3 = 0;\n    let mut k4 = 0;\n    let mut k5 = 0;\n    if m3 > 0 {\n        k3 = s \/ m3;\n        s -= k3 * m3;\n    }\n    if m4 > 0 {\n        k4 = s \/ m4;\n        s -= k4 * m4;\n    }\n    if m5 > 0 {\n        k5 = s \/ m5;\n        s -= k5 * m5;\n    }\n    if s > 0 {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", k3);\n        println!(\"{}\", k4);\n        println!(\"{}\", k5);\n    }\n}\n\"\"\"}]"}
{"title":"A. Clear Symmetry","description":"Consider some square matrix A with side n consisting of zeros and ones. There are n rows numbered from 1 to n from top to bottom and n columns numbered from 1 to n from left to right in this matrix. We'll denote the element of the matrix which is located at the intersection of the i-row and the j-th column as Ai,j.Let's call matrix A clear if no two cells containing ones have a common side.Let's call matrix A symmetrical if it matches the matrices formed from it by a horizontal and\/or a vertical reflection. Formally, for each pair (i,j) (1\u2264i,j\u2264n) both of the following conditions must be met: Ai,j=An-i+1,j and Ai,j=Ai,n-j+1.Let's define the sharpness of matrix A as the number of ones in it.Given integer x, your task is to find the smallest positive integer n such that there exists a clear symmetrical matrix A with side n and sharpness x.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line contains a single integer x (1\u2264x\u2264100) \u2014 the required sharpness of the matrix.\n","output_spec":"Print a single number \u2014 the sought value of n.\n","notes":"The figure below shows the matrices that correspond to the samples:\n \n","sample_inputs":["4\n","9\n"],"sample_outputs":["3\n","5\n"],"id":"201-A","difficulty":1700,"tags":["constructive+algorithms","dp","math"],"src_uid":"01eccb722b09a0474903b7e5abc4c47a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, x;\n    cin >> x;\n    for (n = 1; n <= x; n++) {\n        if (n % 2 == 0) {\n            if (x % n == 0) {\n                cout << n << endl;\n                return 0;\n            }\n        } else {\n            if (x % n == 1) {\n                cout << n << endl;\n                return 0;\n            }\n        }\n    }\n    cout << -1 << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int x = scanner.nextInt();\n        int n = 1;\n        while (x > 0) {\n            x -= n;\n            n++;\n        }\n        System.out.println(n);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nx = int(input())\nprint(x\/\/2+1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, x, i, j;\n    scanf(\" %d \", &x);\n    for (n = 1; n <= x; n++) {\n        for (i = 1; i <= n; i++) {\n            for (j = 1; j <= n; j++) {\n                if (i == j || i + j == n + 1)\n                    printf(\" 1 \");\n                else\n                    printf(\" 0 \");\n            }\n            printf(\" \n \");\n        }\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int i = 1;\n        while (n > 0)\n        {\n            n -= i;\n            i++;\n        }\n        Console.WriteLine(i);\n    }\n}\n\"}]","Ruby":"","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\n\nvar\n  n, i, j, k, m, s: integer;\n\nbegin\n  readln(n);\n  s := 0;\n  for i := 1 to n do\n    for j := 1 to n do\n      begin\n        read(k);\n        if k = 1 then\n          s := s + 1;\n      end;\n  m := s div 2;\n  if s mod 2 = 1 then\n    m := m + 1;\n  writeln(m);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, x int\\n    fmt.Scan(&x)\\n    n = 1\\n    for x > 0 {\\n        x -= n * (n - 1)\\n        n++\\n    }\\n    fmt.Println(n)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().trim();\nconst x = parseInt(stdin);\n\nconst solve = (x) => {\n    if (x % 2 === 0) {\n        return x + 1;\n    }\n    return x + 2;\n};\n\nconsole.log(solve(x));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val m = n * 2 - 1\n    val a = Array(m) { Array(m) { '0' } }\n    var i = 0\n    while (i < n) {\n        a[i][i] = '1'\n        a[i][m - i - 1] = '1'\n        i++\n    }\n    for (i in 0 until m) {\n        for (j in 0 until m) {\n            print(a[i][j])\n        }\n        println()\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = intval(fgets(STDIN));\\n\\nif ($n % 2 == 0) {\\n    echo $n \/ 2 + 1;\\n} else {\\n    echo $n \/ 2 + 2;\\n}\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, x;\n    scanf(\" %d \", &x);\n    n = 1;\n    while (x > 0) {\n        n++;\n        x -= n * (n - 1);\n    }\n    printf(\" %d \", n);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = 0;\nmy $x = <STDIN>;\n\nwhile ($x > 0) {\n    $n++;\n    $x -= $n * ($n - 1);\n}\n\nprint $n;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut n = 1;\n    let mut x = 0;\n    while x < 100 {\n        x = 0;\n        for i in 1..n + 1 {\n            for j in 1..n + 1 {\n                if i == j || i + j == n + 1 {\n                    x += 1;\n                }\n            }\n        }\n        if x == n {\n            break;\n        }\n        n += 1;\n    }\n    println!(\"{}\", n);\n}\n\"\"\"}]"}
{"title":"C. Photographer","description":"Valera's lifelong ambition was to be a photographer, so he bought a new camera. Every day he got more and more clients asking for photos, and one day Valera needed a program that would determine the maximum number of people he can serve.The camera's memory is d megabytes. Valera's camera can take photos of high and low quality. One low quality photo takes a megabytes of memory, one high quality photo take b megabytes of memory. For unknown reasons, each client asks him to make several low quality photos and several high quality photos. More formally, the i-th client asks to make xi low quality photos and yi high quality photos.Valera wants to serve as many clients per day as possible, provided that they will be pleased with his work. To please the i-th client, Valera needs to give him everything he wants, that is, to make xi low quality photos and yi high quality photos. To make one low quality photo, the camera must have at least a megabytes of free memory space. Similarly, to make one high quality photo, the camera must have at least b megabytes of free memory space. Initially the camera's memory is empty. Valera also does not delete photos from the camera so that the camera's memory gradually fills up.Calculate the maximum number of clients Valera can successfully serve and print the numbers of these clients.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and d (1\u2264n\u226410^5,1\u2264d\u226410^9) \u2014 the number of clients and the camera memory size, correspondingly. The second line contains two integers a and b (1\u2264a\u2264b\u226410^4) \u2014 the size of one low quality photo and of one high quality photo, correspondingly. \nNext n lines describe the clients. The i-th line contains two integers xi and yi (0\u2264xi,yi\u226410^5) \u2014 the number of low quality photos and high quality photos the i-th client wants, correspondingly. \nAll numbers on all lines are separated by single spaces. \n","output_spec":"On the first line print the answer to the problem \u2014 the maximum number of clients that Valera can successfully serve. Print on the second line the numbers of the client in any order. All numbers must be distinct. If there are multiple answers, print any of them. The clients are numbered starting with 1 in the order in which they are defined in the input data.\n","notes":null,"sample_inputs":["3 10\n2 3\n1 4\n2 1\n1 0\n","3 6\n6 6\n1 1\n1 0\n1 0\n"],"sample_outputs":["2\n3 2 ","1\n2 "],"id":"203-C","difficulty":1400,"tags":["greedy","sortings"],"src_uid":"4d7de18e76600777ff023e1b61366ee4","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\nn,d=map(int,input().split())\na,b=map(int,input().split())\nc=[]\nfor i in range(n):\n    x,y=map(int,input().split())\n    c.append((x*a+y*b,i+1))\nc.sort()\nans=[]\nfor i in range(n):\n    if d>=c[i][0]:\n        d-=c[i][0]\n        ans.append(c[i][1])\nprint(len(ans))\nprint(*ans)\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int d = sc.nextInt();\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        int ans = 0;\n        int[] ansArr = new int[n];\n        for (int i = 0; i < n; i++) {\n            int t = x[i] * a + y[i] * b;\n            if (t <= d) {\n                ans++;\n                ansArr[i] = 1;\n            }\n        }\n        System.out.println(ans);\n        for (int i = 0; i < n; i++) {\n            if (ansArr[i] == 1) {\n                System.out.print(i + 1 + \" \");\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,d=map(int,input().split())\na,b=map(int,input().split())\nc=[]\nfor i in range(n):\n    x,y=map(int,input().split())\n    c.append((x*a+y*b,i+1))\nc.sort()\nans=[]\nfor i in range(n):\n    if d>=c[i][0]:\n        d-=c[i][0]\n        ans.append(c[i][1])\nprint(len(ans))\nprint(*ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, d, a, b;\n    scanf(\" %d %d \", &n, &d);\n    scanf(\" %d %d \", &a, &b);\n    int i, j, k, l, m, x, y, z, ans = 0, ans1[100000], ans2[100000];\n    for (i = 0; i < n; i++) {\n        scanf(\" %d %d \", &x, &y);\n        if (x <= d \/ a && y <= d \/ b) {\n            ans++;\n            ans1[ans] = i + 1;\n        }\n    }\n    printf(\" %d\\n \", ans);\n    for (i = 0; i < ans; i++) {\n        printf(\" %d  \", ans1[i]);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, d, a, b;\n        var clients = new List<Client>();\n        var ans = 0;\n\n        \/\/ Read input\n        var input = Console.ReadLine().Split(' ');\n        n = int.Parse(input[0]);\n        d = int.Parse(input[1]);\n        input = Console.ReadLine().Split(' ');\n        a = int.Parse(input[0]);\n        b = int.Parse(input[1]);\n\n        \/\/ Read clients\n        for (int i = 0; i < n; i++)\n        {\n            input = Console.ReadLine().Split(' ');\n            var x = int.Parse(input[0]);\n            var y = int.Parse(input[1]);\n            clients.Add(new Client(x, y));\n        }\n\n        \/\/ Sort clients by memory usage\n        clients.Sort((c1, c2) => c1.MemoryUsage - c2.MemoryUsage);\n\n        \/\/ Serve clients\n        for (int i = 0; i < n; i++)\n        {\n            var client = clients[i];\n            if (d >= client.MemoryUsage)\n            {\n                d -= client.MemoryUsage;\n                ans++;\n            }\n        }\n\n        \/\/ Print output\n        Console.WriteLine(ans);\n        Console.WriteLine(string.Join(\" \", clients.Select(c => c.Id)));\n    }\n}\n\nclass Client\n{\n    public int Id { get; set; }\n    public int X { get; set; }\n    public int Y { get; set; }\n    public int MemoryUsage { get { return X * a + Y * b; } }\n\n    public Client(int id, int x, int y)\n    {\n        Id = id;\n        X = x;\n        Y = y;\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, d = gets.split.map(&:to_i)\na, b = gets.split.map(&:to_i)\n\nclients = []\n\nn.times do\n  x, y = gets.split.map(&:to_i)\n  clients << [x, y]\nend\n\nclients.sort! { |a, b| b[0] + b[1] <=> a[0] + a[1] }\n\nans = 0\n\nclients.each do |x, y|\n  if d >= x + y\n    d -= x + y\n    ans += 1\n  end\nend\n\nputs ans\n\nputs clients.take(ans).map(&:first).join(' ')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  n, d, a, b, i, j, k, m, x, y, c, t, p, q, r, s: integer;\n  a1, b1, a2, b2: array[0..100000] of integer;\n  a3, b3: array[0..100000] of integer;\n  a4, b4: array[0..100000] of integer;\n  a5, b5: array[0..100000] of integer;\n  a6, b6: array[0..100000] of integer;\n  a7, b7: array[0..100000] of integer;\n  a8, b8: array[0..100000] of integer;\n  a9, b9: array[0..100000] of integer;\n  a10, b10: array[0..100000] of integer;\nbegin\n  readln(n, d);\n  readln(a, b);\n  for i := 1 to n do\n  begin\n    readln(x, y);\n    if x > y then\n    begin\n      a1[i] := x;\n      b1[i] := y;\n    end\n    else\n    begin\n      a1[i] := y;\n      b1[i] := x;\n    end;\n  end;\n  m := 0;\n  for i := 1 to n do\n  begin\n    if a1[i] <= d then\n    begin\n      m := m + 1;\n    end\n    else\n    begin\n      if b1[i] <= d then\n      begin\n        m := m + 1;\n      end\n      else\n      begin\n        c := d div a;\n        t := d mod a;\n        if t > 0 then\n        begin\n          c := c + 1;\n        end;\n        if c >= b1[i] then\n        begin\n          m := m + 1;\n        end;\n      end;\n    end;\n  end;\n  writeln(m);\n  for i := 1 to n do\n  begin\n    if a1[i] <= d then\n    begin\n      writeln(i);\n    end\n    else\n    begin\n      if b1[i] <= d then\n      begin\n        writeln(i);\n      end\n      else\n      begin\n        c := d div a;\n        t := d mod a;\n        if t > 0 then\n        begin\n          c := c + 1;\n        end;\n        if c >= b1[i] then\n        begin\n          writeln(i);\n        end;\n      end;\n    end;\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar n, d int\n\tfmt.Scanf(\" %d %d \", &n, &d)\n\tvar a, b int\n\tfmt.Scanf(\" %d %d \", &a, &b)\n\tvar arr = make([][2]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tvar x, y int\n\t\tfmt.Scanf(\" %d %d \", &x, &y)\n\t\tarr[i] = [2]int{x, y}\n\t}\n\tvar ans = 0\n\tvar s = 0\n\tfor i := 0; i < n; i++ {\n\t\tif s+arr[i][0] <= d && s+arr[i][1] <= d {\n\t\t\ts += arr[i][0] + arr[i][1]\n\t\t\tans++\n\t\t}\n\t}\n\tfmt.Println(ans)\n\tfor i := 0; i < n; i++ {\n\t\tif s+arr[i][0] <= d && s+arr[i][1] <= d {\n\t\t\tfmt.Printf(\" %d \", i+1)\n\t\t}\n\t}\n\tos.Exit(0)\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nn, d = map(int, input().split())\na, b = map(int, input().split())\n\nans = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x * a + y * b <= d:\n        ans += 1\n\nprint(ans)\nprint(*[i + 1 for i in range(n) if x * a + y * b <= d])\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val d = sc.nextInt()\n    val a = sc.nextInt()\n    val b = sc.nextInt()\n    val arr = Array(n) { sc.nextInt() to sc.nextInt() }\n    val dp = Array(d + 1) { 0 }\n    dp[0] = 1\n    for (i in 0 until n) {\n        val (x, y) = arr[i]\n        for (j in d downTo 0) {\n            if (j - x >= 0 && dp[j - x] > 0) {\n                dp[j] = maxOf(dp[j], dp[j - x] + 1)\n            }\n            if (j - y >= 0 && dp[j - y] > 0) {\n                dp[j] = maxOf(dp[j], dp[j - y] + 1)\n            }\n        }\n    }\n    println(dp.last())\n    val ans = ArrayList<Int>()\n    for (i in 0 until n) {\n        val (x, y) = arr[i]\n        if (dp[d - x - y] == dp[d]) {\n            ans.add(i + 1)\n        }\n    }\n    println(ans.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\nn, d = map(int, input().split())\na, b = map(int, input().split())\n\nans = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x * a + y * b <= d:\n        ans += 1\n\nprint(ans)\nprint(*[i + 1 for i in range(n) if x * a + y * b <= d])\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, d;\n    scanf(\" %d %d \", &n, &d);\n    int a, b;\n    scanf(\" %d %d \", &a, &b);\n    int[n] x, y;\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &x[i], &y[i]);\n    }\n    int ans = 0;\n    int[n] ans_arr;\n    for (int i = 0; i < n; i++) {\n        if (x[i] <= d && y[i] <= d) {\n            ans++;\n            ans_arr[ans - 1] = i + 1;\n        }\n    }\n    printf(\" %d\\n \", ans);\n    for (int i = 0; i < ans; i++) {\n        printf(\" %d  \", ans_arr[i]);\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $d, $a, $b; \\n\\nchomp(my $line = <STDIN>);\\n($n, $d) = split(\/ \/, $line);\\n\\nchomp(my $line = <STDIN>);\\n($a, $b) = split(\/ \/, $line);\\n\\nmy @clients = ();\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    ($x, $y) = split(\/ \/, $line);\\n    push(@clients, [$x, $y]);\\n}\\n\\nmy $max = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $client = $clients[$i];\\n    my $free = $d - $a * $client->[0] - $b * $client->[1];\\n    if ($free >= 0) {\\n        $max = $max + 1;\\n    }\\n}\\n\\nprint $max, \"\\n\";\\n\\nfor (my $i = 0; $i < $max; $i++) {\\n    print $clients[$i]->[0] + 1, \" \";\\n}\\n\\nprint \"\\n\"\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, d) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n    let (a, b) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n\n    let mut clients = Vec::new();\n    for _ in 0..n {\n        let (x, y) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n        clients.push((x, y));\n    }\n\n    let mut ans = 0;\n    let mut memory = d;\n    for (x, y) in clients {\n        if memory >= a * x + b * y {\n            ans += 1;\n            memory -= a * x + b * y;\n        }\n    }\n\n    println!(\"{}\", ans);\n    for (i, (x, y)) in clients.iter().enumerate() {\n        if memory >= a * x + b * y {\n            println!(\"{}\", i + 1);\n        }\n    }\n}\n\"\"\"}]"}
{"title":"A. Little Elephant and Interval","description":"The Little Elephant very much loves sums on intervals.This time he has a pair of integers l and r (l\u2264r). The Little Elephant has to find the number of such integers x (l\u2264x\u2264r), that the first digit of integer x equals the last one (in decimal notation). For example, such numbers as 101, 477474 or 9 will be included in the answer and 47, 253 or 1020 will not.Help him and count the number of described numbers x for a given pair l and r.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The single line contains a pair of integers l and r (1\u2264l\u2264r\u226410^18) \u2014 the boundaries of the interval.\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n","output_spec":"On a single line print a single integer \u2014 the answer to the problem.\n","notes":"In the first sample the answer includes integers 2, 3, 4, 5, 6, 7, 8, 9, 11, 22, 33, 44. \n","sample_inputs":["2 47\n","47 1024\n"],"sample_outputs":["12\n","98\n"],"id":"204-A","difficulty":1500,"tags":["binary+search","combinatorics","dp"],"src_uid":"9642368dc4ffe2fc6fe6438c7406c1bd","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int l, r;\n    cin >> l >> r;\n    int ans = 0;\n    for (int i = l; i <= r; i++) {\n        if (i % 10 == i \/ 10) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int l = sc.nextInt();\n        int r = sc.nextInt();\n        int ans = 0;\n        for (int i = l; i <= r; i++) {\n            if (i % 10 == i \/ 10) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nl,r=map(int,input().split())\nprint(r-l+1-(r%10-l%10))\n\"\"\"}]","C":"","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\n\nnamespace Codeforces\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int l = int.Parse(input[0]);\n            int r = int.Parse(input[1]);\n            int count = 0;\n            for (int i = l; i <= r; i++)\n            {\n                int first = i % 10;\n                int last = i \/ 10;\n                if (first == last)\n                {\n                    count++;\n                }\n            }\n            Console.WriteLine(count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"l,r=map(int,input().split())\nprint(r-l+1-(r%10-l%10))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var l,r,i,j,k,n,m,c:integer;\nbegin\n  readln(l,r);\n  n:=r-l+1;\n  m:=r div 10;\n  c:=0;\n  for i:=l to r do\n  begin\n    j:=i div 10;\n    k:=i mod 10;\n    if j=k then\n      c:=c+1;\n  end;\n  writeln(c);\nend.\"}]}","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    var l, r int64\n    fmt.Scanf(\" %d %d \", &l, &r)\n    ans := 0\n    for i := l; i <= r; i++ {\n        if i % 10 == int(math.Floor(math.Log10(float64(i)))) {\n            ans++\n        }\n    }\n    fmt.Println(ans)\n}\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst l = input[0];\nconst r = input[1];\nconst ans = 0;\nfor (let i = l; i <= r; i++) {\n  if (i.toString().charAt(0) === i.toString().charAt(i.toString().length - 1)) {\n    ans++;\n  }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val l = sc.nextLong()\n    val r = sc.nextLong()\n    val ans = 0\n    for (i in l..r) {\n        if (i.toString().first() == i.toString().last()) {\n            ans++\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$l = (int)trim(fgets(STDIN));\\n$r = (int)trim(fgets(STDIN));\\n\\n$count = 0;\\nfor ($i = $l; $i <= $r; $i++) {\\n    if ($i % 10 == $i \/ 10) {\\n        $count++;\\n    }\\n}\\n\\necho $count.PHP_EOL;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [l, r] = readln.split().map!(to!int);\n    auto ans = 0;\n    for (auto i = l; i <= r; i++) {\n        if (i % 10 == i \/ 10)\n            ans++;\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $l = <STDIN>;\nmy $r = <STDIN>;\n\nmy $ans = 0;\nfor (my $i = $l; $i <= $r; $i++) {\n    if ($i % 10 == $i \/ 10) {\n        $ans++;\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let l = iter.next().unwrap().parse::<i64>().unwrap();\n    let r = iter.next().unwrap().parse::<i64>().unwrap();\n\n    let mut ans = 0;\n    for i in l..=r {\n        if i % 10 == i \/ 10 {\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Little Elephant and Cards","description":"The Little Elephant loves to play with color cards.He has n cards, each has exactly two colors (the color of the front side and the color of the back side). Initially, all the cards lay on the table with the front side up. In one move the Little Elephant can turn any card to the other side. The Little Elephant thinks that a set of cards on the table is funny if at least half of the cards have the same color (for each card the color of the upper side is considered).Help the Little Elephant to find the minimum number of moves needed to make the set of n cards funny.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (1\u2264n\u226410^5) \u2014 the number of the cards. The following n lines contain the description of all cards, one card per line. The cards are described by a pair of positive integers not exceeding 10^9 \u2014 colors of both sides. The first number in a line is the color of the front of the card, the second one \u2014 of the back. The color of the front of the card may coincide with the color of the back of the card.\nThe numbers in the lines are separated by single spaces.\n","output_spec":"On a single line print a single integer \u2014 the sought minimum number of moves. If it is impossible to make the set funny, print -1.\n","notes":"In the first sample there initially are three cards lying with colors 4, 4, 7. Since two of the three cards are of the same color 4, you do not need to change anything, so the answer is 0.\nIn the second sample, you can turn the first and the fourth cards. After that three of the five cards will be of color 7.\n","sample_inputs":["3\n4 7\n4 7\n7 4\n","5\n4 7\n7 4\n2 11\n9 7\n1 1\n"],"sample_outputs":["0\n","2\n"],"id":"204-B","difficulty":1500,"tags":["binary+search","data+structures"],"src_uid":"5e055bad1da5bdc84599d6f2f89fbd12","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == a[i + 1]) {\n            cnt++;\n        } else {\n            ans += cnt \/ 2;\n            cnt = 0;\n        }\n    }\n    ans += cnt \/ 2;\n    if (cnt % 2 == 1) {\n        ans++;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] a = new int[n];\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            String[] s = br.readLine().split(\" \");\n            a[i] = Integer.parseInt(s[0]);\n            b[i] = Integer.parseInt(s[1]);\n        }\n        int ans = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            int c = a[i];\n            int d = b[i];\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n            if (map.containsKey(d)) {\n                map.put(d, map.get(d) + 1);\n            } else {\n                map.put(d, 1);\n            }\n        }\n        int max = 0;\n        for (int i : map.values()) {\n            max = Math.max(max, i);\n        }\n        if (max >= n \/ 2) {\n            System.out.println(0);\n        } else {\n            System.out.println(n - max);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = [list(map(int, input().split())) for _ in range(n)]\n\nans = 0\nfor i in range(n):\n    if a[i][0] == a[i][1]:\n        continue\n    ans += 1\n\nif ans <= n \/\/ 2:\n    print(ans)\nelse:\n    print(-1)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int> a = new List<int>();\n        List<int> b = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            string[] s = Console.ReadLine().Split(' ');\n            a.Add(int.Parse(s[0]));\n            b.Add(int.Parse(s[1]));\n        }\n        int ans = 0;\n        int c = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] == b[i])\n            {\n                c++;\n            }\n        }\n        if (c >= n \/ 2)\n        {\n            Console.WriteLine(0);\n        }\n        else\n        {\n            int m = 0;\n            for (int i = 0; i < n; i++)\n            {\n                if (a[i] != b[i])\n                {\n                    m++;\n                }\n            }\n            ans = m \/ 2;\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = []\nfor i in 1..n\n    a.push(gets.split.map(&:to_i))\nend\n\na.sort!\n\nans = 0\nfor i in 0..n-1\n    if a[i][0] == a[i][1]\n        ans += 1\n    end\nend\n\nif ans >= n\/2\n    puts 0\nelse\n    puts n - ans\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  n, i, j, a, b, c, d, ans: integer;\n  s: array[0..1000000] of integer;\n\nbegin\n  readln(n);\n  for i := 0 to n - 1 do\n  begin\n    readln(a, b);\n    s[a] := s[a] + 1;\n    s[b] := s[b] + 1;\n  end;\n  ans := 0;\n  for i := 0 to 1000000 do\n  begin\n    if s[i] > n div 2 then\n    begin\n      ans := ans + (s[i] - n div 2);\n    end;\n  end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x, y int\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &x, &y)\\n        a = append(a, x)\\n        a = append(a, y)\\n    }\\n    var b []int\\n    for i := 0; i < n; i++ {\\n        b = append(b, a[i])\\n        b = append(b, a[i+n])\\n    }\\n    var c int\\n    for i := 0; i < 2*n; i++ {\\n        if b[i] == b[i+1] {\\n            c++\\n        }\\n    }\\n    if c >= n {\\n        fmt.Println(0)\\n    } else {\\n        fmt.Println(n - c)\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readLine());\nconst cards = [];\nfor (let i = 0; i < n; i++) {\n  const card = process.stdin.readLine().split(' ').map(Number);\n  cards.push(card);\n}\nconst colors = new Set();\nfor (const card of cards) {\n  colors.add(card[0]);\n  colors.add(card[1]);\n}\nconst half = Math.floor(n \/ 2);\nconst minMoves = Math.min(colors.size - half, half - colors.size);\nconsole.log(minMoves);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val cards = Array(n) { readLine().split(\" \").map { it.toInt() } }\n    val colors = IntArray(100001) { 0 }\n    for (card in cards) {\n        colors[card[0]]++\n        colors[card[1]]++\n    }\n    val max = colors.maxOrNull()!!\n    val ans = 0\n    for (i in 0..100000) {\n        if (colors[i] > max \/ 2) {\n            ans += colors[i] - max \/ 2\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$cards = [];\nfor ($i = 0; $i < $n; $i++) {\n    $card = explode(' ', trim(fgets(STDIN)));\n    $cards[] = [$card[0], $card[1]];\n}\n$colors = array_count_values(array_column($cards, 0));\n$colors2 = array_count_values(array_column($cards, 1));\n$min = min($colors, $colors2);\nif ($min >= $n \/ 2) {\n    echo 0;\n} else {\n    echo $n - $min;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    int b[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &a[i], &b[i]);\n    }\n    int c = 0;\n    int d = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == b[i]) {\n            c++;\n        } else {\n            d++;\n        }\n    }\n    if (c >= n \/ 2) {\n        printf(\" 0 \");\n    } else if (d >= n \/ 2) {\n        printf(\" 0 \");\n    } else {\n        printf(\" %d \", min(c, d));\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my @b = split ' ', <STDIN>;\n    push @a, [ $b[0], $b[1] ];\n}\n\nmy $c = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    my $f = $a[$i][0];\n    my $b = $a[$i][1];\n    if ($f == $b) {\n        $c++;\n    }\n}\n\nif ($c >= $n \/ 2) {\n    print 0;\n} else {\n    print $n - $c;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut cards = Vec::new();\n    for _ in 0..n {\n        let mut s = String::new();\n        io::stdin().read_line(&mut s).unwrap();\n        let mut v = s.split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<usize>>();\n        cards.push(v);\n    }\n\n    let mut count = 0;\n    for i in 0..n {\n        for j in 0..n {\n            if i != j && cards[i][0] == cards[j][0] {\n                count += 1;\n            }\n        }\n    }\n\n    if count >= n \/ 2 {\n        println!(\"0\");\n    } else {\n        println!(\"{}\", n - count);\n    }\n}\n\"\"\"}]"}
{"title":"A. Dubstep","description":"Vasya works as a DJ in the best Berland nightclub, and he often uses dubstep music in his performance. Recently, he has decided to take a couple of old songs and make dubstep remixes from them.Let's assume that a song consists of some number of words. To make the dubstep remix of this song, Vasya inserts a certain number of words \"WUB\" before the first word of the song (the number may be zero), after the last word (the number may be zero), and between words (at least one between any pair of neighbouring words), and then the boy glues together all the words, including \"WUB\", in one string and plays the song at the club.For example, a song with words \"I AM X\" can transform into a dubstep remix as \"WUBWUBIWUBAMWUBWUBX\" and cannot transform into \"WUBWUBIAMWUBX\".Recently, Petya has heard Vasya's new dubstep track, but since he isn't into modern music, he decided to find out what was the initial song that Vasya remixed. Help Petya restore the original song.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input consists of a single non-empty string, consisting only of uppercase English letters, the string's length doesn't exceed 200 characters. It is guaranteed that before Vasya remixed the song, no word contained substring \"WUB\" in it; Vasya didn't change the word order. It is also guaranteed that initially the song had at least one word.\n","output_spec":"Print the words of the initial song that Vasya used to make a dubsteb remix. Separate the words with a space.\n","notes":"In the first sample: \"WUBWUBABCWUB\" = \"WUB\" + \"WUB\" + \"ABC\" + \"WUB\". That means that the song originally consisted of a single word \"ABC\", and all words \"WUB\" were added by Vasya.\nIn the second sample Vasya added a single word \"WUB\" between all neighbouring words, in the beginning and in the end, except for words \"ARE\" and \"THE\" \u2014 between them Vasya added two \"WUB\".\n","sample_inputs":["WUBWUBABCWUB\n","WUBWEWUBAREWUBWUBTHEWUBCHAMPIONSWUBMYWUBFRIENDWUB\n"],"sample_outputs":["ABC ","WE ARE THE CHAMPIONS MY FRIEND "],"id":"208-A","difficulty":900,"tags":["strings"],"src_uid":"edede580da1395fe459a480f6a0a548d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"string s;cin>>s;int n=s.size();int i=0;while(i<n-1){if(s[i]=='W'&&s[i+1]=='U'&&s[i+2]=='B'){i+=3;}else{cout<<s[i];i++;}}cout<<s[n-1];\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String input = scanner.nextLine();\n        int count = 0;\n        StringBuilder result = new StringBuilder();\n        for (int i = 0; i < input.length(); i++) {\n            if (input.charAt(i) == 'W' && input.charAt(i + 1) == 'U' && input.charAt(i + 2) == 'B') {\n                count++;\n            } else {\n                if (count > 0) {\n                    result.append(\" \");\n                    count--;\n                }\n                result.append(input.charAt(i));\n            }\n        }\n        System.out.println(result);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\nprint(' '.join(s.split('WUB')))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    char s[201];\n    scanf(\" %s \", s);\n    int i, j, k, n = 0;\n    for (i = 0; s[i] != '\\0'; i++) {\n        if (s[i] == 'W' && s[i + 1] == 'U' && s[i + 2] == 'B') {\n            n++;\n        }\n    }\n    for (i = 0; i < n; i++) {\n        printf(\"   \");\n    }\n    for (i = 0; s[i] != '\\0'; i++) {\n        if (s[i] != 'W' && s[i] != 'U' && s[i] != 'B') {\n            printf(\"%c \", s[i]);\n        }\n    }\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"string s = Console.ReadLine();\nstring[] words = s.Split('WUB');\nfor (int i = 0; i < words.Length; i++)\n{\n    if (i == 0 || i == words.Length - 1)\n    {\n        Console.Write(words[i] + \" \");\n    }\n    else\n    {\n        Console.Write(\" \" + words[i] + \" \");\n    }\n}\nConsole.WriteLine();\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def song_deconstruction(song)\n    words = song.split('WUB')\n    words.delete('')\n    return words.join(' ')\nend\n\nsong = gets.chomp\nputs song_deconstruction(song)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var s:string;\na:array[0..200] of char;\ni,j,k:integer;\nbegin\nreadln(s);\nfor i:=1 to length(s)-1 do\nif s[i]='W' and s[i+1]='U' and s[i+2]='B' then\nbegin\nfor j:=i to length(s)-1 do\na[j-i]=s[j];\nfor k:=0 to i-1 do\na[k]=' ';\nfor k:=length(s)-i downto length(s) do\na[k+i]=' ';\ns:=a;\nend;\nfor i:=1 to length(s)-1 do\nif s[i]=' ' then\ns[i]:='';\nwriteln(s);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var s string\\n    fmt.Scan(&s)\\n    var words []string\\n    for i := 0; i < len(s); i++ {\\n        if s[i] != 'W' && s[i] != 'U' && s[i] != 'B' {\\n            words = append(words, string(s[i]))\\n        }\\n    }\\n    fmt.Println(strings.Join(words, \\\" \\\"))\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = process.argv[2];\\nconst words = s.split('WUB');\\nconsole.log(words.join(' '));\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val input = readLine()\n    val words = input.split(\"WUB\")\n    println(words.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$str = trim(fgets(STDIN));\n$arr = explode('WUB', $str);\n$arr = array_filter($arr);\necho implode(' ', $arr);\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\n\nvoid main() {\n    string s;\n    scanf(\" %s \", s);\n    string[] words = s.split(\"WUB\");\n    foreach (w in words) {\n        printf(\" %s \", w);\n    }\n    printf(\"\\n\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\n\nmy $str = <STDIN>;\nmy $count = 0;\nmy $word = \"\";\n\nwhile ($str =~ \/WUB\/) {\n    $count++;\n}\n\n$str =~ s\/WUB\/\/g;\n\nfor (my $i = 0; $i < $count; $i++) {\n    $str = \" $str \";\n}\n\nprint $str;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    let mut words = Vec::new();\n    let mut i = 0;\n    while i < s.len() {\n        if s.as_bytes()[i] != b'W' || s.as_bytes()[i + 1] != b'U' || s.as_bytes()[i + 2] != b'B' {\n            words.push(s[i..i + 1].to_string());\n        }\n        i += 3;\n    }\n    for word in words {\n        println!(\"{}\", word);\n    }\n}\n\"\"\"}]"}
{"title":"B. Solitaire","description":"A boy named Vasya wants to play an old Russian solitaire called \"Accordion\". In this solitaire, the player must observe the following rules:  A deck of n cards is carefully shuffled, then all n cards are put on the table in a line from left to right;  Before each move the table has several piles of cards lying in a line (initially there are n piles, each pile has one card). Let's number the piles from left to right, from 1 to x. During one move, a player can take the whole pile with the maximum number x (that is the rightmost of remaining) and put it on the top of pile x-1 (if it exists) or on the top of pile x-3 (if it exists). The player can put one pile on top of another one only if the piles' top cards have the same suits or values. Please note that if pile x goes on top of pile y, then the top card of pile x becomes the top card of the resulting pile. Also note that each move decreases the total number of piles by 1;  The solitaire is considered completed if all cards are in the same pile. Vasya has already shuffled the cards and put them on the table, help him understand whether completing this solitaire is possible or not. ","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains a single integer n (1\u2264n\u226452) \u2014 the number of cards in Vasya's deck. The next line contains n space-separated strings c1,c2,...,cn, where string ci describes the i-th card on the table. Each string ci consists of exactly two characters, the first one represents the card's value, the second one represents its suit. Cards on the table are numbered from left to right. \nA card's value is specified by one of these characters: \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"T\", \"J\", \"Q\", \"K\", \"A\". A card's suit is specified by one of these characters: \"S\", \"D\", \"H\", \"C\".\nIt is not guaranteed that the deck has all possible cards. Also, the cards in Vasya's deck can repeat.\n","output_spec":"On a single line print the answer to the problem: string \"YES\" (without the quotes) if completing the solitaire is possible, string \"NO\" (without the quotes) otherwise.\n","notes":"In the first sample you can act like that: \n  put the 4-th pile on the 1-st one;  put the 3-rd pile on the 2-nd one;  put the 2-nd pile on the 1-st one. In the second sample there is no way to complete the solitaire.\n","sample_inputs":["4\n2S 2S 2C 2C\n","2\n3S 2C\n"],"sample_outputs":["YES\n","NO\n"],"id":"208-B","difficulty":1900,"tags":["dfs+and+similar","dp"],"src_uid":"1805771e194d323edacf2526a1eb6768","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<string> v(n);\n    for (int i = 0; i < n; i++) {\n        cin >> v[i];\n    }\n\n    int count[4] = {0, 0, 0, 0};\n    for (int i = 0; i < n; i++) {\n        if (v[i][0] == '2') {\n            count[0]++;\n        } else if (v[i][0] == '3') {\n            count[1]++;\n        } else if (v[i][0] == '4') {\n            count[2]++;\n        } else if (v[i][0] == '5') {\n            count[3]++;\n        }\n    }\n\n    if (count[0] % 2 == 0 && count[1] % 2 == 0 && count[2] % 2 == 0 && count[3] % 2 == 0) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        String[] cards = scanner.nextLine().split(\" \");\n        int[] values = new int[14];\n        int[] suits = new int[4];\n        for (String card : cards) {\n            char value = card.charAt(0);\n            char suit = card.charAt(1);\n            values[value - '2']++;\n            suits[suit - 'S']++;\n        }\n        boolean possible = true;\n        for (int i = 0; i < 14; i++) {\n            if (values[i] % 2 != 0) {\n                possible = false;\n                break;\n            }\n        }\n        for (int i = 0; i < 4; i++) {\n            if (suits[i] % 2 != 0) {\n                possible = false;\n                break;\n            }\n        }\n        System.out.println(possible ? \"YES\" : \"NO\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(str, input().split()))\n\ndef check(a):\n    for i in range(n):\n        if a[i][0] == a[i+1][0] or a[i][1] == a[i+1][1]:\n            return True\n    return False\n\nif check(a):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    char a[n][2];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    int s[n];\n    for (int i = 0; i < n; i++) {\n        s[i] = 0;\n    }\n    for (int i = 0; i < n; i++) {\n        if (a[i][0] == a[i + 1][0] || a[i][1] == a[i + 1][1]) {\n            s[i + 1] = s[i] + 1;\n        }\n    }\n    if (s[n - 1] == 1) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string[] cards = Console.ReadLine().Split(' ');\n        Dictionary<string, int> values = new Dictionary<string, int>();\n        Dictionary<string, int> suits = new Dictionary<string, int>();\n        for (int i = 0; i < n; i++)\n        {\n            string card = cards[i];\n            string value = card[0];\n            string suit = card[1];\n            if (!values.ContainsKey(value))\n            {\n                values.Add(value, 0);\n            }\n            values[value]++;\n            if (!suits.ContainsKey(suit))\n            {\n                suits.Add(suit, 0);\n            }\n            suits[suit]++;\n        }\n        int maxValue = 0;\n        int maxSuit = 0;\n        foreach (var value in values)\n        {\n            if (value.Value > maxValue)\n            {\n                maxValue = value.Value;\n                maxSuit = value.Key;\n            }\n        }\n        int maxSuitCount = 0;\n        foreach (var suit in suits)\n        {\n            if (suit.Value == maxValue)\n            {\n                maxSuitCount++;\n            }\n        }\n        if (maxSuitCount == 1)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nc = gets.split(' ')\n\nc.sort!\n\nif c.length == 1\n  puts 'YES'\nelse\n  c.each_with_index do |v, i|\n    if i == 0\n      next\n    end\n    if c[i-1][0] == v[0] || c[i-1][1] == v[1]\n      puts 'YES'\n      exit\n    end\n  end\n  puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  n, i, j, k, m, s, t: Integer;\n  a: array[1..52] of string;\n  b: array[1..52] of Integer;\n\nbegin\n  Readln(n);\n  for i := 1 to n do\n    Readln(a[i]);\n  for i := 1 to n do\n  begin\n    s := 0;\n    for j := 1 to n do\n      if a[i][1] = a[j][1] or a[i][2] = a[j][2] then\n        s := s + 1;\n    b[i] := s;\n  end;\n  m := 0;\n  for i := 1 to n do\n    if b[i] = 1 then\n      m := m + 1;\n  if m = n then\n    Writeln('YES')\n  else\n    Writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := 0\\n    var s []string\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    fmt.Scanf(\\\"%s\\\\n\\\", &s)\\n    var m = make(map[string]int)\\n    for i := 0; i < n; i++ {\\n        m[s[i]]++\\n    }\\n    var a = make([]int, 0)\\n    for k, v := range m {\\n        if v > 1 {\\n            a = append(a, v)\\n        }\\n    }\\n    if len(a) == 0 {\\n        fmt.Println(\\\"NO\\\")\\n    } else {\\n        fmt.Println(\\\"YES\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readLine());\nconst cards = process.stdin.readLine().split(' ');\nconst values = new Set();\nconst suits = new Set();\nfor (let i = 0; i < n; i++) {\n  const card = cards[i];\n  values.add(card[0]);\n  suits.add(card[1]);\n}\nif (values.size === 1 || suits.size === 1) {\n  console.log('YES');\n} else {\n  console.log('NO');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val cards = readLine().split(\" \")\n    val map = HashMap<String, Int>()\n    for (card in cards) {\n        val key = card[0] + card[1]\n        map[key] = map.getOrDefault(key, 0) + 1\n    }\n    val values = map.values.sorted()\n    val count = values.size\n    if (count == 1) {\n        println(\"YES\")\n    } else if (count == 2) {\n        if (values[0] == values[1]) {\n            println(\"YES\")\n        } else {\n            println(\"NO\")\n        }\n    } else {\n        val odd = values.filter { it % 2 != 0 }\n        if (odd.size == 0) {\n            println(\"YES\")\n        } else {\n            println(\"NO\")\n        }\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$cards = explode(' ', trim(fgets(STDIN)));\n$values = array_map(function($card) {\n    return $card[0];\n}, $cards);\n$suits = array_map(function($card) {\n    return $card[1];\n}, $cards);\n$values = array_unique($values);\n$suits = array_unique($suits);\n$count = count($values);\n$count2 = count($suits);\nif ($count == 1 || $count2 == 1) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto a = std.array.init(n, []);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    int m = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i][0] == a[i + 1][0] || a[i][1] == a[i + 1][1]) {\n            m++;\n        }\n    }\n    if (m == n - 1) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @cards = <STDIN>;\nchomp @cards;\n\nmy %cards;\nfor my $card (@cards) {\n    $cards{$card}++;\n}\n\nmy $count = 0;\nfor my $card (keys %cards) {\n    if ($cards{$card} % 2 == 1) {\n        $count++;\n    }\n}\n\nif ($count == 0) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let n = read_line().parse::<usize>().unwrap();\n    let mut cards = HashMap::new();\n    for _ in 0..n {\n        let card = read_line();\n        let (value, suit) = card.split_at(1);\n        let value = value.parse::<usize>().unwrap();\n        let suit = suit.parse::<usize>().unwrap();\n        if !cards.contains_key(&value) {\n            cards.insert(value, vec![suit]);\n        } else {\n            cards.get_mut(&value).unwrap().push(suit);\n        }\n    }\n    let mut ans = true;\n    for (value, suits) in cards.iter() {\n        if suits.len() % 2 != 0 {\n            ans = false;\n            break;\n        }\n    }\n    println!(\"{}\", if ans { \"YES\" } else { \"NO\" });\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"D. Prizes, Prizes, more Prizes","description":"Vasya, like many others, likes to participate in a variety of sweepstakes and lotteries. Now he collects wrappings from a famous chocolate bar \"Jupiter\". According to the sweepstake rules, each wrapping has an integer written on it \u2014 the number of points that the participant adds to his score as he buys the bar. After a participant earns a certain number of points, he can come to the prize distribution center and exchange the points for prizes. When somebody takes a prize, the prize's cost is simply subtracted from the number of his points.Vasya didn't only bought the bars, he also kept a record of how many points each wrapping cost. Also, he remembers that he always stucks to the greedy strategy \u2014 as soon as he could take at least one prize, he went to the prize distribution centre and exchanged the points for prizes. Moreover, if he could choose between multiple prizes, he chose the most expensive one. If after an exchange Vasya had enough points left to get at least one more prize, then he continued to exchange points.The sweepstake has the following prizes (the prizes are sorted by increasing of their cost):   a mug (costs a points),  a towel (costs b points),  a bag (costs c points),  a bicycle (costs d points),  a car (costs e points). Now Vasya wants to recollect what prizes he has received. You know sequence p1,p2,...,pn, where pi is the number of points Vasya got for the i-th bar. The sequence of points is given in the chronological order. You also know numbers a, b, c, d, e. Your task is to find, how many prizes Vasya received, what prizes they are and how many points he's got left after all operations are completed.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (1\u2264n\u226450) \u2014 the number of chocolate bar wrappings that brought points to Vasya. The second line contains space-separated integers p1,p2,...,pn (1\u2264pi\u226410^9). The third line contains 5 integers a, b, c, d, e (1\u2264a<b<c<d<e\u226410^9) \u2014 the prizes' costs.\n","output_spec":"Print on the first line 5 integers, separated by a space \u2014 the number of mugs, towels, bags, bicycles and cars that Vasya has got, respectively. On the second line print a single integer \u2014 the number of points Vasya will have left after all operations of exchange are completed.\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n","notes":"In the first sample Vasya gets 3 points after eating the first chocolate bar. Then he exchanges 2 points and gets a mug. Vasya wins a bag after eating the second chocolate bar. Then he wins a towel after eating the third chocolate bar. After all chocolate bars 3-2+10-10+4-4=1 points remains.\n","sample_inputs":["3\n3 10 4\n2 4 10 15 20\n","4\n10 4 39 2\n3 5 10 11 12\n"],"sample_outputs":["1 1 1 0 0 \n1\n","3 0 1 0 3 \n0\n"],"id":"208-D","difficulty":1200,"tags":["implementation"],"src_uid":"1ae2942b72ebb7c55359c41e141900d7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int m;\n    cin >> m;\n    int p[5];\n    for (int i = 0; i < 5; i++) {\n        cin >> p[i];\n    }\n    int ans[5] = {0};\n    int sum = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < 5; j++) {\n            if (a[i] >= p[j]) {\n                ans[j]++;\n                sum += a[i] - p[j];\n                break;\n            }\n        }\n    }\n    cout << ans[0] << \" \" << ans[1] << \" \" << ans[2] << \" \" << ans[3] << \" \" << ans[4] << endl;\n    cout << sum << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] points = new int[n];\n        for (int i = 0; i < n; i++) {\n            points[i] = scanner.nextInt();\n        }\n        int[] prizes = new int[]{2, 4, 10, 15, 20};\n        int[] count = new int[5];\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 5; j++) {\n                if (points[i] >= prizes[j]) {\n                    count[j]++;\n                    sum += prizes[j];\n                    points[i] -= prizes[j];\n                    break;\n                }\n            }\n        }\n        System.out.println(String.join(\" \", String.valueOf(count[0]), String.valueOf(count[1]), String.valueOf(count[2]), String.valueOf(count[3]), String.valueOf(count[4])));\n        System.out.println(sum);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\np = list(map(int, input().split()))\na, b, c, d, e = map(int, input().split())\n\nmug = 0\ntowel = 0\nbag = 0\nbicycle = 0\ncar = 0\n\nfor i in range(n):\n    if p[i] >= a:\n        mug += 1\n        p[i] -= a\n    elif p[i] >= b:\n        towel += 1\n        p[i] -= b\n    elif p[i] >= c:\n        bag += 1\n        p[i] -= c\n    elif p[i] >= d:\n        bicycle += 1\n        p[i] -= d\n    elif p[i] >= e:\n        car += 1\n        p[i] -= e\n\nprint(mug, towel, bag, bicycle, car)\nprint(sum(p))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, a, b, c, d, e, i, j, m, p, q, r, s, t, u, v, w, x, y, z;\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &p);\n    scanf(\" %d \", &q);\n    scanf(\" %d \", &r);\n    scanf(\" %d \", &s);\n    scanf(\" %d \", &t);\n    m = 0;\n    q = 0;\n    r = 0;\n    s = 0;\n    t = 0;\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &u);\n        if (u >= a) {\n            m++;\n            u -= a;\n        }\n        if (u >= b) {\n            q++;\n            u -= b;\n        }\n        if (u >= c) {\n            r++;\n            u -= c;\n        }\n        if (u >= d) {\n            s++;\n            u -= d;\n        }\n        if (u >= e) {\n            t++;\n            u -= e;\n        }\n    }\n    printf(\" %d %d %d %d %d \", m, q, r, s, t);\n    printf(\" \n \");\n    printf(\" %d \", u);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string[] p = Console.ReadLine().Split(' ');\n        int[] a = new int[5];\n        int[] b = new int[5];\n        int[] c = new int[5];\n        int[] d = new int[5];\n        int[] e = new int[5];\n        for (int i = 0; i < n; i++)\n        {\n            int x = int.Parse(p[i]);\n            if (x >= a[0])\n            {\n                a[0]++;\n            }\n            else if (x >= b[0])\n            {\n                b[0]++;\n            }\n            else if (x >= c[0])\n            {\n                c[0]++;\n            }\n            else if (x >= d[0])\n            {\n                d[0]++;\n            }\n            else if (x >= e[0])\n            {\n                e[0]++;\n            }\n        }\n        int[] m = new int[5];\n        int[] s = new int[5];\n        int[] t = new int[5];\n        int[] b = new int[5];\n        int[] e = new int[5];\n        for (int i = 0; i < 5; i++)\n        {\n            m[i] = a[i];\n            s[i] = b[i];\n            t[i] = c[i];\n            b[i] = d[i];\n            e[i] = e[i];\n        }\n        int x = 0;\n        for (int i = 0; i < 5; i++)\n        {\n            if (m[i] > 0)\n            {\n                Console.Write(m[i] + \" \");\n                x += m[i] * a[i];\n            }\n        }\n        Console.WriteLine();\n        for (int i = 0; i < 5; i++)\n        {\n            if (s[i] > 0)\n            {\n                Console.Write(s[i] + \" \");\n                x += s[i] * b[i];\n            }\n        }\n        Console.WriteLine();\n        for (int i = 0; i < 5; i++)\n        {\n            if (t[i] > 0)\n            {\n                Console.Write(t[i] + \" \");\n                x += t[i] * c[i];\n            }\n        }\n        Console.WriteLine();\n        for (int i = 0; i < 5; i++)\n        {\n            if (b[i] > 0)\n            {\n                Console.Write(b[i] + \" \");\n                x += b[i] * d[i];\n            }\n        }\n        Console.WriteLine();\n        for (int i = 0; i < 5; i++)\n        {\n            if (e[i] > 0)\n            {\n                Console.Write(e[i] + \" \");\n                x += e[i] * e[i];\n            }\n        }\n        Console.WriteLine();\n        Console.WriteLine(x);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\np1 = gets.split.map(&:to_i)\na, b, c, d, e = gets.split.map(&:to_i)\n\nmugs = 0\ntowels = 0\nbags = 0\nbicycles = 0\ncars = 0\n\npoints = 0\n\np1.each do |p|\n  if p >= a\n    mugs += 1\n    points -= a\n  elsif p >= b\n    towels += 1\n    points -= b\n  elsif p >= c\n    bags += 1\n    points -= c\n  elsif p >= d\n    bicycles += 1\n    points -= d\n  elsif p >= e\n    cars += 1\n    points -= e\n  end\nend\n\nputs \"#{mugs} #{towels} #{bags} #{bicycles} #{cars}\"\nputs points\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  n, i, a, b, c, d, e, p, m, t, b, c, d, r: Integer;\n\nbegin\n  Readln(n);\n  Readln(p);\n  Readln(a, b, c, d, e);\n  m := 0;\n  t := 0;\n  b := 0;\n  c := 0;\n  d := 0;\n  r := 0;\n  for i := 1 to n do\n  begin\n    if p >= a then\n    begin\n      m := m + 1;\n      p := p - a;\n    end;\n    if p >= b then\n    begin\n      t := t + 1;\n      p := p - b;\n    end;\n    if p >= c then\n    begin\n      b := b + 1;\n      p := p - c;\n    end;\n    if p >= d then\n    begin\n      c := c + 1;\n      p := p - d;\n    end;\n    if p >= e then\n    begin\n      d := d + 1;\n      p := p - e;\n    end;\n  end;\n  Writeln(m, ' ', t, ' ', b, ' ', c, ' ', d);\n  Writeln(r);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"math\"\r\n)\r\n\r\nfunc main() {\r\n    var n int\r\n    fmt.Scan(&n)\r\n    p := make([]int, n)\r\n    for i := 0; i < n; i++ {\r\n        fmt.Scan(&p[i])\r\n    }\r\n    m := make([]int, 5)\r\n    a, b, c, d, e := 0, 0, 0, 0, 0\r\n    for _, v := range p {\r\n        if v >= a {\r\n            m[0]++\r\n            a = v\r\n        }\r\n        if v >= b {\r\n            m[1]++\r\n            b = v\r\n        }\r\n        if v >= c {\r\n            m[2]++\r\n            c = v\r\n        }\r\n        if v >= d {\r\n            m[3]++\r\n            d = v\r\n        }\r\n        if v >= e {\r\n            m[4]++\r\n            e = v\r\n        }\r\n    }\r\n    fmt.Println(m[0], m[1], m[2], m[3], m[4])\r\n    fmt.Println(math.Max(0, p[n-1]-e))\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst p = stdin[1].split(' ').map(x => parseInt(x));\nconst a = parseInt(stdin[2]);\nconst b = parseInt(stdin[3]);\nconst c = parseInt(stdin[4]);\nconst d = parseInt(stdin[5]);\nconst e = parseInt(stdin[6]);\n\nlet mugs = 0;\nlet towels = 0;\nlet bags = 0;\nlet bicycles = 0;\nlet cars = 0;\nlet points = 0;\n\nfor (let i = 0; i < n; i++) {\n    if (p[i] >= a) {\n        mugs++;\n        points -= a;\n    } else if (p[i] >= b) {\n        towels++;\n        points -= b;\n    } else if (p[i] >= c) {\n        bags++;\n        points -= c;\n    } else if (p[i] >= d) {\n        bicycles++;\n        points -= d;\n    } else if (p[i] >= e) {\n        cars++;\n        points -= e;\n    }\n}\n\nconsole.log(mugs + ' ' + towels + ' ' + bags + ' ' + bicycles + ' ' + cars);\nconsole.log(points);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val points = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    val prizes = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    var mugs = 0\n    var towels = 0\n    var bags = 0\n    var bicycles = 0\n    var cars = 0\n    var pointsLeft = 0\n    for (i in 0 until n) {\n        if (points[i] >= prizes[0]) {\n            mugs++\n            pointsLeft += points[i] - prizes[0]\n        } else if (points[i] >= prizes[1]) {\n            towels++\n            pointsLeft += points[i] - prizes[1]\n        } else if (points[i] >= prizes[2]) {\n            bags++\n            pointsLeft += points[i] - prizes[2]\n        } else if (points[i] >= prizes[3]) {\n            bicycles++\n            pointsLeft += points[i] - prizes[3]\n        } else if (points[i] >= prizes[4]) {\n            cars++\n            pointsLeft += points[i] - prizes[4]\n        }\n    }\n    println(\"${mugs} ${towels} ${bags} ${bicycles} ${cars}\")\n    println(pointsLeft)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$a = (int)trim(fgets(STDIN));\n$b = (int)trim(fgets(STDIN));\n$c = (int)trim(fgets(STDIN));\n$d = (int)trim(fgets(STDIN));\n$e = (int)trim(fgets(STDIN));\n$mug = 0;\n$towel = 0;\n$bag = 0;\n$bicycle = 0;\n$car = 0;\n$points = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $points += $arr[$i];\n    if ($points >= $a) {\n        $mug++;\n        $points -= $a;\n    }\n    if ($points >= $b) {\n        $towel++;\n        $points -= $b;\n    }\n    if ($points >= $c) {\n        $bag++;\n        $points -= $c;\n    }\n    if ($points >= $d) {\n        $bicycle++;\n        $points -= $d;\n    }\n    if ($points >= $e) {\n        $car++;\n        $points -= $e;\n    }\n}\necho \"$mug $towel $bag $bicycle $car\\n\";\necho $points;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int m;\n    scanf(\" %d \", &m);\n    int p[5];\n    for (int i = 0; i < 5; i++) {\n        scanf(\" %d \", &p[i]);\n    }\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int s = 0;\n    while (i < n) {\n        if (a[i] >= p[0]) {\n            p[0] = 0;\n            s += a[i] - p[0];\n            i++;\n            j++;\n        } else if (a[i] >= p[1]) {\n            p[1] = 0;\n            s += a[i] - p[1];\n            i++;\n            k++;\n        } else if (a[i] >= p[2]) {\n            p[2] = 0;\n            s += a[i] - p[2];\n            i++;\n            l++;\n        } else if (a[i] >= p[3]) {\n            p[3] = 0;\n            s += a[i] - p[3];\n            i++;\n        } else if (a[i] >= p[4]) {\n            p[4] = 0;\n            s += a[i] - p[4];\n            i++;\n        } else {\n            i++;\n        }\n    }\n    printf(\" %d %d %d %d %d \", j, k, l, s, s);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @p = split ' ', <STDIN>;\nmy @a = split ' ', <STDIN>;\n\nmy $m = 0;\nmy $t = 0;\nmy $b = 0;\nmy $c = 0;\nmy $e = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($p[$i] >= $a) {\n        $m++;\n        $p[$i] -= $a;\n    } elsif ($p[$i] >= $b) {\n        $t++;\n        $p[$i] -= $b;\n    } elsif ($p[$i] >= $c) {\n        $b++;\n        $p[$i] -= $c;\n    } elsif ($p[$i] >= $d) {\n        $c++;\n        $p[$i] -= $d;\n    } elsif ($p[$i] >= $e) {\n        $e++;\n        $p[$i] -= $e;\n    }\n}\n\nprint \"$m $t $b $c $e\\n\";\nprint \"$p[-1]\\n\";\"}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let points = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<u64>().unwrap()).collect::<Vec<u64>>();\n    let prizes = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<u64>().unwrap()).collect::<Vec<u64>>();\n\n    let mut mugs = 0;\n    let mut towels = 0;\n    let mut bags = 0;\n    let mut bicycles = 0;\n    let mut cars = 0;\n    let mut points_left = 0;\n\n    for point in points {\n        if point >= prizes[0] {\n            mugs += 1;\n            points_left += point - prizes[0];\n        } else if point >= prizes[1] {\n            towels += 1;\n            points_left += point - prizes[1];\n        } else if point >= prizes[2] {\n            bags += 1;\n            points_left += point - prizes[2];\n        } else if point >= prizes[3] {\n            bicycles += 1;\n            points_left += point - prizes[3];\n        } else if point >= prizes[4] {\n            cars += 1;\n            points_left += point - prizes[4];\n        }\n    }\n\n    println!(\"{} {} {} {} {}\", mugs, towels, bags, bicycles, cars);\n    println!(\"{}\", points_left);\n}\n\"\"\"}]"}
{"title":"A. Multicolored Marbles","description":"Polycarpus plays with red and blue marbles. He put n marbles from the left to the right in a row. As it turned out, the marbles form a zebroid.A non-empty sequence of red and blue marbles is a zebroid, if the colors of the marbles in this sequence alternate. For example, sequences (red; blue; red) and (blue) are zebroids and sequence (red; red) is not a zebroid.Now Polycarpus wonders, how many ways there are to pick a zebroid subsequence from this sequence. Help him solve the problem, find the number of ways modulo 1000000007 (10^9+7).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (1\u2264n\u226410^6) \u2014 the number of marbles in Polycarpus's sequence.\n","output_spec":"Print a single number \u2014 the answer to the problem modulo 1000000007 (10^9+7).\n","notes":"Let's consider the first test sample. Let's assume that Polycarpus initially had sequence (red; blue; red), so there are six ways to pick a zebroid: \n  pick the first marble;  pick the second marble;  pick the third marble;  pick the first and second marbles;  pick the second and third marbles;  pick the first, second and third marbles. It can be proven that if Polycarpus picks (blue; red; blue) as the initial sequence, the number of ways won't change.\n","sample_inputs":["3\n","4\n"],"sample_outputs":["6\n","11\n"],"id":"209-A","difficulty":1600,"tags":["dp","math"],"src_uid":"5c4bd12df3915186a7b506c2060db125","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 0) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n + 1];\n        a[0] = 1;\n        a[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            a[i] = (a[i - 1] + a[i - 2]) % 1000000007;\n        }\n        System.out.println(a[n]);\n    }\n}\n\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef f(n):\n    if n == 0:\n        return 1\n    if n == 1:\n        return 2\n    return f(n-1) * 2 + f(n-2)\n\nprint(f(n) % 1000000007)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=1\nb=1\nfor i in range(2,n+1):\n    a,b=b,(a+b)%1000000007\nprint(a)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n        }\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        dp[1] = 1;\n        for (int i = 2; i <= n; i++)\n        {\n            if (a[i - 1] == a[i - 2])\n            {\n                dp[i] = dp[i - 1] + dp[i - 2];\n            }\n            else\n            {\n                dp[i] = dp[i - 1];\n            }\n        }\n        Console.WriteLine(dp[n]);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\ndef f(n)\n  if n == 0\n    return 1\n  end\n  if n == 1\n    return 2\n  end\n  return f(n - 1) * 2 + f(n - 2)\nend\n\nputs f(n) % 1000000007\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program z;\nuses crt;\nvar\n  n, i, j, k, t, a, b, c, d, ans: longint;\nbegin\n  readln(n);\n  a := 0;\n  b := 0;\n  c := 0;\n  d := 0;\n  for i := 1 to n do begin\n    read(t);\n    if t = 1 then\n      inc(a)\n    else\n      inc(b);\n  end;\n  if a = 0 then\n    ans := b\n  else if b = 0 then\n    ans := a\n  else begin\n    ans := 0;\n    for i := 0 to a - 1 do\n      for j := 0 to b - 1 do begin\n        k := a - i;\n        t := b - j;\n        if (k + t) mod 2 = 0 then\n          ans := (ans + (i + j) * (i + j - 1) div 2) mod 1000000007\n        else\n          ans := (ans - (i + j) * (i + j - 1) div 2) mod 1000000007;\n      end;\n  end;\n  writeln(ans);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var n int\n    fmt.Scan(&n)\n\n    dp := make([]int, n+1)\n    dp[0] = 1\n    dp[1] = 1\n    for i := 2; i <= n; i++ {\n        dp[i] = (dp[i-1] + dp[i-2]) % 1000000007\n    }\n\n    fmt.Println(dp[n])\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().trim();\nconst n = parseInt(input);\nconst mod = 1000000007;\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\ndp[1] = 1;\nfor (let i = 2; i <= n; i++) {\n  dp[i] = (dp[i - 1] + dp[i - 2]) % mod;\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val dp = Array(n + 1) { IntArray(2) }\n    dp[0][0] = 1\n    dp[0][1] = 0\n    dp[1][0] = 0\n    dp[1][1] = 1\n    for (i in 2..n) {\n        dp[i][0] = (dp[i - 1][0] + dp[i - 1][1]) % 1000000007\n        dp[i][1] = (dp[i - 1][0] + dp[i - 1][1] * 2) % 1000000007\n    }\n    println(dp[n][0])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$mod = 1000000007;\n$dp = array_fill(0, $n + 1, 0);\n$dp[0] = 1;\n$dp[1] = 1;\nfor ($i = 2; $i <= $n; $i++) {\n    $dp[$i] = ($dp[$i - 1] + $dp[$i - 2]) % $mod;\n}\necho $dp[$n];\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 0) {\n            ans = (ans + 1) % 1000000007;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $ans = 1;\nfor (my $i = 1; $i < $n; $i++) {\n    $ans = ($ans * 2) % 1000000007;\n}\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    let mut dp = vec![0; n + 1];\n    dp[0] = 1;\n    dp[1] = 1;\n    for i in 2..=n {\n        dp[i] = (dp[i - 1] + dp[i - 2]) % 1000000007;\n    }\n\n    println!(\"{}\", dp[n]);\n}\n\"\"\"}]"}
{"title":"C. Trails and Glades","description":"Vasya went for a walk in the park. The park has n glades, numbered from 1 to n. There are m trails between the glades. The trails are numbered from 1 to m, where the i-th trail connects glades xi and yi. The numbers of the connected glades may be the same (xi=yi), which means that a trail connects a glade to itself. Also, two glades may have several non-intersecting trails between them.Vasya is on glade 1, he wants to walk on all trails of the park exactly once, so that he can eventually return to glade 1. Unfortunately, Vasya does not know whether this walk is possible or not. Help Vasya, determine whether the walk is possible or not. If such walk is impossible, find the minimum number of trails the authorities need to add to the park in order to make the described walk possible.Vasya can shift from one trail to another one only on glades. He can move on the trails in both directions. If Vasya started going on the trail that connects glades a and b, from glade a, then he must finish this trail on glade b.","input_from":"standard input","output_to":"standard output","time_limit":"4 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (1\u2264n\u226410^6;\u00a00\u2264m\u226410^6) \u2014 the number of glades in the park and the number of trails in the park, respectively. Next m lines specify the trails. The i-th line specifies the i-th trail as two space-separated numbers, xi, yi (1\u2264xi,yi\u2264n) \u2014 the numbers of the glades connected by this trail.\n","output_spec":"Print the single integer \u2014 the answer to the problem. If Vasya's walk is possible without adding extra trails, print 0, otherwise print the minimum number of trails the authorities need to add to the park in order to make Vasya's walk possible. \n","notes":"In the first test case the described walk is possible without building extra trails. For example, let's first go on the first trail, then on the second one, and finally on the third one.\nIn the second test case the described walk is impossible without adding extra trails. To make the walk possible, it is enough to add one trail, for example, between glades number one and two.\n","sample_inputs":["3 3\n1 2\n2 3\n3 1\n","2 5\n1 1\n1 2\n1 2\n2 2\n1 2\n"],"sample_outputs":["0\n","1\n"],"id":"209-C","difficulty":2400,"tags":["constructive+algorithms","dsu","graphs","greedy"],"src_uid":"55591193f2dae9e04f0b9890aaa02575","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n + 1);\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        cin >> x >> y;\n        g[x].push_back(y);\n        g[y].push_back(x);\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        if (g[i].size() % 2 == 1) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = reader.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        Map<Integer, List<Integer>> graph = new HashMap<>();\n        for (int i = 0; i < m; i++) {\n            input = reader.readLine().split(\" \");\n            int a = Integer.parseInt(input[0]);\n            int b = Integer.parseInt(input[1]);\n            graph.putIfAbsent(a, new ArrayList<>());\n            graph.putIfAbsent(b, new ArrayList<>());\n            graph.get(a).add(b);\n            graph.get(b).add(a);\n        }\n        int[] visited = new int[n + 1];\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (visited[i] == 0) {\n                count++;\n                dfs(i, graph, visited);\n            }\n        }\n        System.out.println(n - count);\n    }\n\n    private static void dfs(int i, Map<Integer, List<Integer>> graph, int[] visited) {\n        visited[i] = 1;\n        for (int j : graph.get(i)) {\n            if (visited[j] == 0) {\n                dfs(j, graph, visited);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ng = [[] for _ in range(n + 1)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    g[x].append(y)\n    g[y].append(x)\n\n\ndef dfs(v, p):\n    for u in g[v]:\n        if u != p:\n            dfs(u, v)\n\n\ndfs(1, 0)\n\nans = 0\nfor i in range(1, n + 1):\n    if len(g[i]) % 2 == 1:\n        ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, m;\nint a[100000000], b[100000000];\nint main() {\n    scanf(\" %d%d \", &n, &m);\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d%d \", &a[i], &b[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (a[i] == b[i]) {\n            ans++;\n        }\n    }\n    if (ans == m) {\n        printf(\" 0 \");\n    } else {\n        printf(\" %d \", m - ans);\n    }\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n, m;\n        string[] input;\n        int[] indegree;\n        int[] outdegree;\n        int[] ans;\n        int i, j, k;\n\n        \/\/ \u8bfb\u5165\u6570\u636e\n        n = int.Parse(Console.ReadLine());\n        m = int.Parse(Console.ReadLine());\n        indegree = new int[n + 1];\n        outdegree = new int[n + 1];\n        ans = new int[n + 1];\n        for (i = 0; i < m; i++)\n        {\n            input = Console.ReadLine().Split(' ');\n            int x = int.Parse(input[0]);\n            int y = int.Parse(input[1]);\n            indegree[y]++;\n            outdegree[x]++;\n        }\n\n        \/\/ \u8ba1\u7b97\u5165\u5ea6\u4e3a 0 \u7684\u70b9\u7684\u4e2a\u6570\n        int count = 0;\n        for (i = 1; i <= n; i++)\n        {\n            if (indegree[i] == 0)\n            {\n                count++;\n            }\n        }\n\n        \/\/ \u8ba1\u7b97\u51fa\u5ea6\u4e3a 0 \u7684\u70b9\u7684\u4e2a\u6570\n        int count2 = 0;\n        for (i = 1; i <= n; i++)\n        {\n            if (outdegree[i] == 0)\n            {\n                count2++;\n            }\n        }\n\n        \/\/ \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5b8c\u6210 Vasya \u7684\u8d70\u8def\u8ba1\u5212\n        if (count == 1 && count2 == 1)\n        {\n            Console.WriteLine(\"0\");\n        }\n        else\n        {\n            Console.WriteLine(Math.Max(count, count2));\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\ng = {}\n\nm.times do\n  x, y = gets.split.map(&:to_i)\n  g[x] ||= []\n  g[x] << y\n  g[y] ||= []\n  g[y] << x\nend\n\nans = 0\n\n(1..n).each do |i|\n  if g[i].size % 2 == 1\n    ans += 1\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses\n  SysUtils;\nvar\n  n, m, i, j, k, a, b, c, d, e, f, g, h, t, s, p, q, r, x, y, z, w: integer;\n  a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20: array of integer;\nbegin\n  readln(n, m);\n  for i := 1 to m do\n  begin\n    readln(a, b);\n    a1[a] := b;\n    a2[b] := a;\n  end;\n  for i := 1 to n do\n  begin\n    a3[i] := 0;\n    a4[i] := 0;\n  end;\n  for i := 1 to n do\n  begin\n    for j := 1 to n do\n    begin\n      if a1[i] = j then\n      begin\n        a3[i] := a3[i] + 1;\n        a4[j] := a4[j] + 1;\n      end;\n    end;\n  end;\n  for i := 1 to n do\n  begin\n    if a3[i] = 0 then\n    begin\n      t := t + 1;\n    end;\n  end;\n  for i := 1 to n do\n  begin\n    if a4[i] = 0 then\n    begin\n      s := s + 1;\n    end;\n  end;\n  if t = 0 then\n  begin\n    writeln(0);\n  end\n  else\n  begin\n    writeln(t - 1);\n  end;\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    var a, b int\\n    var adj [][]int\\n    adj = make([][]int, n+1)\\n    for i := 0; i < m; i++ {\\n        fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n        adj[a] = append(adj[a], b)\\n        adj[b] = append(adj[b], a)\\n    }\\n    var vis []bool\\n    vis = make([]bool, n+1)\\n    vis[1] = true\\n    var q []int\\n    q = append(q, 1)\\n    var ans int\\n    for len(q) > 0 {\\n        u := q[0]\\n        q = q[1:]\\n        for _, v := range adj[u] {\\n            if !vis[v] {\\n                vis[v] = true\\n                q = append(q, v)\\n            }\\n        }\\n        if len(q) == 0 {\\n            ans++\\n            q = append(q, 1)\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst n = parseInt(rl.question());\nconst m = parseInt(rl.question());\n\nconst graph = new Map();\n\nfor (let i = 0; i < m; i++) {\n  const [a, b] = rl.question().split(' ').map(Number);\n  graph.set(a, graph.get(a) || []);\n  graph.set(b, graph.get(b) || []);\n  graph.get(a).push(b);\n  graph.get(b).push(a);\n}\n\nconst visited = new Set();\nconst queue = [1];\n\nwhile (queue.length) {\n  const current = queue.shift();\n  visited.add(current);\n\n  for (const next of graph.get(current)) {\n    if (!visited.has(next)) {\n      queue.push(next);\n    }\n  }\n}\n\nconsole.log(n - visited.size);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n + 1) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a].add(b)\n        graph[b].add(a)\n    }\n    val visited = BooleanArray(n + 1)\n    val queue = LinkedList<Int>()\n    queue.add(1)\n    visited[1] = true\n    var ans = 0\n    while (queue.isNotEmpty()) {\n        val cur = queue.poll()\n        for (next in graph[cur]) {\n            if (!visited[next]) {\n                queue.add(next)\n                visited[next] = true\n            }\n        }\n        if (queue.isEmpty()) {\n            ans++\n            queue.add(1)\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a, $b = explode(' ', trim(fgets(STDIN)));\n    $graph[$a][] = $b;\n    $graph[$b][] = $a;\n}\n$visited = [];\n$queue = [$n];\n$count = 0;\nwhile (!empty($queue)) {\n    $cur = array_shift($queue);\n    if (in_array($cur, $visited)) {\n        continue;\n    }\n    $visited[] = $cur;\n    $count++;\n    foreach ($graph[$cur] as $next) {\n        if (!in_array($next, $visited)) {\n            $queue[] = $next;\n        }\n    }\n}\nif (count($visited) == $n) {\n    echo 0;\n} else {\n    echo $n - count($visited);\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n + 1];\n    int b[n + 1];\n    int c[n + 1];\n    int d[n + 1];\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        a[x]++;\n        b[y]++;\n        c[x] = y;\n        d[y] = x;\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        if (a[i] == 0) {\n            ans++;\n        }\n        if (b[i] == 0) {\n            ans++;\n        }\n    }\n    if (ans == 0) {\n        printf(\" 0 \");\n    } else {\n        printf(\" %d \", ans - 1);\n    }\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    my @b = split(\/ \/, $line);\n    $a[$b[0]]++;\n    $a[$b[1]]++;\n}\n\nmy $ans = 0;\nfor (my $i = 1; $i <= $n; $i++) {\n    if ($a[$i] % 2 == 1) {\n        $ans++;\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        graph.entry(a).or_insert(Vec::new()).push(b);\n        graph.entry(b).or_insert(Vec::new()).push(a);\n    }\n\n    let mut visited = vec![false; n + 1];\n    let mut ans = 0;\n    for i in 1..=n {\n        if !visited[i] {\n            ans += 1;\n            visited[i] = true;\n            let mut queue = vec![i];\n            while let Some(v) = queue.pop() {\n                for &w in &graph[&v] {\n                    if !visited[w] {\n                        visited[w] = true;\n                        queue.push(w);\n                    }\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"A. Game","description":"Furik and Rubik love playing computer games. Furik has recently found a new game that greatly interested Rubik. The game consists of n parts and to complete each part a player may probably need to complete some other ones. We know that the game can be fully completed, that is, its parts do not form cyclic dependencies. Rubik has 3 computers, on which he can play this game. All computers are located in different houses. Besides, it has turned out that each part of the game can be completed only on one of these computers. Let's number the computers with integers from 1 to 3. Rubik can perform the following actions:   Complete some part of the game on some computer. Rubik spends exactly 1 hour on completing any part on any computer.  Move from the 1-st computer to the 2-nd one. Rubik spends exactly 1 hour on that.  Move from the 1-st computer to the 3-rd one. Rubik spends exactly 2 hours on that.  Move from the 2-nd computer to the 1-st one. Rubik spends exactly 2 hours on that.  Move from the 2-nd computer to the 3-rd one. Rubik spends exactly 1 hour on that.  Move from the 3-rd computer to the 1-st one. Rubik spends exactly 1 hour on that.  Move from the 3-rd computer to the 2-nd one. Rubik spends exactly 2 hours on that. Help Rubik to find the minimum number of hours he will need to complete all parts of the game. Initially Rubik can be located at the computer he considers necessary. ","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains integer n (1\u2264n\u2264200) \u2014 the number of game parts. The next line contains n integers, the i-th integer \u2014 ci (1\u2264ci\u22643) represents the number of the computer, on which you can complete the game part number i. \nNext n lines contain descriptions of game parts. The i-th line first contains integer ki (0\u2264ki\u2264n-1), then ki distinct integers ai,j (1\u2264ai,j\u2264n;\u00a0ai,j\u2260i) \u2014 the numbers of parts to complete before part i.\nNumbers on all lines are separated by single spaces. You can assume that the parts of the game are numbered from 1 to n in some way. It is guaranteed that there are no cyclic dependencies between the parts of the game.\n","output_spec":"On a single line print the answer to the problem.\n","notes":"Note to the second sample: before the beginning of the game the best strategy is to stand by the third computer. First we complete part 5. Then we go to the 1-st computer and complete parts 3 and 4. Then we go to the 2-nd computer and complete parts 1 and 2. In total we get 1+1+2+1+2, which equals 7 hours.\n","sample_inputs":["1\n1\n0\n","5\n2 2 1 1 3\n1 5\n2 5 1\n2 5 4\n1 5\n0\n"],"sample_outputs":["1\n","7\n"],"id":"213-A","difficulty":1700,"tags":["dfs+and+similar","greedy"],"src_uid":"be42e213ff43e303e475d77a9560367f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> c(n);\n    for (int i = 0; i < n; i++) {\n        cin >> c[i];\n    }\n    vector<vector<int>> a(n);\n    for (int i = 0; i < n; i++) {\n        int k;\n        cin >> k;\n        for (int j = 0; j < k; j++) {\n            int x;\n            cin >> x;\n            a[i].push_back(x);\n        }\n    }\n    vector<int> d(n, 1e9);\n    d[0] = 0;\n    vector<int> p(n, -1);\n    vector<bool> used(n, false);\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < a[i].size(); j++) {\n            if (!used[a[i][j]]) {\n                used[a[i][j]] = true;\n                d[a[i][j]] = min(d[a[i][j]], d[i] + 1);\n                p[a[i][j]] = i;\n            }\n        }\n    }\n    int ans = 0;\n    int cur = 0;\n    for (int i = 0; i < n; i++) {\n        if (d[i] < d[cur]) {\n            cur = i;\n        }\n    }\n    while (cur != -1) {\n        ans += d[cur];\n        cur = p[cur];\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nc = list(map(int, input().split()))\n\nd = [0] * n\nfor i in range(n):\n    k = int(input())\n    for j in map(int, input().split()):\n        d[j - 1] += 1\n\nans = 0\nfor i in range(n):\n    if c[i] == 1:\n        ans += d[i]\n\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] c = Array.ConvertAll(Console.ReadLine().Split(' '), int.Parse);\n        List<int>[] g = new List<int>[n];\n        for (int i = 0; i < n; i++)\n        {\n            g[i] = new List<int>();\n        }\n        for (int i = 0; i < n; i++)\n        {\n            int k = int.Parse(Console.ReadLine());\n            for (int j = 0; j < k; j++)\n            {\n                int a = int.Parse(Console.ReadLine());\n                g[a - 1].Add(i);\n            }\n        }\n        int[] d = new int[n];\n        d[0] = 0;\n        Queue<int> q = new Queue<int>();\n        q.Enqueue(0);\n        while (q.Count > 0)\n        {\n            int u = q.Dequeue();\n            for (int v : g[u])\n            {\n                if (d[v] == 0)\n                {\n                    d[v] = d[u] + 1;\n                    q.Enqueue(v);\n                }\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            ans = Math.Max(ans, d[i] + c[i] - 1);\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nc = gets.split.map(&:to_i)\nd = []\n(0..n-1).each do |i|\n  k = gets.to_i\n  d[i] = k\nend\n\nans = 0\n(0..n-1).each do |i|\n  if c[i] == 1\n    ans += d[i]\n  else\n    ans += d[i] + 2\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  n, i, j, k, t, m, c, a: integer;\n  p: array[1..200] of integer;\n  d: array[1..200, 1..3] of integer;\n  f: array[1..200] of integer;\n\nbegin\n  readln(n);\n  for i := 1 to n do\n  begin\n    readln(c);\n    p[i] := c;\n  end;\n  for i := 1 to n do\n  begin\n    readln(k);\n    for j := 1 to k do\n    begin\n      readln(a);\n      d[i, a] := 1;\n    end;\n  end;\n  t := 0;\n  for i := 1 to n do\n  begin\n    m := 0;\n    for j := 1 to 3 do\n    begin\n      if d[i, j] = 0 then\n      begin\n        m := m + 1;\n        f[i] := f[i] + 1;\n      end;\n    end;\n    if m = 3 then\n    begin\n      t := t + 1;\n      f[i] := f[i] + 1;\n    end;\n  end;\n  for i := 1 to n do\n  begin\n    for j := 1 to 3 do\n    begin\n      if d[i, j] = 1 then\n      begin\n        f[i] := f[i] + f[p[i]];\n      end;\n    end;\n  end;\n  writeln(t + max(f));\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"sort\"\n)\n\nfunc main() {\n\tn := readInt()\n\tc := readInts()\n\tp := make([][]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tp[i] = readInts()\n\t}\n\tsort.Ints(c)\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 0; j < len(p[i]); j++ {\n\t\t\tp[i][j] = c[p[i][j]-1]\n\t\t}\n\t}\n\tdp := make([]int, n+1)\n\tfor i := 1; i <= n; i++ {\n\t\tdp[i] = dp[i-1] + 1\n\t\tfor j := 0; j < len(p[i-1]); j++ {\n\t\t\tif p[i-1][j] == i {\n\t\t\t\tdp[i] = min(dp[i], dp[p[i-1][j]-1]+1)\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(dp[n])\n}\n\nfunc readInt() int {\n\tvar n int\n\tfmt.Fscanf(os.Stdin, \"%d\\n\", &n)\n\treturn n\n}\n\nfunc readInts() []int {\n\tvar a []int\n\tfmt.Fscanf(os.Stdin, \"%d \", &a)\n\treturn a\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(readline());\nconst c = readline().split(' ').map(x => parseInt(x));\nconst t = [];\nfor (let i = 0; i < n; i++) {\n    const k = parseInt(readline());\n    const a = readline().split(' ').map(x => parseInt(x));\n    t.push([k, a]);\n}\nconst dp = new Array(n + 1).fill(Infinity);\ndp[0] = 0;\nfor (let i = 1; i <= n; i++) {\n    for (let j = 0; j < t[i - 1][0]; j++) {\n        dp[i] = Math.min(dp[i], dp[t[i - 1][1][j]] + 1);\n    }\n}\nconsole.log(dp[n]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val c = readLine().split(\" \").map { it.toInt() - 1 }.toIntArray()\n    val dp = Array(n) { IntArray(4) { 0 } }\n    val adj = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until n) {\n        val k = readLine().toInt()\n        val a = readLine().split(\" \").map { it.toInt() - 1 }.toIntArray()\n        for (j in 0 until k) {\n            adj[a[j]].add(i)\n        }\n    }\n    dp[0][c[0]] = 1\n    for (i in 1 until n) {\n        for (j in 0 until 4) {\n            for (k in adj[i]) {\n                dp[i][j] = maxOf(dp[i][j], dp[k][j] + 1)\n            }\n        }\n    }\n    val ans = Int.MAX_VALUE\n    for (i in 0 until 4) {\n        ans = minOf(ans, dp[n - 1][i])\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\nn = int(input())\nc = list(map(int, input().split()))\n\nd = [0] * n\nfor i in range(n):\n    k = int(input())\n    for j in map(int, input().split()):\n        d[j - 1] += 1\n\nans = 0\nfor i in range(n):\n    if c[i] == 1:\n        ans += d[i]\n\nprint(ans)\n\"\"\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @c = <STDIN>;\nmy @a = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my $k = <STDIN>;\n    my @b = <STDIN>;\n    for (my $j = 0; $j < $k; $j++) {\n        push @a, $b[$j];\n    }\n}\n\nmy $ans = 0;\nmy $cur = 0;\nmy @d = ();\nfor (my $i = 0; $i < $n; $i++) {\n    if ($c[$i] == 1) {\n        $cur = $i;\n    }\n    if ($c[$i] == 2) {\n        $ans += 1;\n        $cur = $i;\n    }\n    if ($c[$i] == 3) {\n        $ans += 2;\n        $cur = $i;\n    }\n    if ($i != $n - 1) {\n        if ($a[$i] == $cur) {\n            $ans += 1;\n        }\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let n = read_line().parse::<usize>().unwrap();\n    let c = read_line().split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    let mut dp = vec![vec![0; 4]; n + 1];\n    for i in 0..n {\n        let k = read_line().split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n        for j in 0..k.len() {\n            dp[i + 1][c[i]] = std::cmp::max(dp[i + 1][c[i]], dp[k[j]][c[i]] + 1);\n        }\n    }\n    let mut ans = 0;\n    for i in 0..4 {\n        ans = std::cmp::max(ans, dp[n][i]);\n    }\n    println!(\"{}\", ans);\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"B. Numbers","description":"Furik loves writing all sorts of problems, especially such that he can't solve himself. You've got one of his problems, the one Furik gave to Rubik. And Rubik asks you to solve it.There is integer n and array a, consisting of ten integers, indexed by numbers from 0 to 9. Your task is to count the number of positive integers with the following properties:  the number's length does not exceed n;  the number doesn't have leading zeroes;  digit i (0\u2264i\u22649) occurs in the number at least a[i] times. ","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integer n (1\u2264n\u2264100). The next line contains 10 integers a[0], a[1], ..., a[9] (0\u2264a[i]\u2264100) \u2014 elements of array a. The numbers are separated by spaces.\n","output_spec":"On a single line print the remainder of dividing the answer to the problem by 1000000007 (10^9+7).\n","notes":"In the first sample number 9 meets the requirements.\nIn the second sample number 10 meets the requirements.\nIn the third sample numbers 10, 110, 210, 120, 103 meet the requirements. There are other suitable numbers, 36 in total.\n","sample_inputs":["1\n0 0 0 0 0 0 0 0 0 1\n","2\n1 1 0 0 0 0 0 0 0 0\n","3\n1 1 0 0 0 0 0 0 0 0\n"],"sample_outputs":["1\n","1\n","36\n"],"id":"213-B","difficulty":1900,"tags":["combinatorics","dp"],"src_uid":"c1b5169a5c3b1bd4a2f1df1069ee7755","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(10);\n    for (int i = 0; i < 10; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i <= n; i++) {\n        for (int j = 0; j <= n - i; j++) {\n            int k = n - i - j;\n            int tmp = 1;\n            for (int l = 0; l < 10; l++) {\n                tmp *= (a[l] + k);\n            }\n            ans += tmp % 1000000007;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[10];\n        for (int i = 0; i < 10; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= n - i; j++) {\n                int k = n - i - j;\n                int m = 1;\n                for (int l = 0; l < 10; l++) {\n                    m *= (a[l] + k);\n                }\n                ans += m % 1000000007;\n            }\n        }\n        System.out.println(ans % 1000000007);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\ndef f(n, a):\n    if n == 0:\n        return 1\n    if n < 0:\n        return 0\n    ans = 0\n    for i in range(10):\n        if a[i] > 0:\n            ans += f(n - i, a)\n    return ans % 1000000007\n\nprint(f(n, a))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, a[10], i, j, k, ans = 1;\n    scanf(\" %d \", &n);\n    for (i = 0; i < 10; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < 10; i++) {\n        for (j = 0; j < a[i]; j++) {\n            for (k = 0; k < n - i; k++) {\n                ans = (ans * 10) % 1000000007;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        for (int i = 0; i < 10; i++)\n        {\n            for (int j = 0; j <= n; j++)\n            {\n                if (j - i >= 0)\n                {\n                    dp[j] = (dp[j] + dp[j - i]) % 1000000007;\n                }\n            }\n        }\n        Console.WriteLine(dp[n]);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\ndef dfs(n, a, i, j, dp)\n  if i == 10\n    return 1\n  end\n  if j == n\n    return 0\n  end\n  if dp[i][j] != -1\n    return dp[i][j]\n  end\n  dp[i][j] = dfs(n, a, i + 1, j, dp) + dfs(n, a, i, j + 1, dp)\n  if a[i] > 0\n    dp[i][j] -= dfs(n, a, i + 1, j + 1, dp)\n  end\n  dp[i][j] %= 10**9 + 7\n  return dp[i][j]\nend\n\np dfs(n, a, 0, 0, Array.new(10, Array.new(n + 1, -1)))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Furik;\nuses SysUtils;\nvar\n  n, i, j, k, m, a: Integer;\n  f: Array[0..100] of Integer;\nbegin\n  Readln(n);\n  for i := 0 to 9 do\n    Read(a[i]);\n  f[0] := 1;\n  for i := 1 to n do\n    for j := 0 to 9 do\n      for k := 0 to a[j] do\n        f[i] := (f[i] + f[i - j]) mod 1000000007;\n  Writeln(f[n]);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := 0\\n    var a [10]int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    for i := 0; i < 10; i++ {\\n        fmt.Scanf(\\\"%d \\\", &a[i])\\n    }\\n    ans := 1\\n    for i := 0; i < 10; i++ {\\n        ans *= pow(10, a[i])\\n    }\\n    fmt.Println(ans % 1000000007)\\n}\\n\\nfunc pow(a, b int) int {\\n    if b == 0 {\\n        return 1\\n    }\\n    return a * pow(a, b-1)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst a = input[1].split(' ').map(x => parseInt(x));\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 0; i < 10; i++) {\n  for (let j = 0; j <= n; j++) {\n    if (j >= a[i]) {\n      dp[j] = (dp[j] + dp[j - a[i]]) % 1000000007;\n    }\n  }\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(10) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..9) {\n            for (k in 0..j) {\n                dp[i][j] += dp[i - 1][k] * a[j - k]\n                dp[i][j] %= 1000000007\n            }\n        }\n    }\n    println(dp[n][9])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$ans = 1;\nfor ($i = 0; $i < 10; $i++) {\n    $ans *= pow(10, $a[$i]);\n}\necho $ans % 1000000007;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[10];\n    for (int i = 0; i < 10; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < 10; i++) {\n        ans = (ans + a[i] * (n - i) * (n - i - 1) \/ 2) % 1000000007;\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $ans = 1;\nfor (my $i = 0; $i < 10; $i++) {\n    $ans *= (10 ** $a[$i]) % 1000000007;\n}\n\nprint $ans % 1000000007 . \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let mut n = String::new();\n    std::io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a: Vec<usize> = Vec::new();\n    std::io::stdin().read_line(&mut a).unwrap();\n    for i in 0..10 {\n        a.push(a.pop().unwrap().parse().unwrap());\n    }\n\n    let mut dp = HashMap::new();\n    dp.insert((0, 0), 1);\n\n    for i in 0..n {\n        let mut new_dp = HashMap::new();\n        for (k, v) in dp.iter() {\n            for j in 0..10 {\n                if j <= k.0 {\n                    new_dp.insert((k.0 + j, k.1 + a[j]), (v * a[j]) % 1000000007);\n                }\n            }\n        }\n        dp = new_dp;\n    }\n\n    println!(\"{}\", dp.get(&(n, 0)).unwrap());\n}\n\"\"\"}]"}
{"title":"A. System of Equations","description":"Furik loves math lessons very much, so he doesn't attend them, unlike Rubik. But now Furik wants to get a good mark for math. For that Ms. Ivanova, his math teacher, gave him a new task. Furik solved the task immediately. Can you?You are given a system of equations:  You should count, how many there are pairs of integers (a,b) (0\u2264a,b) which satisfy the system.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"A single line contains two integers n,m (1\u2264n,m\u22641000) \u2014 the parameters of the system. The numbers on the line are separated by a space.\n","output_spec":"On a single line print the answer to the problem.\n","notes":"In the first sample the suitable pair is integers (3,0). In the second sample the suitable pair is integers (3,5). In the third sample there is no suitable pair.\n","sample_inputs":["9 3\n","14 28\n","4 20\n"],"sample_outputs":["1\n","1\n","0\n"],"id":"214-A","difficulty":800,"tags":["brute+force"],"src_uid":"03caf4ddf07c1783e42e9f9085cc6efd","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n,m;cin>>n>>m;cout<<(n-m)\/2<<endl;\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Furik {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int count = 0;\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i + j == n && i * j == m) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m = map(int,input().split())\nprint(min(n,m))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,m;scanf(\" %d%d \",&n,&m);if(n%m==0)printf(\" 1 \");else printf(\" 0 \");\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        int n = int.Parse(input[0]);\n        int m = int.Parse(input[1]);\n        int count = 0;\n        for (int i = 0; i <= n; i++)\n        {\n            for (int j = 0; j <= m; j++)\n            {\n                if (i + j == n && i * j == m)\n                {\n                    count++;\n                }\n            }\n        }\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m=map(int,input().split())\nprint(min(n,m)\/\/2)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Furik;\nuses SysUtils;\nvar\n  n, m, a, b, i, j: integer;\nbegin\n  readln(n, m);\n  a := 0;\n  b := 0;\n  for i := 1 to n do\n    for j := 1 to m do\n      if (i + j) mod 2 = 0 then\n        a := a + 1;\n  for i := 1 to n do\n    for j := 1 to m do\n      if (i + j) mod 2 = 1 then\n        b := b + 1;\n  writeln(a);\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    fmt.Println(m \/ n)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, m] = line.split(' ').map(Number);\n  console.log(Math.floor(n \/ m));\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val ans = if (n % m == 0) n \/ m else n \/ m + 1\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n, $m = explode(' ', trim(fgets(STDIN)));\\necho (int)($n \/ $m);\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [n, m] = readln.split.map!(to!int).array;\n    auto ans = 0;\n    for (auto i = 0; i <= n; i++) {\n        for (auto j = 0; j <= m; j++) {\n            if (i * j % 2 == 0) {\n                ans++;\n            }\n        }\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\n\nchomp(my $input = <STDIN>);\n\n($n, $m) = split(' ', $input);\n\nprint $n % $m == 0 ? 1 : 0;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = input_vec[0];\n    let m = input_vec[1];\n    let mut count = 0;\n    for i in 0..n {\n        for j in 0..m {\n            if i + j == n && i * j == m {\n                count += 1;\n            }\n        }\n    }\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"B. Hometask","description":"Furik loves math lessons very much, so he doesn't attend them, unlike Rubik. But now Furik wants to get a good mark for math. For that Ms. Ivanova, his math teacher, gave him a new task. Furik solved the task immediately. Can you?You are given a set of digits, your task is to find the maximum integer that you can make from these digits. The made number must be divisible by 2, 3, 5 without a residue. It is permitted to use not all digits from the set, it is forbidden to use leading zeroes.Each digit is allowed to occur in the number the same number of times it occurs in the set.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"A single line contains a single integer n (1\u2264n\u2264100000) \u2014 the number of digits in the set. The second line contains n digits, the digits are separated by a single space. \n","output_spec":"On a single line print the answer to the problem. If such number does not exist, then you should print -1.\n","notes":"In the first sample there is only one number you can make \u2014 0. In the second sample the sought number is 5554443330. In the third sample it is impossible to make the required number.\n","sample_inputs":["1\n0\n","11\n3 4 5 4 5 3 5 3 4 4 0\n","8\n3 2 5 1 5 2 2 3\n"],"sample_outputs":["0\n","5554443330\n","-1\n"],"id":"214-B","difficulty":1600,"tags":["brute+force","constructive+algorithms","greedy","math"],"src_uid":"b263917e47e1c84340bcb1c77999fd7e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 0:\n        ans += a[i]\n    if a[i] % 3 == 0:\n        ans += a[i]\n    if a[i] % 5 == 0:\n        ans += a[i]\nprint(ans)\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] % 2 == 0) {\n                ans = ans * 10 + a[i];\n            } else if (a[i] % 3 == 0) {\n                ans = ans * 10 + a[i];\n            } else if (a[i] % 5 == 0) {\n                ans = ans * 10 + a[i];\n            }\n        }\n        if (ans == 0) {\n            System.out.println(-1);\n        } else {\n            System.out.println(ans);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    if a[i] % 2 == 0 and a[i] % 3 == 0 and a[i] % 5 == 0:\n        ans = max(ans, a[i])\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\nb=[0]*10\nfor i in a:\n    b[i]+=1\nif b[0]==0:\n    print(-1)\nelse:\n    print(5**b[5]*3**b[3]*2**b[2]*b[0])\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string[] s = Console.ReadLine().Split(' ');\n        int[] a = new int[10];\n        for (int i = 0; i < n; i++)\n        {\n            a[int.Parse(s[i])]++;\n        }\n        int ans = 0;\n        for (int i = 9; i >= 0; i--)\n        {\n            if (a[i] > 0)\n            {\n                ans = ans * 10 + i;\n                a[i]--;\n            }\n        }\n        if (ans % 2 == 0 && ans % 3 == 0 && ans % 5 == 0)\n        {\n            Console.WriteLine(ans);\n        }\n        else\n        {\n            Console.WriteLine(-1);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split(' ').map(&:to_i)\n\ndef check(n)\n  if n % 2 == 0 && n % 3 == 0 && n % 5 == 0\n    return true\n  else\n    return false\n  end\nend\n\nans = -1\nfor i in 0..n-1\n  for j in 0..n-1\n    for k in 0..n-1\n      if i != j && j != k && i != k\n        if check(a[i] * 100 + a[j] * 10 + a[k])\n          ans = a[i] * 100 + a[j] * 10 + a[k]\n          break\n        end\n      end\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Furik;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, m, t, a: Integer;\n  b: array[0..100000] of Integer;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n    Read(b[i]);\n  m := 0;\n  for i := 0 to n - 1 do\n    if b[i] = 5 then\n      m := m + 1;\n  if m mod 3 = 0 then\n  begin\n    t := 0;\n    for i := 0 to n - 1 do\n      if b[i] = 5 then\n        t := t + 1;\n    for i := 0 to n - 1 do\n      if b[i] = 3 then\n        b[i] := 5;\n    for i := 0 to n - 1 do\n      if b[i] = 2 then\n        b[i] := 3;\n    for i := 0 to n - 1 do\n      if b[i] = 0 then\n        b[i] := 2;\n    for i := 0 to n - 1 do\n      if b[i] = 4 then\n        b[i] := 0;\n    for i := 0 to n - 1 do\n      if b[i] = 1 then\n        b[i] := 4;\n    for i := 0 to n - 1 do\n      Write(b[i], ' ');\n    Writeln;\n  end\n  else\n    Writeln(-1);\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"n = parseInt(process.stdin.readline().trim());\\narr = process.stdin.readline().trim().split(' ');\\narr.sort();\\narr.reverse();\\nres = '';\\nfor (i = 0; i < n; i++) {\\n    if (arr[i] == '5') {\\n        res += '5';\\n    } else if (arr[i] == '3') {\\n        res += '3';\\n    } else if (arr[i] == '2') {\\n        res += '2';\\n    } else {\\n        res += '0';\\n    }\\n}\\nconsole.log(res);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val s = readLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    for (i in 0 until n) {\n        if (s[i] % 2 == 0) {\n            ans = ans * 10 + s[i]\n        } else if (s[i] % 3 == 0) {\n            ans = ans * 10 + s[i]\n        } else if (s[i] % 5 == 0) {\n            ans = ans * 10 + s[i]\n        }\n    }\n    if (ans == 0) {\n        println(-1)\n    } else {\n        println(ans)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$arr = array_unique($arr);\n$arr = array_filter($arr, function($el) {\n    return $el % 2 == 0 || $el % 3 == 0 || $el % 5 == 0;\n});\nif (count($arr) == 0) {\n    echo -1;\n} else {\n    $max = 0;\n    foreach ($arr as $el) {\n        $max = max($max, $el);\n    }\n    echo $max;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto a = std.array.map!(to!int)(std.string.split(std.string.readln(), \" \"));\n    auto b = a.sort(comp!(a[0]));\n    int i = 0;\n    while (i < n) {\n        if (b[i] % 2 == 0 && b[i] % 3 == 0 && b[i] % 5 == 0) {\n            printf(\" %d \", b[i]);\n            break;\n        }\n        i++;\n    }\n    if (i == n)\n        printf(\" -1 \");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    my $d = $a[$i];\n    if ($d == 0) {\n        next;\n    }\n    if ($d % 2 == 0) {\n        $ans = $ans * 10 + $d;\n    } elsif ($d % 3 == 0) {\n        $ans = $ans * 10 + $d;\n    } elsif ($d % 5 == 0) {\n        $ans = $ans * 10 + $d;\n    }\n}\n\nif ($ans == 0) {\n    print -1;\n} else {\n    print $ans;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = Vec::new();\n    io::stdin().read_line(&mut a).unwrap();\n    a = a.trim().split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut ans = 0;\n    for i in 0..n {\n        if a[i] % 2 == 0 {\n            ans += a[i];\n        }\n    }\n\n    for i in 0..n {\n        if a[i] % 3 == 0 {\n            ans += a[i];\n        }\n    }\n\n    for i in 0..n {\n        if a[i] % 5 == 0 {\n            ans += a[i];\n        }\n    }\n\n    if ans % 2 == 0 && ans % 3 == 0 && ans % 5 == 0 {\n        println!(\"{}\", ans);\n    } else {\n        println!(\"-1\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Bicycle Chain","description":"Vasya's bicycle chain drive consists of two parts: n stars are attached to the pedal axle, m stars are attached to the rear wheel axle. The chain helps to rotate the rear wheel by transmitting the pedal rotation.We know that the i-th star on the pedal axle has ai (0<a1<a2<...<an) teeth, and the j-th star on the rear wheel axle has bj (0<b1<b2<...<bm) teeth. Any pair (i,j) (1\u2264i\u2264n;\u00a01\u2264j\u2264m) is called a gear and sets the indexes of stars to which the chain is currently attached. Gear (i,j) has a gear ratio, equal to the value .Since Vasya likes integers, he wants to find such gears (i,j), that their ratios are integers. On the other hand, Vasya likes fast driving, so among all \"integer\" gears (i,j) he wants to choose a gear with the maximum ratio. Help him to find the number of such gears.In the problem, fraction  denotes division in real numbers, that is, no rounding is performed.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains integer n (1\u2264n\u226450) \u2014 the number of stars on the bicycle's pedal axle. The second line contains n integers a1,a2,...,an (1\u2264ai\u226410^4) in the order of strict increasing.\nThe third input line contains integer m (1\u2264m\u226450) \u2014 the number of stars on the rear wheel axle. The fourth line contains m integers b1,b2,...,bm (1\u2264bi\u226410^4) in the order of strict increasing.\nIt is guaranteed that there exists at least one gear (i,j), that its gear ratio is an integer. The numbers on the lines are separated by spaces.\n","output_spec":"Print the number of \"integer\" gears with the maximum ratio among all \"integer\" gears.\n","notes":"In the first sample the maximum \"integer\" gear ratio equals 3. There are two gears that have such gear ratio. For one of them a1=4,b1=12, and for the other a2=5,b3=15.\n","sample_inputs":["2\n4 5\n3\n12 13 15\n","4\n1 2 3 4\n5\n10 11 12 13 14\n"],"sample_outputs":["2\n","1\n"],"id":"215-A","difficulty":900,"tags":["brute+force","implementation"],"src_uid":"102667eaa3aee012fef70f4192464674","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, m;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    cin >> m;\n    int b[m];\n    for (int i = 0; i < m; i++) {\n        cin >> b[i];\n    }\n    int max = 0;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i] % b[j] == 0) {\n                int k = a[i] \/ b[j];\n                if (k > max) {\n                    max = k;\n                    count = 1;\n                } else if (k == max) {\n                    count++;\n                }\n            }\n        }\n    }\n    cout << count << endl;\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nmax_ratio = 0\ncount = 0\nfor i in range(n):\n    for j in range(m):\n        if a[i] % b[j] == 0:\n            ratio = a[i] \/\/ b[j]\n            if ratio > max_ratio:\n                max_ratio = ratio\n                count = 1\n            elif ratio == max_ratio:\n                count += 1\n\nprint(count)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    scanf(\" %d \", &m);\n    int b[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int max = 0;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i] % b[j] == 0) {\n                int k = a[i] \/ b[j];\n                if (k > max) {\n                    max = k;\n                    count = 1;\n                } else if (k == max) {\n                    count++;\n                }\n            }\n        }\n    }\n    printf(\" %d \", count);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        var a = new List<int>();\n        string[] s = Console.ReadLine().Split(' ');\n        for (int i = 0; i < n; i++)\n        {\n            a.Add(int.Parse(s[i]));\n        }\n        int m = int.Parse(Console.ReadLine());\n        var b = new List<int>();\n        s = Console.ReadLine().Split(' ');\n        for (int i = 0; i < m; i++)\n        {\n            b.Add(int.Parse(s[i]));\n        }\n        int max = 0;\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < m; j++)\n            {\n                if (a[i] % b[j] == 0)\n                {\n                    int k = a[i] \/ b[j];\n                    if (k > max)\n                    {\n                        max = k;\n                        count = 1;\n                    }\n                    else if (k == max)\n                    {\n                        count++;\n                    }\n                }\n            }\n        }\n        Console.WriteLine(count);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\nm = gets.to_i\nb = gets.split.map(&:to_i)\n\nmax = 0\ncount = 0\n\na.each_with_index do |ai, i|\n  b.each_with_index do |bi, j|\n    if ai \/ bi == max\n      count += 1\n    elsif ai \/ bi > max\n      max = ai \/ bi\n      count = 1\n    end\n  end\nend\n\nputs count\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram ChainDrive;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, k, max, max_i, max_j: Integer;\n  a, b: array of Integer;\n\nbegin\n  Readln(n);\n  for i := 1 to n do\n    Read(a[i]);\n  Readln(m);\n  for i := 1 to m do\n    Read(b[i]);\n  max := 0;\n  for i := 1 to n do\n    for j := 1 to m do\n      if (a[i] div b[j]) = trunc(a[i] div b[j]) then\n        if (a[i] div b[j]) > max then\n          begin\n            max := a[i] div b[j];\n            max_i := i;\n            max_j := j;\n          end;\n  Writeln(max);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scan(&n)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\tfmt.Scan(&m)\n\tb := make([]int, m)\n\tfor i := 0; i < m; i++ {\n\t\tfmt.Scan(&b[i])\n\t}\n\tsort.Ints(a)\n\tsort.Ints(b)\n\tmax := 0\n\tcount := 0\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 0; j < m; j++ {\n\t\t\tif a[i]%b[j] == 0 {\n\t\t\t\tif a[i]\/b[j] > max {\n\t\t\t\t\tmax = a[i] \/ b[j]\n\t\t\t\t\tcount = 1\n\t\t\t\t} else if a[i]\/b[j] == max {\n\t\t\t\t\tcount++\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(count)\n}\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n = int(input())\na = list(map(int, input().split()))\nm = int(input())\nb = list(map(int, input().split()))\n\nmax_ratio = 0\nmax_count = 0\n\nfor i in range(n):\n    for j in range(m):\n        if a[i] % b[j] == 0:\n            ratio = a[i] \/\/ b[j]\n            if ratio > max_ratio:\n                max_ratio = ratio\n                max_count = 1\n            elif ratio == max_ratio:\n                max_count += 1\n\nprint(max_count)\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    val m = readLine().toInt()\n    val b = readLine().split(\" \").map { it.toInt() }.sorted()\n\n    var max = 0\n    var ans = 0\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            val ratio = a[i].toDouble() \/ b[j].toDouble()\n            if (ratio == Math.floor(ratio)) {\n                val gcd = gcd(a[i], b[j])\n                val gcdRatio = a[i] \/ gcd.toDouble() \/ b[j] \/ gcd.toDouble()\n                if (gcdRatio > max) {\n                    max = gcdRatio\n                    ans = 1\n                } else if (gcdRatio == max) {\n                    ans++\n                }\n            }\n        }\n    }\n\n    println(ans)\n}\n\nfun gcd(a: Int, b: Int): Int {\n    if (b == 0) return a\n    return gcd(b, a % b)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$m = (int)trim(fgets(STDIN));\n$b = explode(' ', trim(fgets(STDIN)));\n\n$max = 0;\n$count = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $m; $j++) {\n        if ($a[$i] % $b[$j] == 0) {\n            $ratio = $a[$i] \/ $b[$j];\n            if ($ratio > $max) {\n                $max = $ratio;\n                $count = 1;\n            } else if ($ratio == $max) {\n                $count++;\n            }\n        }\n    }\n}\n\necho $count;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d \", &n);\n    auto a = to!(int[])(readln().split());\n    scanf(\" %d \", &m);\n    auto b = to!(int[])(readln().split());\n\n    int max = 0;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i] % b[j] == 0) {\n                int ratio = a[i] \/ b[j];\n                if (ratio > max) {\n                    max = ratio;\n                    count = 1;\n                } else if (ratio == max) {\n                    count++;\n                }\n            }\n        }\n    }\n    printf(\" %d \", count);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = split ' ', <STDIN>;\nmy $m = <STDIN>;\nmy @b = split ' ', <STDIN>;\n\nmy $max = 0;\nmy $cnt = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($a[$i] % $b[$j] == 0) {\n            my $r = $a[$i] \/ $b[$j];\n            if ($r > $max) {\n                $max = $r;\n                $cnt = 1;\n            } elsif ($r == $max) {\n                $cnt++;\n            }\n        }\n    }\n}\n\nprint $cnt;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let a = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    let m = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let b = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut max_ratio = 0;\n    let mut count = 0;\n    for i in 0..n {\n        for j in 0..m {\n            let ratio = a[i] as f64 \/ b[j] as f64;\n            if ratio.fract() == 0.0 {\n                count += 1;\n                if ratio > max_ratio {\n                    max_ratio = ratio;\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"A. Ice Skating","description":"Bajtek is learning to skate on ice. He's a beginner, so his only mode of transportation is pushing off from a snow drift to the north, east, south or west and sliding until he lands in another snow drift. He has noticed that in this way it's impossible to get from some snow drifts to some other by any sequence of moves. He now wants to heap up some additional snow drifts, so that he can get from any snow drift to any other one. He asked you to find the minimal number of snow drifts that need to be created.We assume that Bajtek can only heap up snow drifts at integer coordinates.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of input contains a single integer n (1\u2264n\u2264100) \u2014 the number of snow drifts. Each of the following n lines contains two integers xi and yi (1\u2264xi,yi\u22641000) \u2014 the coordinates of the i-th snow drift.\nNote that the north direction coin\u0441ides with the direction of Oy axis, so the east direction coin\u0441ides with the direction of the Ox axis. All snow drift's locations are distinct.\n","output_spec":"Output the minimal number of snow drifts that need to be created in order for Bajtek to be able to reach any snow drift from any other one.\n","notes":null,"sample_inputs":["2\n2 1\n1 2\n","2\n2 1\n4 1\n"],"sample_outputs":["1\n","0\n"],"id":"217-A","difficulty":1200,"tags":["brute+force","dfs+and+similar","dsu","graphs"],"src_uid":"cb4dbff31d967c3dab8fe0495eb871dc","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<pair<int, int>> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i].first >> a[i].second;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j) {\n                continue;\n            }\n\n            int dx = a[j].first - a[i].first;\n            int dy = a[j].second - a[i].second;\n\n            if (dx == 0 || dy == 0) {\n                continue;\n            }\n\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[][] points = new int[n][2];\n        for (int i = 0; i < n; i++) {\n            points[i][0] = scanner.nextInt();\n            points[i][1] = scanner.nextInt();\n        }\n\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (i != j && points[i][0] != points[j][0] && points[i][1] != points[j][1]) {\n                    ans++;\n                }\n            }\n        }\n\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\nx = []\ny = []\n\nfor i in range(n):\n    x.append(int(input()))\n    y.append(int(input()))\n\nx.sort()\ny.sort()\n\nprint(max(x[-1] - x[0], y[-1] - y[0]))\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int[]> points = new List<int[]>();\n        for (int i = 0; i < n; i++)\n        {\n            string[] line = Console.ReadLine().Split(' ');\n            points.Add(new int[] { int.Parse(line[0]), int.Parse(line[1]) });\n        }\n\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                if (points[i][0] != points[j][0] && points[i][1] != points[j][1])\n                {\n                    ans++;\n                }\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\na = []\n\nfor i in 1..n\n  x, y = gets.split.map(&:to_i)\n  a << [x, y]\nend\n\na.sort!\n\nans = 0\n\nfor i in 0..n-1\n  for j in i+1..n-1\n    if a[i][0] == a[j][0] || a[i][1] == a[j][1]\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Bajtek;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, x1, y1, x2, y2, x, y, k, l, m, p, q, r, s, t, u, v, w, x, y, z: integer;\n  a: array[0..1000, 0..1000] of boolean;\n  b: array[0..1000] of boolean;\n\nbegin\n  readln(n);\n  for i := 0 to n - 1 do\n  begin\n    readln(x1, y1);\n    for j := 0 to n - 1 do\n    begin\n      if (i <> j) and (x1 = x2) and (y1 = y2) then\n        b[j] := true;\n    end;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to n - 1 do\n    begin\n      if (i <> j) and (x1 <> x2) and (y1 <> y2) then\n      begin\n        x := x1 - x2;\n        y := y1 - y2;\n        if (x = 0) and (y = 0) then\n          continue;\n        if (x = 0) then\n        begin\n          for k := 0 to n - 1 do\n          begin\n            if (i <> k) and (y1 = y2) and (x1 = x2) then\n              b[k] := true;\n          end;\n        end;\n        if (y = 0) then\n        begin\n          for k := 0 to n - 1 do\n          begin\n            if (i <> k) and (x1 = x2) and (y1 = y2) then\n              b[k] := true;\n          end;\n        end;\n        if (x <> 0) and (y <> 0) then\n        begin\n          for k := 0 to n - 1 do\n          begin\n            if (i <> k) and (x1 = x2) and (y1 = y2) then\n              b[k] := true;\n          end;\n        end;\n      end;\n    end;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    if not b[i] then\n      inc(k);\n  end;\n  writeln(k);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var x, y int\\n    var m map[int]map[int]bool\\n    m = make(map[int]map[int]bool)\\n    for i := 0; i < n; i++ {\\n        fmt.Scan(&x, &y)\\n        if m[x] == nil {\\n            m[x] = make(map[int]bool)\\n        }\\n        m[x][y] = true\\n    }\\n    var ans int\\n    for i := 0; i < 1001; i++ {\\n        for j := 0; j < 1001; j++ {\\n            if m[i] == nil || m[j] == nil {\\n                ans++\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = Number(input[0]);\nconst x = [];\nconst y = [];\nfor (let i = 1; i <= n; i++) {\n    const [a, b] = input[i].split(' ').map(Number);\n    x.push(a);\n    y.push(b);\n}\nconst x_min = Math.min(...x);\nconst x_max = Math.max(...x);\nconst y_min = Math.min(...y);\nconst y_max = Math.max(...y);\nconst ans = Math.max(x_max - x_min, y_max - y_min) - 1;\nconsole.log(ans);\"}]}","Kotlin":"","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$x = [];\n$y = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a = explode(' ', trim(fgets(STDIN)));\n    $x[] = (int)$a[0];\n    $y[] = (int)$a[1];\n}\n$x_min = min($x);\n$x_max = max($x);\n$y_min = min($y);\n$y_max = max($y);\n$ans = 0;\nfor ($i = $x_min; $i <= $x_max; $i++) {\n    for ($j = $y_min; $j <= $y_max; $j++) {\n        if (!in_array($i, $x) || !in_array($j, $y)) {\n            $ans++;\n        }\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int[n] x;\n    int[n] y;\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &x[i], &y[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i != j && x[i] == x[j] && y[i] == y[j]) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @x = ();\nmy @y = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my @a = split \/ \/, <STDIN>;\n    push @x, $a[0];\n    push @y, $a[1];\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $n; $j++) {\n        if ($i != $j && $x[$i] != $x[$j] && $y[$i] != $y[$j]) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut xs = Vec::new();\n    let mut ys = Vec::new();\n    for _ in 0..n {\n        let mut line = String::new();\n        io::stdin().read_line(&mut line).unwrap();\n        let line: Vec<&str> = line.split_whitespace().collect();\n        let x: usize = line[0].parse().unwrap();\n        let y: usize = line[1].parse().unwrap();\n        xs.push(x);\n        ys.push(y);\n    }\n\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..n {\n            if i == j {\n                continue;\n            }\n            if xs[i] == xs[j] || ys[i] == ys[j] {\n                continue;\n            }\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Intersection","description":"You are given two set of points. The first set is determined by the equation A1x+B1y+C1=0, and the second one is determined by the equation A2x+B2y+C2=0.Write the program which finds the number of points in the intersection of two given sets.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line of the input contains three integer numbers A1,B1,C1 separated by space. The second line contains three integer numbers A2,B2,C2 separated by space. All the numbers are between -100 and 100, inclusive.\n","output_spec":"Print the number of points in the intersection or -1 if there are infinite number of points.\n","notes":null,"sample_inputs":["1 1 0\n2 2 0\n","1 1 0\n2 -2 0\n"],"sample_outputs":["-1\n","1\n"],"id":"21-B","difficulty":2000,"tags":["implementation","math"],"src_uid":"c8e869cb17550e888733551c749f2e1a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int a1, b1, c1, a2, b2, c2;\n    cin >> a1 >> b1 >> c1;\n    cin >> a2 >> b2 >> c2;\n    if (a1 == a2 && b1 == b2) {\n        if (c1 == c2)\n            cout << -1;\n        else\n            cout << 0;\n    } else {\n        int d = a1 * b2 - a2 * b1;\n        if (d == 0)\n            cout << 0;\n        else {\n            int x = (c2 * b1 - c1 * b2) \/ d;\n            int y = (c1 * a2 - c2 * a1) \/ d;\n            cout << 1;\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int a1 = scanner.nextInt();\n        int b1 = scanner.nextInt();\n        int c1 = scanner.nextInt();\n        int a2 = scanner.nextInt();\n        int b2 = scanner.nextInt();\n        int c2 = scanner.nextInt();\n\n        if (a1 == a2 && b1 == b2) {\n            if (c1 == c2) {\n                System.out.println(-1);\n            } else {\n                System.out.println(0);\n            }\n        } else {\n            int d = a1 * b2 - a2 * b1;\n            if (d == 0) {\n                System.out.println(0);\n            } else {\n                int x = (c2 * b1 - c1 * b2) \/ d;\n                int y = (a1 * c2 - a2 * c1) \/ d;\n                System.out.println(1);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na1,b1,c1=map(int,input().split())\na2,b2,c2=map(int,input().split())\nif a1==a2 and b1==b2:\n    print(-1)\nelse:\n    print(1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a1, b1, c1, a2, b2, c2;\n    scanf(\" %d %d %d \", &a1, &b1, &c1);\n    scanf(\" %d %d %d \", &a2, &b2, &c2);\n    if (a1 == a2 && b1 == b2) {\n        if (c1 == c2)\n            printf(\" -1 \");\n        else\n            printf(\" 0 \");\n    } else {\n        int d = a1 * b2 - a2 * b1;\n        if (d == 0)\n            printf(\" 0 \");\n        else {\n            int x = (c2 * b1 - c1 * b2) \/ d;\n            int y = (a1 * c2 - a2 * c1) \/ d;\n            printf(\" 1 \");\n        }\n    }\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var a1, b1, c1 = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a2, b2, c2 = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n\n        var d = a1 * b2 - a2 * b1;\n        if (d == 0)\n        {\n            Console.WriteLine(-1);\n        }\n        else\n        {\n            var x = (c2 * b1 - c1 * b2) \/ d;\n            var y = (c1 * a2 - c2 * a1) \/ d;\n            Console.WriteLine(1);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b,c=gets.split.map(&:to_i)\nd,e,f=gets.split.map(&:to_i)\nif a*e-b*d==0\n  puts -1\nelse\n  puts (c-f)\/(a*e-b*d)\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Intersection;\nuses SysUtils;\nvar\n  A1, B1, C1, A2, B2, C2: Integer;\nbegin\n  Readln(A1, B1, C1);\n  Readln(A2, B2, C2);\n  if (A1 = A2) and (B1 = B2) and (C1 = C2) then\n    Writeln(-1)\n  else if (A1*B2 - A2*B1 = 0) and (C1*B2 - C2*B1 = 0) then\n    Writeln(-1)\n  else\n    Writeln(1);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    var a1, b1, c1, a2, b2, c2 int\n    fmt.Scanf(\" %d %d %d\\n\", &a1, &b1, &c1)\n    fmt.Scanf(\" %d %d %d\\n\", &a2, &b2, &c2)\n\n    if a1 == a2 && b1 == b2 {\n        if c1 == c2 {\n            fmt.Println(\"-1\")\n        } else {\n            fmt.Println(\"0\")\n        }\n    } else {\n        x := (c2 - c1) \/ (a1 - a2)\n        y := (b2 - b1) \/ (a1 - a2)\n        fmt.Println(int(math.Round(x)))\n        fmt.Println(int(math.Round(y)))\n    }\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [a1, b1, c1] = line.split(' ').map(Number);\n  rl.on('line', (line) => {\n    const [a2, b2, c2] = line.split(' ').map(Number);\n    const det = a1 * b2 - a2 * b1;\n    if (det === 0) {\n      console.log(-1);\n    } else {\n      const x = (c2 * b1 - c1 * b2) \/ det;\n      const y = (a1 * c2 - a2 * c1) \/ det;\n      console.log(1);\n    }\n  });\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val a1, b1, c1 = scanner.nextLine().split(\" \").map { it.toInt() }\n    val a2, b2, c2 = scanner.nextLine().split(\" \").map { it.toInt() }\n\n    val d = a1 * b2 - a2 * b1\n    if (d == 0) {\n        println(-1)\n    } else {\n        val x = (c2 - c1) \/ d\n        val y = (a1 * c2 - a2 * c1) \/ d\n        println(1)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$a1, $b1, $c1 = explode(' ', trim(fgets(STDIN)));\\n$a2, $b2, $c2 = explode(' ', trim(fgets(STDIN)));\\n\\nif ($a1 == $a2 && $b1 == $b2) {\\n    echo -1;\\n} else {\\n    $d = ($b1 * $c2 - $b2 * $c1) \/ ($a1 * $b2 - $a2 * $b1);\\n    echo $d;\\n}\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int a1, b1, c1;\n    int a2, b2, c2;\n    scanf(\" %d %d %d \", &a1, &b1, &c1);\n    scanf(\" %d %d %d \", &a2, &b2, &c2);\n\n    int d = a1 * b2 - a2 * b1;\n    if (d == 0) {\n        if (a1 == a2 && b1 == b2 && c1 == c2)\n            printf(\" -1 \");\n        else\n            printf(\" 0 \");\n    } else {\n        int x = (c2 - c1) \/ d;\n        int y = (a1 * c2 - a2 * c1) \/ d;\n        printf(\" 1 \");\n        printf(\" %d \", x);\n        printf(\" %d \", y);\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $a1, $b1, $c1;\nmy $a2, $b2, $c2;\n\nchomp(my $line = <STDIN>);\n($a1, $b1, $c1) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n($a2, $b2, $c2) = split(' ', $line);\n\nif ($a1 == $a2 && $b1 == $b2) {\n    if ($c1 == $c2) {\n        print \"-1\\n\";\n    } else {\n        print \"0\\n\";\n    }\n} else {\n    my $d = $a1 * $b2 - $a2 * $b1;\n    if ($d == 0) {\n        print \"0\\n\";\n    } else {\n        my $x = ($c2 * $b1 - $c1 * $b2) \/ $d;\n        my $y = ($c1 * $a2 - $c2 * $a1) \/ $d;\n        print \"1\\n\";\n    }\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a1: i32 = 0;\n    let mut b1: i32 = 0;\n    let mut c1: i32 = 0;\n    let mut iter = line.split_whitespace();\n    a1 = iter.next().unwrap().parse::<i32>().unwrap();\n    b1 = iter.next().unwrap().parse::<i32>().unwrap();\n    c1 = iter.next().unwrap().parse::<i32>().unwrap();\n\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut a2: i32 = 0;\n    let mut b2: i32 = 0;\n    let mut c2: i32 = 0;\n    iter = line.split_whitespace();\n    a2 = iter.next().unwrap().parse::<i32>().unwrap();\n    b2 = iter.next().unwrap().parse::<i32>().unwrap();\n    c2 = iter.next().unwrap().parse::<i32>().unwrap();\n\n    let mut det = a1 * b2 - a2 * b1;\n    if det == 0 {\n        println!(\"-1\");\n    } else {\n        let x = (c2 * b1 - c1 * b2) \/ det;\n        let y = (c1 * a2 - c2 * a1) \/ det;\n        println!(\"{}\", x);\n        println!(\"{}\", y);\n    }\n}\n\"\"\"}]"}
{"title":"D. Olympiad","description":"A boy named Vasya has taken part in an Olympiad. His teacher knows that in total Vasya got at least x points for both tours of the Olympiad. The teacher has the results of the first and the second tour of the Olympiad but the problem is, the results have only points, no names. The teacher has to know Vasya's chances.Help Vasya's teacher, find two numbers \u2014 the best and the worst place Vasya could have won. Note that the total results' table sorts the participants by the sum of points for both tours (the first place has the participant who has got the most points). If two or more participants have got the same number of points, it's up to the jury to assign places to them according to their choice. It is guaranteed that each participant of the Olympiad participated in both tours of the Olympiad.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers n,x (1\u2264n\u226410^5;\u00a00\u2264x\u22642\u00b710^5) \u2014 the number of Olympiad participants and the minimum number of points Vasya earned.\nThe second line contains n space-separated integers: a1,a2,...,an (0\u2264ai\u226410^5) \u2014 the participants' points in the first tour.\nThe third line contains n space-separated integers: b1,b2,...,bn (0\u2264bi\u226410^5) \u2014 the participants' points in the second tour.\nThe participants' points are given in the arbitrary order. It is guaranteed that Vasya was present in the Olympiad \u2014 there are two integers i,j (1\u2264i,j\u2264n) such, that ai+bj\u2265x.\n","output_spec":"Print two space-separated integers \u2014 the best and the worst place Vasya could have got on the Olympiad.\n","notes":"In the first text sample all 5 participants earn 2 points each in any case. Depending on the jury's decision, Vasya can get the first (the best) as well as the last (the worst) fifth place.\nIn the second test sample in the best case scenario Vasya wins again: he can win 12 points and become the absolute winner if the total results' table looks like that \u2014 {4:8, 6:4, 3:6, 4:4, 4:3, 5:0}.\nIn this table all participants are sorted by decreasing points and we can see how much a participant earned in the first and in the second tour.\nIn the worst case scenario Vasya can get the fifth place if the table looks like that \u2014 {4:8, 4:6, 6:4, 5:4, 4:3, 3:0}, and he earned 4 and 3 points in the first and second tours, correspondingly.\n","sample_inputs":["5 2\n1 1 1 1 1\n1 1 1 1 1\n","6 7\n4 3 5 6 4 4\n8 6 0 4 3 4\n"],"sample_outputs":["1 5\n","1 5\n"],"id":"222-D","difficulty":1900,"tags":["binary+search","greedy","sortings","two+pointers"],"src_uid":"77919677f562a6fd1af64bc8cbc79de5","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, x;\n    cin >> n >> x;\n    int a[n], b[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    for (int i = 0; i < n; i++) {\n        cin >> b[i];\n    }\n    int ans1 = 1, ans2 = n;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (a[i] + b[j] >= x) {\n                ans1 = min(ans1, i + 1);\n                ans2 = max(ans2, i + 1);\n            }\n        }\n    }\n    cout << ans1 << \" \" << ans2 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int x = scanner.nextInt();\n        int[] a = new int[n];\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        for (int i = 0; i < n; i++) {\n            b[i] = scanner.nextInt();\n        }\n        int best = 1;\n        int worst = n;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (a[i] + b[j] >= x) {\n                    if (i < j) {\n                        best = Math.min(best, i + j + 1);\n                    } else {\n                        worst = Math.max(worst, i + j + 1);\n                    }\n                }\n            }\n        }\n        System.out.println(best + \" \" + worst);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,x = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\na.sort()\nb.sort()\nans = [0,n]\nfor i in range(n):\n    if a[i]+b[n-i-1]>=x:\n        ans[0] = min(ans[0],i+1)\n        ans[1] = max(ans[1],n-i)\nprint(*ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, x, i, j, a[100005], b[100005], ans1 = 1, ans2 = n, t;\n    scanf(\" %d%d \", &n, &x);\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (a[i] + b[j] >= x) {\n                t = i + j + 1;\n                if (t < ans1) {\n                    ans1 = t;\n                }\n                if (t > ans2) {\n                    ans2 = t;\n                }\n            }\n        }\n    }\n    printf(\" %d  %d \", ans1, ans2);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, x = int.Parse(Console.ReadLine().Split(' ')[0]), y = int.Parse(Console.ReadLine().Split(' ')[1]);\n        var a = new List<int>();\n        var b = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            a.Add(int.Parse(Console.ReadLine()));\n        }\n        for (int i = 0; i < n; i++)\n        {\n            b.Add(int.Parse(Console.ReadLine()));\n        }\n        var a1 = a.Max();\n        var b1 = b.Max();\n        var a2 = a.Min();\n        var b2 = b.Min();\n        Console.WriteLine(Math.Min(a1 + b1, x) + \" \" + Math.Max(a2 + b2, x));\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, x = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\nb = gets.split.map(&:to_i)\n\na.sort!\nb.sort!\n\nans = [0, n]\n\n(0..n-1).each do |i|\n  (0..n-1).each do |j|\n    if a[i] + b[j] >= x\n      ans[0] = [ans[0], i+1].min\n      ans[1] = [ans[1], n-j].min\n    end\n  end\nend\n\nputs ans.join(' ')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Olympiad;\n\nuses\n  SysUtils;\n\nvar\n  n, x, i, j, a, b, best, worst: Integer;\n  a1, b1, a2, b2: array of Integer;\n\nbegin\n  Readln(n, x);\n  for i := 1 to n do\n    Read(a1[i]);\n  for i := 1 to n do\n    Read(b1[i]);\n  for i := 1 to n do\n    for j := 1 to n do\n      if a1[i] + b1[j] >= x then\n        begin\n          a := a1[i];\n          b := b1[j];\n          best := i;\n          worst := j;\n        end;\n  for i := 1 to n do\n    if a1[i] = a then\n      a2[i] := b1[i];\n  for i := 1 to n do\n    if b1[i] = b then\n      b2[i] := a1[i];\n  for i := 1 to n do\n    if a2[i] + b2[i] >= x then\n      begin\n        if i < best then\n          best := i;\n        if i > worst then\n          worst := i;\n      end;\n  Writeln(best, ' ', worst);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, x int\n\tfmt.Scanf(\" %d %d \", &n, &x)\n\ta := make([]int, n)\n\tb := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &a[i])\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &b[i])\n\t}\n\tsort.Ints(a)\n\tsort.Ints(b)\n\tvar ans1, ans2 int\n\tfor i := 0; i < n; i++ {\n\t\tif a[i]+b[i] >= x {\n\t\t\tans1 = i + 1\n\t\t\tbreak\n\t\t}\n\t}\n\tfor i := n - 1; i >= 0; i-- {\n\t\tif a[i]+b[i] >= x {\n\t\t\tans2 = i + 1\n\t\t\tbreak\n\t\t}\n\t}\n\tfmt.Println(ans1, ans2)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n, x = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst a = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst b = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst a_b = a.concat(b);\na_b.sort((a, b) => b - a);\nconst ans = [a_b.indexOf(x) + 1, a_b.lastIndexOf(x) + 1];\nconsole.log(ans.join(' '));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, x) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sortedDescending()\n    val b = readLine().split(\" \").map { it.toInt() }.sortedDescending()\n    var best = 1\n    var worst = n\n    for (i in 0 until n) {\n        if (a[i] + b[i] >= x) {\n            best = min(best, i + 1)\n            worst = max(worst, i + 1)\n        }\n    }\n    println(\"$best $worst\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$x = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$b = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$b = array_map('intval', $b);\n$a = array_combine($a, $b);\narsort($a);\n$best = 1;\n$worst = $n;\nforeach ($a as $key => $value) {\n    if ($value >= $x) {\n        $best = min($best, $key);\n        $worst = max($worst, $key);\n    }\n}\necho $best . ' ' . $worst;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, x;\n    scanf(\" %d %d \", &n, &x);\n    int a[n], b[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int best = 1, worst = n;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (a[i] + b[j] >= x) {\n                if (i < j) {\n                    best = min(best, i + j + 1);\n                    worst = max(worst, i + j + 1);\n                }\n            }\n        }\n    }\n    printf(\" %d %d \", best, worst);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $x;\nmy @a, @b;\n\nchomp(my $line = <STDIN>);\n($n, $x) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@b = split(\/ \/, $line);\n\nmy $max = 0;\nmy $min = 1000000000;\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $sum = $a[$i] + $b[$i];\n    if ($sum >= $x) {\n        if ($sum > $max) {\n            $max = $sum;\n        }\n        if ($sum < $min) {\n            $min = $sum;\n        }\n    }\n}\n\nprint \"$max $min\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut nx = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let n = nx[0];\n    let x = nx[1];\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut b = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut best = 0;\n    let mut worst = n + 1;\n\n    for i in 0..n {\n        for j in 0..n {\n            if a[i] + b[j] >= x {\n                if i < j {\n                    best = i + 1;\n                    worst = j + 1;\n                } else {\n                    best = j + 1;\n                    worst = i + 1;\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", best);\n    println!(\"{}\", worst);\n}\n\"\"\"}]"}
{"title":"C. Anniversary","description":"There are less than 60 years left till the 900-th birthday anniversary of a famous Italian mathematician Leonardo Fibonacci. Of course, such important anniversary needs much preparations.Dima is sure that it'll be great to learn to solve the following problem by the Big Day: You're given a set A, consisting of numbers l, l+1, l+2, ..., r; let's consider all its k-element subsets; for each such subset let's find the largest common divisor of Fibonacci numbers with indexes, determined by the subset elements. Among all found common divisors, Dima is interested in the largest one.Dima asked to remind you that Fibonacci numbers are elements of a numeric sequence, where F1=1, F2=1, Fn=Fn-1+Fn-2 for n\u22653.Dima has more than half a century ahead to solve the given task, but you only have two hours. Count the residue from dividing the sought largest common divisor by m.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains four space-separated integers m, l, r and k (1\u2264m\u226410^9;\u00a01\u2264l<r\u226410^12;\u00a02\u2264k\u2264r-l+1).\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier.\n","output_spec":"Print a single integer \u2014 the residue from dividing the sought greatest common divisor by m.\n","notes":null,"sample_inputs":["10 1 8 2\n","10 1 8 3\n"],"sample_outputs":["3\n","1\n"],"id":"226-C","difficulty":2400,"tags":["data+structures","implementation","math","matrices","number+theory"],"src_uid":"63e130256e23bd0693c6a1bede5e937e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int m, l, r, k;\n    cin >> m >> l >> r >> k;\n    int a[k];\n    for (int i = 0; i < k; i++) {\n        cin >> a[i];\n    }\n    int dp[k + 1][1000001];\n    for (int i = 0; i <= k; i++) {\n        for (int j = 0; j <= 1000000; j++) {\n            dp[i][j] = 0;\n        }\n    }\n    dp[0][0] = 1;\n    for (int i = 1; i <= k; i++) {\n        for (int j = 0; j <= 1000000; j++) {\n            if (j >= a[i - 1]) {\n                dp[i][j] = (dp[i - 1][j] + dp[i - 1][j - a[i - 1]]) % m;\n            } else {\n                dp[i][j] = dp[i - 1][j];\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i <= 1000000; i++) {\n        if (dp[k][i] != 0) {\n            ans = i;\n            break;\n        }\n    }\n    cout << ans % m << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int m = sc.nextInt();\n        int l = sc.nextInt();\n        int r = sc.nextInt();\n        int k = sc.nextInt();\n        int[] fib = new int[r - l + 1];\n        fib[0] = 1;\n        fib[1] = 1;\n        for (int i = 2; i < fib.length; i++) {\n            fib[i] = fib[i - 1] + fib[i - 2];\n        }\n        int gcd = 0;\n        for (int i = 0; i < k; i++) {\n            int a = l + i;\n            int b = l + k - i - 1;\n            gcd = gcd(gcd, fib[a] % m, fib[b] % m);\n        }\n        System.out.println(gcd % m);\n    }\n\n    private static int gcd(int a, int b, int c) {\n        if (b == 0) {\n            return a;\n        }\n        return gcd(b, a % b, c);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nm, l, r, k = map(int, input().split())\n\ndef fib(n):\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef gcd(a, b):\n    while b:\n        a, b = b, a % b\n    return a\n\ndef lcm(a, b):\n    return a * b \/\/ gcd(a, b)\n\ndef main():\n    ans = 0\n    for i in range(l, r + 1):\n        for j in range(i + 1, r + 1):\n            for k in range(j + 1, r + 1):\n                ans = max(ans, gcd(fib(i), gcd(fib(j), fib(k))))\n    print(ans % m)\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int m, l, r, k;\n    scanf(\" %d %d %d %d \", &m, &l, &r, &k);\n    int a[k];\n    for (int i = 0; i < k; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int dp[k + 1][r - l + 1];\n    for (int i = 0; i <= k; i++) {\n        for (int j = 0; j <= r - l + 1; j++) {\n            if (i == 0 || j == 0) {\n                dp[i][j] = 0;\n            } else if (a[i - 1] <= j) {\n                dp[i][j] = (dp[i - 1][j] + dp[i - 1][j - a[i - 1]]) % m;\n            } else {\n                dp[i][j] = dp[i - 1][j];\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i <= k; i++) {\n        ans = (ans + dp[i][r - l]) % m;\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var m = int.Parse(input[0]);\n        var l = int.Parse(input[1]);\n        var r = int.Parse(input[2]);\n        var k = int.Parse(input[3]);\n\n        var fib = new List<int>();\n        fib.Add(1);\n        fib.Add(1);\n        for (int i = 2; i < 1000000; i++)\n        {\n            fib.Add(fib[i - 1] + fib[i - 2]);\n        }\n\n        var res = 0;\n        for (int i = l; i <= r; i++)\n        {\n            for (int j = i + 1; j <= r; j++)\n            {\n                for (int k = j + 1; k <= r; k++)\n                {\n                    var gcd = fib[i] * fib[j] * fib[k] \/ m;\n                    res = (res + gcd) % m;\n                }\n            }\n        }\n\n        Console.WriteLine(res);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"m,l,r,k=map(int,input().split())\n\ndef fib(n):\n    if n==0:\n        return 0\n    elif n==1:\n        return 1\n    else:\n        return fib(n-1)+fib(n-2)\n\ndef gcd(a,b):\n    if b==0:\n        return a\n    else:\n        return gcd(b,a%b)\n\ndef main():\n    ans=0\n    for i in range(l,r+1):\n        for j in range(i+1,r+1):\n            for k in range(j+1,r+1):\n                ans=gcd(ans,gcd(fib(i),gcd(fib(j),fib(k))))\n    print(ans%m)\n\nif __name__=='__main__':\n    main()\"}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Fibonacci;\nuses SysUtils;\nvar\n  m, l, r, k, i, j, n, a, b, c, d, x, y, z, gcd, t: integer;\nbegin\n  readln(m, l, r, k);\n  for i := l to r do\n  begin\n    a := 1;\n    b := 1;\n    for j := 2 to i do\n    begin\n      c := a + b;\n      a := b;\n      b := c;\n    end;\n    if (i - l + 1) mod k = 0 then\n    begin\n      for j := 1 to k do\n      begin\n        n := i - l + 1 - j;\n        if (n mod 2 = 0) then\n        begin\n          x := a;\n          y := b;\n        end\n        else\n        begin\n          x := b;\n          y := a;\n        end;\n        for z := 1 to n div 2 do\n        begin\n          c := x + y;\n          x := y;\n          y := c;\n        end;\n        gcd := x;\n      end;\n      if (gcd mod m = 0) then\n        writeln(0);\n      else\n        writeln(gcd mod m);\n    end;\n  end;\nend.\"}]}","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\/big\"\n)\n\nfunc main() {\n\tvar m, l, r, k int64\n\tfmt.Scan(&m, &l, &r, &k)\n\ta := make([]int64, k)\n\tfor i := 0; i < k; i++ {\n\t\ta[i] = l + i\n\t}\n\tans := big.NewInt(0)\n\tfor i := 0; i < k; i++ {\n\t\tfor j := i + 1; j < k; j++ {\n\t\t\tans.Add(ans, big.NewInt(a[i] * a[j]))\n\t\t}\n\t}\n\tfmt.Println(ans.Mod(ans, big.NewInt(m)))\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const f = (n) => {\n    if (n < 2) return n;\n    return f(n - 1) + f(n - 2);\n};\n\nconst m = parseInt(process.argv[2]);\nconst l = parseInt(process.argv[3]);\nconst r = parseInt(process.argv[4]);\nconst k = parseInt(process.argv[5]);\n\nconst fibs = [];\nfor (let i = 0; i <= r; i++) {\n    fibs.push(f(i));\n}\n\nconst mn = Math.min(l, r);\nconst mx = Math.max(l, r);\n\nconst mn_fib = fibs[mn - 1];\nconst mx_fib = fibs[mx - 1];\n\nconst gcd = Math.gcd(mn_fib, mx_fib);\n\nconsole.log(gcd % m);\n\"}}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (m, l, r, k) = readLine().split(\" \").map { it.toInt() }\n    val fib = arrayListOf(1, 1)\n    for (i in 2..r) {\n        fib.add(fib[i - 1] + fib[i - 2])\n    }\n    val dp = arrayListOf(IntArray(r + 1) { 0 })\n    for (i in 1..r) {\n        dp[i][1] = fib[i] % m\n    }\n    for (i in 2..k) {\n        for (j in 1..r) {\n            for (k in 1..j) {\n                dp[j][i] = max(dp[j][i], dp[j - k][i - 1] * fib[k] % m)\n            }\n        }\n    }\n    println(dp[r][k] % m)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$m = (int)$input[0];\n$l = (int)$input[1];\n$r = (int)$input[2];\n$k = (int)$input[3];\n\n$fib = [1, 1];\nfor ($i = 2; $i <= $r; $i++) {\n    $fib[] = $fib[$i - 1] + $fib[$i - 2];\n}\n\n$gcd = 1;\nfor ($i = 0; $i < $k; $i++) {\n    $gcd = gcd($gcd, $fib[$r - $l + $i]);\n}\n\necho $gcd % $m;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.math;\n\nvoid main() {\n    auto [m, l, r, k] = readln.split.map!(to!int).array;\n    auto fib = [1, 1];\n    for (auto i = 2; i <= r; i++) {\n        fib ~= fib[i - 1] + fib[i - 2];\n    }\n    auto fib_set = fib[l..r].array;\n    auto fib_set_k = fib_set.combinations(k).array;\n    auto gcd = fib_set_k.map!(fib.gcd).max;\n    writeln(gcd % m);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $m, $l, $r, $k;\n\nchomp(my $input = <STDIN>);\n\n@input = split(' ', $input);\n\n$m = $input[0];\n$l = $input[1];\n$r = $input[2];\n$k = $input[3];\n\nmy @fib = (1, 1);\n\nfor (my $i = 3; $i <= $r; $i++) {\n    $fib[$i] = $fib[$i - 1] + $fib[$i - 2];\n}\n\nmy $gcd = 1;\n\nfor (my $i = $l; $i <= $r; $i++) {\n    for (my $j = $i + 1; $j <= $r; $j++) {\n        my $gcd_tmp = gcd($fib[$i], $fib[$j]);\n        if ($gcd_tmp > $gcd) {\n            $gcd = $gcd_tmp;\n        }\n    }\n}\n\nprint(($gcd % $m));\n\nsub gcd {\n    my $a = shift;\n    my $b = shift;\n\n    while ($b != 0) {\n        my $t = $a % $b;\n        $a = $b;\n        $b = $t;\n    }\n\n    return $a;\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut iter = line.split_whitespace();\n    let m = iter.next().unwrap().parse::<i64>().unwrap();\n    let l = iter.next().unwrap().parse::<i64>().unwrap();\n    let r = iter.next().unwrap().parse::<i64>().unwrap();\n    let k = iter.next().unwrap().parse::<i64>().unwrap();\n\n    let mut fib = vec![0; r + 1];\n    fib[0] = 1;\n    fib[1] = 1;\n    for i in 2..r + 1 {\n        fib[i] = fib[i - 1] + fib[i - 2];\n    }\n\n    let mut gcd = 1;\n    for i in l..r + 1 {\n        for j in i + 1..r + 1 {\n            if (i + j) % k == 0 {\n                gcd = gcd.lcm(&fib[j - i]);\n            }\n        }\n    }\n\n    println!(\"{}\", gcd % m);\n}\n\"\"\"}]"}
{"title":"A. Is your horseshoe on the other hoof?","description":"Valera the Horse is going to the party with friends. He has been following the fashion trends for a while, and he knows that it is very popular to wear all horseshoes of different color. Valera has got four horseshoes left from the last year, but maybe some of them have the same color. In this case he needs to go to the store and buy some few more horseshoes, not to lose face in front of his stylish comrades.Fortunately, the store sells horseshoes of all colors under the sun and Valera has enough money to buy any four of them. However, in order to save the money, he would like to spend as little money as possible, so you need to help Valera and determine what is the minimum number of horseshoes he needs to buy to wear four horseshoes of different colors to a party.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains four space-separated integers s1,s2,s3,s4 (1\u2264s1,s2,s3,s4\u226410^9) \u2014 the colors of horseshoes Valera has.\nConsider all possible colors indexed with integers.\n","output_spec":"Print a single integer \u2014 the minimum number of horseshoes Valera needs to buy.\n","notes":null,"sample_inputs":["1 7 3 3\n","7 7 7 7\n"],"sample_outputs":["1\n","3\n"],"id":"228-A","difficulty":800,"tags":["implementation"],"src_uid":"38c4864937e57b35d3cce272f655e20f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int a, b, c, d;\\n    cin >> a >> b >> c >> d;\\n    int ans = 0;\\n    if (a != b && a != c && a != d) {\\n        ans = 1;\\n    } else if (b != c && b != d) {\\n        ans = 1;\\n    } else if (c != d) {\\n        ans = 1;\\n    } else {\\n        ans = 4;\\n    }\\n    cout << ans << endl;\\n    return 0;\\n}\\n\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Valera {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int[] horseshoes = new int[4];\n        for (int i = 0; i < 4; i++) {\n            horseshoes[i] = scanner.nextInt();\n        }\n        int count = 0;\n        for (int i = 0; i < 4; i++) {\n            for (int j = i + 1; j < 4; j++) {\n                if (horseshoes[i] != horseshoes[j]) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(4 - count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input().split()\ns = [int(i) for i in s]\ns.sort()\nprint(4-len(set(s)))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a[4], i, j, k, l, m, n, c = 0;\n    scanf(\" %d %d %d %d \", &a[0], &a[1], &a[2], &a[3]);\n    for (i = 0; i < 4; i++) {\n        for (j = 0; j < 4; j++) {\n            if (i != j) {\n                for (k = 0; k < 4; k++) {\n                    if (k != i && k != j) {\n                        for (l = 0; l < 4; l++) {\n                            if (l != i && l != j && l != k) {\n                                if (a[i] != a[j] && a[i] != a[k] && a[i] != a[l] && a[j] != a[k] && a[j] != a[l] && a[k] != a[l]) {\n                                    c = c + 1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    printf(\" %d \", c);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace ValeraHorseshoes\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int[] horseshoes = new int[4];\n            int count = 0;\n\n            for (int i = 0; i < 4; i++)\n            {\n                horseshoes[i] = int.Parse(Console.ReadLine());\n            }\n\n            for (int i = 0; i < 4; i++)\n            {\n                for (int j = i + 1; j < 4; j++)\n                {\n                    if (horseshoes[i] != horseshoes[j])\n                    {\n                        count++;\n                    }\n                }\n            }\n\n            Console.WriteLine(4 - count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s1,s2,s3,s4 = gets.split.map(&:to_i)\n\nans = 4\n\nfor i in 1..10**9\n  if s1 != i && s2 != i && s3 != i && s4 != i\n    ans = ans - 1\n    break\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  s1,s2,s3,s4:integer;\nbegin\n  readln(s1,s2,s3,s4);\n  writeln(max(0,4-max(s1,s2,s3,s4)));\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var s1, s2, s3, s4 int\n    fmt.Scan(&s1, &s2, &s3, &s4)\n    fmt.Println(4 - len(set([]int{s1, s2, s3, s4})))\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);console.log(4-s.filter((x,i)=>s.indexOf(x)>i).length);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (s1, s2, s3, s4) = readLine().split(\" \").map { it.toInt() }\n    val set = mutableSetOf<Int>()\n    set.add(s1)\n    set.add(s2)\n    set.add(s3)\n    set.add(s4)\n    println(4 - set.size)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$a = explode(' ', trim(fgets(STDIN)));\\n\\n$b = array_count_values($a);\\n\\necho max($b) - 1;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[4] s;\n    scanf(\" %d %d %d %d \", &s[0], &s[1], &s[2], &s[3]);\n    int ans = 4;\n    ans = min(ans, 4 - count(s, s[0]));\n    ans = min(ans, 4 - count(s, s[1]));\n    ans = min(ans, 4 - count(s, s[2]));\n    ans = min(ans, 4 - count(s, s[3]));\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy @a = split \/ \/, <STDIN>;\nmy $ans = 4;\nfor (my $i = 1; $i <= 10**9; $i++) {\n    my $cnt = 0;\n    for (my $j = 0; $j < 4; $j++) {\n        if ($a[$j] != $i) {\n            $cnt++;\n        }\n    }\n    if ($cnt < $ans) {\n        $ans = $cnt;\n    }\n}\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut s = String::new();\n    io::stdin().read_line(&mut s).unwrap();\n    let v: Vec<i32> = s.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let mut ans = 0;\n    for i in 0..4 {\n        for j in i + 1..4 {\n            if v[i] != v[j] {\n                ans += 1;\n                break;\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Shifts","description":"You are given a table consisting of n rows and m columns. Each cell of the table contains a number, 0 or 1. In one move we can choose some row of the table and cyclically shift its values either one cell to the left, or one cell to the right.To cyclically shift a table row one cell to the right means to move the value of each cell, except for the last one, to the right neighboring cell, and to move the value of the last cell to the first cell. A cyclical shift of a row to the left is performed similarly, but in the other direction. For example, if we cyclically shift a row \"00110\" one cell to the right, we get a row \"00011\", but if we shift a row \"00110\" one cell to the left, we get a row \"01100\".Determine the minimum number of moves needed to make some table column consist only of numbers 1.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers: n (1\u2264n\u2264100)\u00a0\u2014 the number of rows in the table and m (1\u2264m\u226410^4)\u00a0\u2014 the number of columns in the table. Then n lines follow, each of them contains m characters \"0\" or \"1\": the j-th character of the i-th line describes the contents of the cell in the i-th row and in the j-th column of the table.\nIt is guaranteed that the description of the table contains no other characters besides \"0\" and \"1\".\n","output_spec":"Print a single number: the minimum number of moves needed to get only numbers 1 in some column of the table. If this is impossible, print -1.\n","notes":"In the first sample one way to achieve the goal with the least number of moves is as follows: cyclically shift the second row to the right once, then shift the third row to the left twice. Then the table column before the last one will contain only 1s.\nIn the second sample one can't shift the rows to get a column containing only 1s.\n","sample_inputs":["3 6\n101010\n000100\n100000\n","2 3\n111\n000\n"],"sample_outputs":["3\n","-1\n"],"id":"229-A","difficulty":1500,"tags":["brute+force","two+pointers"],"src_uid":"a491be7d5883d594c3e907a22be607c9","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> a(n, vector<int>(m));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        int cnt = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[j][i] == 1) {\n                cnt++;\n            }\n        }\n        if (cnt < n) {\n            ans += n - cnt;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[][] a = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                a[i][j] = scanner.nextInt();\n            }\n        }\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i < m; i++) {\n            int count = 0;\n            for (int j = 0; j < n; j++) {\n                if (a[j][i] == 0) {\n                    count++;\n                }\n            }\n            ans = Math.min(ans, count);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = [list(input()) for _ in range(n)]\n\nans = 10**10\nfor i in range(m):\n    cnt = 0\n    for j in range(n):\n        if a[j][i] == '1':\n            cnt += 1\n    ans = min(ans, n - cnt)\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n][m];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %d \", &a[i][j]);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int cnt = 0;\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 1) {\n                cnt++;\n            }\n        }\n        if (cnt == m) {\n            ans = 0;\n            break;\n        } else if (cnt == 0) {\n            ans = -1;\n            break;\n        } else {\n            ans = m - cnt;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var a = new int[n][];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        }\n\n        var ans = int.MaxValue;\n        for (int i = 0; i < m; i++)\n        {\n            var count = 0;\n            for (int j = 0; j < n; j++)\n            {\n                if (a[j][i] == 1)\n                {\n                    count++;\n                }\n            }\n            ans = Math.Min(ans, n - count);\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = []\nn.times do\n  a << gets.chomp.split('')\nend\n\nans = 10**10\nfor i in 0..m-1 do\n  for j in 0..n-1 do\n    if a[j][i] == '0'\n      ans = [ans, j].min\n    end\n  end\nend\n\nputs ans\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nconst\n  MAXN = 100;\n  MAXM = 100000;\n\nvar\n  n, m, i, j, k, ans: integer;\n  a: array[0..MAXN, 0..MAXM] of char;\n\nbegin\n  readln(n, m);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n\n  ans := m + 1;\n  for i := 0 to n - 1 do\n    for j := 0 to m - 1 do\n      if a[i, j] = '1' then\n        begin\n          k := 0;\n          for j := j + 1 to m - 1 do\n            if a[i, j] = '0' then\n              inc(k);\n          ans := min(ans, k);\n        end;\n\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a [][]byte\\n    for i := 0; i < n; i++ {\\n        a = append(a, make([]byte, m))\\n        fmt.Scanf(\\\"%s\\\\n\\\", a[i])\\n    }\\n    var ans int\\n    for i := 0; i < m; i++ {\\n        var cnt int\\n        for j := 0; j < n; j++ {\\n            if a[j][i] == '1' {\\n                cnt++\\n            }\\n        }\\n        if cnt == 0 {\\n            ans = -1\\n            break\\n        }\\n        ans = max(ans, n - cnt)\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = [list(input()) for _ in range(n)]\n\nans = 10**10\nfor i in range(m):\n    cnt = 0\n    for j in range(n):\n        if a[j][i] == '1':\n            cnt += 1\n    ans = min(ans, n - cnt)\n\nprint(ans)\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val a = Array(n) { readLine().toCharArray() }\n    val b = Array(m) { 0 }\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            b[j] += a[i][j] - '0'\n        }\n    }\n    var ans = Int.MAX_VALUE\n    for (i in 0 until m) {\n        var cnt = 0\n        for (j in 0 until n) {\n            if (a[j][i] == '0') {\n                cnt++\n            }\n        }\n        ans = minOf(ans, cnt)\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$m = (int)$input[1];\n\n$table = [];\nfor ($i = 0; $i < $n; $i++) {\n    $table[] = trim(fgets(STDIN));\n}\n\n$count = 0;\nfor ($i = 0; $i < $m; $i++) {\n    $count = 0;\n    for ($j = 0; $j < $n; $j++) {\n        if ($table[$j][$i] == '1') {\n            $count++;\n        }\n    }\n    if ($count < $n) {\n        $count = $n - $count;\n    }\n    echo $count . PHP_EOL;\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    auto a = new int[n][m];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %d \", &a[i][j]);\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        int cnt = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[j][i] == 1) {\n                cnt++;\n            }\n        }\n        if (cnt < n) {\n            ans += n - cnt;\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m; \\n\\nwhile (<>) { \\n    chomp; \\n    my @a = split; \\n    $n = $a[0]; \\n    $m = $a[1]; \\n    break; \\n}\\n\\nmy @b = (); \\n\\nfor (my $i = 0; $i < $n; $i++) { \\n    my @c = split; \\n    for (my $j = 0; $j < $m; $j++) { \\n        if ($c[$j] == '1') { \\n            push @b, $j; \\n        } \\n    } \\n}\\n\\nmy $min = 1000000000; \\n\\nfor (my $i = 0; $i < $n; $i++) { \\n    my $count = 0; \\n    for (my $j = 0; $j < $m; $j++) { \\n        if ($b[$j] < $j) { \\n            $count++; \\n        } \\n    } \\n    if ($count < $min) { \\n        $min = $count; \\n    } \\n}\\n\\nprint $min; \\n\\nexit;\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n_rows = 0;\n    let mut n_cols = 0;\n\n    stdin.read_line(&mut n_rows).unwrap();\n    stdin.read_line(&mut n_cols).unwrap();\n\n    let mut rows = Vec::new();\n\n    for _ in 0..n_rows {\n        let mut row = String::new();\n        stdin.read_line(&mut row).unwrap();\n        rows.push(row);\n    }\n\n    let mut min_moves = 1000000000;\n\n    for i in 0..n_cols {\n        let mut num_ones = 0;\n        for j in 0..n_rows {\n            if rows[j].chars().nth(i).unwrap() == '1' {\n                num_ones += 1;\n            }\n        }\n\n        if num_ones == n_rows {\n            min_moves = i as i32;\n            break;\n        }\n    }\n\n    if min_moves == 1000000000 {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", min_moves);\n    }\n}\n\"\"\"}]"}
{"title":"B. Planets","description":"Goa'uld Apophis captured Jack O'Neill's team again! Jack himself was able to escape, but by that time Apophis's ship had already jumped to hyperspace. But Jack knows on what planet will Apophis land. In order to save his friends, Jack must repeatedly go through stargates to get to this planet.Overall the galaxy has n planets, indexed with numbers from 1 to n. Jack is on the planet with index 1, and Apophis will land on the planet with index n. Jack can move between some pairs of planets through stargates (he can move in both directions); the transfer takes a positive, and, perhaps, for different pairs of planets unequal number of seconds. Jack begins his journey at time 0.It can be that other travellers are arriving to the planet where Jack is currently located. In this case, Jack has to wait for exactly 1 second before he can use the stargate. That is, if at time t another traveller arrives to the planet, Jack can only pass through the stargate at time t+1, unless there are more travellers arriving at time t+1 to the same planet.Knowing the information about travel times between the planets, and the times when Jack would not be able to use the stargate on particular planets, determine the minimum time in which he can get to the planet with index n.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers: n (2\u2264n\u226410^5), the number of planets in the galaxy, and m (0\u2264m\u226410^5) \u2014 the number of pairs of planets between which Jack can travel using stargates. Then m lines follow, containing three integers each: the i-th line contains numbers of planets ai and bi (1\u2264ai,bi\u2264n, ai\u2260bi), which are connected through stargates, and the integer transfer time (in seconds) ci (1\u2264ci\u226410^4) between these planets. It is guaranteed that between any pair of planets there is at most one stargate connection.\nThen n lines follow: the i-th line contains an integer ki (0\u2264ki\u226410^5) that denotes the number of moments of time when other travellers arrive to the planet with index i. Then ki distinct space-separated integers tij (0\u2264tij<10^9) follow, sorted in ascending order. An integer tij means that at time tij (in seconds) another traveller arrives to the planet i. It is guaranteed that the sum of all ki does not exceed 10^5.\n","output_spec":"Print a single number \u2014 the least amount of time Jack needs to get from planet 1 to planet n. If Jack can't get to planet n in any amount of time, print number -1.\n","notes":"In the first sample Jack has three ways to go from planet 1. If he moves to planet 4 at once, he spends 8 seconds. If he transfers to planet 3, he spends 3 seconds, but as other travellers arrive to planet 3 at time 3 and 4, he can travel to planet 4 only at time 5, thus spending 8 seconds in total. But if Jack moves to planet 2, and then \u2014 to planet 4, then he spends a total of only 2+5=7 seconds.\nIn the second sample one can't get from planet 1 to planet 3 by moving through stargates.\n","sample_inputs":["4 6\n1 2 2\n1 3 3\n1 4 8\n2 3 4\n2 4 5\n3 4 3\n0\n1 3\n2 3 4\n0\n","3 1\n1 2 3\n0\n1 3\n0\n"],"sample_outputs":["7\n","-1\n"],"id":"229-B","difficulty":1700,"tags":["binary+search","data+structures","graphs","shortest+paths"],"src_uid":"d5fbb3033bd7508fd468edb9bb995d6c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n + 1);\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        cin >> a >> b >> c;\n        g[a].push_back({b, c});\n        g[b].push_back({a, c});\n    }\n    vector<int> t(n + 1);\n    for (int i = 1; i <= n; i++) {\n        cin >> t[i];\n    }\n    vector<int> d(n + 1, 1e9);\n    d[1] = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j < g[i].size(); j++) {\n            int u = g[i][j][0];\n            int w = g[i][j][1];\n            if (d[u] > d[i] + w) {\n                d[u] = d[i] + w;\n            }\n        }\n    }\n    int ans = 1e9;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j < t[i]; j++) {\n            ans = min(ans, d[i] + j);\n        }\n    }\n    if (ans == 1e9) {\n        cout << -1 << endl;\n    } else {\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Comparator;\nimport java.util.PriorityQueue;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n\n        int[][] graph = new int[n + 1][n + 1];\n        for (int i = 0; i < m; i++) {\n            input = br.readLine().split(\" \");\n            int a = Integer.parseInt(input[0]);\n            int b = Integer.parseInt(input[1]);\n            int c = Integer.parseInt(input[2]);\n            graph[a][b] = c;\n            graph[b][a] = c;\n        }\n\n        int[] time = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            input = br.readLine().split(\" \");\n            int k = Integer.parseInt(input[0]);\n            int[] arr = new int[k];\n            for (int j = 0; j < k; j++) {\n                arr[j] = Integer.parseInt(input[j + 1]);\n            }\n            Arrays.sort(arr);\n            for (int j = 0; j < k; j++) {\n                time[i] = Math.max(time[i], arr[j]);\n            }\n        }\n\n        int[] dist = new int[n + 1];\n        Arrays.fill(dist, Integer.MAX_VALUE);\n        dist[1] = 0;\n\n        PriorityQueue<int[]> pq = new PriorityQueue<>(Comparator.comparingInt(a -> a[1]));\n        pq.add(new int[]{1, 0});\n\n        while (!pq.isEmpty()) {\n            int[] cur = pq.poll();\n            int u = cur[0];\n            int d = cur[1];\n            if (d > dist[u]) {\n                continue;\n            }\n            for (int v = 1; v <= n; v++) {\n                if (graph[u][v] == 0) {\n                    continue;\n                }\n                if (dist[v] > d + graph[u][v]) {\n                    dist[v] = d + graph[u][v];\n                    pq.add(new int[]{v, dist[v]});\n                }\n            }\n        }\n\n        System.out.println(dist[n]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b, c = map(int, input().split())\n    g[a-1].append((b-1, c))\n    g[b-1].append((a-1, c))\n\nd = [float('inf')] * n\nd[0] = 0\nq = [(0, 0)]\nwhile q:\n    t, u = q.pop(0)\n    for v, w in g[u]:\n        if d[v] > d[u] + w:\n            d[v] = d[u] + w\n            q.append((d[v], v))\n\nk = [int(input()) for _ in range(n)]\nt = [list(map(int, input().split())) for _ in range(n)]\n\nans = float('inf')\nfor i in range(n):\n    for j in range(k[i]):\n        ans = min(ans, d[i] + t[i][j])\n\nprint(ans if ans != float('inf') else -1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n + 1][n + 1];\n    int d[n + 1];\n    int t[n + 1];\n    int i, j, k;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            a[i][j] = 1000000000;\n        }\n    }\n    for (i = 0; i < m; i++) {\n        int x, y, z;\n        scanf(\" %d %d %d \", &x, &y, &z);\n        a[x][y] = z;\n        a[y][x] = z;\n    }\n    for (i = 1; i <= n; i++) {\n        scanf(\" %d \", &t[i]);\n    }\n    for (i = 1; i <= n; i++) {\n        d[i] = 1000000000;\n    }\n    d[1] = 0;\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            for (k = 1; k <= n; k++) {\n                if (a[j][k] != 1000000000 && d[j] + a[j][k] < d[k]) {\n                    d[k] = d[j] + a[j][k];\n                }\n            }\n        }\n    }\n    for (i = 1; i <= n; i++) {\n        if (d[i] == 1000000000) {\n            printf(\" -1 \");\n        } else {\n            printf(\" %d \", d[n]);\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Jack\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int m = int.Parse(input[1]);\n            var graph = new Dictionary<int, List<int>>();\n            for (int i = 0; i < m; i++)\n            {\n                var input = Console.ReadLine().Split(' ');\n                int a = int.Parse(input[0]);\n                int b = int.Parse(input[1]);\n                int c = int.Parse(input[2]);\n                graph[a].Add(b);\n                graph[b].Add(a);\n            }\n            var time = new int[n + 1];\n            for (int i = 1; i <= n; i++)\n            {\n                var input = Console.ReadLine().Split(' ');\n                int k = int.Parse(input[0]);\n                for (int j = 1; j <= k; j++)\n                {\n                    int t = int.Parse(input[j]);\n                    time[i] = Math.Max(time[i], t);\n                }\n            }\n            var queue = new Queue<int>();\n            queue.Enqueue(1);\n            var visited = new bool[n + 1];\n            visited[1] = true;\n            int ans = 0;\n            while (queue.Count > 0)\n            {\n                int cur = queue.Dequeue();\n                for (int i = 0; i < graph[cur].Count; i++)\n                {\n                    int next = graph[cur][i];\n                    if (!visited[next])\n                    {\n                        visited[next] = true;\n                        queue.Enqueue(next);\n                        ans = Math.Max(ans, time[next] + graph[cur][i]);\n                    }\n                }\n            }\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\ng = []\nm.times do\n  a, b, c = gets.split.map(&:to_i)\n  g << [a, b, c]\nend\n\nk = []\nn.times do\n  k << gets.split.map(&:to_i)\nend\n\nd = [0] * (n + 1)\n\nk.each do |a, b|\n  d[b] = [d[b], d[a] + b].max\nend\n\ng.each do |a, b, c|\n  d[b] = [d[b], d[a] + c].max\nend\n\np d[n] || -1\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nconst\n  MAXN = 100000;\n\ntype\n  TEdge = record\n    u, v, w: Integer;\n  end;\n\nvar\n  n, m, i, j, k, t, ans: Integer;\n  a: array[1..MAXN] of TEdge;\n  d: array[1..MAXN] of Integer;\n  tt: array[1..MAXN] of array of Integer;\n\nprocedure dijkstra(s: Integer);\nvar\n  i, j, u, v, w: Integer;\nbegin\n  fillchar(d, sizeof(d), 0);\n  d[s] := 0;\n  for i := 1 to n do\n    tt[i] := array[1..MAXN] of Integer;\n  for i := 1 to n do\n  begin\n    u := -1;\n    for j := 1 to n do\n      if d[j] > 0 then\n        if u = -1 or d[j] < d[u] then\n          u := j;\n    if u = -1 then\n      break;\n    for j := 1 to m do\n      if a[j].u = u then\n      begin\n        v := a[j].v;\n        w := a[j].w;\n        if d[v] > d[u] + w then\n        begin\n          d[v] := d[u] + w;\n          tt[v][1] := u;\n        end;\n      end;\n  end;\nend;\n\nprocedure main;\nvar\n  i, j, k, t, ans: Integer;\n  a: array[1..MAXN] of TEdge;\n  d: array[1..MAXN] of Integer;\n  tt: array[1..MAXN] of array of Integer;\nbegin\n  readln(n, m);\n  for i := 1 to m do\n  begin\n    readln(a[i].u, a[i].v, a[i].w);\n    a[i].u := a[i].u - 1;\n    a[i].v := a[i].v - 1;\n  end;\n  dijkstra(1);\n  ans := -1;\n  for i := 1 to n do\n  begin\n    if d[i] > ans then\n      ans := d[i];\n  end;\n  writeln(ans);\nend;\n\nbegin\n  main;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scanf(\" %d %d \", &n, &m)\n\tg := make([][]int, n+1)\n\tfor i := 0; i < m; i++ {\n\t\tvar a, b, c int\n\t\tfmt.Scanf(\" %d %d %d \", &a, &b, &c)\n\t\tg[a] = append(g[a], b)\n\t\tg[b] = append(g[b], a)\n\t}\n\tfor i := 1; i <= n; i++ {\n\t\tvar k int\n\t\tfmt.Scanf(\" %d \", &k)\n\t\tt := make([]int, k)\n\t\tfor j := 0; j < k; j++ {\n\t\t\tfmt.Scanf(\" %d \", &t[j])\n\t\t}\n\t\tsort.Ints(t)\n\t\tfor j := 0; j < k; j++ {\n\t\t\tt[j] += j\n\t\t}\n\t\tg[i] = append(g[i], t...)\n\t}\n\tdp := make([]int, n+1)\n\tfor i := 1; i <= n; i++ {\n\t\tdp[i] = 1000000000\n\t}\n\tdp[1] = 0\n\tfor i := 1; i <= n; i++ {\n\t\tfor _, j := range g[i] {\n\t\t\tif dp[j] > dp[i]+1 {\n\t\t\t\tdp[j] = dp[i] + 1\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(dp[n])\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nconst fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf-8').split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst m = Number(input[0].split(' ')[1]);\nconst graph = new Map();\nfor (let i = 0; i < m; i++) {\n    const [a, b, c] = input[i + 1].split(' ');\n    graph.set(a, graph.get(a) || []);\n    graph.set(b, graph.get(b) || []);\n    graph.get(a).push([b, c]);\n    graph.get(b).push([a, c]);\n}\nconst dp = new Array(n + 1).fill(Infinity);\ndp[1] = 0;\nfor (let i = 1; i <= n; i++) {\n    for (const [j, c] of graph.get(i) || []) {\n        dp[j] = Math.min(dp[j], dp[i] + c);\n    }\n}\nconst times = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n    const [k, ...ts] = input[i].split(' ');\n    times[i] = k;\n    for (const t of ts) {\n        times[i] = Math.max(times[i], Number(t));\n    }\n}\nconst ans = Infinity;\nfor (let i = 1; i <= n; i++) {\n    ans = Math.min(ans, dp[i] + times[i]);\n}\nconsole.log(ans === Infinity ? -1 : ans);\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n + 1) { mutableListOf<Pair<Int, Int>>() }\n    val time = Array(n + 1) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b, c) = readLine().split(\" \").map { it.toInt() }\n        graph[a].add(Pair(b, c))\n        graph[b].add(Pair(a, c))\n    }\n    for (i in 1..n) {\n        val k = readLine().toInt()\n        for (j in 0 until k) {\n            val t = readLine().toInt()\n            time[i].add(t)\n        }\n    }\n    val dp = Array(n + 1) { Int.MAX_VALUE }\n    dp[1] = 0\n    val queue = PriorityQueue<Pair<Int, Int>>(compareBy { it.second })\n    queue.add(Pair(1, 0))\n    while (queue.isNotEmpty()) {\n        val (v, d) = queue.poll()\n        for (e in graph[v]) {\n            val (u, c) = e\n            if (d + c < dp[u]) {\n                dp[u] = d + c\n                queue.add(Pair(u, dp[u]))\n            }\n        }\n    }\n    val ans = dp[n]\n    if (ans == Int.MAX_VALUE) {\n        println(-1)\n    } else {\n        println(ans)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a, $b, $c = explode(' ', trim(fgets(STDIN)));\n    $graph[$a][] = [$b, $c];\n    $graph[$b][] = [$a, $c];\n}\n$k = [];\nfor ($i = 1; $i <= $n; $i++) {\n    $k[$i] = [];\n    $t = trim(fgets(STDIN));\n    $k[$i][] = (int)$t;\n    while (true) {\n        $t = trim(fgets(STDIN));\n        if ($t == '') {\n            break;\n        }\n        $k[$i][] = (int)$t;\n    }\n}\n$q = [];\n$q[] = [1, 0];\n$dist = [];\n$dist[1] = 0;\nwhile (!empty($q)) {\n    $u = array_shift($q);\n    $d = $u[1];\n    foreach ($graph[$u[0]] as $v) {\n        if (!isset($dist[$v[0]]) || $dist[$v[0]] > $d + $v[1]) {\n            $dist[$v[0]] = $d + $v[1];\n            $q[] = [$v[0], $d + $v[1]];\n        }\n    }\n}\n$ans = -1;\nfor ($i = 1; $i <= $n; $i++) {\n    $t = 0;\n    foreach ($k[$i] as $v) {\n        $t = max($t, $v);\n    }\n    if ($dist[$i] + $t <= 10 ** 9) {\n        $ans = max($ans, $dist[$i] + $t);\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.algorithm;\nimport std.array;\nimport std.conv;\nimport std.datetime;\nimport std.file;\nimport std.format;\nimport std.range;\nimport std.stdio;\nimport std.string;\n\nstruct Edge {\n    int from;\n    int to;\n    int cost;\n}\n\nstruct Node {\n    int id;\n    int time;\n    int parent;\n    int minTime;\n    bool visited;\n}\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n\n    auto edges = new Edge[m];\n    for (int i = 0; i < m; i++) {\n        int a, b, c;\n        scanf(\" %d %d %d \", &a, &b, &c);\n        edges[i] = Edge(a, b, c);\n    }\n\n    auto nodes = new Node[n];\n    for (int i = 0; i < n; i++) {\n        nodes[i] = Node(i, 0, -1, 0, false);\n    }\n\n    auto pq = new PriorityQueue!(Node);\n    pq.enqueue(nodes[0]);\n\n    while (!pq.empty()) {\n        Node node = pq.dequeue();\n\n        if (node.id == n - 1) {\n            break;\n        }\n\n        for (int i = 0; i < m; i++) {\n            if (edges[i].from == node.id) {\n                int to = edges[i].to;\n                int cost = edges[i].cost;\n\n                if (nodes[to].time > node.time + cost) {\n                    nodes[to].time = node.time + cost;\n                    nodes[to].parent = node.id;\n                    nodes[to].minTime = nodes[to].time;\n                    pq.enqueue(nodes[to]);\n                }\n            }\n        }\n    }\n\n    int minTime = nodes[n - 1].minTime;\n\n    if (minTime == 0) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %d \", minTime);\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a, @b, @c;\nmy @t;\nmy @d;\n\nmy $i, $j, $k, $l, $min, $ans;\n\n$n = <STDIN>;\n$m = <STDIN>;\n\nfor ($i = 0; $i < $m; $i++) {\n    $a[$i] = <STDIN>;\n    $b[$i] = <STDIN>;\n    $c[$i] = <STDIN>;\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    $t[$i] = <STDIN>;\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    $d[$i] = 0;\n}\n\nfor ($i = 0; $i < $m; $i++) {\n    $d[$a[$i]] = $d[$a[$i]] + $c[$i];\n    $d[$b[$i]] = $d[$b[$i]] + $c[$i];\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    $min = 1000000000;\n    for ($j = 0; $j < $t[$i]; $j++) {\n        $min = min($min, $t[$i][$j]);\n    }\n    $d[$i] = $d[$i] + $min;\n}\n\n$ans = 1000000000;\nfor ($i = 0; $i < $n; $i++) {\n    $ans = min($ans, $d[$i]);\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b, c) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        graph.entry(a).or_insert(vec![]).push((b, c));\n        graph.entry(b).or_insert(vec![]).push((a, c));\n    }\n    let mut dp = vec![std::i32::MAX; n + 1];\n    dp[1] = 0;\n    for i in 2..=n {\n        for (j, c) in graph.get(&i).unwrap().iter() {\n            dp[i] = std::cmp::min(dp[i], dp[j] + c);\n        }\n    }\n    let mut ans = dp[n];\n    for (i, v) in dp.iter().enumerate() {\n        if v == ans {\n            println!(\"{}\", i);\n            break;\n        }\n    }\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"D. Towers","description":"The city of D consists of n towers, built consecutively on a straight line. The height of the tower that goes i-th (from left to right) in the sequence equals hi. The city mayor decided to rebuild the city to make it beautiful. In a beautiful city all towers are are arranged in non-descending order of their height from left to right.The rebuilding consists of performing several (perhaps zero) operations. An operation constitutes using a crane to take any tower and put it altogether on the top of some other neighboring tower. In other words, we can take the tower that stands i-th and put it on the top of either the (i-1)-th tower (if it exists), or the (i+1)-th tower (of it exists). The height of the resulting tower equals the sum of heights of the two towers that were put together. After that the two towers can't be split by any means, but more similar operations can be performed on the resulting tower. Note that after each operation the total number of towers on the straight line decreases by 1.Help the mayor determine the minimum number of operations required to make the city beautiful.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (1\u2264n\u22645000)\u00a0\u2014 the number of towers in the city. The next line contains n space-separated integers: the i-th number hi (1\u2264hi\u226410^5) determines the height of the tower that is i-th (from left to right) in the initial tower sequence.\n","output_spec":"Print a single integer \u2014 the minimum number of operations needed to make the city beautiful.\n","notes":null,"sample_inputs":["5\n8 2 7 3 1\n","3\n5 2 1\n"],"sample_outputs":["3\n","2\n"],"id":"229-D","difficulty":2100,"tags":["dp","greedy","two+pointers"],"src_uid":"1c74a21045b2d312f68565bdaaaa8a7b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    sort(a, a + n);\n    int ans = 0;\n    for (int i = 1; i < n; i++) {\n        if (a[i] < a[i - 1]) {\n            ans += a[i - 1] - a[i];\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 1; i < n; i++) {\n            if (a[i] < a[i - 1]) {\n                ans += a[i - 1] - a[i];\n                a[i] = a[i - 1];\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(1, n):\n    if a[i] < a[i-1]:\n        ans += a[i-1] - a[i]\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\na.sort()\nprint(n-1)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);\n        int ans = 0;\n        int i = 0;\n        while (i < n - 1)\n        {\n            if (a[i] > a[i + 1])\n            {\n                ans++;\n                a[i + 1] += a[i];\n                a[i] = 0;\n            }\n            i++;\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nans = 0\n\nfor i in 0..n-1\n    if a[i] < a[i+1]\n        ans += a[i+1] - a[i]\n        a[i+1] = a[i+1] + a[i]\n    end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Tower;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, m, h, t, ans: Integer;\n  a: Array[0..5000] of Integer;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n    Readln(a[i]);\n  m := 0;\n  for i := 0 to n - 1 do\n  begin\n    h := a[i];\n    for j := i + 1 to n - 1 do\n      if a[j] > h then\n      begin\n        h := a[j];\n        k := j;\n      end;\n    for j := k - 1 downto i do\n      if a[j] < h then\n      begin\n        h := a[j];\n        t := j;\n      end;\n    if t <> i then\n    begin\n      a[t] := a[t] + a[i];\n      a[i] := 0;\n      m := m + 1;\n    end;\n  end;\n  for i := 0 to n - 1 do\n    if a[i] <> 0 then\n    begin\n      Writeln('-1');\n      Exit;\n    end;\n  Writeln(m);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    var ans int\\n    for i := 1; i < n-1; i++ {\\n        if a[i] < a[i-1] && a[i] < a[i+1] {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst h = input[1].split(' ').map(x => parseInt(x));\nconst ans = 0;\nfor (let i = 1; i < n; i++) {\n    if (h[i] < h[i - 1]) {\n        ans += h[i - 1] - h[i];\n        h[i] = h[i - 1];\n    }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    for (i in 0 until n - 1) {\n        ans += a[i + 1] - a[i]\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$ans = 0;\nfor ($i = 1; $i < $n; $i++) {\n    if ($arr[$i] < $arr[$i - 1]) {\n        $ans += $arr[$i - 1] - $arr[$i];\n        $arr[$i] = $arr[$i - 1];\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    int i = 0;\n    while (i < n - 1) {\n        if (a[i] > a[i + 1]) {\n            ans++;\n            a[i + 1] += a[i];\n            a[i] = 0;\n        }\n        i++;\n    }\n    i = n - 1;\n    while (i > 0) {\n        if (a[i] > a[i - 1]) {\n            ans++;\n            a[i - 1] += a[i];\n            a[i] = 0;\n        }\n        i--;\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @h = split ' ', <STDIN>;\n\nmy $ans = 0;\nfor (my $i = 1; $i < $n; $i++) {\n    if ($h[$i] < $h[$i - 1]) {\n        $ans += $h[$i - 1] - $h[$i];\n        $h[$i] = $h[$i - 1];\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let n: usize = input.trim().parse().unwrap();\n\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut hs: Vec<usize> = input\n        .trim()\n        .split_whitespace()\n        .map(|s| s.parse().unwrap())\n        .collect();\n\n    hs.sort();\n\n    let mut ans = 0;\n    for i in 1..n {\n        if hs[i] < hs[i - 1] {\n            ans += hs[i - 1] - hs[i];\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Second Order Statistics","description":"Once Bob needed to find the second order statistics of a sequence of integer numbers. Lets choose each number from the sequence exactly once and sort them. The value on the second position is the second order statistics of the given sequence. In other words it is the smallest element strictly greater than the minimum. Help Bob solve this problem.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains integer n (1\u2264n\u2264100) \u2014 amount of numbers in the sequence. The second line contains n space-separated integer numbers \u2014 elements of the sequence. These numbers don't exceed 100 in absolute value.\n","output_spec":"If the given sequence has the second order statistics, output this order statistics, otherwise output NO.\n","notes":null,"sample_inputs":["4\n1 2 2 -4\n","5\n1 2 3 1 1\n"],"sample_outputs":["1\n","2\n"],"id":"22-A","difficulty":800,"tags":["brute+force"],"src_uid":"930be5ec102fbe062062aa23eac75187","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[1]!=a[0]:\n    print(a[1])\nelse:\n    print('NO'\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = scanner.nextInt();\n        }\n        int min = arr[0];\n        for (int i = 1; i < n; i++) {\n            if (arr[i] < min) {\n                min = arr[i];\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] > min && arr[i] < arr[i + 1]) {\n                System.out.println(arr[i]);\n                return;\n            }\n        }\n        System.out.println(\"NO\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nif a[1] != a[0]:\n    print(a[1])\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\na.sort()\nif a[1]!=a[0]:\n    print(a[1])\nelse:\n    print('NO')\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        string[] s = Console.ReadLine().Split(' ');\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(s[i]);\n        }\n        Array.Sort(a);\n        if (a[1] != a[0])\n        {\n            Console.WriteLine(a[1]);\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\na.sort!\nif a[1] != a[0]\n  puts a[1]\nelse\n  puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program SecondOrderStatistics;\nuses SysUtils;\nvar\n  n, i, j, min, min2, a: Integer;\nbegin\n  Readln(n);\n  for i := 1 to n do\n    Readln(a[i]);\n  min := a[1];\n  for i := 2 to n do\n    if a[i] < min then\n      min := a[i];\n  for i := 1 to n do\n    if a[i] > min then\n      if a[i] < min2 then\n        min2 := a[i];\n  if min2 <> 0 then\n    Writeln(min2)\n  else\n    Writeln('NO');\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    sort.Ints(a)\\n    if a[1] != a[0] {\\n        fmt.Println(a[1])\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline());\\nconst arr = process.stdin.readline().split(' ').map(Number);\\narr.sort((a, b) => a - b);\\nconsole.log(arr[1]);\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val arr = readLine().split(\" \").map { it.toInt() }.sorted()\n    val min = arr[0]\n    val second = arr[1]\n    if (second > min) {\n        println(second)\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = (int)trim(fgets(STDIN));\\n$arr = explode(' ', trim(fgets(STDIN)));\\nsort($arr);\\nif ($n > 1) {\\n    echo $arr[1];\\n} else {\\n    echo 'NO';\\n}\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int min = a[0];\n    for (int i = 1; i < n; i++) {\n        if (a[i] < min) {\n            min = a[i];\n        }\n    }\n    int b[n];\n    for (int i = 0; i < n; i++) {\n        if (a[i] != min) {\n            b[i] = a[i];\n        }\n    }\n    b.sort();\n    if (b[1] != min) {\n        printf(\" %d \", b[1]);\n    } else {\n        printf(\" NO \");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy @b = sort { $a <=> $b } @a;\n\nif ($b[1] != $b[0]) {\n    print $b[1];\n} else {\n    print \"NO\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let n = read!();\n    let mut a = read_vec!(n);\n    a.sort();\n    if a[1] != a[0] {\n        println!(\"{}\", a[1]);\n    } else {\n        println!(\"NO\");\n    }\n}\"}]"}
{"title":"C. To Add or Not to Add","description":"A piece of paper contains an array of n integers a1,a2,...,an. Your task is to find a number that occurs the maximum number of times in this array.However, before looking for such number, you are allowed to perform not more than k following operations \u2014 choose an arbitrary element from the array and add 1 to it. In other words, you are allowed to increase some array element by 1 no more than k times (you are allowed to increase the same element of the array multiple times).Your task is to find the maximum number of occurrences of some number in the array after performing no more than k allowed operations. If there are several such numbers, your task is to find the minimum one.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and k (1\u2264n\u226410^5; 0\u2264k\u226410^9) \u2014 the number of elements in the array and the number of operations you are allowed to perform, correspondingly.\nThe third line contains a sequence of n integers a1,a2,...,an (|ai|\u226410^9) \u2014 the initial array. The numbers in the lines are separated by single spaces.\n","output_spec":"In a single line print two numbers \u2014 the maximum number of occurrences of some number in the array after at most k allowed operations are performed, and the minimum number that reaches the given maximum. Separate the printed numbers by whitespaces.\n","notes":"In the first sample your task is to increase the second element of the array once and increase the fifth element of the array twice. Thus, we get sequence 6,4,4,0,4, where number 4 occurs 3 times.\nIn the second sample you don't need to perform a single operation or increase each element by one. If we do nothing, we get array 5,5,5, if we increase each by one, we get 6,6,6. In both cases the maximum number of occurrences equals 3. So we should do nothing, as number 5 is less than number 6.\nIn the third sample we should increase the second array element once and the fifth element once. Thus, we get sequence 3,2,2,2,2, where number 2 occurs 4 times.\n","sample_inputs":["5 3\n6 3 4 0 2\n","3 4\n5 5 5\n","5 3\n3 1 2 2 1\n"],"sample_outputs":["3 4\n","3 5\n","4 2\n"],"id":"231-C","difficulty":1600,"tags":["binary+search","sortings","two+pointers"],"src_uid":"3791d1a504b39eb2e72472bcfd9a7e22","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int max_num = 0;\n    int min_num = 1000000000;\n    for (int i = 0; i < n; i++) {\n        int count = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[i] == a[j]) {\n                count++;\n            }\n        }\n        if (count > max_num) {\n            max_num = count;\n            min_num = a[i];\n        } else if (count == max_num) {\n            min_num = min(min_num, a[i]);\n        }\n    }\n    cout << max_num << \" \" << min_num << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int k = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int max = 0;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            int count = 1;\n            for (int j = i + 1; j < n; j++) {\n                if (a[i] == a[j]) {\n                    count++;\n                }\n            }\n            if (count > max) {\n                max = count;\n                min = a[i];\n            } else if (count == max) {\n                min = Math.min(min, a[i]);\n            }\n        }\n        System.out.println(max + \" \" + min);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=1\nminn=a[0]\nfor i in range(1,n):\n    if a[i]==a[i-1]:\n        ans+=1\n    else:\n        if ans>k:\n            ans=k\n        if ans>1:\n            minn=min(minn,a[i-1])\n        ans=1\nif ans>k:\n    ans=k\nif ans>1:\n    minn=min(minn,a[n-1])\nprint(ans,minn)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int max = 0;\n    int min = 1000000000;\n    for (int i = 0; i < n; i++) {\n        int count = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[i] == a[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            min = a[i];\n        } else if (count == max) {\n            if (a[i] < min) {\n                min = a[i];\n            }\n        }\n    }\n    printf(\" %d  %d \", max, min);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var m = new Dictionary<int, int>();\n        for (int i = 0; i < n; i++)\n        {\n            m[a[i]]++;\n        }\n        var max = 0;\n        var min = int.MaxValue;\n        foreach (var kv in m)\n        {\n            if (kv.Value > max)\n            {\n                max = kv.Value;\n                min = kv.Key;\n            }\n            else if (kv.Value == max)\n            {\n                min = Math.Min(min, kv.Key);\n            }\n        }\n        Console.WriteLine(max + \" \" + min);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nc=0\nfor i in range(n):\n    if a[i]==a[i+1]:\n        c+=1\n    else:\n        if c>k:\n            print(c,a[i-1])\n            break\n        else:\n            k-=c\n            c=0\nif c>k:\n    print(c,a[n-1])\nelse:\n    print(c,a[n-1])\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 100000;\nvar\n  n, k, i, j, a, b, c, d, ans, ans1, ans2: longint;\n  aa: array[0..maxn] of longint;\nbegin\n  readln(n, k);\n  for i := 0 to n - 1 do\n  begin\n    readln(a);\n    aa[a] := aa[a] + 1;\n  end;\n  ans := 0;\n  ans1 := 0;\n  ans2 := 0;\n  for i := 0 to maxn do\n  begin\n    if aa[i] > ans then\n    begin\n      ans := aa[i];\n      ans1 := i;\n    end;\n  end;\n  for i := 0 to maxn do\n  begin\n    if aa[i] = ans then\n    begin\n      if i < ans1 then\n      begin\n        ans2 := i;\n      end;\n    end;\n  end;\n  if k >= ans then\n  begin\n    writeln(ans, ' ', ans1);\n  end\n  else\n  begin\n    writeln(ans - k, ' ', ans2);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d\\n\", &n, &k)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &a[i])\n\t}\n\tsort.Ints(a)\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] > ans {\n\t\t\tans = a[i]\n\t\t}\n\t}\n\tif k >= n {\n\t\tfmt.Println(ans, ans)\n\t\treturn\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] == ans {\n\t\t\tif k > 0 {\n\t\t\t\tk--\n\t\t\t\ta[i]++\n\t\t\t}\n\t\t}\n\t}\n\tsort.Ints(a)\n\tans = 0\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] > ans {\n\t\t\tans = a[i]\n\t\t}\n\t}\n\tfmt.Println(ans, a[0])\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst k = parseInt(stdin[1]);\nconst a = stdin[2].split(' ').map(x => parseInt(x));\nconst max = Math.max(...a);\nconst count = new Map();\nfor (let i = 0; i < n; i++) {\n  if (count.has(a[i])) {\n    count.set(a[i], count.get(a[i]) + 1);\n  } else {\n    count.set(a[i], 1);\n  }\n}\nconst maxCount = Math.max(...count.values());\nconst min = Math.min(...count.keys());\nconsole.log(maxCount, min);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    val m = a.distinct().sorted()\n    val dp = Array(n + 1) { IntArray(m.size + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..m.size) {\n            dp[i][j] = dp[i - 1][j]\n            if (a[i] == m[j]) {\n                dp[i][j]++\n            } else if (a[i] > m[j]) {\n                dp[i][j] = maxOf(dp[i][j], dp[i - 1][j + 1])\n            }\n        }\n    }\n    val ans = dp.last().max()\n    val ansIndex = dp.last().indexOf(ans)\n    println(\"$ans ${m[ansIndex]}\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$k = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$a = array_count_values($a);\n$max = max($a);\n$min = min($a);\n$ans = 0;\n$ans_num = 0;\nfor ($i = 0; $i < count($a); $i++) {\n    if ($a[$i] == $max) {\n        $ans++;\n        $ans_num = $i;\n    }\n}\nif ($k >= $max - $min) {\n    echo $max . ' ' . $a[$ans_num];\n} else {\n    echo $max - $k . ' ' . $a[$ans_num] + $k;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int max = 0;\n    int min = 1000000000;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        count = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[i] == a[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n            min = a[i];\n        } else if (count == max) {\n            if (a[i] < min) {\n                min = a[i];\n            }\n        }\n    }\n    printf(\" %d  %d \", max, min);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $max = 0;\nmy $min = 10**9;\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $count = 0;\n    for (my $j = 0; $j < $n; $j++) {\n        if ($a[$i] == $a[$j]) {\n            $count++;\n        }\n    }\n    if ($count > $max) {\n        $max = $count;\n        $min = $a[$i];\n    } elsif ($count == $max) {\n        if ($a[$i] < $min) {\n            $min = $a[$i];\n        }\n    }\n}\n\nprint \"$max $min\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let n = n_k[0];\n    let k = n_k[1];\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut count = vec![0; 1000001];\n    for i in 0..n {\n        count[a[i]] += 1;\n    }\n\n    let mut max_count = 0;\n    let mut min_num = 1000001;\n    for i in 0..1000001 {\n        if count[i] > max_count {\n            max_count = count[i];\n            min_num = i;\n        }\n    }\n\n    if k >= max_count {\n        println!(\"{} {}\", max_count, min_num);\n    } else {\n        println!(\"{} {}\", max_count - k, min_num + k);\n    }\n}\n\"\"\"}]"}
{"title":"B. Non-square Equation","description":"Let's consider equation:x^2+s(x)\u00b7x-n=0, where x,n are positive integers, s(x) is the function, equal to the sum of digits of number x in the decimal number system.You are given an integer n, find the smallest positive integer root of equation x, or else determine that there are no such roots.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"A single line contains integer n (1\u2264n\u226410^18) \u2014 the equation parameter.\nPlease, do not use the %lld specifier to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specifier. \n","output_spec":"Print -1, if the equation doesn't have integer positive roots. Otherwise print such smallest integer x (x>0), that the equation given in the statement holds.\n","notes":"In the first test case x=1 is the minimum root. As s(1)=1 and 1^2+1\u00b71-2=0.\nIn the second test case x=10 is the minimum root. As s(10)=1+0=1 and 10^2+1\u00b710-110=0.\nIn the third test case the equation has no roots.\n","sample_inputs":["2\n","110\n","4\n"],"sample_outputs":["1\n","10\n","-1\n"],"id":"233-B","difficulty":1400,"tags":["binary+search","brute+force","math"],"src_uid":"e1070ad4383f27399d31b8d0e87def59","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int i = 1;\n    while (1) {\n        int s = 0;\n        for (int j = i; j > 0; j \/= 10) {\n            s += j % 10;\n        }\n        if (i * i + s * i - n == 0) {\n            cout << i << endl;\n            return 0;\n        }\n        i++;\n    }\n    cout << -1 << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int i = 1;\n        while (true) {\n            if (n == i * i + i * (int) Math.log10(i) - n) {\n                System.out.println(i);\n                break;\n            }\n            i++;\n        }\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef f(x):\n    return x**2 + sum(map(int, str(x))) * x - n\n\ndef bs(l, r):\n    if l > r:\n        return -1\n    mid = (l + r) \/\/ 2\n    if f(mid) == 0:\n        return mid\n    elif f(mid) < 0:\n        return bs(mid + 1, r)\n    else:\n        return bs(l, mid - 1)\n\nprint(bs(1, 10**18))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int i = 1;\n    while (1) {\n        int s = 0;\n        for (int j = i; j > 0; j \/= 10) {\n            s += j % 10;\n        }\n        if (i * i + s * i - n == 0) {\n            printf(\" %d \", i);\n            return 0;\n        }\n        i++;\n    }\n    printf(\" -1 \");\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int i = 1;\n            while (true)\n            {\n                int s = 0;\n                for (int j = i; j > 0; j \/= 10)\n                {\n                    s += j % 10;\n                }\n                if (i * i + s * i - n == 0)\n                {\n                    Console.WriteLine(i);\n                    break;\n                }\n                i++;\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\ndef f(x)\n  x.to_s.chars.map(&:to_i).sum\nend\n\ndef solve(n)\n  x = 1\n  while x**2 + f(x) * x - n != 0\n    x += 1\n  end\n  x\nend\n\nputs solve(n)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Solution;\n\nuses\n  SysUtils;\n\nvar\n  n: Int64;\n\nbegin\n  Readln(n);\n  if (n mod 2 = 0) and (n > 2) then\n    Writeln(-1)\n  else\n    Writeln(n div 2);\nend.\"}]}","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\"\r\n)\r\n\r\nfunc main() {\r\n\tvar n int64\r\n\tfmt.Scan(&n)\r\n\tfor i := int64(1); i <= int64(math.Sqrt(float64(n))); i++ {\r\n\t\tif n%i == 0 {\r\n\t\t\tif s(i) == i && s(n\/i) == n\/i {\r\n\t\t\t\tfmt.Println(i)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfmt.Println(-1)\r\n}\r\n\r\nfunc s(n int64) int64 {\r\n\tvar s int64\r\n\tfor n > 0 {\r\n\t\ts += n % 10\r\n\t\tn \/= 10\r\n\t}\r\n\treturn s\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().trim();\nconst n = Number(input);\n\nif (n % 2 === 0) {\n  console.log(-1);\n} else {\n  console.log(Math.floor(Math.sqrt(n \/ 2)));\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"import kotlin.math.sqrt\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val s = n.toString().map { it.toString().toInt() }.sum()\n    val x = sqrt(n - s * s).toInt()\n    if (x * x + s * x == n) {\n        println(x)\n    } else {\n        println(-1)\n    }\n}\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n\\nif ($n % 2 == 0) {\\n    echo -1;\\n} else {\\n    $s = 0;\\n    for ($i = 1; $i <= $n; $i++) {\\n        $s += $i % 10;\\n    }\\n    echo $s + 1;\\n}\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int i = 1;\n    while (i * i <= n) {\n        if (n == i * i + i * sumDigits(i) - n) {\n            printf(\" %d \", i);\n            return;\n        }\n        i++;\n    }\n    printf(\" -1 \");\n}\n\nint sumDigits(int n) {\n    int sum = 0;\n    while (n > 0) {\n        sum += n % 10;\n        n \/= 10;\n    }\n    return sum;\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $i = 1;\nwhile ($i * $i + $i * $s($i) - $n != 0) {\n    $i++;\n}\nprint $i;\n\nsub s {\n    my $n = shift;\n    my $s = 0;\n    while ($n > 0) {\n        $s += $n % 10;\n        $n = int($n \/ 10);\n    }\n    return $s;\n}\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut n = read!();\n    let mut s = 0;\n    while n > 0 {\n        s += n % 10;\n        n \/= 10;\n    }\n    if s * s - n < 0 {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", (s + n.sqrt()).floor());\n    }\n}\n\"\"\"}]"}
{"title":"A. You're Given a String...","description":"You're given a string of lower-case Latin letters. Your task is to find the length of its longest substring that can be met in the string at least twice. These occurrences can overlap (see sample test 2).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains the string. It's guaranteed, that the string is non-empty, consists of lower-case Latin letters, and its length doesn't exceed 100.\n","output_spec":"Output one number \u2014 length of the longest substring that can be met in the string at least twice.\n","notes":null,"sample_inputs":["abcd\n","ababa\n","zzz\n"],"sample_outputs":["0","3","2"],"id":"23-A","difficulty":1200,"tags":["brute+force","greedy"],"src_uid":"13b5cf94f2fabd053375a5ccf3fd44c7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \" ```c++\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n    int n = s.length();\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            int cnt = 0;\n            for (int k = i; k <= j; k++) {\n                if (s[k] == s[i]) {\n                    cnt++;\n                }\n            }\n            if (cnt > ans) {\n                ans = cnt;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.nextLine();\n        int n = s.length();\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                String sub = s.substring(i, j + 1);\n                int count = 0;\n                for (int k = 0; k < n; k++) {\n                    if (s.substring(k, k + sub.length()).equals(sub)) {\n                        count++;\n                    }\n                }\n                if (count >= 2) {\n                    ans = Math.max(ans, sub.length());\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\n\ndef dfs(s, i, j):\n    if i == j:\n        return 1\n    if s[i] != s[j]:\n        return 0\n    return dfs(s, i + 1, j - 1) + 2\n\nans = 0\nfor i in range(len(s)):\n    for j in range(i + 1, len(s)):\n        ans = max(ans, dfs(s, i, j))\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <string.h>\nint main() {\n    char s[101];\n    scanf(\" %s \", s);\n    int n = strlen(s);\n    int i, j, k, l, m, max = 0;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            for (k = j + 1; k < n; k++) {\n                if (s[i] == s[j] && s[j] == s[k]) {\n                    l = k - j + 1;\n                    if (l > max) {\n                        max = l;\n                    }\n                }\n            }\n        }\n    }\n    printf(\" %d \", max);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string s = Console.ReadLine();\n        int n = s.Length;\n        int ans = 0;\n        Dictionary<string, int> d = new Dictionary<string, int>();\n        for (int i = 0; i < n; i++)\n        {\n            string t = s.Substring(i, 1);\n            if (d.ContainsKey(t))\n            {\n                ans = Math.Max(ans, i - d[t] + 1);\n            }\n            d[t] = i;\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\n\ndef longest_substring(s):\n    longest = 0\n    i = 0\n    while i < len(s):\n        j = i + 1\n        while j < len(s) and s[i] == s[j]:\n            j += 1\n        longest = max(longest, j - i)\n        i = j\n    return longest\n\nprint(longest_substring(s))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var s, t: string;\n    i, j, k, n, m, l: integer;\nbegin\n    readln(s);\n    n := length(s);\n    m := 0;\n    for i := 1 to n - 1 do\n        for j := i + 1 to n do\n            begin\n                t := s[i] + s[j];\n                k := 0;\n                for l := 1 to n do\n                    if s[l] = t[k] then\n                    begin\n                        k := k + 1;\n                        if k = length(t) then\n                            m := max(m, l - i + 1);\n                    end;\n            end;\n    writeln(m);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"strings\"\r\n)\r\n\r\nfunc main() {\r\n    s := strings.ToLower(strings.TrimSpace(fmt.Scanln()))\r\n    m := make(map[string]int)\r\n    for i := 0; i < len(s); i++ {\r\n        for j := i + 1; j < len(s); j++ {\r\n            substr := s[i:j]\r\n            if _, ok := m[substr]; ok {\r\n                m[substr]++\r\n            } else {\r\n                m[substr] = 1\r\n            }\r\n        }\r\n    }\r\n    max := 0\r\n    for _, v := range m {\r\n        if v > max {\r\n            max = v\r\n        }\r\n    }\r\n    fmt.Println(max)\r\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = require('fs').readFileSync(0, 'utf8');\\nconst t = s.split('');\\nconst m = new Map();\\nfor (let i = 0; i < t.length; i++) {\\n  m.set(t[i], 0);\\n}\\nfor (let i = 0; i < t.length; i++) {\\n  m.set(t[i], m.get(t[i]) + 1);\\n}\\nconst max = 0;\\nfor (let i = 0; i < t.length; i++) {\\n  if (m.get(t[i]) > max) {\\n    max = m.get(t[i]);\\n  }\\n}\\nconsole.log(max);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"fun main() {\n    val s = readLine()\n    val n = s.length\n    val dp = Array(n + 1) { IntArray(n + 1) }\n    for (i in 0..n) {\n        for (j in 0..n) {\n            if (i == 0 || j == 0) {\n                dp[i][j] = 0\n            } else if (s[i - 1] == s[j - 1]) {\n                dp[i][j] = dp[i - 1][j - 1] + 1\n            } else {\n                dp[i][j] = 0\n            }\n        }\n    }\n    var ans = 0\n    for (i in 0..n) {\n        for (j in 0..n) {\n            if (dp[i][j] > ans) {\n                ans = dp[i][j]\n            }\n        }\n    }\n    println(ans)\n}\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$str = trim(fgets(STDIN));\\n$len = strlen($str);\\n$max = 0;\\n$cur = 0;\\n$prev = '';\\nfor ($i = 0; $i < $len; $i++) {\\n    if ($str[$i] != $prev) {\\n        $cur = 1;\\n        $prev = $str[$i];\\n    } else {\\n        $cur++;\\n    }\\n    if ($cur > $max) {\\n        $max = $cur;\\n    }\\n}\\necho $max;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.algorithm;\nimport std.array;\nimport std.range;\n\nvoid main() {\n    string s;\n    readln(s);\n    auto t = s.split('');\n    auto m = t.map!(x => x.to!int).array;\n    auto s = m.sort().array;\n    auto n = s.length;\n    auto i = 0;\n    auto j = 0;\n    auto k = 0;\n    auto l = 0;\n    auto r = 0;\n    auto max = 0;\n    while (i < n) {\n        while (j < n && s[j] == s[i]) {\n            j++;\n        }\n        if (j - i > max) {\n            max = j - i;\n            k = i;\n            l = j;\n        }\n        i = j;\n    }\n    while (k < l) {\n        r++;\n        k++;\n    }\n    writeln(r);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"use strict; use warnings;\n\nmy $str = <STDIN>;\nmy $len = length($str);\nmy $max = 0;\nmy $cur = 0;\nmy $prev = 0;\n\nfor (my $i = 0; $i < $len; $i++) {\n    if ($str[$i] eq $str[$prev]) {\n        $cur++;\n    } else {\n        $cur = 1;\n    }\n\n    if ($cur > $max) {\n        $max = $cur;\n    }\n\n    $prev = $i;\n}\n\nprint $max;\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"use std::collections::HashMap;\n\nfn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n\n    let mut map = HashMap::new();\n    for c in s.chars() {\n        let count = map.entry(c).or_insert(0);\n        *count += 1;\n    }\n\n    let mut max_len = 0;\n    for (k, v) in map.iter() {\n        if v >= 2 {\n            max_len = max(max_len, v);\n        }\n    }\n\n    println!(\"{}\", max_len);\n}\"}]"}
{"title":"B. Buttons","description":"Manao is trying to open a rather challenging lock. The lock has n buttons on it and to open it, you should press the buttons in a certain order to open the lock. When you push some button, it either stays pressed into the lock (that means that you've guessed correctly and pushed the button that goes next in the sequence), or all pressed buttons return to the initial position. When all buttons are pressed into the lock at once, the lock opens.Consider an example with three buttons. Let's say that the opening sequence is: {2, 3, 1}. If you first press buttons 1 or 3, the buttons unpress immediately. If you first press button 2, it stays pressed. If you press 1 after 2, all buttons unpress. If you press 3 after 2, buttons 3 and 2 stay pressed. As soon as you've got two pressed buttons, you only need to press button 1 to open the lock.Manao doesn't know the opening sequence. But he is really smart and he is going to act in the optimal way. Calculate the number of times he's got to push a button in order to open the lock in the worst-case scenario.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"A single line contains integer n (1\u2264n\u22642000) \u2014 the number of buttons the lock has.\n","output_spec":"In a single line print the number of times Manao has to push a button in the worst-case scenario.\n","notes":"Consider the first test sample. Manao can fail his first push and push the wrong button. In this case he will already be able to guess the right one with his second push. And his third push will push the second right button. Thus, in the worst-case scenario he will only need 3 pushes.\n","sample_inputs":["2\n","3\n"],"sample_outputs":["3\n","7\n"],"id":"268-B","difficulty":1000,"tags":["implementation","math"],"src_uid":"6df251ac8bf27427a24bc23d64cb9884","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n=int(input())\nprint(n+n-1)\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        System.out.println(n * 2 - 1);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nprint(n + (n - 1) \/\/ 2)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\nprint(n+n-1)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            Console.WriteLine(n * 2 - 1);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nputs (n * (n + 1)) \/ 2\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Lock;\n\nuses\n  SysUtils;\n\nvar\n  n: Integer;\n\nbegin\n  Readln(n);\n  Writeln(n div 2 + 1);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    n := int(input())\\n    fmt.Println(n + (n - 1))\\n}\\n\\nfunc input() int {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    return n\\n}\"]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readLine());\\nconsole.log(n * 2 - 1);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val ans = (n + 1) \/ 2\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n\\n$ans = 0;\\n\\nfor ($i = 1; $i <= $n; $i++) {\\n    $ans += $i;\\n}\\n\\necho $ans . PHP_EOL;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        ans += i;\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\n\nprint $n * 2 - 1;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n = read!();\n    let mut ans = 0;\n    for i in 1..n {\n        ans += i;\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Number With The Given Amount Of Divisors","description":"Given the number n, find the smallest positive integer which has exactly n divisors. It is guaranteed that for the given n the answer will not exceed 10^18.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains integer n (1\u2264n\u22641000).\n","output_spec":"Output the smallest positive integer with exactly n divisors.\n","notes":null,"sample_inputs":["4\n","6\n"],"sample_outputs":["6\n","12\n"],"id":"27-E","difficulty":2000,"tags":["brute+force","dp","number+theory"],"src_uid":"62db589bad3b7023418107de05b7a8ee","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n=int(input())\nif n==1:\n    print(1)\nelse:\n    print(2**(n-1))\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int ans = 1;\n        for (int i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                n \/= i;\n                ans *= i;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef get_divisors(n):\n    divisors = []\n    for i in range(1, int(n ** 0.5) + 1):\n        if n % i == 0:\n            divisors.append(i)\n            divisors.append(n \/\/ i)\n    return divisors\n\ndef get_smallest_integer_with_n_divisors(n):\n    divisors = get_divisors(n)\n    return min(divisors)\n\nprint(get_smallest_integer_with_n_divisors(n))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int i, j, k, l, m, s, t;\n    s = 1;\n    t = 1;\n    for (i = 2; i <= n; i++) {\n        for (j = 2; j <= i \/ 2; j++) {\n            if (i % j == 0) {\n                s = s + 1;\n            }\n        }\n        if (s == n) {\n            printf(\" %d \", i);\n            return 0;\n        }\n        s = 1;\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace Problem_1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int i = 2;\n            while (n > 1)\n            {\n                if (n % i == 0)\n                {\n                    n = n \/ i;\n                }\n                else\n                {\n                    i++;\n                }\n            }\n            Console.WriteLine(i);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\ndef divisors(n)\n  (1..n).select { |i| n % i == 0 }\nend\n\nputs divisors(n).size == n ? divisors(n).first : n * 2\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Project1;\nuses\n  SysUtils;\nvar\n  n, i, j, k, m, t: Integer;\nbegin\n  Readln(n);\n  m := 2;\n  t := 0;\n  for i := 2 to n do\n  begin\n    k := 0;\n    for j := 2 to i div 2 do\n      if i mod j = 0 then\n        k := k + 1;\n    if k = n - 1 then\n    begin\n      t := t + 1;\n      if t = 1 then\n        m := i;\n    end;\n  end;\n  Writeln(m);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport \\\"fmt\\\"\\n\\nfunc main() {\\n    n := int(input())\\n    ans := 1\\n    for i := 2; i <= n; i++ {\\n        if n%i == 0 {\\n            ans *= i\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"n=int(input())\nif n==1:\n    print(1)\nelse:\n    print(2**(n-1))\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"import kotlin.math.sqrt\\n\\nfun main() {\\n    val n = readLine()!!.toInt()\\n    var i = 2\\n    while (i * i <= n) {\\n        if (n % i == 0) {\\n            n \/= i\\n        }\\n        i++\\n    }\\n    println(n * i)\\n}\\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"#!\/usr\/bin\/env php\n<?php\n\n$n = (int)trim(fgets(STDIN));\n\n$ans = 1;\nfor ($i = 2; $i <= $n; $i++) {\n    if ($n % $i == 0) {\n        $ans *= $i;\n    }\n}\n\necho $ans;\n\nexit(0);\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int i = 2;\n    while (n > 1) {\n        if (n % i == 0) {\n            n = n \/ i;\n        } else {\n            i++;\n        }\n    }\n    printf(\" %d \", i);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $i = 2;\nmy $j = 2;\nmy $count = 0;\n\nwhile ($count < $n) {\n    while ($i * $j <= 10 ** 18) {\n        if ($i * $j % 2 == 0) {\n            $count++;\n        }\n        $j++;\n    }\n    $i++;\n    $j = 2;\n}\n\nprint $i * $j;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n = read!();\n    let mut ans = 1;\n    for i in 2..n {\n        if n % i == 0 {\n            ans = ans * i;\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Yet Another Number Game","description":"Since most contestants do not read this part, I have to repeat that Bitlandians are quite weird. They have their own jobs, their own working method, their own lives, their own sausages and their own games!Since you are so curious about Bitland, I'll give you the chance of peeking at one of these games.BitLGM and BitAryo are playing yet another of their crazy-looking genius-needed Bitlandish games. They've got a sequence of n non-negative integers a1,a2,...,an. The players make moves in turns. BitLGM moves first. Each player can and must do one of the two following actions in his turn:  Take one of the integers (we'll denote it as ai). Choose integer x (1\u2264x\u2264ai). And then decrease ai by x, that is, apply assignment: ai=ai-x.  Choose integer x . And then decrease all ai by x, that is, apply assignment: ai=ai-x, for all i. The player who cannot make a move loses.You're given the initial sequence a1,a2,...,an. Determine who wins, if both players plays optimally well and if BitLGM and BitAryo start playing the described game in this sequence.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (1\u2264n\u22643).\nThe next line contains n integers a1,a2,...,an (0\u2264ai<300).\n","output_spec":"Write the name of the winner (provided that both players play optimally well). Either \"BitLGM\" or \"BitAryo\" (without the quotes).\n","notes":null,"sample_inputs":["2\n1 1\n","2\n1 2\n","3\n1 2 1\n"],"sample_outputs":["BitLGM\n","BitAryo\n","BitLGM\n"],"id":"282-D","difficulty":2100,"tags":["dp","games"],"src_uid":"7a33b4f94082c7ef80d7e87b58497fa7","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    if (n == 1) {\n        cout << \"BitLGM\" << endl;\n    } else if (n == 2) {\n        if (a[0] == a[1]) {\n            cout << \"BitAryo\" << endl;\n        } else {\n            cout << \"BitLGM\" << endl;\n        }\n    } else {\n        if (a[0] == a[1] && a[1] == a[2]) {\n            cout << \"BitAryo\" << endl;\n        } else if (a[0] == a[1]) {\n            cout << \"BitLGM\" << endl;\n        } else if (a[1] == a[2]) {\n            cout << \"BitAryo\" << endl;\n        } else {\n            cout << \"BitLGM\" << endl;\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        if (n == 1) {\n            System.out.println(\"BitLGM\");\n        } else if (n == 2) {\n            if (a[0] == a[1]) {\n                System.out.println(\"BitAryo\");\n            } else {\n                System.out.println(\"BitLGM\");\n            }\n        } else {\n            int min = a[0];\n            for (int i = 1; i < n; i++) {\n                if (a[i] < min) {\n                    min = a[i];\n                }\n            }\n            if (min == a[0]) {\n                System.out.println(\"BitAryo\");\n            } else {\n                System.out.println(\"BitLGM\");\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"BitLGM\")\nelif n == 2:\n    if a[0] == a[1]:\n        print(\"BitAryo\")\n    else:\n        print(\"BitLGM\")\nelse:\n    if a[0] == a[1] == a[2]:\n        print(\"BitAryo\")\n    elif a[0] == a[1] and a[1] == a[2]:\n        print(\"BitLGM\")\n    elif a[0] == a[1] and a[2] == 0:\n        print(\"BitLGM\")\n    elif a[0] == a[2] and a[1] == 0:\n        print(\"BitLGM\")\n    elif a[1] == a[2] and a[0] == 0:\n        print(\"BitLGM\")\n    else:\n        print(\"BitAryo\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    if (n == 1) {\n        if (a[0] % 2 == 0) {\n            printf(\" BitAryo \");\n        } else {\n            printf(\" BitLGM \");\n        }\n    } else if (n == 2) {\n        if (a[0] == a[1]) {\n            printf(\" BitAryo \");\n        } else if (a[0] > a[1]) {\n            printf(\" BitLGM \");\n        } else {\n            printf(\" BitAryo \");\n        }\n    } else {\n        printf(\" BitLGM \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        string[] s = Console.ReadLine().Split(' ');\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(s[i]);\n        }\n        int min = a[0];\n        for (int i = 1; i < n; i++)\n        {\n            if (a[i] < min)\n            {\n                min = a[i];\n            }\n        }\n        if (min == 0)\n        {\n            Console.WriteLine(\"BitAryo\");\n        }\n        else\n        {\n            Console.WriteLine(\"BitLGM\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nif n == 1\n  puts \"BitLGM\"\nelsif n == 2\n  if a[0] == a[1]\n    puts \"BitLGM\"\n  else\n    puts \"BitAryo\"\n  end\nelse\n  if a[0] == a[1]\n    puts \"BitLGM\"\n  elsif a[0] == a[2]\n    puts \"BitLGM\"\n  elsif a[1] == a[2]\n    puts \"BitAryo\"\n  else\n    puts \"BitLGM\"\n  end\nend\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d \\\",\\n            &a[i])\\n    }\\n    if n == 1 {\\n        if a[0] == 0 {\\n            fmt.Println(\\\"BitAryo\\\")\\n        } else {\\n            fmt.Println(\\\"BitLGM\\\")\\n        }\\n    } else if n == 2 {\\n        if a[0] == 0 {\\n            fmt.Println(\\\"BitAryo\\\")\\n        } else if a[1] == 0 {\\n            fmt.Println(\\\"BitLGM\\\")\\n        } else if a[0] == a[1] {\\n            fmt.Println(\\\"BitLGM\\\")\\n        } else {\\n            fmt.Println(\\\"BitAryo\\\")\\n        }\\n    } else {\\n        fmt.Println(\\\"BitLGM\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst n = Number(rl.question());\nconst arr = rl.question().split(' ').map(Number);\n\nconst bitlgm = (arr, i) => {\n  if (i === n) {\n    return 'BitLGM';\n  }\n\n  if (arr[i] === 0) {\n    return bitlgm(arr, i + 1);\n  }\n\n  const x = Math.min(arr[i], arr[i + 1]);\n  arr[i] -= x;\n  arr[i + 1] -= x;\n\n  return bitlgm(arr, i + 1);\n};\n\nconst bitaryo = (arr, i) => {\n  if (i === n) {\n    return 'BitAryo';\n  }\n\n  if (arr[i] === 0) {\n    return bitaryo(arr, i + 1);\n  }\n\n  const x = Math.min(arr[i], arr[i + 1]);\n  arr[i] -= x;\n  arr[i + 1] -= x;\n\n  return bitaryo(arr, i + 1);\n};\n\nconsole.log(bitlgm(arr, 0) === 'BitLGM' ? 'BitLGM' : 'BitAryo');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val a = sc.nextLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(301) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..300) {\n            dp[i][j] = dp[i - 1][j]\n            if (j >= a[i - 1]) {\n                dp[i][j] = maxOf(dp[i][j], dp[i - 1][j - a[i - 1]] + 1)\n            }\n        }\n    }\n    val ans = dp[n].max()\n    if (ans == dp[n][0]) {\n        println(\"BitLGM\")\n    } else {\n        println(\"BitAryo\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$b = $a;\n$c = $a;\n$d = $a;\n$e = $a;\n$f = $a;\n$g = $a;\n$h = $a;\n$i = $a;\n$j = $a;\n$k = $a;\n$l = $a;\n$m = $a;\n$n = $a;\n$o = $a;\n$p = $a;\n$q = $a;\n$r = $a;\n$s = $a;\n$t = $a;\n$u = $a;\n$v = $a;\n$w = $a;\n$x = $a;\n$y = $a;\n$z = $a;\n$a1 = $a[0];\n$a2 = $a[1];\n$a3 = $a[2];\nif ($n == 1) {\n    if ($a1 == 0) {\n        echo 'BitAryo';\n    } else {\n        echo 'BitLGM';\n    }\n} elseif ($n == 2) {\n    if ($a1 == 0) {\n        if ($a2 == 0) {\n            echo 'BitAryo';\n        } else {\n            echo 'BitLGM';\n        }\n    } else {\n        if ($a2 == 0) {\n            echo 'BitLGM';\n        } else {\n            echo 'BitAryo';\n        }\n    }\n} elseif ($n == 3) {\n    if ($a1 == 0) {\n        if ($a2 == 0) {\n            if ($a3 == 0) {\n                echo 'BitAryo';\n            } else {\n                echo 'BitLGM';\n            }\n        } else {\n            if ($a3 == 0) {\n                echo 'BitLGM';\n            } else {\n                echo 'BitAryo';\n            }\n        }\n    } else {\n        if ($a2 == 0) {\n            if ($a3 == 0) {\n                echo 'BitLGM';\n            } else {\n                echo 'BitAryo';\n            }\n        } else {\n            if ($a3 == 0) {\n                echo 'BitAryo';\n            } else {\n                echo 'BitLGM';\n            }\n        }\n    }\n} else {\n    echo 'BitLGM';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    if (n == 1) {\n        printf(\" BitLGM \");\n    } else if (n == 2) {\n        if (a[0] == a[1]) {\n            printf(\" BitLGM \");\n        } else {\n            printf(\" BitAryo \");\n        }\n    } else {\n        if (a[0] == a[1] && a[1] == a[2]) {\n            printf(\" BitLGM \");\n        } else if (a[0] == a[1]) {\n            printf(\" BitAryo \");\n        } else if (a[1] == a[2]) {\n            printf(\" BitLGM \");\n        } else {\n            printf(\" BitAryo \");\n        }\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $winner = \"BitLGM\";\n\nif ($n == 1) {\n    if ($a[0] == 0) {\n        $winner = \"BitAryo\";\n    }\n} elsif ($n == 2) {\n    if ($a[0] == 0) {\n        $winner = \"BitAryo\";\n    } elsif ($a[1] == 0) {\n        $winner = \"BitLGM\";\n    }\n} elsif ($n == 3) {\n    if ($a[0] == 0) {\n        $winner = \"BitAryo\";\n    } elsif ($a[1] == 0) {\n        $winner = \"BitLGM\";\n    } elsif ($a[2] == 0) {\n        $winner = \"BitAryo\";\n    } elsif ($a[0] == $a[1] && $a[1] == $a[2]) {\n        $winner = \"BitLGM\";\n    } elsif ($a[0] == $a[1] && $a[1] != $a[2]) {\n        $winner = \"BitAryo\";\n    } elsif ($a[0] != $a[1] && $a[1] == $a[2]) {\n        $winner = \"BitLGM\";\n    } elsif ($a[0] != $a[1] && $a[1] != $a[2]) {\n        $winner = \"BitAryo\";\n    }\n}\n\nprint $winner;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut a: Vec<usize> = stdin.read_line().unwrap().trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    if n == 1 {\n        println!(\"BitLGM\");\n    } else if n == 2 {\n        if a[0] == a[1] {\n            println!(\"BitAryo\");\n        } else {\n            println!(\"BitLGM\");\n        }\n    } else {\n        if a[0] == a[1] && a[1] == a[2] {\n            println!(\"BitAryo\");\n        } else if a[0] == a[1] {\n            println!(\"BitLGM\");\n        } else if a[1] == a[2] {\n            println!(\"BitLGM\");\n        } else {\n            println!(\"BitAryo\");\n        }\n    }\n}\n\"\"\"}]"}
{"title":"B. pSort","description":"One day n cells of some array decided to play the following game. Initially each cell contains a number which is equal to it's ordinal number (starting from 1). Also each cell determined it's favourite number. On it's move i-th cell can exchange it's value with the value of some other j-th cell, if |i-j|=di, where di is a favourite number of i-th cell. Cells make moves in any order, the number of moves is unlimited.The favourite number of each cell will be given to you. You will also be given a permutation of numbers from 1 to n. You are to determine whether the game could move to this state.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains positive integer n (1\u2264n\u2264100) \u2014 the number of cells in the array. The second line contains n distinct integers from 1 to n \u2014 permutation. The last line contains n integers from 1 to n \u2014 favourite numbers of the cells.\n","output_spec":"If the given state is reachable in the described game, output YES, otherwise NO.\n","notes":null,"sample_inputs":["5\n5 4 3 2 1\n1 1 1 1 1\n","7\n4 3 5 1 2 7 6\n4 6 6 1 6 6 1\n","7\n4 2 5 1 3 7 6\n4 6 6 1 6 6 1\n"],"sample_outputs":["YES\n","NO\n","YES\n"],"id":"28-B","difficulty":1600,"tags":["dfs+and+similar","dsu","graphs"],"src_uid":"c4b7265ff4332225c0d5617c3233a910","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    vector<int> b(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    for (int i = 0; i < n; i++) {\n        cin >> b[i];\n    }\n    int flag = 1;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            for (int j = 0; j < n; j++) {\n                if (a[i] == b[j] && abs(i - j) == b[i]) {\n                    flag = 0;\n                    break;\n                }\n            }\n            if (flag) {\n                cout << \"NO\" << endl;\n                return 0;\n            }\n        }\n    }\n    cout << \"YES\" << endl;\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nfor i in range(n):\n    if a[i] != b[i]:\n        if b[i] - a[i] in b:\n            print(\"YES\")\n            exit()\nprint(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\nb=list(map(int,input().split()))\nfor i in range(n):\n    if a[i]!=b[i]:\n        if b[i]-a[i] in b:\n            print(\"YES\")\n            exit()\nprint(\"NO\")\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        int[] b = new int[n];\n        int[] c = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n        }\n        for (int i = 0; i < n; i++)\n        {\n            b[i] = i + 1;\n        }\n        for (int i = 0; i < n; i++)\n        {\n            c[i] = int.Parse(Console.ReadLine());\n        }\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < n; j++)\n            {\n                if (a[i] == b[j] && c[i] == j)\n                {\n                    Console.WriteLine(\"YES\");\n                    return;\n                }\n            }\n        }\n        Console.WriteLine(\"NO\");\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\nb = gets.split.map(&:to_i)\n\ndef check(a, b)\n    for i in 0..n-1\n        if a[i] != b[i]\n            if b[i] - a[i] != b[a[i]-1] - a[a[i]-1]\n                return false\n            end\n        end\n    end\n    return true\nend\n\nputs check(a, b)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram P1000;\nconst\n  MaxN = 100;\nvar\n  n, i, j, k, m, a, b, c, d: Integer;\n  f: Array[0..MaxN] of Integer;\n  p: Array[0..MaxN] of Integer;\nbegin\n  Readln(n);\n  for i := 1 to n do\n    Readln(p[i]);\n  for i := 1 to n do\n    Readln(f[i]);\n  for i := 1 to n do\n  begin\n    for j := 1 to n do\n    begin\n      if (p[i] = j) and (f[i] = 0) then\n      begin\n        f[i] := 1;\n        for k := 1 to n do\n          if (p[k] = j + f[i]) or (p[k] = j - f[i]) then\n            f[k] := 1;\n      end;\n    end;\n  end;\n  for i := 1 to n do\n  begin\n    if f[i] = 0 then\n    begin\n      Writeln('NO');\n      Exit;\n    end;\n  end;\n  Writeln('YES');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    arr := make([]int, n)\\n    for i := 0; i < n; i++ {\\n        fmt.Scan(&arr[i])\\n    }\\n    fav := make([]int, n)\\n    for i := 0; i < n; i++ {\\n        fmt.Scan(&fav[i])\\n    }\\n    flag := true\\n    for i := 0; i < n; i++ {\\n        for j := 0; j < n; j++ {\\n            if arr[i] == arr[j] && fav[i] == j-i {\\n                flag = false\\n                break\\n            }\\n        }\\n        if !flag {\\n            break\\n        }\\n    }\\n    if flag {\\n        fmt.Println(\\\"YES\\\")\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0]);\nconst a = input.split('\\n')[1].split(' ').map(Number);\nconst b = input.split('\\n')[2].split(' ').map(Number);\nconst dp = new Array(n).fill(0);\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n        if (Math.abs(i - j) == b[i]) {\n            dp[i] |= (1 << j);\n        }\n    }\n}\nfor (let i = 0; i < n; i++) {\n    if ((dp[a[i]] & (1 << i)) == 0) {\n        console.log('NO');\n        return;\n    }\n}\nconsole.log('YES');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    val b = readLine().split(\" \").map { it.toInt() }\n    val c = IntArray(n)\n    for (i in 0 until n) {\n        c[a[i] - 1] = b[i]\n    }\n    var flag = true\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            if (c[i] == j + 1 && b[i] == c[j]) {\n                flag = false\n                break\n            }\n        }\n        if (!flag) {\n            break\n        }\n    }\n    if (flag) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$b = explode(' ', trim(fgets(STDIN)));\n$c = array_fill(0, $n, 0);\nfor ($i = 0; $i < $n; $i++) {\n    $c[$a[$i] - 1] = $b[$i];\n}\n$ans = 'YES';\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($c[$i] == $b[$j] && abs($i - $j) != $c[$i]) {\n            $ans = 'NO';\n            break;\n        }\n    }\n    if ($ans == 'NO') {\n        break;\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    int b[n];\n    int c[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &c[i]);\n    }\n    int flag = 1;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            for (int j = 0; j < n; j++) {\n                if (a[i] == b[j] && abs(i - j) == c[i]) {\n                    flag = 0;\n                    break;\n                }\n            }\n            if (flag == 1) {\n                printf(\" NO \");\n                return;\n            }\n        }\n    }\n    printf(\" YES \");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\nmy @b = <STDIN>;\nchomp @b;\n\nmy $ans = 1;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] != $b[$i]) {\n        my $d = abs($a[$i] - $b[$i]);\n        if ($d != $b[$i]) {\n            $ans = 0;\n        }\n    }\n}\n\nif ($ans == 1) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = Vec::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<usize> = a.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut b = Vec::new();\n    io::stdin().read_line(&mut b).unwrap();\n    let b: Vec<usize> = b.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = true;\n    for i in 0..n {\n        if a[i] != b[i] {\n            for j in 0..n {\n                if a[i] == b[j] && (i - j) % b[i] == 0 {\n                    ans = false;\n                    break;\n                }\n            }\n        }\n    }\n\n    if ans {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"C. Bath Queue","description":"There are n students living in the campus. Every morning all students wake up at the same time and go to wash. There are m rooms with wash basins. The i-th of these rooms contains ai wash basins. Every student independently select one the rooms with equal probability and goes to it. After all students selected their rooms, students in each room divide into queues by the number of wash basins so that the size of the largest queue is the least possible. Calculate the expected value of the size of the largest queue among all rooms.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two positive integers n and m (1\u2264n,m\u226450) \u2014 the amount of students and the amount of rooms. The second line contains m integers a1,a2,... ,am (1\u2264ai\u226450). ai means the amount of wash basins in the i-th room.\n","output_spec":"Output single number: the expected value of the size of the largest queue. Your answer must have an absolute or relative error less than 10^-9.\n","notes":null,"sample_inputs":["1 1\n2\n","2 2\n1 1\n","2 3\n1 1 1\n","7 5\n1 1 2 3 1\n"],"sample_outputs":["1.00000000000000000000\n","1.50000000000000000000\n","1.33333333333333350000\n","2.50216960000000070000\n"],"id":"28-C","difficulty":2200,"tags":["combinatorics","dp","probabilities"],"src_uid":"c2b3b577c2bcb3a2a8cb48700c637270","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int n, m;\n    cin >> n >> m;\n    int a[m];\n    for (int i = 0; i < m; i++) {\n        cin >> a[i];\n    }\n    double ans = 0;\n    for (int i = 0; i < m; i++) {\n        ans += (double)a[i] \/ n;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[m];\n        for (int i = 0; i < m; i++) {\n            a[i] = sc.nextInt();\n        }\n        double ans = 0;\n        for (int i = 0; i < m; i++) {\n            ans += (double) a[i] \/ n;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ndef solve(n, m, a):\n    dp = [[0] * (m + 1) for _ in range(n + 1)]\n    for i in range(1, n + 1):\n        for j in range(1, m + 1):\n            dp[i][j] = dp[i - 1][j] + dp[i][j - 1] - dp[i - 1][j - 1]\n            dp[i][j] += (a[j - 1] - 1) * dp[i - 1][j - 1] \/ (i - 1)\n    return dp[n][m] \/ n\n\nprint(solve(n, m, a))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    double ans = 0;\n    for (int i = 0; i < m; i++) {\n        ans += (double)a[i] * (a[i] - 1) \/ 2;\n    }\n    ans \/= n;\n    printf(\" %.10f \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var s = Console.ReadLine().Split(' ');\n            var n = int.Parse(s[0]);\n            var m = int.Parse(s[1]);\n            var a = Console.ReadLine().Split(' ');\n            var sum = 0;\n            var max = 0;\n            for (int i = 0; i < m; i++)\n            {\n                sum += int.Parse(a[i]);\n                max = Math.Max(max, int.Parse(a[i]));\n            }\n            Console.WriteLine(sum \/ n + (n - sum \/ max) * max \/ n);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m=map(int,input().split())\na=list(map(int,input().split()))\ns=0\nfor i in range(m):\n    s+=a[i]\nprint(s\/n)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram p1001;\nconst\n  maxn = 50;\nvar\n  n, m, i, j, k, s, t, p, q, r, a: integer;\n  f: array[0..maxn] of real;\nbegin\n  readln(n, m);\n  for i := 1 to m do\n  begin\n    readln(a[i]);\n    s := s + a[i];\n  end;\n  for i := 1 to m do\n  begin\n    f[i] := 0;\n    for j := 1 to a[i] do\n    begin\n      for k := 1 to m do\n      begin\n        if k <> i then\n          f[i] := f[i] + (a[k] \/ s) * f[k];\n      end;\n    end;\n  end;\n  t := 0;\n  for i := 1 to m do\n  begin\n    t := t + (a[i] \/ s) * (f[i] + 1);\n  end;\n  writeln(t);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a []int\\n    for i := 0; i < m; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    var sum int\\n    for i := 0; i < m; i++ {\\n        sum += a[i]\\n    }\\n    var ans float64\\n    for i := 0; i < m; i++ {\\n        ans += float64(a[i]) * (float64(n) \/ float64(sum))\\n    }\\n    fmt.Printf(\\\"%.9f\\\\n\\\", ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst dp = new Array(m + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= m; i++) {\n    for (let j = 0; j <= n; j++) {\n        dp[i] += dp[i - 1] * (j \/ n) * (1 - (j \/ n) ** a[i - 1]);\n    }\n}\nconsole.log(dp[m]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    val s = a.sum()\n    val p = s \/ n\n    val q = s % n\n    val ans = 0.0\n    for (i in 0 until m) {\n        val x = a[i]\n        val y = x - p\n        val z = x - q\n        ans += (x * x + y * y + z * z) \/ 3.0\n    }\n    println(ans \/ m)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$sum = 0;\nfor ($i = 0; $i < $m; $i++) {\n    $sum += $a[$i];\n}\n$ans = 0;\nfor ($i = 0; $i < $m; $i++) {\n    $ans += $a[$i] * ($n - $sum) \/ $sum;\n}\necho number_format($ans, 10, '.', '');\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    double ans = 0;\n    for (int i = 0; i < m; i++) {\n        ans += a[i] * (a[i] - 1) \/ 2;\n    }\n    ans \/= n;\n    printf(\" %.10f \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $sum = 0;\nfor (my $i = 0; $i < $m; $i++) {\n    $sum += $a[$i];\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $m; $i++) {\n    $ans += $a[$i] * ($a[$i] - 1) \/ $sum;\n}\n\nprint $ans . \"\\n\";\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n_m: Vec<i32> = Vec::new();\n    let mut a: Vec<i32> = Vec::new();\n\n    stdin.read_line(&mut n_m).unwrap();\n    let n_m: Vec<i32> = n_m.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    stdin.read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut sum: i32 = 0;\n    for i in 0..n_m[1] {\n        sum += a[i] * (a[i] - 1) \/ 2;\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", sum \/ n_m[0])).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Codeforces World Finals","description":"The king Copa often has been reported about the Codeforces site, which is rapidly getting more and more popular among the brightest minds of the humanity, who are using it for training and competing. Recently Copa understood that to conquer the world he needs to organize the world Codeforces tournament. He hopes that after it the brightest minds will become his subordinates, and the toughest part of conquering the world will be completed.The final round of the Codeforces World Finals 20YY is scheduled for DD.MM.YY, where DD is the day of the round, MM is the month and YY are the last two digits of the year. Bob is lucky to be the first finalist form Berland. But there is one problem: according to the rules of the competition, all participants must be at least 18 years old at the moment of the finals. Bob was born on BD.BM.BY. This date is recorded in his passport, the copy of which he has already mailed to the organizers. But Bob learned that in different countries the way, in which the dates are written, differs. For example, in the US the month is written first, then the day and finally the year. Bob wonders if it is possible to rearrange the numbers in his date of birth so that he will be at least 18 years old on the day DD.MM.YY. He can always tell that in his motherland dates are written differently. Help him.According to another strange rule, eligible participant must be born in the same century as the date of the finals. If the day of the finals is participant's 18-th birthday, he is allowed to participate. As we are considering only the years from 2001 to 2099 for the year of the finals, use the following rule: the year is leap if it's number is divisible by four.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains the date DD.MM.YY, the second line contains the date BD.BM.BY. It is guaranteed that both dates are correct, and YY and BY are always in [01;99].\nIt could be that by passport Bob was born after the finals. In this case, he can still change the order of numbers in date.\n","output_spec":"If it is possible to rearrange the numbers in the date of birth so that Bob will be at least 18 years old on the DD.MM.YY, output YES. In the other case, output NO. \nEach number contains exactly two digits and stands for day, month or year in a date. Note that it is permitted to rearrange only numbers, not digits.\n","notes":null,"sample_inputs":["01.01.98\n01.01.80\n","20.10.20\n10.02.30\n","28.02.74\n28.02.64\n"],"sample_outputs":["YES\n","NO\n","NO\n"],"id":"30-B","difficulty":1700,"tags":["implementation"],"src_uid":"5418c98fe362909f7b28f95225837d33","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s1, s2;\n    cin >> s1 >> s2;\n    int d1, m1, y1, d2, m2, y2;\n    d1 = stoi(s1.substr(0, 2));\n    m1 = stoi(s1.substr(2, 2));\n    y1 = stoi(s1.substr(4, 2));\n    d2 = stoi(s2.substr(0, 2));\n    m2 = stoi(s2.substr(2, 2));\n    y2 = stoi(s2.substr(4, 2));\n    if (y1 == y2) {\n        if (m1 == m2) {\n            if (d1 >= d2) {\n                cout << \"YES\" << endl;\n            } else {\n                cout << \"NO\" << endl;\n            }\n        } else if (m1 > m2) {\n            cout << \"YES\" << endl;\n        } else {\n            cout << \"NO\" << endl;\n        }\n    } else if (y1 < y2) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String[] date1 = sc.nextLine().split(\"\\\\.\");\n        String[] date2 = sc.nextLine().split(\"\\\\.\");\n        int d1 = Integer.parseInt(date1[0]);\n        int m1 = Integer.parseInt(date1[1]);\n        int y1 = Integer.parseInt(date1[2]);\n        int d2 = Integer.parseInt(date2[0]);\n        int m2 = Integer.parseInt(date2[1]);\n        int y2 = Integer.parseInt(date2[2]);\n        if (y1 < y2) {\n            System.out.println(\"YES\");\n        } else if (y1 == y2) {\n            if (m1 < m2) {\n                System.out.println(\"YES\");\n            } else if (m1 == m2) {\n                if (d1 < d2) {\n                    System.out.println(\"YES\");\n                } else {\n                    System.out.println(\"NO\");\n                }\n            } else {\n                System.out.println(\"NO\");\n            }\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    d1, m1, y1 = map(int, input().split('.'))\n    d2, m2, y2 = map(int, input().split('.'))\n    if y1 < y2:\n        print('YES')\n    elif y1 == y2:\n        if m1 < m2:\n            print('YES')\n        elif m1 == m2:\n            if d1 < d2:\n                print('YES')\n            else:\n                print('NO')\n        else:\n            print('NO')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int d1, m1, y1, d2, m2, y2;\n    scanf(\" %d.%d.%d \", &d1, &m1, &y1);\n    scanf(\" %d.%d.%d \", &d2, &m2, &y2);\n    int dd = d1 * 100 + d2;\n    int mm = m1 * 100 + m2;\n    int yy = y1 * 100 + y2;\n    int dd1 = d1 * 100 + m2;\n    int mm1 = m1 * 100 + d2;\n    int yy1 = y1 * 100 + y2;\n    int dd2 = d2 * 100 + m1;\n    int mm2 = m2 * 100 + d1;\n    int yy2 = y1 * 100 + y2;\n    if (dd >= 1800 && dd <= 2099 && mm >= 1 && mm <= 12 && yy >= 0 && yy <= 99) {\n        if (dd1 >= 1800 && dd1 <= 2099 && mm1 >= 1 && mm1 <= 12 && yy1 >= 0 && yy1 <= 99) {\n            if (dd2 >= 1800 && dd2 <= 2099 && mm2 >= 1 && mm2 <= 12 && yy2 >= 0 && yy2 <= 99) {\n                if (dd == d1 && mm == m1 && yy == y1) {\n                    printf(\" YES \");\n                } else if (dd == d2 && mm == m2 && yy == y1) {\n                    printf(\" YES \");\n                } else if (dd == d1 && mm == m2 && yy == y1) {\n                    printf(\" YES \");\n                } else if (dd == d2 && mm == m1 && yy == y1) {\n                    printf(\" YES \");\n                } else {\n                    printf(\" NO \");\n                }\n            } else {\n                printf(\" NO \");\n            }\n        } else {\n            printf(\" NO \");\n        }\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Codeforces\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] finals = Console.ReadLine().Split(' ');\n            string[] birth = Console.ReadLine().Split(' ');\n            int finalYear = int.Parse(finals[2]);\n            int finalMonth = int.Parse(finals[1]);\n            int finalDay = int.Parse(finals[0]);\n            int birthYear = int.Parse(birth[2]);\n            int birthMonth = int.Parse(birth[1]);\n            int birthDay = int.Parse(birth[0]);\n            int age = finalYear - birthYear;\n            if (finalMonth < birthMonth)\n            {\n                age--;\n            }\n            else if (finalMonth == birthMonth && finalDay < birthDay)\n            {\n                age--;\n            }\n            if (age >= 18)\n            {\n                Console.WriteLine(\"YES\");\n            }\n            else\n            {\n                Console.WriteLine(\"NO\");\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main\n    finals = gets.chomp.split('.')\n    birth = gets.chomp.split('.')\n    finals_year = finals[2].to_i\n    finals_month = finals[1].to_i\n    finals_day = finals[0].to_i\n    birth_year = birth[2].to_i\n    birth_month = birth[1].to_i\n    birth_day = birth[0].to_i\n    if finals_year == birth_year\n        if finals_month > birth_month\n            if finals_month - birth_month >= 18\n                print 'YES'\n            else\n                print 'NO'\n            end\n        elsif finals_month < birth_month\n            if birth_month - finals_month >= 18\n                print 'YES'\n            else\n                print 'NO'\n            end\n        else\n            if finals_day > birth_day\n                if finals_day - birth_day >= 18\n                    print 'YES'\n                else\n                    print 'NO'\n                end\n            else\n                if birth_day - finals_day >= 18\n                    print 'YES'\n                else\n                    print 'NO'\n                end\n            end\n        end\n    else\n        print 'NO'\n    end\nend\n\nmain()\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  dd, mm, yy, bd, bm, by: integer;\n  \nbegin\n  readln(dd, mm, yy);\n  readln(bd, bm, by);\n  \n  if (yy < 20) then\n    yy := yy + 2000\n  else\n    yy := yy + 1900;\n  \n  if (by < 20) then\n    by := by + 2000\n  else\n    by := by + 1900;\n  \n  if (yy = by) and (bd >= dd) and (bm >= mm) then\n    writeln('YES')\n  else\n    writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    var d1, m1, y1, d2, m2, y2 int\n    fmt.Scanf(\" %d.%d.%d \", &d1, &m1, &y1)\n    fmt.Scanf(\" %d.%d.%d \", &d2, &m2, &y2)\n\n    if y1 < y2 {\n        fmt.Println(\"NO\")\n        return\n    }\n\n    if y1 == y2 {\n        if m1 < m2 {\n            fmt.Println(\"NO\")\n            return\n        }\n\n        if m1 == m2 {\n            if d1 < d2 {\n                fmt.Println(\"NO\")\n                return\n            }\n        }\n    }\n\n    if y1 > y2 {\n        if y1-y2 < 18 {\n            fmt.Println(\"NO\")\n            return\n        }\n    }\n\n    var dd, mm, yy int\n    dd = d1\n    mm = m1\n    yy = y1\n\n    if dd > d2 {\n        dd = d2\n    }\n\n    if mm > m2 {\n        mm = m2\n    }\n\n    if yy > y2 {\n        yy = y2\n    }\n\n    if dd == d2 && mm == m2 && yy == y2 {\n        fmt.Println(\"YES\")\n        return\n    }\n\n    if yy < 2000 {\n        yy += 2000\n    }\n\n    if yy%4 == 0 && yy%100 != 0 || yy%400 == 0 {\n        mm += 2\n    }\n\n    if mm > 12 {\n        mm -= 12\n        yy += 1\n    }\n\n    if dd > 31 {\n        dd -= 31\n        mm += 1\n    }\n\n    if mm > 12 {\n        mm -= 12\n        yy += 1\n    }\n\n    fmt.Println(\"YES\")\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst d1 = input[0].split('.')[0];\nconst m1 = input[0].split('.')[1];\nconst y1 = input[0].split('.')[2];\nconst d2 = input[1].split('.')[0];\nconst m2 = input[1].split('.')[1];\nconst y2 = input[1].split('.')[2];\nconst age = (y1 - y2) + 1;\nconst isLeap = (y1 % 4 == 0 && y1 % 100 != 0) || y1 % 400 == 0;\nconst isBirthday = d1 == d2 && m1 == m2;\nconst is18 = age >= 18;\nconst isSameCentury = y1 \/ 100 == y2 \/ 100;\nif (isSameCentury && isBirthday && is18) {\n  console.log('YES');\n} else {\n  console.log('NO');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val input = Scanner(System.`in`)\n    val finals = input.nextLine().split(\".\")\n    val birth = input.nextLine().split(\".\")\n    val finalsYear = finals[2].toInt()\n    val finalsMonth = finals[1].toInt()\n    val finalsDay = finals[0].toInt()\n    val birthYear = birth[2].toInt()\n    val birthMonth = birth[1].toInt()\n    val birthDay = birth[0].toInt()\n    val age = finalsYear - birthYear\n    val monthDiff = finalsMonth - birthMonth\n    val dayDiff = finalsDay - birthDay\n    if (age >= 18) {\n        if (monthDiff >= 0 && dayDiff >= 0) {\n            println(\"YES\")\n        } else {\n            println(\"NO\")\n        }\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$d1 = explode('.', trim(fgets(STDIN)));\n$d2 = explode('.', trim(fgets(STDIN)));\n$y1 = $d1[2];\n$m1 = $d1[1];\n$d1 = $d1[0];\n$y2 = $d2[2];\n$m2 = $d2[1];\n$d2 = $d2[0];\n$age = 2023 - $y2;\nif ($y1 == $y2) {\n    if ($m1 > $m2) {\n        $age--;\n    } elseif ($m1 == $m2) {\n        if ($d1 > $d2) {\n            $age--;\n        }\n    }\n}\nif ($age >= 18) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\nimport std.conv;\n\nvoid main() {\n    string[] s = readln().split(' ');\n    int d1 = to!int(s[0]);\n    int m1 = to!int(s[1]);\n    int y1 = to!int(s[2]);\n    s = readln().split(' ');\n    int d2 = to!int(s[0]);\n    int m2 = to!int(s[1]);\n    int y2 = to!int(s[2]);\n\n    int age = 2019 - y2 + 1;\n    if (y1 != y2) {\n        if (y1 < y2) {\n            writeln(\"NO\");\n            return;\n        }\n        if (y1 > y2) {\n            age -= 1;\n        }\n    }\n    if (m1 != m2) {\n        if (m1 < m2) {\n            writeln(\"NO\");\n            return;\n        }\n        if (m1 > m2) {\n            age -= 1;\n        }\n    }\n    if (d1 != d2) {\n        if (d1 < d2) {\n            writeln(\"NO\");\n            return;\n        }\n        if (d1 > d2) {\n            age -= 1;\n        }\n    }\n    if (age >= 18) {\n        writeln(\"YES\");\n    } else {\n        writeln(\"NO\");\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $d1 = <STDIN>;\nmy $m1 = <STDIN>;\nmy $y1 = <STDIN>;\nmy $d2 = <STDIN>;\nmy $m2 = <STDIN>;\nmy $y2 = <STDIN>;\n\nmy $d11 = substr($d1, 0, 1);\nmy $d12 = substr($d1, 1, 1);\nmy $m11 = substr($m1, 0, 1);\nmy $m12 = substr($m1, 1, 1);\nmy $y11 = substr($y1, 0, 1);\nmy $y12 = substr($y1, 1, 1);\n\nmy $d21 = substr($d2, 0, 1);\nmy $d22 = substr($d2, 1, 1);\nmy $m21 = substr($m2, 0, 1);\nmy $m22 = substr($m2, 1, 1);\nmy $y21 = substr($y2, 0, 1);\nmy $y22 = substr($y2, 1, 1);\n\nmy $d112 = $d11 * 10 + $d12;\nmy $d122 = $d21 * 10 + $d22;\nmy $m112 = $m11 * 10 + $m12;\nmy $m122 = $m21 * 10 + $m22;\nmy $y112 = $y11 * 10 + $y12;\nmy $y122 = $y21 * 10 + $y22;\n\nif ($y112 == $y212) {\n    if ($m112 == $m212) {\n        if ($d112 >= $d212) {\n            print \"YES\\n\";\n        } else {\n            print \"NO\\n\";\n        }\n    } else {\n        if ($m112 > $m212) {\n            print \"YES\\n\";\n        } else {\n            print \"NO\\n\";\n        }\n    }\n} else {\n    print \"NO\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<&str> = input.split(\".\").collect();\n    let day = input_vec[0].parse::<i32>().unwrap();\n    let month = input_vec[1].parse::<i32>().unwrap();\n    let year = input_vec[2].parse::<i32>().unwrap();\n\n    input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<&str> = input.split(\".\").collect();\n    let birth_day = input_vec[0].parse::<i32>().unwrap();\n    let birth_month = input_vec[1].parse::<i32>().unwrap();\n    let birth_year = input_vec[2].parse::<i32>().unwrap();\n\n    let age = year - birth_year;\n    if age >= 18 {\n        if month < birth_month {\n            println!(\"YES\");\n        } else if month == birth_month && day < birth_day {\n            println!(\"YES\");\n        } else {\n            println!(\"NO\");\n        }\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"D. King's Problem?","description":"Every true king during his life must conquer the world, hold the Codeforces world finals, win pink panda in the shooting gallery and travel all over his kingdom.King Copa has already done the first three things. Now he just needs to travel all over the kingdom. The kingdom is an infinite plane with Cartesian coordinate system on it. Every city is a point on this plane. There are n cities in the kingdom at points with coordinates (x1,0),(x2,0),...,(xn,0), and there is one city at point (xn+1,yn+1). King starts his journey in the city number k. Your task is to find such route for the king, which visits all cities (in any order) and has minimum possible length. It is allowed to visit a city twice. The king can end his journey in any city. Between any pair of cities there is a direct road with length equal to the distance between the corresponding points. No two cities may be located at the same point.","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and k (1\u2264n\u226410^5,1\u2264k\u2264n+1) \u2014 amount of cities and index of the starting city. The second line contains n+1 numbers xi. The third line contains yn+1. All coordinates are integers and do not exceed 10^6 by absolute value. No two cities coincide.\n","output_spec":"Output the minimum possible length of the journey. Your answer must have relative or absolute error less than 10^-6.\n","notes":null,"sample_inputs":["3 1\n0 1 2 1\n1\n","3 1\n1 0 2 1\n1\n","4 5\n0 5 -1 -5 2\n3\n"],"sample_outputs":["3.41421356237309490000","3.82842712474619030000","14.24264068711928400000"],"id":"30-D","difficulty":2600,"tags":["geometry","greedy"],"src_uid":"f9ed5faca211e654d9d4e0a7557616f4","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int x[n + 1], y[n + 1];\n    for (int i = 0; i < n + 1; i++) {\n        cin >> x[i];\n    }\n    for (int i = 0; i < n + 1; i++) {\n        cin >> y[i];\n    }\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans += sqrt((x[i + 1] - x[i]) * (x[i + 1] - x[i]) + (y[i + 1] - y[i]) * (y[i + 1] - y[i]));\n    }\n    ans += sqrt((x[k] - x[n]) * (x[k] - x[n]) + (y[k] - y[n]) * (y[k] - y[n]));\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, k;\n        n = sc.nextInt();\n        k = sc.nextInt();\n        int[] x = new int[n + 1];\n        int[] y = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n        }\n        y[n] = sc.nextInt();\n        double ans = 0;\n        for (int i = 0; i < n; i++) {\n            ans += Math.sqrt(Math.pow(x[i] - x[k], 2) + Math.pow(y[i] - y[k], 2));\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\nx = list(map(int, input().split()))\ny = int(input())\n\ndef dist(a, b):\n    return ((a[0] - b[0])**2 + (a[1] - b[1])**2)**0.5\n\nans = 0\nfor i in range(n):\n    ans += dist(x[i], x[i+1])\n\nans += dist(x[k-1], (0, y))\nans += dist((0, y), x[k])\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <math.h>\n\nint main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int x[n + 1];\n    int y[n + 1];\n    for (int i = 0; i < n + 1; i++) {\n        scanf(\" %d \", &x[i]);\n    }\n    for (int i = 0; i < n + 1; i++) {\n        scanf(\" %d \", &y[i]);\n    }\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans += sqrt(pow(x[i + 1] - x[i], 2) + pow(y[i + 1] - y[i], 2));\n    }\n    ans += sqrt(pow(x[k] - x[n], 2) + pow(y[k] - y[n], 2));\n    printf(\" %.10f \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k = int.Parse(Console.ReadLine());\n        var x = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var y = int.Parse(Console.ReadLine());\n\n        var ans = 0.0;\n        for (int i = 0; i < n; i++)\n        {\n            ans += Math.Sqrt(Math.Pow(x[i] - x[k], 2) + Math.Pow(y - y[i], 2));\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\nx = gets.split.map(&:to_i)\ny = gets.to_i\n\nans = 0\nfor i in 0..n\n  ans += Math.sqrt((x[i] - x[k])**2 + (y - y[i])**2)\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram King;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j: Integer;\n  x, y: Array[0..100000] of Integer;\n  s: Double;\n\nbegin\n  Readln(n, k);\n  for i := 0 to n do\n    Read(x[i]);\n  Read(y[n]);\n  s := 0;\n  for i := 0 to n do\n    for j := i + 1 to n do\n      s := s + Sqrt(sqr(x[i] - x[j]) + sqr(y[i] - y[j]));\n  s := s + Sqrt(sqr(x[k] - x[n]) + sqr(y[k] - y[n]));\n  Writeln(s:0:6);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, k int\\n    fmt.Scanf(\\\"%d%d\\\\n\\\", &n, &k)\\n    var xs []int\\n    for i := 0; i < n+1; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        xs = append(xs, x)\\n    }\\n    var y int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &y)\\n    var ans float64\\n    for i := 0; i < n; i++ {\\n        ans += math.Sqrt(float64(xs[i]*xs[i] + y*y))\\n    }\\n    ans += math.Sqrt(float64(xs[n]*xs[n] + (y-xs[k])*y))\\n    fmt.Printf(\\\"%.10f\\\\n\\\", ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n,k=map(int,input().split());x=list(map(int,input().split()));y=int(input());\nprint(min(sum(x[i+1]-x[i] for i in range(n)),sum(x[i]-x[i+1] for i in range(n)))+abs(x[k]-x[n])+abs(y-x[n]))\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val x = readLine().split(\" \").map { it.toInt() }\n    val y = readLine().toInt()\n\n    val dp = Array(n + 2) { Array(n + 2) { Double.MAX_VALUE } }\n    dp[0][0] = 0.0\n\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            for (l in 0 until n) {\n                dp[i + 1][j + 1] = minOf(dp[i + 1][j + 1], dp[i][j] + sqrt(pow(x[i + 1] - x[j], 2.0) + pow(y - y[j], 2.0)))\n            }\n        }\n    }\n\n    println(dp[n][n])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $k = explode(' ', trim(fgets(STDIN)));\n$x = explode(' ', trim(fgets(STDIN)));\n$y = trim(fgets(STDIN));\n$x[0] = $x[0] - $x[$k - 1];\n$y[0] = $y[0] - $y[$k - 1];\n$x[count($x) - 1] = $x[count($x) - 1] - $x[$k - 1];\n$y[count($y) - 1] = $y[count($y) - 1] - $y[$k - 1];\n$ans = sqrt(pow($x[0], 2) + pow($y[0], 2));\nfor ($i = 1; $i < count($x); $i++) {\n    $ans += sqrt(pow($x[$i] - $x[$i - 1], 2) + pow($y[$i] - $y[$i - 1], 2));\n}\necho round($ans, 6);\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    auto x = new int[n + 1];\n    auto y = new int[n + 1];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &x[i]);\n    }\n    scanf(\" %d \", &y[n]);\n    auto d = new double[n + 1];\n    for (int i = 0; i < n + 1; i++) {\n        d[i] = sqrt(x[i] * x[i] + y[i] * y[i]);\n    }\n    double ans = 0;\n    for (int i = 0; i < n; i++) {\n        ans += d[i];\n    }\n    ans += d[k] + d[n];\n    printf(\" %.10f \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @x;\nmy $y;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@x = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n$y = $line;\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    $ans += sqrt(($x[$i] - $x[$k])**2 + ($y - $x[$i])**2);\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    let n = n_k[0];\n    let k = n_k[1];\n    let mut x = Vec::new();\n    let mut y = Vec::new();\n    for _ in 0..n {\n        line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        x.push(line.split_whitespace().map(|x| x.parse::<i64>().unwrap()).collect::<Vec<i64>>());\n    }\n    line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    y.push(line.split_whitespace().map(|x| x.parse::<i64>().unwrap()).collect::<Vec<i64>>());\n    let mut ans = 0.0;\n    for i in 0..n {\n        ans += (x[i][0] - x[k][0]).pow(2) + (y[i][0] - y[k][0]).pow(2);\n    }\n    ans = ans.sqrt();\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Sysadmin Bob","description":"Email address in Berland is a string of the form A@B, where A and B are arbitrary strings consisting of small Latin letters. Bob is a system administrator in \u00abBersoft\u00bb company. He keeps a list of email addresses of the company's staff. This list is as a large string, where all addresses are written in arbitrary order, separated by commas. The same address can be written more than once.Suddenly, because of unknown reasons, all commas in Bob's list disappeared. Now Bob has a string, where all addresses are written one after another without any separators, and there is impossible to determine, where the boundaries between addresses are. Unfortunately, on the same day his chief asked him to bring the initial list of addresses. Now Bob wants to disjoin addresses in some valid way. Help him to do that.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 second","memory_limit":"256 megabytes","input_spec":"The first line contains the list of addresses without separators. The length of this string is between 1 and 200, inclusive. The string consists only from small Latin letters and characters \u00ab@\u00bb.\n","output_spec":"If there is no list of the valid (according to the Berland rules) email addresses such that after removing all commas it coincides with the given string, output No solution. In the other case, output the list. The same address can be written in this list more than once. If there are several solutions, output any of them.\n","notes":null,"sample_inputs":["a@aa@a\n","a@a@a\n","@aa@a\n"],"sample_outputs":["a@a,a@a\n","No solution\n","No solution\n"],"id":"31-B","difficulty":1500,"tags":["greedy","implementation","strings"],"src_uid":"71b4674e91e0bc5521c416cfc570a090","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s;\n    cin >> s;\n    int n = s.length();\n    int i = 0;\n    int j = 0;\n    string ans = \"\";\n    while (i < n) {\n        if (s[i] == '@') {\n            j = i + 1;\n            while (j < n && s[j] != '@') {\n                j++;\n            }\n            ans += s.substr(i, j - i) + \",\";\n            i = j;\n        }\n        i++;\n    }\n    if (ans.length() == 0) {\n        cout << \"No solution\" << endl;\n    } else {\n        cout << ans.substr(0, ans.length() - 1) << endl;\n    }\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String str = scanner.nextLine();\n        String[] arr = str.split(\"@\");\n        for (int i = 0; i < arr.length; i++) {\n            System.out.print(arr[i] + \",\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\n\ndef is_valid(s):\n    if len(s) < 3:\n        return False\n    if s[0] == '@' or s[-1] == '@':\n        return False\n    for i in range(1, len(s) - 1):\n        if s[i] == '@':\n            return False\n    return True\n\ndef solve(s):\n    res = []\n    i = 0\n    while i < len(s):\n        while i < len(s) and s[i] != '@':\n            i += 1\n        if i < len(s):\n            res.append(s[i:i + 2])\n            i += 2\n    return res\n\nres = solve(s)\nif len(res) == 0:\n    print('No solution')\nelse:\n    print(','.join(res))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    char s[201];\n    scanf(\" %s \", s);\n    int i, j, k, n = 0, m = 0;\n    for (i = 0; i < 201; i++) {\n        if (s[i] == '@') {\n            n++;\n        }\n    }\n    for (i = 0; i < 201; i++) {\n        if (s[i] == '@') {\n            m++;\n        }\n    }\n    if (n == m) {\n        for (i = 0; i < 201; i++) {\n            if (s[i] == '@') {\n                printf(\" %c@%s \", s[i - 1], s[i + 1]);\n            }\n        }\n    } else {\n        printf(\" No solution \");\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string str = Console.ReadLine();\n        string[] arr = str.Split('@');\n        List<string> list = new List<string>();\n        for (int i = 0; i < arr.Length; i++)\n        {\n            list.Add(arr[i]);\n        }\n        string res = \"\";\n        for (int i = 0; i < list.Count; i++)\n        {\n            res += list[i] + \",\";\n        }\n        res = res.Substring(0, res.Length - 1);\n        Console.WriteLine(res);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def solve(s)\n    a = s.split('@')\n    b = []\n    for i in range(len(a)):\n        if a[i] != '':\n            b.append(a[i])\n    return ','.join(b)\n\n\nif __name__ == '__main__':\n    s = input()\n    print(solve(s))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Berland;\n\nuses\n  SysUtils;\n\nvar\n  s: string;\n  i, j, k: integer;\n  a: array[0..200] of string;\n\nbegin\n  readln(s);\n  i := 0;\n  for j := 1 to length(s) - 1 do\n    if s[j] = '@' then\n    begin\n      a[i] := s[i..j - 1];\n      inc(i);\n    end;\n  a[i] := s[i..length(s) - 1];\n  for i := 0 to i - 1 do\n  begin\n    for j := 0 to i - 1 do\n      if a[i] = a[j] then\n        break;\n    if j = i - 1 then\n      write(a[i], ',');\n  end;\n  if i = 0 then\n    writeln('No solution');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var s string\\n    fmt.Scan(&s)\\n    var ans []string\\n    var i int\\n    for i = 0; i < len(s); i++ {\\n        if s[i] == '@' {\\n            ans = append(ans, s[i-1:i+1])\\n        }\\n    }\\n    fmt.Println(strings.Join(ans, ','))\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = require('fs').readFileSync('\/dev\/stdin').toString().trim();\\nconst a = s.split('@').filter(x => x.length > 0);\\nconsole.log(a.join(','));\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val ans = mutableListOf<String>()\n    var i = 0\n    while (i < s.length) {\n        if (s[i] == '@') {\n            ans.add(s.substring(i + 1, s.indexOf('@', i + 1)))\n        }\n        i++\n    }\n    println(ans.joinToString(\",\"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$str = trim(fgets(STDIN));\n$arr = explode('@', $str);\n$res = [];\nforeach ($arr as $item) {\n    if (strpos($item, '@') !== false) {\n        $res[] = $item;\n    }\n}\nif (count($res) == 0) {\n    echo 'No solution';\n} else {\n    echo implode(',', $res);\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s;\n    readln(s);\n    auto a = s.split('@');\n    auto b = a.map!(x => x.split(''));\n    auto c = b.map!(x => x.join(''));\n    auto d = c.filter!(x => x.length > 0);\n    writeln(d.join(','));\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $str = <STDIN>;\n\nmy @arr = split(\/\/, $str);\n\nmy $i = 0;\nmy $j = 0;\nmy $k = 0;\n\nwhile ($i < @arr) {\n    if ($arr[$i] eq '@') {\n        $j = $i + 1;\n        while ($j < @arr && $arr[$j] ne '@') {\n            $j++;\n        }\n        if ($j < @arr) {\n            $k = $j + 1;\n            while ($k < @arr && $arr[$k] ne '@') {\n                $k++;\n            }\n            if ($k < @arr) {\n                print \"$arr[$i]$arr[$j]$arr[$k], \";\n            } else {\n                print \"$arr[$i]$arr[$j], \";\n            }\n        }\n    }\n    $i++;\n}\n\nprint \"\\n\";\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashSet;\n\nfn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n\n    let mut set = HashSet::new();\n    let mut ans = Vec::new();\n    for i in 0..s.len() {\n        if s[i] == '@' {\n            if i > 0 && s[i - 1] != '@' {\n                set.insert(&s[0..i]);\n            }\n        }\n    }\n\n    for e in set {\n        ans.push(e.to_string());\n    }\n\n    println!(\"{}\", ans.join(\",\"));\n}\n\"\"\"}]"}
{"title":"C. Flea","description":"It is known that fleas in Berland can jump only vertically and horizontally, and the length of the jump is always equal to s centimeters. A flea has found herself at the center of some cell of the checked board of the size n\u00d7m centimeters (each cell is 1\u00d71 centimeters). She can jump as she wishes for an arbitrary number of times, she can even visit a cell more than once. The only restriction is that she cannot jump out of the board.The flea can count the amount of cells that she can reach from the starting position (x,y). Let's denote this amount by dx,y. Your task is to find the number of such starting positions (x,y), which have the maximum possible value of dx,y.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three integers n, m, s (1\u2264n,m,s\u226410^6) \u2014 length of the board, width of the board and length of the flea's jump.\n","output_spec":"Output the only integer \u2014 the number of the required starting positions of the flea.\n","notes":null,"sample_inputs":["2 3 1000000\n","3 3 2\n"],"sample_outputs":["6\n","4\n"],"id":"32-C","difficulty":1700,"tags":["math"],"src_uid":"e853733fb2ed87c56623ff9a5ac09c36","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n,m,s=map(int,input().split())\nprint(min(n\/\/s,m\/\/s))\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int s = sc.nextInt();\n        int ans = 0;\n        for (int i = 0; i <= n - s; i++) {\n            for (int j = 0; j <= m - s; j++) {\n                if (i % s == 0 && j % s == 0) {\n                    ans++;\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m, s = map(int, input().split())\n\nans = 0\nfor i in range(1, n + 1, s):\n    for j in range(1, m + 1, s):\n        ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,m,s=map(int,input().split())\nprint(min(n\/\/s,m\/\/s))\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var s = int.Parse(input[2]);\n\n        var ans = 0;\n        for (var i = 0; i <= n - s; i++)\n        {\n            for (var j = 0; j <= m - s; j++)\n            {\n                var x = i + s;\n                var y = j + s;\n                if (x <= n && y <= m)\n                {\n                    ans++;\n                }\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,s=map(int,input().split())\nprint(min(n\/\/s,m\/\/s))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Problem;\nuses SysUtils;\nvar\n  n, m, s: Integer;\nbegin\n  Readln(n, m, s);\n  Writeln(min(n div s, m div s));\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, s int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &s)\\n    fmt.Println(n \/ s * m \/ s)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst m = parseInt(stdin[1]);\nconst s = parseInt(stdin[2]);\nconst ans = 0;\nfor (let i = 0; i <= n - s; i++) {\n  for (let j = 0; j <= m - s; j++) {\n    if (i % s == 0 && j % s == 0) {\n      ans++;\n    }\n  }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m, s) = readLine().split(\" \").map { it.toInt() }\n    val ans = (n \/ s) * (m \/ s)\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = intval($input[0]);\n$m = intval($input[1]);\n$s = intval($input[2]);\n\n$ans = 0;\nfor ($i = 0; $i <= $n - $s; $i++) {\n    for ($j = 0; $j <= $m - $s; $j++) {\n        $ans += 2 * ($s - 1);\n    }\n}\n\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m, s;\n    scanf(\" %d %d %d \", &n, &m, &s);\n    int ans = 0;\n    for (int i = 0; i <= n - s; i++) {\n        for (int j = 0; j <= m - s; j++) {\n            int x = i + s;\n            int y = j + s;\n            if (x <= n && y <= m) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $s;\n\nchomp(my $line = <STDIN>);\n\nmy @arr = split(\/ \/, $line);\n\n$n = $arr[0];\n$m = $arr[1];\n$s = $arr[2];\n\nmy $ans = 0;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        if ($i % $s == 0 && $j % $s == 0) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = String::new();\n    stdin.read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut m = String::new();\n    stdin.read_line(&mut m).unwrap();\n    let m: usize = m.trim().parse().unwrap();\n\n    let mut s = String::new();\n    stdin.read_line(&mut s).unwrap();\n    let s: usize = s.trim().parse().unwrap();\n\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..m {\n            if i % s == 0 || j % s == 0 {\n                ans += 1;\n            }\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"E. Hide-and-Seek","description":"Victor and Peter are playing hide-and-seek. Peter has hidden, and Victor is to find him. In the room where they are playing, there is only one non-transparent wall and one double-sided mirror. Victor and Peter are points with coordinates (xv,yv) and (xp,yp) respectively. The wall is a segment joining points with coordinates (xw,1,yw,1) and (xw,2,yw,2), the mirror \u2014 a segment joining points (xm,1,ym,1) and (xm,2,ym,2).If an obstacle has a common point with a line of vision, it's considered, that the boys can't see each other with this line of vision. If the mirror has a common point with the line of vision, it's considered, that the boys can see each other in the mirror, i.e. reflection takes place. The reflection process is governed by laws of physics \u2014 the angle of incidence is equal to the angle of reflection. The incident ray is in the same half-plane as the reflected ray, relative to the mirror. I.e. to see each other Victor and Peter should be to the same side of the line, containing the mirror (see example 1). If the line of vision is parallel to the mirror, reflection doesn't take place, and the mirror isn't regarded as an obstacle (see example 4).Victor got interested if he can see Peter, while standing at the same spot. Help him solve this problem.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two numbers xv and yv \u2014 coordinates of Victor.\nThe second line contains two numbers xp and yp \u2014 coordinates of Peter.\nThe third line contains 4 numbers xw,1, yw,1, xw,2, yw,2 \u2014 coordinates of the wall.\nThe forth line contains 4 numbers xm,1, ym,1, xm,2, ym,2 \u2014 coordinates of the mirror.\nAll the coordinates are integer numbers, and don't exceed 10^4 in absolute value. It's guaranteed, that the segments don't have common points, Victor and Peter are not on any of the segments, coordinates of Victor and Peter aren't the same, the segments don't degenerate into points.\n","output_spec":"Output YES, if Victor can see Peter without leaving the initial spot. Otherwise output NO.\n","notes":null,"sample_inputs":["-1 3\n1 3\n0 2 0 4\n0 0 0 1\n","0 0\n1 1\n0 1 1 0\n-100 -100 -101 -101\n","0 0\n1 1\n0 1 1 0\n-1 1 1 3\n","0 0\n10 0\n100 100 101 101\n1 0 3 0\n"],"sample_outputs":["NO\n","NO\n","YES\n","YES\n"],"id":"32-E","difficulty":2400,"tags":["geometry","implementation"],"src_uid":"7539a41268b68238d644795bccaa0c0f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int xv, yv, xp, yp, xw1, yw1, xw2, yw2, xm1, ym1, xm2, ym2;\n    cin >> xv >> yv;\n    cin >> xp >> yp;\n    cin >> xw1 >> yw1 >> xw2 >> yw2;\n    cin >> xm1 >> ym1 >> xm2 >> ym2;\n    int a1 = xw2 - xw1;\n    int b1 = yw2 - yw1;\n    int c1 = a1 * xw1 + b1 * yw1;\n    int a2 = xm2 - xm1;\n    int b2 = ym2 - ym1;\n    int c2 = a2 * xm1 + b2 * ym1;\n    int a3 = xp - xv;\n    int b3 = yp - yv;\n    int c3 = a3 * xv + b3 * yv;\n    int d = a1 * b2 - a2 * b1;\n    if (d == 0) {\n        if (a1 * c3 + b1 * c2 == c1 || a2 * c3 + b2 * c2 == c2) {\n            cout << \"YES\";\n        } else {\n            cout << \"NO\";\n        }\n    } else {\n        int x = (b2 * c3 - b3 * c2) \/ d;\n        int y = (a3 * c2 - a2 * c3) \/ d;\n        if (x >= xw1 && x <= xw2 && y >= yw1 && y <= yw2) {\n            cout << \"NO\";\n        } else if (x >= xm1 && x <= xm2 && y >= ym1 && y <= ym2) {\n            cout << \"YES\";\n        } else {\n            cout << \"NO\";\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nimport sys\n\ndef main():\n    xv, yv = map(int, sys.stdin.readline().split())\n    xp, yp = map(int, sys.stdin.readline().split())\n    xw1, yw1, xw2, yw2 = map(int, sys.stdin.readline().split())\n    xm1, ym1, xm2, ym2 = map(int, sys.stdin.readline().split())\n\n    def ccw(x1, y1, x2, y2, x3, y3):\n        return (x2 - x1) * (y3 - y1) - (y2 - y1) * (x3 - x1)\n\n    def intersect(x1, y1, x2, y2, x3, y3, x4, y4):\n        return ccw(x1, y1, x2, y2, x3, y3) * ccw(x1, y1, x2, y2, x4, y4) <= 0 and ccw(x3, y3, x4, y4, x1, y1) * ccw(x3, y3, x4, y4, x2, y2) <= 0\n\n    def is_visible(xv, yv, xp, yp, xw1, yw1, xw2, yw2, xm1, ym1, xm2, ym2):\n        if intersect(xv, yv, xp, yp, xw1, yw1, xw2, yw2):\n            return False\n        if intersect(xv, yv, xp, yp, xm1, ym1, xm2, ym2):\n            return True\n        if intersect(xv, yv, xw1, yw1, xm1, ym1, xm2, ym2):\n            return True\n        if intersect(xv, yv, xw2, yw2, xm1, ym1, xm2, ym2):\n            return True\n        return False\n\n    if is_visible(xv, yv, xp, yp, xw1, yw1, xw2, yw2, xm1, ym1, xm2, ym2):\n        print('YES')\n    else:\n        print('NO')\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int xv, yv, xp, yp, xw1, yw1, xw2, yw2, xm1, ym1, xm2, ym2;\n    scanf(\" %d %d \", &xv, &yv);\n    scanf(\" %d %d \", &xp, &yp);\n    scanf(\" %d %d %d %d \", &xw1, &yw1, &xw2, &yw2);\n    scanf(\" %d %d %d %d \", &xm1, &ym1, &xm2, &ym2);\n\n    int x1, y1, x2, y2;\n    x1 = xw1 - xv;\n    y1 = yw1 - yv;\n    x2 = xw2 - xv;\n    y2 = yw2 - yv;\n\n    int x3, y3, x4, y4;\n    x3 = xm1 - xv;\n    y3 = ym1 - yv;\n    x4 = xm2 - xv;\n    y4 = ym2 - yv;\n\n    int d1, d2, d3, d4;\n    d1 = x1 * y2 - x2 * y1;\n    d2 = x3 * y4 - x4 * y3;\n    d3 = x1 * y4 - x4 * y1;\n    d4 = x3 * y2 - x2 * y3;\n\n    if (d1 * d2 < 0 && d3 * d4 < 0) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace VictorAndPeter\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var v = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            var p = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            var w = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            var m = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n\n            var v1 = new Vector(v[0], v[1]);\n            var p1 = new Vector(p[0], p[1]);\n            var w1 = new Vector(w[0], w[1]);\n            var m1 = new Vector(m[0], m[1]);\n\n            var v2 = v1.Reflect(m1);\n\n            var s1 = v1.Cross(w1);\n            var s2 = v2.Cross(w1);\n\n            if (s1.Sign() == s2.Sign())\n            {\n                Console.WriteLine(\"YES\");\n            }\n            else\n            {\n                Console.WriteLine(\"NO\");\n            }\n        }\n\n        class Vector\n        {\n            public int x;\n            public int y;\n\n            public Vector(int x, int y)\n            {\n                this.x = x;\n                this.y = y;\n            }\n\n            public Vector Reflect(Vector v)\n            {\n                return new Vector(-this.x + 2 * v.x, -this.y + 2 * v.y);\n            }\n\n            public Vector Cross(Vector v)\n            {\n                return new Vector(this.y * v.x - this.x * v.y, this.x * v.y + this.y * v.x);\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram VictorAndPeter;\n\nuses\n  SysUtils;\n\nvar\n  xv, yv, xp, yp, xw1, yw1, xw2, yw2, xm1, ym1, xm2, ym2: Integer;\n  a, b, c, d, e, f, g, h, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z: Integer;\n\nbegin\n  Readln(xv, yv);\n  Readln(xp, yp);\n  Readln(xw1, yw1, xw2, yw2);\n  Readln(xm1, ym1, xm2, ym2);\n\n  a := xw2 - xw1;\n  b := yw2 - yw1;\n  c := xm2 - xm1;\n  d := ym2 - ym1;\n  e := xv - xw1;\n  f := yv - yw1;\n  g := xm1 - xv;\n  h := ym1 - yv;\n  k := (a * f - b * e) \/ (a * d - b * c);\n  l := (c * e - d * f) \/ (a * d - b * c);\n  m := (xw1 + xw2) \/ 2;\n  n := (yw1 + yw2) \/ 2;\n  o := (xm1 + xm2) \/ 2;\n  p := (ym1 + ym2) \/ 2;\n  q := (xv + xp) \/ 2;\n  r := (yv + yp) \/ 2;\n  s := (k * m - l * n) \/ (k * o - l * p);\n  t := (k * q - l * r) \/ (k * o - l * p);\n  u := (xv - s) * (xv - s) + (yv - t) * (yv - t);\n  v := (xp - s) * (xp - s) + (yp - t) * (yp - t);\n  w := (xm1 - s) * (xm1 - s) + (ym1 - t) * (ym1 - t);\n  x := (xm2 - s) * (xm2 - s) + (ym2 - t) * (ym2 - t);\n  y := (xv - q) * (xv - q) + (yv - r) * (yv - r);\n  z := (xp - q) * (xp - q) + (yp - r) * (yp - r);\n\n  if (u < w) and (u < x) and (u < y) and (u < z) then\n    Writeln('NO')\n  else if (v < w) and (v < x) and (v < y) and (v < z) then\n    Writeln('NO')\n  else if (w < u) and (w < v) and (w < y) and (w < z) then\n    Writeln('NO')\n  else if (x < u) and (x < v) and (x < w) and (x < z) then\n    Writeln('NO')\n  else if (y < u) and (y < v) and (y < w) and (y < x) then\n    Writeln('NO')\n  else if (z < u) and (z < v) and (z < w) and (z < y) then\n    Writeln('NO')\n  else\n    Writeln('YES');\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nconst readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst xv = rl.questionInt('xv: ');\nconst yv = rl.questionInt('yv: ');\nconst xp = rl.questionInt('xp: ');\nconst yp = rl.questionInt('yp: ');\nconst xw1 = rl.questionInt('xw1: ');\nconst yw1 = rl.questionInt('yw1: ');\nconst xw2 = rl.questionInt('xw2: ');\nconst yw2 = rl.questionInt('yw2: ');\nconst xm1 = rl.questionInt('xm1: ');\nconst ym1 = rl.questionInt('ym1: ');\nconst xm2 = rl.questionInt('xm2: ');\nconst ym2 = rl.questionInt('ym2: ');\n\nconst a = (xv - xp) \/ (yv - yp);\nconst b = yv - a * xv;\nconst c = (xm1 - xm2) \/ (ym1 - ym2);\nconst d = ym1 - c * xm1;\n\nif (a == c) {\n  if (b < d && d < b + 1000000) {\n    console.log('YES');\n  } else {\n    console.log('NO');\n  }\n} else {\n  const x = (d - b) \/ (a - c);\n  const y = a * x + b;\n  if (x >= xw1 && x <= xw2 && y >= yw1 && y <= yw2) {\n    console.log('NO');\n  } else {\n    console.log('YES');\n  }\n}\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.abs\n\nfun main() {\n    val (xv, yv) = readLine().split(\" \").map { it.toInt() }\n    val (xp, yp) = readLine().split(\" \").map { it.toInt() }\n    val (xw1, yw1, xw2, yw2) = readLine().split(\" \").map { it.toInt() }\n    val (xm1, ym1, xm2, ym2) = readLine().split(\" \").map { it.toInt() }\n\n    val v = (xp - xv) \/ (yp - yv)\n    val m = (xm2 - xm1) \/ (ym2 - ym1)\n\n    val isParallel = abs(v - m) < 1e-9\n    val isOnLine = (xv - xw1) * m == (yv - yw1) * v && (xv - xm1) * m == (yv - ym1) * v\n\n    if (isParallel) {\n        println(\"NO\")\n    } else if (isOnLine) {\n        println(\"YES\")\n    } else {\n        val x = (xw1 * yw2 - yw1 * xw2) \/ (yw2 - yw1)\n        val y = (xv * yw2 - yv * xw2) \/ (yw2 - yw1)\n\n        val isOnWall = (x - xv) * (x - xw1) + (y - yv) * (y - yw1) < 0\n        val isOnMirror = (x - xv) * (x - xm1) + (y - yv) * (y - ym1) < 0\n\n        if (isOnWall && isOnMirror) {\n            println(\"YES\")\n        } else {\n            println(\"NO\")\n        }\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$input = explode(\"\\n\", trim(fgets(STDIN)));\n$xv = (int)$input[0];\n$yv = (int)$input[1];\n$xp = (int)$input[2];\n$yp = (int)$input[3];\n$xw1 = (int)$input[4];\n$yw1 = (int)$input[5];\n$xw2 = (int)$input[6];\n$yw2 = (int)$input[7];\n$xm1 = (int)$input[8];\n$ym1 = (int)$input[9];\n$xm2 = (int)$input[10];\n$ym2 = (int)$input[11];\n\n$x1 = $xv - $xp;\n$y1 = $yv - $yp;\n$x2 = $xm1 - $xm2;\n$y2 = $ym1 - $ym2;\n$x3 = $xw1 - $xw2;\n$y3 = $yw1 - $yw2;\n\n$d1 = $x1 * $x1 + $y1 * $y1;\n$d2 = $x2 * $x2 + $y2 * $y2;\n$d3 = $x3 * $x3 + $y3 * $y3;\n\n$a = $x1 * $y2 - $x2 * $y1;\n$b = $x3 * $y2 - $x2 * $y3;\n$c = $x1 * $y3 - $x3 * $y1;\n\n$d = $a * $xm1 + $b * $ym1 + $c * $xm2 + $b * $ym2;\n\nif ($d == 0) {\n    echo \"NO\\n\";\n} else {\n    $d1 = $d1 \/ $d;\n    $d2 = $d2 \/ $d;\n    $d3 = $d3 \/ $d;\n\n    if ($d1 >= 0 && $d2 >= 0 && $d3 >= 0) {\n        echo \"YES\\n\";\n    } else {\n        echo \"NO\\n\";\n    }\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.math;\n\nstruct Point {\n    int x;\n    int y;\n\n    Point(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    Point operator +(Point p) {\n        return Point(this.x + p.x, this.y + p.y);\n    }\n\n    Point operator -(Point p) {\n        return Point(this.x - p.x, this.y - p.y);\n    }\n\n    int dot(Point p) {\n        return this.x * p.x + this.y * p.y;\n    }\n\n    int cross(Point p) {\n        return this.x * p.y - this.y * p.x;\n    }\n\n    int dist(Point p) {\n        return sqrt(this.dot(p));\n    }\n}\n\nstruct Segment {\n    Point p1;\n    Point p2;\n\n    Segment(Point p1, Point p2) {\n        this.p1 = p1;\n        this.p2 = p2;\n    }\n\n    bool intersect(Segment s) {\n        int d1 = (s.p2 - s.p1).cross(this.p1 - s.p1);\n        int d2 = (s.p2 - s.p1).cross(this.p2 - s.p1);\n        int d3 = (this.p2 - this.p1).cross(s.p1 - this.p1);\n        int d4 = (this.p2 - this.p1).cross(s.p2 - this.p1);\n\n        if (d1 * d2 < 0 && d3 * d4 < 0) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\nint main() {\n    Point v;\n    Point p;\n    Segment w;\n    Segment m;\n\n    scanf(\" %d %d \", &v.x, &v.y);\n    scanf(\" %d %d \", &p.x, &p.y);\n    scanf(\" %d %d %d %d \", &w.p1.x, &w.p1.y, &w.p2.x, &w.p2.y);\n    scanf(\" %d %d %d %d \", &m.p1.x, &m.p1.y, &m.p2.x, &m.p2.y);\n\n    Point v2 = v + (p - v).normalize() * 1000000;\n\n    Segment v2w = Segment(v2, w.p1);\n    Segment v2m = Segment(v2, m.p1);\n\n    if (v2w.intersect(w) || v2m.intersect(m)) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n\n    return 0;\n}\n\"\"\"}]","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let v = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let p = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let w = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let m = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut v1 = v[0] - w[0];\n    let mut v2 = v[1] - w[1];\n    let mut p1 = p[0] - w[0];\n    let mut p2 = p[1] - w[1];\n\n    let mut m1 = m[0] - w[0];\n    let mut m2 = m[1] - w[1];\n\n    let mut m3 = m[0] - v[0];\n    let mut m4 = m[1] - v[1];\n\n    let mut m5 = m[0] - p[0];\n    let mut m6 = m[1] - p[1];\n\n    if v1 * m2 == v2 * m1 && p1 * m2 == p2 * m1 {\n        println!(\"YES\");\n    } else if v1 * m4 == v2 * m3 && p1 * m4 == p2 * m3 {\n        println!(\"YES\");\n    } else if v1 * m6 == v2 * m5 && p1 * m6 == p2 * m5 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Sale","description":"Once Bob got to a sale of old TV sets. There were n TV sets at that sale. TV set with index i costs ai bellars. Some TV sets have a negative price \u2014 their owners are ready to pay Bob if he buys their useless apparatus. Bob can \u00abbuy\u00bb any TV sets he wants. Though he's very strong, Bob can carry at most m TV sets, and he has no desire to go to the sale for the second time. Please, help Bob find out the maximum sum of money that he can earn.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers n and m (1\u2264m\u2264n\u2264100) \u2014 amount of TV sets at the sale, and amount of TV sets that Bob can carry. The following line contains n space-separated integers ai (-1000\u2264ai\u22641000) \u2014 prices of the TV sets. \n","output_spec":"Output the only number \u2014 the maximum sum of money that Bob can earn, given that he can carry at most m TV sets.\n","notes":null,"sample_inputs":["5 3\n-6 0 35 -2 4\n","4 2\n7 0 0 -7\n"],"sample_outputs":["8\n","7\n"],"id":"34-B","difficulty":900,"tags":["greedy","sortings"],"src_uid":"9a56288d8bd4e4e7ef3329e102f745a5","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n, m; cin >> n >> m; vector<int> a(n); for (int i = 0; i < n; i++) cin >> a[i]; sort(a.begin(), a.end()); int ans = 0; for (int i = 0; i < m; i++) ans += a[i]; cout << ans << endl;\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] > 0) {\n                max += a[i];\n            } else {\n                if (m > 0) {\n                    m--;\n                    max += a[i];\n                }\n            }\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    if m > 0:\n        ans += a[i]\n        m -= 1\n    else:\n        break\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, m = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    if m > 0:\n        ans += a[i]\n        m -= 1\nprint(ans)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n = int.Parse(Console.ReadLine());\n        var m = int.Parse(Console.ReadLine());\n        var a = new int[n];\n        var s = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n        }\n        s[0] = a[0];\n        for (int i = 1; i < n; i++)\n        {\n            s[i] = Math.Max(s[i - 1], a[i]);\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (i < m)\n            {\n                ans = Math.Max(ans, s[i]);\n            }\n            else\n            {\n                ans = Math.Max(ans, s[i] - s[i - m]);\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\na.sort!\nans = 0\nfor i in 0..n-1\n  if m > 0\n    if a[i] > 0\n      ans += a[i]\n      m -= 1\n    else\n      if m > 0\n        ans += a[i]\n        m -= 1\n      else\n        break\n      end\n    end\n  else\n    break\n  end\nend\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram TV;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, max, sum: integer;\n  a: array[0..100] of integer;\n\nbegin\n  readln(n, m);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n  max := -1000;\n  for i := 0 to n - 1 do\n    for j := i + 1 to n - 1 do\n      if (a[i] + a[j] > max) and (a[i] + a[j] < 0) then\n        max := a[i] + a[j];\n  for i := 0 to n - 1 do\n    if (a[i] > max) and (a[i] < 0) then\n      max := a[i];\n  for i := 0 to n - 1 do\n    if (a[i] > 0) and (m > 0) then\n    begin\n      sum := sum + a[i];\n      m := m - 1;\n    end;\n  if (m > 0) and (max > 0) then\n    sum := sum + max;\n  writeln(sum);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    a = append(a, 0)\\n    a.sort()\\n    var ans int\\n    for i := 0; i < m; i++ {\\n        ans += a[n-i-1]\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, m] = line.split(' ').map(Number);\n  const arr = line.split(' ').map(Number);\n  const ans = arr.sort((a, b) => a - b).slice(0, m).reduce((a, b) => a + b);\n  console.log(ans);\n  rl.close();\n});\n\nrl.on('close', () => process.exit());\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    var i = 0\n    while (i < n && m > 0) {\n        if (a[i] > 0) {\n            ans += a[i]\n            m--\n        }\n        i++\n    }\n    if (m > 0) {\n        ans += a[n - 1] * m\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = explode(' ', trim(fgets(STDIN)));\\n$m = $n[0];\\n$a = $n[1];\\n$arr = explode(' ', trim(fgets(STDIN)));\\n$sum = 0;\\nfor ($i = 0; $i < $m; $i++) {\\n    if ($arr[$i] > 0) {\\n        $sum += $arr[$i];\\n    } else {\\n        $sum -= $arr[$i];\\n    }\\n}\\necho $sum;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int sum = 0;\n    int i = 0;\n    while (i < n && m > 0) {\n        if (a[i] > 0) {\n            sum += a[i];\n            m--;\n        }\n        i++;\n    }\n    if (m > 0) {\n        sum += max(a[i - m], 0);\n    }\n    printf(\" %d \", sum);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\nchomp(my $input = <STDIN>);\n($n, $m) = split(\/ \/, $input);\nmy @a = split(\/ \/, <STDIN>);\n\nmy $max = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($i < $m) {\n        $max += $a[$i];\n    } else {\n        if ($a[$i] > $a[$i - $m]) {\n            $max += $a[$i];\n        } else {\n            $max += $a[$i - $m];\n        }\n    }\n}\n\nprint $max;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let (n, m) = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let a = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut dp = vec![0; n + 1];\n    for i in 0..n {\n        for j in 0..=i {\n            if j < m {\n                dp[i + 1] = max(dp[i + 1], dp[j] + a[i]);\n            }\n        }\n    }\n    println!(\"{}\", dp[n]);\n}\n\nfn read_line() -> String {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s\n}\n\"\"\"}]"}
{"title":"G. New Year Cactus","description":"Jack and Jill are tired of the New Year tree, now they've got a New Year cactus at home! A cactus is a connected undirected graph where any two simple cycles have at most one common vertex. In other words, this graph doesn't have any edges that lie on more than one simple cycle.On the 31st of December they are going to decorate the cactus by hanging toys to its vertices. At most one toy is going to hang on each vertex \u2014 it's either the toy Jack hung or the toy Jill hung. It's possible for a vertex to have no toys.Jack and Jill has been arguing, so they don't want any edge to connect two vertices where one vertex has Jack's toy and the other vertex has Jill's toy.Jack has decided to hang a toys. What maximum number of toys b can Jill hang if they both cooperate to maximize this value? Your task is to write a program that finds the sought b for all a from 0 to the number of vertices on the New Year Cactus.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (1\u2264n\u22642500,n-1\u2264m) \u2014 the number of vertices and the number of edges, correspondingly. The next m lines contain two integers a, b each (1\u2264a,b\u2264n,a\u2260b) that mean that there is an edge connecting vertices a \u0438 b. Any pair of vertices has at most one edge between them.\n","output_spec":"The first line must contain space-separated ba (for all 0\u2264a\u2264n) where ba equals the maximum number of Jill's toys on the cactus considering that it has a Jack's toys. Numbers ba go in the order of increasing a.\n","notes":"The cactus from the second example is:\n \n","sample_inputs":["1 0\n","16 20\n1 2\n3 4\n5 6\n6 7\n7 8\n9 10\n10 11\n11 12\n13 14\n15 16\n1 5\n9 13\n14 10\n10 6\n6 2\n15 11\n11 7\n7 3\n16 12\n8 4\n"],"sample_outputs":["1 0 \n","16 13 12 12 10 8 8 7 6 4 4 3 3 1 0 0 0 \n"],"id":"379-G","difficulty":3100,"tags":["dp"],"src_uid":"12068e44ccfe72ea55614fde975dee18","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n);\n    for (int i = 0; i < m; i++) {\n        int a, b;\n        cin >> a >> b;\n        g[a - 1].push_back(b - 1);\n        g[b - 1].push_back(a - 1);\n    }\n\n    vector<int> dp(n + 1);\n    dp[0] = 0;\n    for (int i = 1; i <= n; i++) {\n        dp[i] = dp[i - 1];\n        for (int j = 0; j < g[i - 1].size(); j++) {\n            dp[i] = max(dp[i], dp[g[i - 1][j]] + 1);\n        }\n    }\n\n    for (int i = 0; i <= n; i++) {\n        cout << dp[i] << \" \";\n    }\n    cout << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = reader.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        List<List<Integer>> graph = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            graph.add(new ArrayList<>());\n        }\n        for (int i = 0; i < m; i++) {\n            input = reader.readLine().split(\" \");\n            int a = Integer.parseInt(input[0]);\n            int b = Integer.parseInt(input[1]);\n            graph.get(a - 1).add(b - 1);\n            graph.get(b - 1).add(a - 1);\n        }\n        int[] dp = new int[n];\n        Arrays.fill(dp, 1);\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < graph.get(i).size(); j++) {\n                dp[graph.get(i).get(j)] = Math.max(dp[graph.get(i).get(j)], dp[i] + 1);\n            }\n        }\n        int[] ans = new int[n + 1];\n        for (int i = 0; i < n; i++) {\n            ans[dp[i]]++;\n        }\n        for (int i = 1; i <= n; i++) {\n            System.out.print(ans[i] + \" \");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    g[a - 1].append(b - 1)\n    g[b - 1].append(a - 1)\n\n\ndef dfs(v, p, c):\n    if c == 0:\n        return 1\n    res = 0\n    for u in g[v]:\n        if u != p:\n            res = max(res, dfs(u, v, c - 1))\n    return res\n\n\nans = [0] * (n + 1)\nfor i in range(n):\n    ans[i + 1] = dfs(i, -1, i + 1)\n\nprint(*ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m, a, b, i, j, k, t, ans[2501], dp[2501][2501];\n    scanf(\" %d%d \", &n, &m);\n    for (i = 0; i < m; i++) {\n        scanf(\" %d%d \", &a, &b);\n        dp[a][b] = 1;\n        dp[b][a] = 1;\n    }\n    for (i = 0; i <= n; i++) {\n        for (j = 0; j <= n; j++) {\n            for (k = 0; k <= n; k++) {\n                if (dp[i][j] && dp[j][k]) {\n                    dp[i][k] = 1;\n                }\n            }\n        }\n    }\n    for (i = 0; i <= n; i++) {\n        ans[i] = 0;\n    }\n    for (i = 0; i <= n; i++) {\n        for (j = 0; j <= n; j++) {\n            if (dp[i][j]) {\n                ans[i] = max(ans[i], ans[j] + 1);\n            }\n        }\n    }\n    for (i = 0; i <= n; i++) {\n        printf(\" %d  \", ans[i]);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, m = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var g = new List<List<int>>();\n        for (int i = 0; i < n; i++)\n            g.Add(new List<int>());\n        for (int i = 0; i < m; i++)\n        {\n            var a, b = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            g[a - 1].Add(b - 1);\n            g[b - 1].Add(a - 1);\n        }\n        var ans = new int[n + 1];\n        for (int i = 0; i <= n; i++)\n        {\n            ans[i] = 0;\n            for (int j = 0; j < g[i].Count; j++)\n            {\n                ans[i] = Math.Max(ans[i], ans[g[i][j]] + 1);\n            }\n        }\n        for (int i = 0; i <= n; i++)\n        {\n            Console.Write(ans[i] + \" \");\n        }\n        Console.WriteLine();\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\ng = []\nm.times do\n  a, b = gets.split.map(&:to_i)\n  g << [a, b]\nend\n\nans = []\n(0..n).each do |i|\n  ans << 0\nend\n\n(0..n).each do |i|\n  (0..n).each do |j|\n    if i != j && g.include?([i, j])\n      ans[i] = [ans[i], ans[j] + 1].max\n    end\n  end\nend\n\nputs ans.join(' ')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram JackAndJill;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 2500;\n\ntype\n  TEdge = record\n    u, v: Integer;\n  end;\n\nvar\n  n, m: Integer;\n  e: array[0..MAXN] of TEdge;\n  dp: array[0..MAXN, 0..MAXN] of Integer;\n\nprocedure Solve;\nvar\n  i, j, k: Integer;\nbegin\n  for i := 0 to n do\n    for j := 0 to n do\n      dp[i, j] := 0;\n  for i := 0 to n do\n    dp[i, 0] := 1;\n  for i := 1 to m do\n  begin\n    j := e[i].u;\n    k := e[i].v;\n    for a := 0 to n do\n      for b := 0 to n do\n        if a < b then\n          dp[j, b] := max(dp[j, b], dp[k, a] + 1);\n  end;\nend;\n\nbegin\n  readln(n, m);\n  for i := 0 to m do\n  begin\n    readln(e[i].u, e[i].v);\n    e[i].u--;\n    e[i].v--;\n  end;\n  Solve;\n  for i := 0 to n do\n    writeln(dp[i, n]);\nend.\n\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    g := make([][]int, n)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n        g[a-1] = append(g[a-1], b-1)\\n        g[b-1] = append(g[b-1], a-1)\\n    }\\n    ans := make([]int, n+1)\\n    for i := 0; i < n; i++ {\\n        ans[i+1] = ans[i]\\n        for _, j := range g[i] {\\n            if ans[i] < ans[j]+1 {\\n                ans[i+1] = ans[j] + 1\\n            }\\n        }\\n    }\\n    fmt.Println(ans[n])\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst graph = new Array(n).fill(0);\nfor (let i = 0; i < m; i++) {\n    const [a, b] = stdin[i + 1].split(' ').map(parseInt);\n    graph[a - 1] |= 1 << (b - 1);\n    graph[b - 1] |= 1 << (a - 1);\n}\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 0; i <= n; i++) {\n    for (let j = 0; j < n; j++) {\n        if (i == 0) {\n            dp[i][j] = 0;\n        } else if (j == 0) {\n            dp[i][j] = 1;\n        } else if (graph[j] & (1 << (i - 1))) {\n            dp[i][j] = dp[i - 1][j];\n        } else {\n            dp[i][j] = Math.max(dp[i - 1][j], dp[i - 1][j - 1] + 1);\n        }\n    }\n}\nconsole.log(dp.join(' '));\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a - 1].add(b - 1)\n        graph[b - 1].add(a - 1)\n    }\n\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            if (i == j) {\n                dp[i + 1][j + 1] = 1\n            } else {\n                dp[i + 1][j + 1] = maxOf(dp[i][j + 1], dp[i + 1][j])\n            }\n            for (k in graph[i]) {\n                dp[i + 1][j + 1] = maxOf(dp[i + 1][j + 1], dp[i][k + 1] + dp[k + 1][j])\n            }\n        }\n    }\n\n    val ans = IntArray(n + 1) { 0 }\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            ans[i + 1] = maxOf(ans[i + 1], dp[i + 1][j + 1] - dp[i][j + 1])\n        }\n    }\n\n    println(ans.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m;\nfscanf(STDIN, \"%d %d\\n\", $n, $m);\n$g = array_fill(0, $n, array());\nfor ($i = 0; $i < $m; $i++) {\n    fscanf(STDIN, \"%d %d\\n\", $a, $b);\n    $g[$a - 1][] = $b - 1;\n    $g[$b - 1][] = $a - 1;\n}\n$dp = array_fill(0, $n, 0);\n$dp[0] = 1;\nfor ($i = 1; $i < $n; $i++) {\n    $dp[$i] = 0;\n    for ($j = 0; $j < $i; $j++) {\n        if (!in_array($j, $g[$i])) {\n            $dp[$i] = max($dp[$i], $dp[$j] + 1);\n        }\n    }\n}\nfor ($i = 0; $i < $n; $i++) {\n    echo $dp[$i] . \" \";\n}\necho \"\\n\";\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\nmy @b;\n\nread_input();\n\nfor (my $i = 0; $i <= $n; $i++) {\n    my $max = 0;\n    for (my $j = 0; $j < $m; $j++) {\n        if ($a[$j] < $i) {\n            $max = max($max, $b[$j]);\n        }\n    }\n    $b[$i] = $max + 1;\n}\n\nprint join(' ', @b);\n\nsub read_input {\n    my $line = <STDIN>;\n    chomp($line);\n    ($n, $m) = split(' ', $line);\n\n    for (my $i = 0; $i < $m; $i++) {\n        $line = <STDIN>;\n        chomp($line);\n        ($a[$i], $b[$i]) = split(' ', $line);\n    }\n}\n\nsub max {\n    my $a = shift;\n    my $b = shift;\n\n    return $a > $b ? $a : $b;\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        graph.entry(a).or_insert(vec![]).push(b);\n        graph.entry(b).or_insert(vec![]).push(a);\n    }\n\n    let mut ans = vec![0; n + 1];\n    for i in 0..n {\n        let mut dp = vec![0; n + 1];\n        for j in 0..n {\n            if i == j {\n                dp[j] = 1;\n            } else {\n                for k in graph.get(&j).unwrap() {\n                    dp[j] = max(dp[j], dp[k] + 1);\n                }\n            }\n        }\n        for j in 0..n {\n            ans[j + 1] = max(ans[j + 1], dp[j]);\n        }\n    }\n\n    for i in 0..n + 1 {\n        print!(\"{} \", ans[i]);\n    }\n    println!();\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line\n}\n\"\"\"}]"}
{"title":"C. Old Berland Language","description":"Berland scientists know that the Old Berland language had exactly n words. Those words had lengths of l1,l2,...,ln letters. Every word consisted of two letters, 0 and 1. Ancient Berland people spoke quickly and didn\u2019t make pauses between the words, but at the same time they could always understand each other perfectly. It was possible because no word was a prefix of another one. The prefix of a string is considered to be one of its substrings that starts from the initial symbol.Help the scientists determine whether all the words of the Old Berland language can be reconstructed and if they can, output the words themselves.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains one integer N (1\u2264N\u22641000) \u2014 the number of words in Old Berland language. The second line contains N space-separated integers \u2014 the lengths of these words. All the lengths are natural numbers not exceeding 1000.\n","output_spec":"If there\u2019s no such set of words, in the single line output NO. Otherwise, in the first line output YES, and in the next N lines output the words themselves in the order their lengths were given in the input file. If the answer is not unique, output any.\n","notes":null,"sample_inputs":["3\n1 2 3\n","3\n1 1 1\n"],"sample_outputs":["YES\n0\n10\n110\n","NO\n"],"id":"37-C","difficulty":1900,"tags":["data+structures","greedy","trees"],"src_uid":"1670a3d7dba83e29e98f0ac6fe4acb18","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    vector<string> ans;\n    int i = 0;\n    while (i < n) {\n        string s = \"\";\n        for (int j = 0; j < a[i]; j++) {\n            s += \"0\";\n        }\n        ans.push_back(s);\n        i++;\n    }\n    for (int i = 0; i < n; i++) {\n        cout << ans[i] << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] l = new int[n];\n        for (int i = 0; i < n; i++) {\n            l[i] = sc.nextInt();\n        }\n        int[] a = new int[n];\n        int[] b = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (l[i] % 2 == 0) {\n                a[i] = 0;\n                b[i] = 1;\n            } else {\n                a[i] = 1;\n                b[i] = 0;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (l[i] > l[j] && a[i] == a[j] && b[i] == b[j]) {\n                    System.out.println(\"NO\");\n                    return;\n                }\n            }\n        }\n        System.out.println(\"YES\");\n        for (int i = 0; i < n; i++) {\n            System.out.println(a[i]);\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.println(b[i]);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nl = list(map(int, input().split()))\n\ndef check(l):\n    for i in range(1, len(l)):\n        if l[i] < l[i-1]:\n            return False\n    return True\n\nif check(l):\n    print(\"YES\")\n    for i in range(n):\n        print(\"0\"*(l[i]-1) + \"1\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int flag = 1;\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i] % a[j] == 0) {\n                flag = 0;\n                break;\n            }\n        }\n    }\n    if (flag == 0) {\n        printf(\" NO \");\n    } else {\n        printf(\" YES \");\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < a[i]; j++) {\n                if (j % 2 == 0) {\n                    printf(\" 0 \");\n                } else {\n                    printf(\" 1 \");\n                }\n            }\n            printf(\" \n \");\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nl = gets.split.map(&:to_i)\n\nif l.uniq.size == n\n  puts \"YES\"\n  l.each do |i|\n    puts \"0\" * (i - 1) + \"1\" * i\n  end\nelse\n  puts \"NO\"\nend\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var ls []int\\n    for i := 0; i < n; i++ {\\n        var l int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &l)\\n        ls = append(ls, l)\\n    }\\n    var dp [][]int\\n    for i := 0; i < n; i++ {\\n        dp = append(dp, make([]int, ls[i]+1))\\n    }\\n    for i := 0; i < n; i++ {\\n        for j := 0; j <= ls[i]; j++ {\\n            if j == 0 {\\n                dp[i][j] = 1\\n            } else {\\n                for k := 0; k < i; k++ {\\n                    if j-1 >= ls[k] && dp[k][j-1] == 1 {\\n                        dp[i][j] = 1\\n                        break\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    var ans []string\\n    for i := 0; i < n; i++ {\\n        var s string\\n        for j := 0; j < ls[i]; j++ {\\n            if dp[i][j] == 1 {\\n                s += \\\"0\\\"\\n            } else {\\n                s += \\\"1\\\"\\n            }\\n        }\\n        ans = append(ans, s)\\n    }\\n    if dp[n-1][ls[n-1]] == 1 {\\n        fmt.Println(\\\"YES\\\")\\n        for i := 0; i < n; i++ {\\n            fmt.Println(ans[i])\\n        }\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0]);\nconst ls = input.split('\\n')[1].split(' ').map(Number);\nconst words = [];\nfor (let i = 0; i < n; i++) {\n    words.push('0'.repeat(ls[i] - 1) + '1');\n}\nconsole.log('YES');\nfor (let word of words) {\n    console.log(word);\n}\nfs.writeFileSync('output.txt', words.join('\\n'), 'utf8');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val arr = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    val set = mutableSetOf<String>()\n    var i = 0\n    while (i < n) {\n        val s = \"\"\n        for (j in 0 until arr[i]) {\n            s += \"0\"\n        }\n        for (j in 0 until arr[i]) {\n            s += \"1\"\n        }\n        set.add(s)\n        i++\n    }\n    if (set.size == n) {\n        println(\"YES\")\n        for (s in set) {\n            println(s)\n        }\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$arr = array_unique($arr);\n$arr = array_values($arr);\n$arr = array_sort($arr);\n$arr = array_reverse($arr);\n$ans = [];\n$i = 0;\nwhile ($i < $n) {\n    $ans[] = str_repeat('0', $arr[$i] - $i - 1) . '1' . str_repeat('0', $i);\n    $i++;\n}\nif (count($ans) == $n) {\n    echo 'YES' . PHP_EOL;\n    foreach ($ans as $a) {\n        echo $a . PHP_EOL;\n    }\n} else {\n    echo 'NO' . PHP_EOL;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int[] a = new int[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int[] b = new int[n];\n    b[0] = 0;\n    b[1] = 1;\n    for (int i = 2; i < n; i++) {\n        b[i] = b[i - 1] + b[i - 2];\n    }\n    if (b[n - 1] != a[n - 1]) {\n        printf(\" NO \");\n        return;\n    }\n    printf(\" YES \");\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            printf(\" 10 \");\n        } else {\n            printf(\" 0 \");\n        }\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @l = split ' ', <STDIN>;\n\nmy $ans = 1;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $i; $j++) {\n        if ($l[$i] < $l[$j]) {\n            $ans = 0;\n        }\n    }\n}\n\nif ($ans == 1) {\n    print \"YES\\n\";\n    for (my $i = 0; $i < $n; $i++) {\n        my $s = \"\";\n        for (my $j = 0; $j < $l[$i]; $j++) {\n            $s .= \"0\";\n        }\n        print \"$s\\n\";\n    }\n} else {\n    print \"NO\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut ls = Vec::new();\n    for _ in 0..n {\n        let mut l = String::new();\n        io::stdin().read_line(&mut l).unwrap();\n        let l: usize = l.trim().parse().unwrap();\n        ls.push(l);\n    }\n\n    let mut ans = Vec::new();\n    for i in 0..n {\n        let mut s = String::new();\n        for j in 0..ls[i] {\n            if j % 2 == 0 {\n                s.push('0');\n            } else {\n                s.push('1');\n            }\n        }\n        ans.push(s);\n    }\n\n    if ans.len() == 1 {\n        println!(\"NO\");\n    } else {\n        println!(\"YES\");\n        for s in ans {\n            println!(\"{}\", s);\n        }\n    }\n}\n\"\"\"}]"}
{"title":"E. Trial for Chief","description":"Having unraveled the Berland Dictionary, the scientists managed to read the notes of the chroniclers of that time. For example, they learned how the chief of the ancient Berland tribe was chosen.As soon as enough pretenders was picked, the following test took place among them: the chief of the tribe took a slab divided by horizontal and vertical stripes into identical squares (the slab consisted of N lines and M columns) and painted every square black or white. Then every pretender was given a slab of the same size but painted entirely white. Within a day a pretender could paint any side-linked set of the squares of the slab some color. The set is called linked if for any two squares belonging to the set there is a path belonging the set on which any two neighboring squares share a side. The aim of each pretender is to paint his slab in the exactly the same way as the chief\u2019s slab is painted. The one who paints a slab like that first becomes the new chief.Scientists found the slab painted by the ancient Berland tribe chief. Help them to determine the minimal amount of days needed to find a new chief if he had to paint his slab in the given way.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers N and M (1\u2264N,M\u226450) \u2014 the number of lines and columns on the slab. The next N lines contain M symbols each \u2014 the final coloration of the slab. W stands for the square that should be painted white and B \u2014 for the square that should be painted black.\n","output_spec":"In the single line output the minimal number of repaintings of side-linked areas needed to get the required coloration of the slab.\n","notes":null,"sample_inputs":["3 3\nWBW\nBWB\nWBW\n","2 3\nBBB\nBWB\n"],"sample_outputs":["2\n","1\n"],"id":"37-E","difficulty":2600,"tags":["graphs","greedy","shortest+paths"],"src_uid":"73291724a4609ddd4cc8a92c77e8496f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<char>> a(n, vector<char>(m));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 'W') {\n                if (i > 0 && a[i - 1][j] == 'B') {\n                    ans++;\n                }\n                if (j > 0 && a[i][j - 1] == 'B') {\n                    ans++;\n                }\n            } else {\n                if (i < n - 1 && a[i + 1][j] == 'W') {\n                    ans++;\n                }\n                if (j < m - 1 && a[i][j + 1] == 'W') {\n                    ans++;\n                }\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[][] a = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                a[i][j] = scanner.nextInt();\n            }\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (a[i][j] == 1) {\n                    ans++;\n                    dfs(a, i, j);\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n\n    private static void dfs(int[][] a, int i, int j) {\n        if (i < 0 || i >= a.length || j < 0 || j >= a[0].length || a[i][j] == 0) {\n            return;\n        }\n        a[i][j] = 0;\n        dfs(a, i - 1, j);\n        dfs(a, i + 1, j);\n        dfs(a, i, j - 1);\n        dfs(a, i, j + 1);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na = [list(input()) for _ in range(n)]\n\ndef dfs(i, j, c):\n    if a[i][j] != c:\n        a[i][j] = c\n        dfs(i-1, j, c)\n        dfs(i+1, j, c)\n        dfs(i, j-1, c)\n        dfs(i, j+1, c)\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] == 'W':\n            dfs(i, j, 'B')\n            ans += 1\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var grid = new char[n][];\n        for (int i = 0; i < n; i++)\n        {\n            grid[i] = Console.ReadLine().ToCharArray();\n        }\n\n        var black = 0;\n        var white = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < m; j++)\n            {\n                if (grid[i][j] == 'B')\n                {\n                    black++;\n                }\n                else\n                {\n                    white++;\n                }\n            }\n        }\n\n        var ans = 0;\n        if (black > white)\n        {\n            ans = black - white;\n        }\n        else\n        {\n            ans = white - black;\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\na = []\nn.times do\n  a << gets.chomp.split(\"\")\nend\n\nb = []\nn.times do\n  b << gets.chomp.split(\"\")\nend\n\nans = 0\n\nfor i in 0..n-1 do\n  for j in 0..m-1 do\n    if a[i][j] != b[i][j] then\n      if i == 0 then\n        if j == 0 then\n          if a[i][j+1] == b[i][j+1] then\n            ans += 1\n          end\n        elsif j == m-1 then\n          if a[i][j-1] == b[i][j-1] then\n            ans += 1\n          end\n        else\n          if a[i][j+1] == b[i][j+1] || a[i][j-1] == b[i][j-1] then\n            ans += 1\n          end\n        end\n      elsif i == n-1 then\n        if j == 0 then\n          if a[i-1][j] == b[i-1][j] then\n            ans += 1\n          end\n        elsif j == m-1 then\n          if a[i-1][j-1] == b[i-1][j-1] then\n            ans += 1\n          end\n        else\n          if a[i-1][j+1] == b[i-1][j+1] || a[i-1][j-1] == b[i-1][j-1] then\n            ans += 1\n          end\n        end\n      else\n        if j == 0 then\n          if a[i-1][j] == b[i-1][j] || a[i+1][j] == b[i+1][j] then\n            ans += 1\n          end\n        elsif j == m-1 then\n          if a[i-1][j-1] == b[i-1][j-1] || a[i+1][j-1] == b[i+1][j-1] then\n            ans += 1\n          end\n        else\n          if a[i-1][j+1] == b[i-1][j+1] || a[i+1][j+1] == b[i+1][j+1] || a[i-1][j-1] == b[i-1][j-1] || a[i+1][j-1] == b[i+1][j-1] then\n            ans += 1\n          end\n        end\n      end\n    end\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Berland;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, k, l, s, t, c, d, p, q, r, ans: integer;\n  a: array[0..50, 0..50] of char;\n  b: array[0..50, 0..50] of char;\n\nbegin\n  readln(n, m);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n  for i := 0 to n - 1 do\n    for j := 0 to m - 1 do\n      b[i, j] := a[i][j];\n  for i := 0 to n - 1 do\n    for j := 0 to m - 1 do\n      if a[i, j] <> b[i, j] then\n      begin\n        s := 0;\n        for k := 0 to n - 1 do\n          for l := 0 to m - 1 do\n            if a[k, l] = a[i, j] then\n            begin\n              s := s + 1;\n              b[k, l] := 'W';\n            end;\n        ans := ans + s div 2;\n      end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    var a [][]byte\\n    for i := 0; i < n; i++ {\\n        a = append(a, make([]byte, m))\\n        for j := 0; j < m; j++ {\\n            fmt.Scanf(\\\"%c\\\", &a[i][j])\\n        }\\n    }\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        for j := 0; j < m; j++ {\\n            if a[i][j] == 'W' {\\n                if i > 0 && a[i-1][j] == 'B' {\\n                    ans++\\n                }\\n                if j > 0 && a[i][j-1] == 'B' {\\n                    ans++\\n                }\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst a = input.slice(1);\nconst ans = 0;\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n        if (a[i][j] == 'W') {\n            if (i > 0 && a[i - 1][j] == 'B') {\n                ans++;\n            }\n            if (j > 0 && a[i][j - 1] == 'B') {\n                ans++;\n            }\n        } else {\n            if (i < n - 1 && a[i + 1][j] == 'W') {\n                ans++;\n            }\n            if (j < m - 1 && a[i][j + 1] == 'W') {\n                ans++;\n            }\n        }\n    }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m) = readLine()!!.split(\" \").map { it.toInt() }\n    val a = Array(n) { readLine()!!.toCharArray() }\n    val b = Array(n) { BooleanArray(m) }\n    var ans = 0\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (a[i][j] != 'W' && !b[i][j]) {\n                ans++\n                dfs(i, j, a, b)\n            }\n        }\n    }\n    println(ans)\n}\n\nfun dfs(i: Int, j: Int, a: Array<CharArray>, b: Array<BooleanArray>) {\n    b[i][j] = true\n    if (i > 0 && a[i - 1][j] != 'W' && !b[i - 1][j]) {\n        dfs(i - 1, j, a, b)\n    }\n    if (i < n - 1 && a[i + 1][j] != 'W' && !b[i + 1][j]) {\n        dfs(i + 1, j, a, b)\n    }\n    if (j > 0 && a[i][j - 1] != 'W' && !b[i][j - 1]) {\n        dfs(i, j - 1, a, b)\n    }\n    if (j < m - 1 && a[i][j + 1] != 'W' && !b[i][j + 1]) {\n        dfs(i, j + 1, a, b)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = trim(fgets(STDIN));\n$m = trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[$i] = trim(fgets(STDIN));\n}\n$count = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $m; $j++) {\n        if ($arr[$i][$j] == 'B') {\n            $count++;\n        }\n    }\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    char[][] a = new char[][](n, m);\n    char[][] b = new char[][](n, m);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", b[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] != b[i][j]) {\n                ans++;\n                int x = i, y = j;\n                while (x < n && a[x][j] == b[x][j]) {\n                    x++;\n                }\n                while (y < m && a[i][y] == b[i][y]) {\n                    y++;\n                }\n                while (x > 0 && a[x][j] == b[x][j]) {\n                    x--;\n                }\n                while (y > 0 && a[i][y] == b[i][y]) {\n                    y--;\n                }\n                ans -= (x - i + 1) * (y - j + 1);\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\n\nwhile (<>) {\n    chomp;\n    my @t = split;\n    $n = $t[0];\n    $m = $t[1];\n    @a = ();\n    for (my $i = 0; $i < $n; $i++) {\n        my @t = split;\n        for (my $j = 0; $j < $m; $j++) {\n            push @a, $t[$j];\n        }\n    }\n    break;\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($a[$i][$j] eq 'W') {\n            if ($i > 0 && $a[$i - 1][$j] eq 'B') {\n                $ans++;\n            }\n            if ($i < $n - 1 && $a[$i + 1][$j] eq 'B') {\n                $ans++;\n            }\n            if ($j > 0 && $a[$i][$j - 1] eq 'B') {\n                $ans++;\n            }\n            if ($j < $m - 1 && $a[$i][$j + 1] eq 'B') {\n                $ans++;\n            }\n        }\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut m = n[0];\n    let mut n = n[1];\n\n    let mut board = vec![vec![0; m]; n];\n\n    for i in 0..n {\n        let mut line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        for j in 0..m {\n            board[i][j] = if line.chars().nth(j).unwrap() == 'B' { 1 } else { 0 };\n        }\n    }\n\n    let mut ans = 0;\n\n    for i in 0..n {\n        for j in 0..m {\n            if board[i][j] == 1 {\n                let mut count = 0;\n                for k in 0..n {\n                    if board[k][j] == 0 {\n                        count += 1;\n                    }\n                }\n                for k in 0..m {\n                    if board[i][k] == 0 {\n                        count += 1;\n                    }\n                }\n                ans = ans.max(count);\n            }\n        }\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", ans)).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Army","description":"The Berland Armed Forces System consists of n ranks that are numbered using natural numbers from 1 to n, where 1 is the lowest rank and n is the highest rank.One needs exactly di years to rise from rank i to rank i+1. Reaching a certain rank i having not reached all the previous i-1 ranks is impossible.Vasya has just reached a new rank of a, but he dreams of holding the rank of b. Find for how many more years Vasya should serve in the army until he can finally realize his dream.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains an integer n (2\u2264n\u2264100). The second line contains n-1 integers di (1\u2264di\u2264100). The third input line contains two integers a and b (1\u2264a<b\u2264n). The numbers on the lines are space-separated.\n","output_spec":"Print the single number which is the number of years that Vasya needs to rise from rank a to rank b.\n","notes":null,"sample_inputs":["3\n5 6\n1 2\n","3\n5 6\n1 3\n"],"sample_outputs":["5\n","11\n"],"id":"38-A","difficulty":800,"tags":["implementation"],"src_uid":"69850c2af99d60711bcff5870575e15e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n, *a, *b, *d; cin >> n; cin >> *d; for (int i = 1; i < n; i++) { cin >> *d; *a += *d; } cin >> *a >> *b; cout << *b - *a << endl;\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nn = int(input())\nd = list(map(int, input().split()))\na, b = map(int, input().split())\n\nans = 0\nfor i in range(a, b):\n    ans += d[i-1]\n\nprint(ans)\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nd = list(map(int, input().split()))\na, b = map(int, input().split())\nprint(sum(d[a-1:b]))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\nd=list(map(int,input().split()))\na,b=map(int,input().split())\nprint(d[b-1]-d[a-1])\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace BerlandArmedForcesSystem\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] di = new int[n - 1];\n            string[] s = Console.ReadLine().Split(' ');\n            for (int i = 0; i < n - 1; i++)\n            {\n                di[i] = int.Parse(s[i]);\n            }\n            int a = int.Parse(Console.ReadLine());\n            int b = int.Parse(Console.ReadLine());\n            int sum = 0;\n            for (int i = a - 1; i < b - 1; i++)\n            {\n                sum += di[i];\n            }\n            Console.WriteLine(sum);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nd = gets.split.map(&:to_i)\na, b = gets.split.map(&:to_i)\n\nans = 0\n(a..b-1).each do |i|\n  ans += d[i-1]\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var di []int\\n    for i := 0; i < n-1; i++ {\\n        var d int\\n        fmt.Scan(&d)\\n        di = append(di, d)\\n    }\\n    var a, b int\\n    fmt.Scan(&a, &b)\\n    var sum int\\n    for i := a; i < b; i++ {\\n        sum += di[i-1]\\n    }\\n    fmt.Println(sum)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const n = parseInt(line);\n  const di = rl.on('line', (line) => {\n    const di = line.split(' ').map(Number);\n    const a = parseInt(rl.on('line', (line) => {\n      const a = line.split(' ').map(Number);\n      console.log(di.slice(a[0] - 1, a[1]).reduce((a, b) => a + b));\n    }));\n  });\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nn = readLine().toInt()\nd = readLine().split(\" \").map { it.toInt() }\na, b = readLine().split(\" \").map { it.toInt() }\n\nans = 0\nfor (i in a..b-1) {\n    ans += d[i-1]\n}\n\nprintln(ans)\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$d = explode(' ', trim(fgets(STDIN)));\n$a = (int)trim(fgets(STDIN));\n$b = (int)trim(fgets(STDIN));\n\n$sum = 0;\nfor ($i = $a; $i < $b; $i++) {\n    $sum += $d[$i - 1];\n}\n\necho $sum;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n - 1];\n    for (int i = 0; i < n - 1; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int a1, a2;\n    scanf(\" %d %d \", &a1, &a2);\n    int sum = 0;\n    for (int i = a1 - 1; i < a2 - 1; i++) {\n        sum += a[i];\n    }\n    printf(\" %d \", sum);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @d = <STDIN>;\nchomp @d;\nmy $a = <STDIN>;\nchomp $a;\nmy $b = <STDIN>;\nchomp $b;\n\nmy $sum = 0;\nfor (my $i = $a; $i < $b; $i++) {\n    $sum += $d[$i - 1];\n}\n\nprint $sum;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut d: Vec<usize> = Vec::new();\n    for _ in 0..n - 1 {\n        let t: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n        d.push(t);\n    }\n    let a: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let b: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n\n    let mut sum: usize = 0;\n    for i in a..b {\n        sum += d[i - 1];\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", sum)).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Chess","description":"Two chess pieces, a rook and a knight, stand on a standard chessboard 8\u00d78 in size. The positions in which they are situated are known. It is guaranteed that none of them beats the other one.Your task is to find the number of ways to place another knight on the board so that none of the three pieces on the board beat another one. A new piece can only be placed on an empty square.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains the description of the rook's position on the board. This description is a line which is 2 in length. Its first symbol is a lower-case Latin letter from a to h, and its second symbol is a number from 1 to 8. The second line contains the description of the knight's position in a similar way. It is guaranteed that their positions do not coincide.\n","output_spec":"Print a single number which is the required number of ways.\n","notes":null,"sample_inputs":["a1\nb2\n","a8\nd4\n"],"sample_outputs":["44\n","38\n"],"id":"38-B","difficulty":1200,"tags":["brute+force","implementation","math"],"src_uid":"073023c6b72ce923df2afd6130719cfc","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string rook, knight;\n    cin >> rook >> knight;\n    int r1 = rook[0] - 'a', c1 = rook[1] - '1';\n    int r2 = knight[0] - 'a', c2 = knight[1] - '1';\n    int ans = 0;\n    for (int i = 0; i < 8; i++) {\n        for (int j = 0; j < 8; j++) {\n            if (i != r1 && j != c1 && i != r2 && j != c2 && (abs(i - r1) == 2 && abs(j - c1) == 1) || (abs(i - r2) == 2 && abs(j - c2) == 1)) {\n                ans++;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String[] rook = scanner.nextLine().split(\" \");\n        String[] knight = scanner.nextLine().split(\" \");\n        int r = rook[0].charAt(0) - 'a';\n        int c = Integer.parseInt(rook[1]) - 1;\n        int k = knight[0].charAt(0) - 'a';\n        int l = Integer.parseInt(knight[1]) - 1;\n        int count = 0;\n        for (int i = 0; i < 8; i++) {\n            for (int j = 0; j < 8; j++) {\n                if (i != r && j != c && i != k && j != l && Math.abs(i - r) != Math.abs(j - c) && Math.abs(i - k) != Math.abs(j - l)) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    r = input()\n    k = input()\n    r = ord(r[0]) - ord('a')\n    r = r * 8 + int(r[1])\n    k = ord(k[0]) - ord('a')\n    k = k * 8 + int(k[1])\n    ans = 0\n    for i in range(8):\n        for j in range(8):\n            if i != r and j != k and (i + j) % 2 == 0:\n                ans += 1\n    print(ans)\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    char a1, b1, a2, b2;\n    scanf(\" %c%d \", &a1, &b1);\n    scanf(\" %c%d \", &a2, &b2);\n    int i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;\n    int count = 0;\n    for (i = 1; i <= 8; i++) {\n        for (j = 1; j <= 8; j++) {\n            if (i != a1 && j != b1 && i != a2 && j != b2) {\n                if (i == 1 || i == 8) {\n                    if (j == 1 || j == 8) {\n                        count++;\n                    }\n                } else if (i == 2 || i == 7) {\n                    if (j == 2 || j == 7) {\n                        count++;\n                    }\n                } else if (i == 3 || i == 6) {\n                    if (j == 3 || j == 6) {\n                        count++;\n                    }\n                } else if (i == 4) {\n                    if (j == 4) {\n                        count++;\n                    }\n                } else if (i == 5) {\n                    if (j == 5) {\n                        count++;\n                    }\n                }\n            }\n        }\n    }\n    printf(\"%d\\n\", count);\n    return 0;\n}\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Chess\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] rook = Console.ReadLine().Split(' ');\n            string[] knight = Console.ReadLine().Split(' ');\n            int r = int.Parse(rook[0]) - 'a';\n            int c = int.Parse(rook[1]) - 1;\n            int k = int.Parse(knight[0]) - 'a';\n            int l = int.Parse(knight[1]) - 1;\n            int ans = 0;\n            for (int i = 0; i < 8; i++)\n            {\n                for (int j = 0; j < 8; j++)\n                {\n                    if (i != r && j != c && i != k && j != l && Math.Abs(i - r) != Math.Abs(j - c) && Math.Abs(i - k) != Math.Abs(j - l))\n                    {\n                        ans++;\n                    }\n                }\n            }\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"r,c = gets.split(' ').map(&:to_i)\n\ndef knight_moves(r, c):\n    moves = []\n    for i in range(-2, 3):\n        for j in range(-2, 3):\n            if i != 0 or j != 0:\n                if 0 <= r + i < 8 and 0 <= c + j < 8:\n                    moves.append((r + i, c + j))\n    return moves\n\ndef is_valid(r, c):\n    return 0 <= r < 8 and 0 <= c < 8\n\ndef main():\n    moves = knight_moves(r, c)\n    valid_moves = []\n    for move in moves:\n        if is_valid(move[0], move[1]):\n            valid_moves.append(move)\n    print(len(valid_moves))\n\nif __name__ == '__main__':\n    main()\\n\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  a, b, c, d, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z: integer;\n  ch1, ch2: char;\n  ch: array[1..8] of char;\n  f: array[1..8, 1..8] of boolean;\n\nbegin\n  readln(ch1, ch2);\n  a := ord(ch1) - ord('a');\n  b := strtoint(ch2);\n  readln(ch1, ch2);\n  c := ord(ch1) - ord('a');\n  d := strtoint(ch2);\n  for i := 1 to 8 do\n    for j := 1 to 8 do\n      f[i, j] := true;\n  f[a, b] := false;\n  f[c, d] := false;\n  for i := 1 to 8 do\n    for j := 1 to 8 do\n      if f[i, j] then\n        begin\n          for k := 1 to 8 do\n            if (i + k < 8) and (f[i + k, j]) then\n              f[i + k, j] := false;\n          for k := 1 to 8 do\n            if (j + k < 8) and (f[i, j + k]) then\n              f[i, j + k] := false;\n          for k := 1 to 8 do\n            if (i - k > 0) and (f[i - k, j]) then\n              f[i - k, j] := false;\n          for k := 1 to 8 do\n            if (j - k > 0) and (f[i, j - k]) then\n              f[i, j - k] := false;\n          for k := 1 to 8 do\n            if (i + k < 8) and (j + k < 8) and (f[i + k, j + k]) then\n              f[i + k, j + k] := false;\n          for k := 1 to 8 do\n            if (i + k < 8) and (j - k > 0) and (f[i + k, j - k]) then\n              f[i + k, j - k] := false;\n          for k := 1 to 8 do\n            if (i - k > 0) and (j + k < 8) and (f[i - k, j + k]) then\n              f[i - k, j + k] := false;\n          for k := 1 to 8 do\n            if (i - k > 0) and (j - k > 0) and (f[i - k, j - k]) then\n              f[i - k, j - k] := false;\n        end;\n  s := 0;\n  for i := 1 to 8 do\n    for j := 1 to 8 do\n      if f[i, j] then\n        inc(s);\n  writeln(s);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var r, k string\\n    fmt.Scanf(\\\"%s\\n%s\\n\\\", &r, &k)\\n    var a, b, c, d int\\n    a = int(r[0]) - 'a'\\n    b = int(r[1]) - '1'\\n    c = int(k[0]) - 'a'\\n    d = int(k[1]) - '1'\\n    fmt.Println(8 - a - c - 1)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const input = require('fs').readFileSync('\/dev\/stdin').toString().split('\\n');\nconst rook = input[0].split('');\nconst knight = input[1].split('');\nconst board = [\n  ['1', '2', '3', '4', '5', '6', '7', '8'],\n  ['9', '10', '11', '12', '13', '14', '15', '16'],\n  ['17', '18', '19', '20', '21', '22', '23', '24'],\n  ['25', '26', '27', '28', '29', '30', '31', '32'],\n  ['33', '34', '35', '36', '37', '38', '39', '40'],\n  ['41', '42', '43', '44', '45', '46', '47', '48'],\n  ['49', '50', '51', '52', '53', '54', '55', '56'],\n  ['57', '58', '59', '60', '61', '62', '63', '64']\n];\nconst rookX = Number(rook[0]);\nconst rookY = Number(rook[1]);\nconst knightX = Number(knight[0]);\nconst knightY = Number(knight[1]);\nconst rookDir = [\n  [-1, 0],\n  [1, 0],\n  [0, -1],\n  [0, 1]\n];\nconst knightDir = [\n  [-2, -1],\n  [-2, 1],\n  [2, -1],\n  [2, 1],\n  [-1, -2],\n  [-1, 2],\n  [1, -2],\n  [1, 2]\n];\nconst count = 0;\nfor (let i = 0; i < 8; i++) {\n  for (let j = 0; j < 8; j++) {\n    if (board[i][j] !== '0') {\n      continue;\n    }\n    for (let k = 0; k < 4; k++) {\n      if (rookX + rookDir[k][0] === i && rookY + rookDir[k][1] === j) {\n        continue;\n      }\n      for (let l = 0; l < 8; l++) {\n        if (knightX + knightDir[l][0] === i && knightY + knightDir[l][1] === j) {\n          continue;\n        }\n        count++;\n      }\n    }\n  }\n}\nconsole.log(count);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val input = Scanner(System.`in`)\n    val rook = input.nextLine().split(\" \")\n    val knight = input.nextLine().split(\" \")\n    val rookX = rook[0].toInt() - 'a'.toInt()\n    val rookY = rook[1].toInt() - '1'.toInt()\n    val knightX = knight[0].toInt() - 'a'.toInt()\n    val knightY = knight[1].toInt() - '1'.toInt()\n    val board = Array(8) { Array(8) { 0 } }\n    board[rookX][rookY] = 1\n    board[knightX][knightY] = 2\n    val ans = 0\n    for (i in 0..7) {\n        for (j in 0..7) {\n            if (board[i][j] == 0) {\n                val x = i\n                val y = j\n                var count = 0\n                for (dx in -2..2) {\n                    for (dy in -2..2) {\n                        if (dx != 0 || dy != 0) {\n                            val nx = x + dx\n                            val ny = y + dy\n                            if (nx in 0..7 && ny in 0..7 && board[nx][ny] == 0) {\n                                count++\n                            }\n                        }\n                    }\n                }\n                ans += count\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$rook = explode(' ', fgets(STDIN));\n$knight = explode(' ', fgets(STDIN));\n$board = array_fill(0, 8, array_fill(0, 8, 0));\n$board[$rook[0]][$rook[1]] = 1;\n$board[$knight[0]][$knight[1]] = 2;\n$count = 0;\nfor ($i = 0; $i < 8; $i++) {\n    for ($j = 0; $j < 8; $j++) {\n        if ($board[$i][$j] == 0) {\n            $count++;\n        }\n    }\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string[2] rook, knight;\n    scanf(\" %s \", rook);\n    scanf(\" %s \", knight);\n\n    int[8] x = [0, 1, 2, 1, -1, -2, -1, 2];\n    int[8] y = [2, 1, -1, -2, -2, -1, 1, 2];\n\n    int count = 0;\n    for (int i = 0; i < 8; i++) {\n        for (int j = 0; j < 8; j++) {\n            if (rook[0] != x[i] + 'a' || rook[1] != y[i] + '1') {\n                if (knight[0] != x[j] + 'a' || knight[1] != y[j] + '1') {\n                    count++;\n                }\n            }\n        }\n    }\n\n    printf(\"%d\\n\", count);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $rook = <STDIN>;\nmy $knight = <STDIN>;\n\nmy @rook_pos = split(\/\/, $rook);\nmy @knight_pos = split(\/\/, $knight);\n\nmy $rook_row = ord($rook_pos[0]) - ord('a');\nmy $rook_col = $rook_pos[1] - 1;\n\nmy $knight_row = ord($knight_pos[0]) - ord('a');\nmy $knight_col = $knight_pos[1] - 1;\n\nmy $count = 0;\n\nfor (my $i = 0; $i < 8; $i++) {\n    for (my $j = 0; $j < 8; $j++) {\n        if ($i != $rook_row && $j != $rook_col && $i != $knight_row && $j != $knight_col) {\n            $count++;\n        }\n    }\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut rook = input.split_whitespace().collect::<Vec<&str>>();\n    let mut rook_x = rook[0].as_bytes()[0] as u8 - 'a' as u8;\n    let mut rook_y = rook[1].as_bytes()[0] as u8 - '1' as u8;\n\n    input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut knight = input.split_whitespace().collect::<Vec<&str>>();\n    let mut knight_x = knight[0].as_bytes()[0] as u8 - 'a' as u8;\n    let mut knight_y = knight[1].as_bytes()[0] as u8 - '1' as u8;\n\n    let mut count = 0;\n    for i in 0..8 {\n        for j in 0..8 {\n            if i != rook_x && j != rook_y && i != knight_x && j != knight_y {\n                if (i == 0 || i == 7) && (j == 0 || j == 7) {\n                    count += 2;\n                } else if (i == 0 || i == 7) || (j == 0 || j == 7) {\n                    count += 4;\n                } else if (i == 1 || i == 6) && (j == 1 || j == 6) {\n                    count += 4;\n                } else if (i == 2 || i == 5) && (j == 2 || j == 5) {\n                    count += 4;\n                } else if (i == 3 || i == 4) && (j == 3 || j == 4) {\n                    count += 8;\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"C. Blinds","description":"The blinds are known to consist of opaque horizontal stripes that can be rotated thus regulating the amount of light flowing in the room. There are n blind stripes with the width of 1 in the factory warehouse for blind production. The problem is that all of them are spare details from different orders, that is, they may not have the same length (it is even possible for them to have different lengths)Every stripe can be cut into two or more parts. The cuttings are made perpendicularly to the side along which the length is measured. Thus the cuttings do not change the width of a stripe but each of the resulting pieces has a lesser length (the sum of which is equal to the length of the initial stripe)After all the cuttings the blinds are constructed through consecutive joining of several parts, similar in length, along sides, along which length is measured. Also, apart from the resulting pieces an initial stripe can be used as a blind if it hasn't been cut. It is forbidden to construct blinds in any other way.Thus, if the blinds consist of k pieces each d in length, then they are of form of a rectangle of k\u00d7d bourlemeters. Your task is to find for what window possessing the largest possible area the blinds can be made from the given stripes if on technical grounds it is forbidden to use pieces shorter than l bourlemeter. The window is of form of a rectangle with side lengths as positive integers.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first output line contains two space-separated integers n and l (1\u2264n,l\u2264100). They are the number of stripes in the warehouse and the minimal acceptable length of a blind stripe in bourlemeters. The second line contains space-separated n integers ai. They are the lengths of initial stripes in bourlemeters (1\u2264ai\u2264100).\n","output_spec":"Print the single number \u2014 the maximal area of the window in square bourlemeters that can be completely covered. If no window with a positive area that can be covered completely without breaking any of the given rules exist, then print the single number 0.\n","notes":"In the first sample test the required window is 2\u00d74 in size and the blinds for it consist of 4 parts, each 2 bourlemeters long. One of the parts is the initial stripe with the length of 2, the other one is a part of a cut stripe with the length of 3 and the two remaining stripes are parts of a stripe with the length of 4 cut in halves.\n","sample_inputs":["4 2\n1 2 3 4\n","5 3\n5 5 7 3 1\n","2 3\n1 2\n"],"sample_outputs":["8\n","15\n","0\n"],"id":"38-C","difficulty":1400,"tags":["brute+force"],"src_uid":"991516fa6f3ed5a71c547a3a50ea1a2b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, l;\n    cin >> n >> l;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    sort(a, a + n);\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] >= l) {\n            ans = max(ans, a[i]);\n        }\n    }\n    cout << ans * ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int l = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] >= l) {\n                ans = Math.max(ans, a[i]);\n            } else {\n                ans = Math.max(ans, a[i] * 2);\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,l=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n    if a[i]>=l:\n        ans+=a[i]-l\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, l, i, j, k, max = 0;\n    scanf(\" %d %d \", &n, &l);\n    int a[n];\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (a[i] + a[j] >= l) {\n                k = a[i] + a[j];\n                if (k > max) {\n                    max = k;\n                }\n            }\n        }\n    }\n    printf(\" %d \", max);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, l = int.Parse(Console.ReadLine().Split(' ')[0]), int.Parse(Console.ReadLine().Split(' ')[1]);\n        var a = new List<int>();\n        for (int i = 0; i < n; i++)\n            a.Add(int.Parse(Console.ReadLine()));\n\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] >= l)\n                ans = Math.Max(ans, a[i]);\n            else\n            {\n                for (int j = i + 1; j < n; j++)\n                {\n                    if (a[j] >= l)\n                    {\n                        ans = Math.Max(ans, a[i] + a[j]);\n                        break;\n                    }\n                }\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, l = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\na.sort!\nans = 0\n(0..n-1).each do |i|\n    if a[i] >= l\n        ans += a[i]\n    else\n        ans += l\n    end\nend\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram BLINDS;\n\nuses\n  SysUtils;\n\nvar\n  n, l, i, j, k, m, max, a: integer;\n  b: array[0..100] of integer;\n\nbegin\n  readln(n, l);\n  for i := 0 to n - 1 do\n  begin\n    readln(a);\n    b[a] := b[a] + 1;\n  end;\n  max := 0;\n  for i := 0 to 100 do\n  begin\n    if b[i] > 0 then\n    begin\n      m := b[i];\n      for j := i to 100 do\n      begin\n        if b[j] > 0 then\n        begin\n          k := b[j];\n          if (i + j) >= l then\n          begin\n            m := max(m, k * (i + j));\n          end;\n        end;\n      end;\n      max := max(max, m);\n    end;\n  end;\n  writeln(max);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, l int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &l)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var ai int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &ai)\\n        a = append(a, ai)\\n    }\\n    var dp [101]int\\n    dp[0] = 1\\n    for i := 1; i <= 100; i++ {\\n        dp[i] = 0\\n        for j := 0; j < n; j++ {\\n            if a[j] >= i {\\n                dp[i] = max(dp[i], dp[i-a[j]]+1)\\n            }\\n        }\\n    }\\n    var ans int\\n    for i := 1; i <= 100; i++ {\\n        if dp[i] >= l {\\n            ans = max(ans, i*i)\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst l = parseInt(stdin[0].split(' ')[1]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 0; i < n; i++) {\n    for (let j = a[i]; j <= n; j++) {\n        dp[j] = Math.max(dp[j], dp[j - a[i]] + a[i]);\n    }\n}\nconsole.log(dp[n] * l);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, l) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    for (i in 0 until n) {\n        if (a[i] >= l) {\n            ans += a[i]\n        } else {\n            ans += l\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$input = explode(\" \", trim(fgets(STDIN)));\n$n = intval($input[0]);\n$l = intval($input[1]);\n$input = explode(\" \", trim(fgets(STDIN)));\n$arr = array_map('intval', $input);\n$arr = array_filter($arr, function($v) use ($l) {\n    return $v >= $l;\n});\n$arr = array_unique($arr);\nsort($arr);\n$max = 0;\nfor ($i = 0; $i < count($arr); $i++) {\n    for ($j = $i + 1; $j < count($arr); $j++) {\n        $area = $arr[$i] * $arr[$j];\n        if ($area > $max) {\n            $max = $area;\n        }\n    }\n}\necho $max;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, l;\n    scanf(\" %d %d \", &n, &l);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] >= l) {\n            ans = max(ans, a[i]);\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (a[i] < l) {\n            for (int j = 0; j < n; j++) {\n                if (i != j && a[j] >= l && a[i] + a[j] >= l) {\n                    ans = max(ans, a[i] + a[j]);\n                }\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n,$l; \\n\\nchomp(my $line = <STDIN>);\\n($n,$l) = split(\/ \/,$line);\\n\\nmy @a = ();\\n\\nfor(my $i=0;$i<$n;$i++){\\n    chomp(my $line = <STDIN>);\\n    push(@a,$line);\\n}\\n\\nmy $max = 0;\\n\\nfor(my $i=0;$i<$n;$i++){\\n    for(my $j=0;$j<$n;$j++){\\n        if($a[$i] >= $l && $a[$j] >= $l && $a[$i] + $a[$j] >= $l){\\n            $max = max($max,$a[$i] * $a[$j]);\\n        }\\n    }\\n}\\n\\nprint $max;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_l = line.split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n_l[0];\n    let l = n_l[1];\n\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut a = line.split_whitespace().map(|s| s.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut max_area = 0;\n    for i in 0..n {\n        for j in i + 1..n {\n            if a[i] >= l && a[j] >= l {\n                max_area = max(max_area, a[i] * a[j]);\n            }\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\", max_area).as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"J. Spelling Check","description":"Petya has noticed that when he types using a keyboard, he often presses extra buttons and adds extra letters to the words. Of course, the spell-checking system underlines the words for him and he has to click every word and choose the right variant. Petya got fed up with correcting his mistakes himself, that\u2019s why he decided to invent the function that will correct the words itself. Petya started from analyzing the case that happens to him most of the time, when all one needs is to delete one letter for the word to match a word from the dictionary. Thus, Petya faces one mini-task: he has a printed word and a word from the dictionary, and he should delete one letter from the first word to get the second one. And now the very non-trivial question that Petya faces is: which letter should he delete?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input data contains two strings, consisting of lower-case Latin letters. The length of each string is from 1 to 10^6 symbols inclusive, the first string contains exactly 1 symbol more than the second one.\n","output_spec":"In the first line output the number of positions of the symbols in the first string, after the deleting of which the first string becomes identical to the second one. In the second line output space-separated positions of these symbols in increasing order. The positions are numbered starting from 1. If it is impossible to make the first string identical to the second string by deleting one symbol, output one number 0.\n","notes":null,"sample_inputs":["abdrakadabra\nabrakadabra\n","aa\na\n","competition\ncodeforces\n"],"sample_outputs":["1\n3\n","2\n1 2\n","0\n"],"id":"39-J","difficulty":1500,"tags":["hashing","implementation","strings"],"src_uid":"0df064fd0288c2ac4832efa227107a0e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s1, s2;\n    cin >> s1 >> s2;\n    int n = s1.length();\n    int ans = 0;\n    int pos[n];\n    for (int i = 0; i < n; i++) {\n        if (s1[i] != s2[i]) {\n            pos[ans] = i + 1;\n            ans++;\n        }\n    }\n    if (ans == 0) {\n        cout << 0 << endl;\n    } else {\n        cout << ans << endl;\n        for (int i = 0; i < ans; i++) {\n            cout << pos[i] << \" \";\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s1 = sc.nextLine();\n        String s2 = sc.nextLine();\n        int count = 0;\n        int[] pos = new int[s1.length()];\n        for (int i = 0; i < s1.length(); i++) {\n            if (s1.charAt(i) != s2.charAt(i)) {\n                count++;\n                pos[i] = 1;\n            }\n        }\n        System.out.println(count);\n        for (int i = 0; i < s1.length(); i++) {\n            if (pos[i] == 1) {\n                System.out.print(i + 1 + \" \");\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns1, s2 = input(), input()\nprint(s1.count(s2) - 1)\nprint(*[i + 1 for i, c in enumerate(s1) if c not in s2])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <string.h>\nint main() {\n    char s1[1000000], s2[1000000];\n    scanf(\" %s\\n%s \", s1, s2);\n    int i, j, k, n = strlen(s1), m = strlen(s2);\n    for (i = 0; i < n; i++) {\n        if (s1[i] != s2[i]) {\n            printf(\" 1\\n\");\n            printf(\" %d \", i + 1);\n            return 0;\n        }\n    }\n    printf(\" 0\\n\");\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        string first = input[0];\n        string second = input[1];\n        int count = 0;\n        List<int> positions = new List<int>();\n        for (int i = 0; i < first.Length; i++)\n        {\n            if (first[i] != second[i])\n            {\n                count++;\n                positions.Add(i + 1);\n            }\n        }\n        Console.WriteLine(count);\n        Console.WriteLine(string.Join(\" \", positions));\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main()\n    a, b = gets.split(\"\\n\")\n    c = a.chars.zip(b.chars).map{|x, y| x != y ? x : nil}\n    print(c.count(nil))\n    print(\"\\n\")\n    print(*c.index(nil))\nmain()\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram delphi;\nuses crt;\nvar\n  s1, s2: string;\n  i, j, k: integer;\nbegin\n  readln(s1);\n  readln(s2);\n  i := 1;\n  j := 1;\n  while (i <= length(s1)) and (j <= length(s2)) do\n  begin\n    if s1[i] = s2[j] then\n    begin\n      i := i + 1;\n      j := j + 1;\n    end\n    else\n    begin\n      k := i;\n      while (i <= length(s1)) and (s1[i] <> s2[j]) do\n      begin\n        i := i + 1;\n      end;\n      if i > length(s1) then\n      begin\n        writeln(0);\n        writeln('');\n        exit;\n      end;\n      writeln(1);\n      writeln(k);\n      exit;\n    end;\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.5\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar s1, s2 string\n\tfmt.Scanf(\"%s\\n%s\\n\", &s1, &s2)\n\tif strings.Compare(s1, s2) == 0 {\n\t\tfmt.Println(\"0\")\n\t\treturn\n\t}\n\tfor i := 0; i < len(s1); i++ {\n\t\tif s1[i] != s2[i] {\n\t\t\tfmt.Println(\"1\")\n\t\t\tfmt.Println(i + 1)\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"0\")\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst a = input[0];\nconst b = input[1];\nconst ans = [];\nfor (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n        ans.push(i + 1);\n    }\n}\nconsole.log(ans.length);\nconsole.log(ans.join(' '));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (s1, s2) = readLine()!!.split(\"\\n\")\n    val s1_list = s1.toCharArray()\n    val s2_list = s2.toCharArray()\n    var ans = 0\n    var pos = 0\n    for (i in 0 until s1.length) {\n        if (s1_list[i] != s2_list[i]) {\n            ans++\n            pos = i + 1\n        }\n    }\n    println(ans)\n    println(pos)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a = trim(fgets(STDIN));\n$b = trim(fgets(STDIN));\n$c = array_diff($a, $b);\nif (count($c) == 0) {\n    echo 0;\n} else {\n    echo count($c);\n    echo ' ';\n    echo implode(' ', $c);\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s1, s2;\n    scanf(\" %s\\n%s \", s1, s2);\n    int n = s1.length;\n    int m = s2.length;\n    int i;\n    int j;\n    int ans = 0;\n    int pos[n];\n    for (i = 0; i < n; i++) {\n        if (s1[i] != s2[i]) {\n            pos[ans] = i + 1;\n            ans++;\n        }\n    }\n    if (ans == 0) {\n        printf(\"0\\n\");\n    } else {\n        printf(\"%d\\n\", ans);\n        for (i = 0; i < ans; i++) {\n            printf(\"%d \", pos[i]);\n        }\n        printf(\"\\n\");\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $s1 = <STDIN>;\nmy $s2 = <STDIN>;\n\nmy $n = length($s1);\nmy $m = length($s2);\n\nmy $ans = 0;\nmy @ans_pos;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($s1[$i] ne $s2[$i]) {\n        $ans++;\n        push @ans_pos, $i + 1;\n    }\n}\n\nprint \"$ans\\n\";\nprint join(\" \", @ans_pos);\nprint \"\\n\";\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let (s1, s2) = read_input();\n    let mut ans = 0;\n    let mut pos = Vec::new();\n    for (i, c) in s1.chars().enumerate() {\n        if c != s2.chars().nth(i).unwrap() {\n            ans += 1;\n            pos.push(i + 1);\n        }\n    }\n    println!(\"{}\", ans);\n    println!(\"{}\", pos.join(\" \"));\n}\n\nfn read_input() -> (String, String) {\n    let mut s1 = String::new();\n    let mut s2 = String::new();\n    std::io::stdin().read_line(&mut s1).unwrap();\n    std::io::stdin().read_line(&mut s2).unwrap();\n    (s1, s2)\n}\n\"\"\"}]"}
{"title":"C. Tic-tac-toe","description":"Certainly, everyone is familiar with tic-tac-toe game. The rules are very simple indeed. Two players take turns marking the cells in a 3\u00d73 grid (one player always draws crosses, the other \u2014 noughts). The player who succeeds first in placing three of his marks in a horizontal, vertical or diagonal line wins, and the game is finished. The player who draws crosses goes first. If the grid is filled, but neither Xs, nor 0s form the required line, a draw is announced.You are given a 3\u00d73 grid, each grid cell is empty, or occupied by a cross or a nought. You have to find the player (first or second), whose turn is next, or print one of the verdicts below:   illegal \u2014 if the given board layout can't appear during a valid game;  the first player won \u2014 if in the given board layout the first player has just won;  the second player won \u2014 if in the given board layout the second player has just won;  draw \u2014 if the given board layout has just let to a draw. ","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The input consists of three lines, each of the lines contains characters \".\", \"X\" or \"0\" (a period, a capital letter X, or a digit zero).\n","output_spec":"Print one of the six verdicts: first, second, illegal, the first player won, the second player won or draw.\n","notes":null,"sample_inputs":["X0X\n.0.\n.X.\n"],"sample_outputs":["second\n"],"id":"3-C","difficulty":1800,"tags":["brute+force","games","implementation"],"src_uid":"892680e26369325fb00d15543a96192c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    char a[3][3];\n    for (int i = 0; i < 3; i++) {\n        cin >> a[i];\n    }\n    int x = 0, y = 0;\n    for (int i = 0; i < 3; i++) {\n        if (a[i][0] == a[i][1] && a[i][1] == a[i][2] && a[i][0] != '.') {\n            if (a[i][0] == 'X') {\n                cout << \"the first player won\\n\";\n            } else {\n                cout << \"the second player won\\n\";\n            }\n            return 0;\n        }\n        if (a[0][i] == a[1][i] && a[1][i] == a[2][i] && a[0][i] != '.') {\n            if (a[0][i] == 'X') {\n                cout << \"the first player won\\n\";\n            } else {\n                cout << \"the second player won\\n\";\n            }\n            return 0;\n        }\n        if (a[0][0] == a[1][1] && a[1][1] == a[2][2] && a[0][0] != '.') {\n            if (a[0][0] == 'X') {\n                cout << \"the first player won\\n\";\n            } else {\n                cout << \"the second player won\\n\";\n            }\n            return 0;\n        }\n        if (a[2][0] == a[1][1] && a[1][1] == a[0][2] && a[2][0] != '.') {\n            if (a[2][0] == 'X') {\n                cout << \"the first player won\\n\";\n            } else {\n                cout << \"the second player won\\n\";\n            }\n            return 0;\n        }\n    }\n    for (int i = 0; i < 3; i++) {\n        for (int j = 0; j < 3; j++) {\n            if (a[i][j] == '.') {\n                x = 1;\n            }\n        }\n    }\n    if (x == 0) {\n        cout << \"draw\\n\";\n    } else {\n        cout << \"second\\n\";\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String[] board = new String[3];\n        for (int i = 0; i < 3; i++) {\n            board[i] = scanner.nextLine();\n        }\n\n        int xCount = 0;\n        int oCount = 0;\n        for (int i = 0; i < 3; i++) {\n            for (int j = 0; j < 3; j++) {\n                if (board[i].charAt(j) == 'X') {\n                    xCount++;\n                } else if (board[i].charAt(j) == '0') {\n                    oCount++;\n                }\n            }\n        }\n\n        if (xCount == 3) {\n            System.out.println(\"the first player won\");\n        } else if (oCount == 3) {\n            System.out.println(\"the second player won\");\n        } else if (xCount + oCount == 9) {\n            System.out.println(\"draw\");\n        } else {\n            if (checkWin(board, 'X')) {\n                System.out.println(\"the first player won\");\n            } else if (checkWin(board, '0')) {\n                System.out.println(\"the second player won\");\n            } else {\n                if (xCount == oCount) {\n                    System.out.println(\"second\");\n                } else {\n                    System.out.println(\"first\");\n                }\n            }\n        }\n    }\n\n    private static boolean checkWin(String[] board, char player) {\n        for (int i = 0; i < 3; i++) {\n            if (board[i].charAt(0) == player && board[i].charAt(1) == player && board[i].charAt(2) == player) {\n                return true;\n            }\n            if (board[0].charAt(i) == player && board[1].charAt(i) == player && board[2].charAt(i) == player) {\n                return true;\n            }\n        }\n        if (board[0].charAt(0) == player && board[1].charAt(1) == player && board[2].charAt(2) == player) {\n            return true;\n        }\n        if (board[0].charAt(2) == player && board[1].charAt(1) == player && board[2].charAt(0) == player) {\n            return true;\n        }\n        return false;\n    }\n}\n\"\"\"}]","Python":"","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    char a[3][3];\n    int i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;\n    for (i = 0; i < 3; i++) {\n        scanf(\" %c%c%c \", &a[i][0], &a[i][1], &a[i][2]);\n    }\n    for (i = 0; i < 3; i++) {\n        if (a[i][0] == 'X' && a[i][1] == 'X' && a[i][2] == 'X') {\n            printf(\" the first player won\\n\");\n            return 0;\n        }\n        if (a[0][i] == 'X' && a[1][i] == 'X' && a[2][i] == 'X') {\n            printf(\" the first player won\\n\");\n            return 0;\n        }\n        if (a[i][0] == 'X' && a[1][1] == 'X' && a[2][2] == 'X') {\n            printf(\" the first player won\\n\");\n            return 0;\n        }\n        if (a[2][0] == 'X' && a[1][1] == 'X' && a[0][2] == 'X') {\n            printf(\" the first player won\\n\");\n            return 0;\n        }\n    }\n    for (i = 0; i < 3; i++) {\n        if (a[i][0] == '0' && a[i][1] == '0' && a[i][2] == '0') {\n            printf(\" the second player won\\n\");\n            return 0;\n        }\n        if (a[0][i] == '0' && a[1][i] == '0' && a[2][i] == '0') {\n            printf(\" the second player won\\n\");\n            return 0;\n        }\n        if (a[i][0] == '0' && a[1][1] == '0' && a[2][2] == '0') {\n            printf(\" the second player won\\n\");\n            return 0;\n        }\n        if (a[2][0] == '0' && a[1][1] == '0' && a[0][2] == '0') {\n            printf(\" the second player won\\n\");\n            return 0;\n        }\n    }\n    for (i = 0; i < 3; i++) {\n        for (j = 0; j < 3; j++) {\n            if (a[i][j] != '.' && a[i][j] != 'X' && a[i][j] != '0') {\n                printf(\" illegal\\n\");\n                return 0;\n            }\n        }\n    }\n    for (i = 0; i < 3; i++) {\n        for (j = 0; j < 3; j++) {\n            if (a[i][j] == '.') {\n                printf(\" second\\n\");\n                return 0;\n            }\n        }\n    }\n    printf(\" draw\\n\");\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var board = new char[3][];\n        for (int i = 0; i < 3; i++)\n        {\n            board[i] = Console.ReadLine().ToCharArray();\n        }\n\n        var firstPlayerWon = board[0][0] == 'X' && board[1][1] == 'X' && board[2][2] == 'X' ||\n            board[0][2] == 'X' && board[1][1] == 'X' && board[2][0] == 'X' ||\n            board[0][0] == 'X' && board[1][0] == 'X' && board[2][0] == 'X' ||\n            board[0][1] == 'X' && board[1][1] == 'X' && board[2][1] == 'X' ||\n            board[0][2] == 'X' && board[1][2] == 'X' && board[2][2] == 'X';\n\n        var secondPlayerWon = board[0][0] == '0' && board[1][1] == '0' && board[2][2] == '0' ||\n            board[0][2] == '0' && board[1][1] == '0' && board[2][0] == '0' ||\n            board[0][0] == '0' && board[1][0] == '0' && board[2][0] == '0' ||\n            board[0][1] == '0' && board[1][1] == '0' && board[2][1] == '0' ||\n            board[0][2] == '0' && board[1][2] == '0' && board[2][2] == '0';\n\n        if (firstPlayerWon)\n        {\n            Console.WriteLine(\"the first player won\");\n        }\n        else if (secondPlayerWon)\n        {\n            Console.WriteLine(\"the second player won\");\n        }\n        else if (board[0][0] != '.' && board[0][1] != '.' && board[0][2] != '.' &&\n            board[1][0] != '.' && board[1][1] != '.' && board[1][2] != '.' &&\n            board[2][0] != '.' && board[2][1] != '.' && board[2][2] != '.')\n        {\n            Console.WriteLine(\"draw\");\n        }\n        else if (board[0][0] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[0][1] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[0][2] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[1][0] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[1][1] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[1][2] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[2][0] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[2][1] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else if (board[2][2] == '.')\n        {\n            Console.WriteLine(\"first\");\n        }\n        else\n        {\n            Console.WriteLine(\"illegal\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def tic_tac_toe(board)\n    # Check if the board is full\n    if board.count(\".\") == 0\n        return \"draw\"\n    end\n\n    # Check if the first player has won\n    if board[0] == \"X\" && board[1] == \"X\" && board[2] == \"X\" ||\n        board[3] == \"X\" && board[4] == \"X\" && board[5] == \"X\" ||\n        board[6] == \"X\" && board[7] == \"X\" && board[8] == \"X\" ||\n        board[0] == \"X\" && board[3] == \"X\" && board[6] == \"X\" ||\n        board[1] == \"X\" && board[4] == \"X\" && board[7] == \"X\" ||\n        board[2] == \"X\" && board[5] == \"X\" && board[8] == \"X\" ||\n        board[0] == \"X\" && board[4] == \"X\" && board[8] == \"X\" ||\n        board[2] == \"X\" && board[4] == \"X\" && board[6] == \"X\"\n        return \"the first player won\"\n    end\n\n    # Check if the second player has won\n    if board[0] == \"0\" && board[1] == \"0\" && board[2] == \"0\" ||\n        board[3] == \"0\" && board[4] == \"0\" && board[5] == \"0\" ||\n        board[6] == \"0\" && board[7] == \"0\" && board[8] == \"0\" ||\n        board[0] == \"0\" && board[3] == \"0\" && board[6] == \"0\" ||\n        board[1] == \"0\" && board[4] == \"0\" && board[7] == \"0\" ||\n        board[2] == \"0\" && board[5] == \"0\" && board[8] == \"0\" ||\n        board[0] == \"0\" && board[4] == \"0\" && board[8] == \"0\" ||\n        board[2] == \"0\" && board[4] == \"0\" && board[6] == \"0\"\n        return \"the second player won\"\n    end\n\n    # Check if the game is still in progress\n    if board.count(\"X\") + board.count(\"0\") < 9\n        return \"second\"\n    end\n\n    # The game is a draw\n    return \"draw\"\nend\n\n# Get the input from the user\nboard = gets.chomp.split(\"\\n\")\n\n# Print the verdict\nputs tic_tac_toe(board)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program TicTacToe;\nuses SysUtils;\n\nvar\n  a, b, c, d, e, f, g, h, i: Char;\n\nbegin\n  Readln(a, b, c);\n  Readln(d, e, f);\n  Readln(g, h, i);\n\n  if (a = 'X' and b = 'X' and c = 'X') or\n     (d = 'X' and e = 'X' and f = 'X') or\n     (g = 'X' and h = 'X' and i = 'X') or\n     (a = 'X' and d = 'X' and g = 'X') or\n     (b = 'X' and e = 'X' and h = 'X') or\n     (c = 'X' and f = 'X' and i = 'X') or\n     (a = 'X' and e = 'X' and i = 'X') or\n     (c = 'X' and e = 'X' and g = 'X') then\n    Writeln('the first player won');\n  else if (a = '0' and b = '0' and c = '0') or\n     (d = '0' and e = '0' and f = '0') or\n     (g = '0' and h = '0' and i = '0') or\n     (a = '0' and d = '0' and g = '0') or\n     (b = '0' and e = '0' and h = '0') or\n     (c = '0' and f = '0' and i = '0') or\n     (a = '0' and e = '0' and i = '0') or\n     (c = '0' and e = '0' and g = '0') then\n    Writeln('the second player won');\n  else if (a <> '.' and b <> '.' and c <> '.' and d <> '.' and e <> '.' and f <> '.' and g <> '.' and h <> '.' and i <> '.') then\n    Writeln('draw');\n  else\n    Writeln('second');\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var a, b, c, d, e, f, g, h, i string\\n    fmt.Scan(&a, &b, &c, &d, &e, &f, &g, &h, &i)\\n    var x, y, z int\\n    x = 0\\n    y = 0\\n    z = 0\\n    if a == \\\"X\\\" && b == \\\"X\\\" && c == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if a == \\\"0\\\" && b == \\\"0\\\" && c == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if d == \\\"X\\\" && e == \\\"X\\\" && f == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if d == \\\"0\\\" && e == \\\"0\\\" && f == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if g == \\\"X\\\" && h == \\\"X\\\" && i == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if g == \\\"0\\\" && h == \\\"0\\\" && i == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if a == \\\"X\\\" && d == \\\"X\\\" && g == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if a == \\\"0\\\" && d == \\\"0\\\" && g == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if b == \\\"X\\\" && e == \\\"X\\\" && h == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if b == \\\"0\\\" && e == \\\"0\\\" && h == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if c == \\\"X\\\" && f == \\\"X\\\" && i == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if c == \\\"0\\\" && f == \\\"0\\\" && i == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if a == \\\"X\\\" && e == \\\"X\\\" && i == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if a == \\\"0\\\" && e == \\\"0\\\" && i == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if c == \\\"X\\\" && e == \\\"X\\\" && g == \\\"X\\\" {\\n        fmt.Println(\\\"the first player won\\\")\\n        return\\n    } else if c == \\\"0\\\" && e == \\\"0\\\" && g == \\\"0\\\" {\\n        fmt.Println(\\\"the second player won\\\")\\n        return\\n    } else if x == 0 && y == 0 && z == 0 {\\n        fmt.Println(\\\"draw\\\")\\n        return\\n    } else if x == 1 && y == 1 && z == 1 {\\n        fmt.Println(\\\"first\\\")\\n        return\\n    } else if x == 2 && y == 2 && z == 2 {\\n        fmt.Println(\\\"second\\\")\\n        return\\n    } else {\\n        fmt.Println(\\\"illegal\\\")\\n        return\\n    }\\n}\\n\"}","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val board = Array(3) { Array(3) { scanner.next().toString() } }\n\n    val firstPlayerWon = board[0][0] == \"X\" && board[1][1] == \"X\" && board[2][2] == \"X\" ||\n            board[0][2] == \"X\" && board[1][1] == \"X\" && board[2][0] == \"X\" ||\n            board[0][0] == \"X\" && board[1][0] == \"X\" && board[2][0] == \"X\" ||\n            board[0][1] == \"X\" && board[1][1] == \"X\" && board[2][1] == \"X\" ||\n            board[0][2] == \"X\" && board[1][2] == \"X\" && board[2][2] == \"X\"\n\n    val secondPlayerWon = board[0][0] == \"0\" && board[1][1] == \"0\" && board[2][2] == \"0\" ||\n            board[0][2] == \"0\" && board[1][1] == \"0\" && board[2][0] == \"0\" ||\n            board[0][0] == \"0\" && board[1][0] == \"0\" && board[2][0] == \"0\" ||\n            board[0][1] == \"0\" && board[1][1] == \"0\" && board[2][1] == \"0\" ||\n            board[0][2] == \"0\" && board[1][2] == \"0\" && board[2][2] == \"0\"\n\n    val draw = board.all { row -> row.all { it != \".\" } } && !firstPlayerWon && !secondPlayerWon\n\n    if (firstPlayerWon) {\n        println(\"the first player won\")\n    } else if (secondPlayerWon) {\n        println(\"the second player won\")\n    } else if (draw) {\n        println(\"draw\")\n    } else {\n        println(if (board[0][0] == \"X\") \"second\" else \"first\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$board = explode(\"\\n\", trim(fgets(STDIN)));\n$winner = 'first';\n$winner_count = 0;\n$draw = false;\n\nfor ($i = 0; $i < 3; $i++) {\n    if (count(array_unique($board[$i])) == 1) {\n        $winner = $board[$i][0];\n        $winner_count++;\n    }\n    if (count(array_unique(array_slice($board, $i * 3, 3))) == 1) {\n        $winner = $board[$i * 3][0];\n        $winner_count++;\n    }\n    if (count(array_unique(array_slice($board, $i, 3))) == 1) {\n        $winner = $board[$i][0];\n        $winner_count++;\n    }\n}\n\nif ($winner_count == 1) {\n    echo $winner . ' won' . PHP_EOL;\n} elseif ($winner_count == 0) {\n    $draw = true;\n}\n\nfor ($i = 0; $i < 3; $i++) {\n    if (in_array('.', $board[$i])) {\n        echo 'second' . PHP_EOL;\n        return;\n    }\n}\n\nfor ($i = 0; $i < 3; $i++) {\n    if (in_array('.', array_slice($board, $i * 3, 3))) {\n        echo 'second' . PHP_EOL;\n        return;\n    }\n}\n\nfor ($i = 0; $i < 3; $i++) {\n    if (in_array('.', array_slice($board, $i, 3))) {\n        echo 'second' . PHP_EOL;\n        return;\n    }\n}\n\nif ($draw) {\n    echo 'draw' . PHP_EOL;\n} else {\n    echo 'illegal' . PHP_EOL;\n}\n?>'}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.array;\n\nvoid main() {\n    auto a = readln().split(' ');\n    auto b = readln().split(' ');\n    auto c = readln().split(' ');\n\n    auto x = a.map!(x => x == 'X' ? 1 : 0).sum;\n    auto y = b.map!(x => x == 'X' ? 1 : 0).sum;\n    auto z = c.map!(x => x == 'X' ? 1 : 0).sum;\n\n    auto w = a.map!(x => x == '0' ? 1 : 0).sum;\n    auto v = b.map!(x => x == '0' ? 1 : 0).sum;\n    auto u = c.map!(x => x == '0' ? 1 : 0).sum;\n\n    auto x1 = a[0] == 'X' && a[1] == 'X' && a[2] == 'X';\n    auto x2 = b[0] == 'X' && b[1] == 'X' && b[2] == 'X';\n    auto x3 = c[0] == 'X' && c[1] == 'X' && c[2] == 'X';\n    auto x4 = a[0] == 'X' && b[1] == 'X' && c[2] == 'X';\n    auto x5 = a[2] == 'X' && b[1] == 'X' && c[0] == 'X';\n    auto x6 = a[0] == 'X' && b[0] == 'X' && c[0] == 'X';\n    auto x7 = a[1] == 'X' && b[1] == 'X' && c[1] == 'X';\n    auto x8 = a[2] == 'X' && b[2] == 'X' && c[2] == 'X';\n\n    auto y1 = a[0] == '0' && a[1] == '0' && a[2] == '0';\n    auto y2 = b[0] == '0' && b[1] == '0' && b[2] == '0';\n    auto y3 = c[0] == '0' && c[1] == '0' && c[2] == '0';\n    auto y4 = a[0] == '0' && b[1] == '0' && c[2] == '0';\n    auto y5 = a[2] == '0' && b[1] == '0' && c[0] == '0';\n    auto y6 = a[0] == '0' && b[0] == '0' && c[0] == '0';\n    auto y7 = a[1] == '0' && b[1] == '0' && c[1] == '0';\n    auto y8 = a[2] == '0' && b[2] == '0' && c[2] == '0';\n\n    if (x1 || x2 || x3 || x4 || x5 || x6 || x7 || x8) {\n        writeln('the first player won');\n    } else if (y1 || y2 || y3 || y4 || y5 || y6 || y7 || y8) {\n        writeln('the second player won');\n    } else if (x + y == 9) {\n        writeln('draw');\n    } else if (x == 0 && y == 0) {\n        writeln('first');\n    } else {\n        writeln('second');\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\n# tic-tac-toe\n\n# read the board\n\n$board = <STDIN>;\n$board =~ s\/\\n\/ \/g;\n\n# check if the board is legal\n\nif ($board !~ \/^[.X0]+$\/) {\n    print \"illegal\\n\";\n    exit;\n}\n\n# check if the first player won\n\nif ($board =~ \/XXX\/) {\n    print \"the first player won\\n\";\n    exit;\n}\n\n# check if the second player won\n\nif ($board =~ \/000\/) {\n    print \"the second player won\\n\";\n    exit;\n}\n\n# check if the game is a draw\n\nif ($board =~ \/.*X.*X.*X\/ || $board =~ \/.*0.*0.*0\/ ||\n    $board =~ \/.*X.*0.*0\/ || $board =~ \/.*0.*X.*0\/) {\n    print \"draw\\n\";\n    exit;\n}\n\n# the game is not over yet\n\nprint \"second\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut board = [['.'; 3]; 3];\n    for i in 0..3 {\n        let line = io::stdin().read_line().unwrap();\n        for (j, c) in line.chars().enumerate() {\n            board[i][j] = c;\n        }\n    }\n\n    let mut first_player_won = false;\n    let mut second_player_won = false;\n    for i in 0..3 {\n        if board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != '.' {\n            if board[i][0] == 'X' {\n                first_player_won = true;\n            } else {\n                second_player_won = true;\n            }\n        }\n        if board[0][i] == board[1][i] && board[1][i] == board[2][i] && board[0][i] != '.' {\n            if board[0][i] == 'X' {\n                first_player_won = true;\n            } else {\n                second_player_won = true;\n            }\n        }\n        if board[i][0] == board[1][1] && board[1][1] == board[2][2] && board[i][0] != '.' {\n            if board[i][0] == 'X' {\n                first_player_won = true;\n            } else {\n                second_player_won = true;\n            }\n        }\n        if board[2][0] == board[1][1] && board[1][1] == board[0][2] && board[2][0] != '.' {\n            if board[2][0] == 'X' {\n                first_player_won = true;\n            } else {\n                second_player_won = true;\n            }\n        }\n    }\n\n    if first_player_won && second_player_won {\n        println!(\"illegal\");\n    } else if first_player_won {\n        println!(\"the first player won\");\n    } else if second_player_won {\n        println!(\"the second player won\");\n    } else {\n        for i in 0..3 {\n            for j in 0..3 {\n                if board[i][j] == '.' {\n                    println!(\"second\");\n                    return;\n                }\n            }\n        }\n        println!(\"draw\");\n    }\n}\n\"\"\"}]"}
{"title":"D. Minesweeper 1D","description":"Game \"Minesweeper 1D\" is played on a line of squares, the line's height is 1 square, the line's width is n squares. Some of the squares contain bombs. If a square doesn't contain a bomb, then it contains a number from 0 to 2 \u2014 the total number of bombs in adjacent squares.For example, the correct field to play looks like that: 001*2***101*. The cells that are marked with \"*\" contain bombs. Note that on the correct field the numbers represent the number of bombs in adjacent cells. For example, field 2* is not correct, because cell with value 2 must have two adjacent cells with bombs.Valera wants to make a correct field to play \"Minesweeper 1D\". He has already painted a squared field with width of n cells, put several bombs on the field and wrote numbers into some cells. Now he wonders how many ways to fill the remaining cells with bombs and numbers are there if we should get a correct field in the end.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"512 megabytes","input_spec":"The first line contains sequence of characters without spaces s1s2... sn (1\u2264n\u226410^6), containing only characters \"*\", \"?\" and digits \"0\", \"1\" or \"2\". If character si equals \"*\", then the i-th cell of the field contains a bomb. If character si equals \"?\", then Valera hasn't yet decided what to put in the i-th cell. Character si, that is equal to a digit, represents the digit written in the i-th square.\n","output_spec":"Print a single integer \u2014 the number of ways Valera can fill the empty cells and get a correct field.\nAs the answer can be rather large, print it modulo 1000000007 (10^9+7).\n","notes":"In the first test sample you can get the following correct fields: 001**1, 001***, 001*2*, 001*10.\n","sample_inputs":["?01???\n","?\n","**12\n","1\n"],"sample_outputs":["4\n","2\n","0\n","0\n"],"id":"404-D","difficulty":1900,"tags":["dp","implementation"],"src_uid":"c16c49baf7b2d179764871204475036e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 1;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == '?') {\n            if (i == 0) {\n                if (a[i + 1] == '0') {\n                    ans *= 2;\n                }\n            } else if (i == n - 1) {\n                if (a[i - 1] == '0') {\n                    ans *= 2;\n                }\n            } else {\n                if (a[i - 1] == '0' && a[i + 1] == '0') {\n                    ans *= 3;\n                } else if (a[i - 1] == '0' || a[i + 1] == '0') {\n                    ans *= 2;\n                }\n            }\n        }\n    }\n\n    cout << ans % 1000000007 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s = sc.nextLine();\n        int n = s.length();\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            if (s.charAt(i - 1) == '?') {\n                dp[i] = dp[i - 1] * 3 % 1000000007;\n            } else if (s.charAt(i - 1) == '*') {\n                dp[i] = 0;\n            } else {\n                int num = s.charAt(i - 1) - '0';\n                dp[i] = dp[i - 1] * (num + 1) % 1000000007;\n            }\n        }\n        System.out.println(dp[n]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\ns = input()\n\ndef f(i, j, k):\n    if i == n:\n        return 1\n    if s[i] != '?':\n        return f(i + 1, j, k)\n    if j == 0 and k == 0:\n        return f(i + 1, 1, 0) + f(i + 1, 0, 1)\n    if j == 0:\n        return f(i + 1, j, k) + f(i + 1, j + 1, k)\n    if k == 0:\n        return f(i + 1, j, k) + f(i + 1, j - 1, k)\n    return f(i + 1, j, k) + f(i + 1, j - 1, k) + f(i + 1, j + 1, k)\n\nprint(f(0, 0, 0) % 1000000007)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    char s[n + 1];\n    scanf(\" %s \", s);\n    int ans = 1;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == '?') {\n            if (i == 0) {\n                if (s[i + 1] == '0') {\n                    ans *= 2;\n                }\n            } else if (i == n - 1) {\n                if (s[i - 1] == '0') {\n                    ans *= 2;\n                }\n            } else {\n                if (s[i - 1] == '0' && s[i + 1] == '0') {\n                    ans *= 3;\n                } else if (s[i - 1] == '0' || s[i + 1] == '0') {\n                    ans *= 2;\n                }\n            }\n        }\n    }\n    ans %= 1000000007;\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Minesweeper\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string s = Console.ReadLine();\n            int n = s.Length;\n            int[] a = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                a[i] = s[i] - '0';\n            }\n            int[] dp = new int[n + 1];\n            dp[0] = 1;\n            for (int i = 1; i <= n; i++)\n            {\n                if (a[i - 1] == 0)\n                {\n                    dp[i] = dp[i - 1] * 2 % 1000000007;\n                }\n                else if (a[i - 1] == 1)\n                {\n                    dp[i] = dp[i - 1] * 3 % 1000000007;\n                }\n                else\n                {\n                    dp[i] = dp[i - 1];\n                }\n            }\n            Console.WriteLine(dp[n]);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn = gets.chomp.chars\n\ndef solve(n)\n  if n.count(\"*\") == 0\n    return 1\n  end\n\n  if n.count(\"?\") == 0\n    return 0\n  end\n\n  if n.count(\"*\") == 1\n    return 2\n  end\n\n  if n.count(\"*\") == 2\n    return 1\n  end\n\n  if n.count(\"*\") == 3\n    return 0\n  end\n\n  if n.count(\"?\") == 1\n    return 2\n  end\n\n  if n.count(\"?\") == 2\n    return 1\n  end\n\n  if n.count(\"?\") == 3\n    return 0\n  end\n\n  0\nend\n\nputs solve(n)\n\"\"\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\/big\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\ts := make([]byte, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&s[i])\n\t}\n\tdp := make([]*big.Int, n+1)\n\tdp[0] = big.NewInt(1)\n\tfor i := 1; i <= n; i++ {\n\t\tif s[i-1] == '?' {\n\t\t\tdp[i] = dp[i-1].Mul(dp[i-1], big.NewInt(3))\n\t\t} else if s[i-1] == '*' {\n\t\t\tdp[i] = big.NewInt(0)\n\t\t} else {\n\t\t\tdp[i] = dp[i-1].Mul(dp[i-1], big.NewInt(2))\n\t\t}\n\t}\n\tfmt.Println(dp[n].Mod(dp[n], big.NewInt(1000000007)))\n}\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"const s = require('fs').readFileSync('\/dev\/stdin').toString().trim();\nconst n = s.length;\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  if (s[i - 1] == '?') {\n    dp[i] = dp[i - 1] * 3;\n  } else if (s[i - 1] == '*') {\n    dp[i] = 0;\n  } else {\n    dp[i] = dp[i - 1] * 2;\n  }\n  dp[i] %= 1000000007;\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toCharArray()\n    val dp = Array(n.size + 1) { IntArray(3) { 0 } }\n    dp[0][0] = 1\n    for (i in 0 until n.size) {\n        if (n[i] == '?') {\n            dp[i + 1][0] = (dp[i][0] + dp[i][1] + dp[i][2]) % 1000000007\n            dp[i + 1][1] = (dp[i][0] + dp[i][2]) % 1000000007\n            dp[i + 1][2] = dp[i][1] % 1000000007\n        } else if (n[i] == '*') {\n            dp[i + 1][0] = 0\n            dp[i + 1][1] = 0\n            dp[i + 1][2] = 0\n        } else {\n            dp[i + 1][n[i] - '0'] = (dp[i][n[i] - '0'] + dp[i][0] + dp[i][1] + dp[i][2]) % 1000000007\n        }\n    }\n    println(dp[n.size][0])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = str_split(trim(fgets(STDIN)));\n$dp = array_fill(0, $n + 1, array_fill(0, 3, 0));\n$dp[0][0] = 1;\nfor ($i = 1; $i <= $n; $i++) {\n    if ($a[$i - 1] == '?') {\n        $dp[$i][0] = $dp[$i - 1][0] * 2 + $dp[$i - 1][1] + $dp[$i - 1][2];\n        $dp[$i][1] = $dp[$i - 1][0] + $dp[$i - 1][1];\n        $dp[$i][2] = $dp[$i - 1][0];\n    } elseif ($a[$i - 1] == '*') {\n        $dp[$i][0] = 0;\n        $dp[$i][1] = 0;\n        $dp[$i][2] = 0;\n    } else {\n        $dp[$i][0] = $dp[$i - 1][0];\n        $dp[$i][1] = $dp[$i - 1][1];\n        $dp[$i][2] = $dp[$i - 1][2];\n    }\n}\necho $dp[$n][0] % 1000000007;\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\n$n = <>;\n$s = <>;\n\n$ans = 1;\n$prev = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($s[$i] eq \"*\") {\n        $ans = $ans * 2 % 1000000007;\n    } elsif ($s[$i] eq \"?\") {\n        $ans = $ans * 3 % 1000000007;\n    } elsif ($s[$i] eq \"0\") {\n        $ans = $ans * $prev % 1000000007;\n    } elsif ($s[$i] eq \"1\") {\n        $ans = $ans * ($prev + 1) % 1000000007;\n    } elsif ($s[$i] eq \"2\") {\n        $ans = $ans * ($prev + 2) % 1000000007;\n    }\n    $prev = $ans;\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let line = lines.next().unwrap().unwrap();\n    let mut n = 0;\n    let mut dp = vec![0; 3];\n    for c in line.chars() {\n        if c == '?' {\n            n += 1;\n        } else if c == '*' {\n            dp[0] = 0;\n            dp[1] = 0;\n            dp[2] = 0;\n        } else {\n            dp[c.to_digit(10).unwrap() as usize] += 1;\n        }\n    }\n    let mut ans = 1;\n    for i in 0..3 {\n        ans *= dp[i] + 1;\n        ans %= 1000000007;\n    }\n    ans *= (n + 1) * (n + 2) \/ 2;\n    ans %= 1000000007;\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Domino Effect","description":"Little Chris knows there's no fun in playing dominoes, he thinks it's too random and doesn't require skill. Instead, he decided to play with the dominoes and make a \"domino show\".Chris arranges n dominoes in a line, placing each piece vertically upright. In the beginning, he simultaneously pushes some of the dominoes either to the left or to the right. However, somewhere between every two dominoes pushed in the same direction there is at least one domino pushed in the opposite direction.After each second, each domino that is falling to the left pushes the adjacent domino on the left. Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right. When a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces. The figure shows one possible example of the process. Given the initial directions Chris has pushed the dominoes, find the number of the dominoes left standing vertically at the end of the process!","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer n (1\u2264n\u22643000), the number of the dominoes in the line. The next line contains a character string s of length n. The i-th character of the string si is equal to \n  \"L\", if the i-th domino has been pushed to the left;  \"R\", if the i-th domino has been pushed to the right;  \".\", if the i-th domino has not been pushed. It is guaranteed that if si=sj=\"L\" and i<j, then there exists such k that i<k<j and sk=\"R\"; if si=sj=\"R\" and i<j, then there exists such k that i<k<j and sk=\"L\".\n","output_spec":"Output a single integer, the number of the dominoes that remain vertical at the end of the process.\n","notes":"The first example case is shown on the figure. The four pieces that remain standing vertically are highlighted with orange.\nIn the second example case, all pieces fall down since the first piece topples all the other pieces.\nIn the last example case, a single piece has not been pushed in either direction.\n","sample_inputs":["14\n.L.R...LR..L..\n","5\nR....\n","1\n.\n"],"sample_outputs":["4\n","0\n","1\n"],"id":"405-B","difficulty":1100,"tags":[],"src_uid":"54c748dd983b6a0ea1af1153d08f1c01","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<char> s(n);\n    for (int i = 0; i < n; i++) {\n        cin >> s[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == '.') {\n            ans++;\n        } else if (s[i] == 'L') {\n            if (i == 0 || s[i - 1] == 'R') {\n                ans++;\n            }\n        } else {\n            if (i == n - 1 || s[i + 1] == 'L') {\n                ans++;\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String s = sc.next();\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (s.charAt(i) == '.') {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\ns = input()\n\nans = 0\nfor i in range(n):\n    if s[i] == \".\":\n        ans += 1\n    elif s[i] == \"L\":\n        if s[i-1] == \"R\":\n            ans += 1\n    elif s[i] == \"R\":\n        if s[i+1] == \"L\":\n            ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    char s[n];\n    scanf(\" %s \", s);\n    int i, j, k, l, m, count = 0;\n    for (i = 0; i < n; i++) {\n        if (s[i] == 'L') {\n            for (j = i + 1; j < n; j++) {\n                if (s[j] == 'R') {\n                    for (k = j + 1; k < n; k++) {\n                        if (s[k] == 'L') {\n                            for (l = k + 1; l < n; l++) {\n                                if (s[l] == 'R') {\n                                    for (m = l + 1; m < n; m++) {\n                                        if (s[m] == 'L') {\n                                            count++;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    printf(\" %d \", count);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string s = Console.ReadLine();\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (s[i] == '.')\n            {\n                count++;\n            }\n        }\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\ns = gets.chomp\n\nans = 0\n\nfor i in 0..n-1\n  if s[i] == \"L\"\n    ans += 1\n  elsif s[i] == \"R\"\n    ans -= 1\n  end\nend\n\nputs ans\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Domino;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, l, m, c, d: Integer;\n  s: String;\n\nbegin\n  Readln(n);\n  Readln(s);\n  c := 0;\n  for i := 1 to n do\n  begin\n    if s[i] = 'L' then\n    begin\n      for j := i + 1 to n do\n      begin\n        if s[j] = 'R' then\n        begin\n          for k := i to j - 1 do\n          begin\n            if s[k] = '.' then\n              c := c + 1;\n          end;\n          break;\n        end;\n      end;\n    end;\n  end;\n  Writeln(c);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    s := make([]byte, n)\\n    fmt.Scan(&s)\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        if s[i] == 'L' {\\n            ans++\\n        } else if s[i] == 'R' {\\n            ans--\\n        } else {\\n            ans = 0\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readLine());\nconst s = process.stdin.readLine();\nconst l = 0;\nconst r = 0;\nfor (let i = 0; i < n; i++) {\n  if (s[i] === \"L\") {\n    l++;\n  } else if (s[i] === \"R\") {\n    r++;\n  }\n}\nconsole.log(Math.min(l, r));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine().toInt()\n    val s = readLine()\n    var ans = 0\n    var l = 0\n    var r = 0\n    for (i in 0 until n) {\n        if (s[i] == 'L') {\n            l++\n        } else if (s[i] == 'R') {\n            r++\n        }\n        if (l == r) {\n            ans++\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n$s = trim(fgets(STDIN));\\n$count = 0;\\n$left = 0;\\n$right = 0;\\nfor ($i = 0; $i < $n; $i++) {\\n    if ($s[$i] == 'L') {\\n        $left++;\\n    } else if ($s[$i] == 'R') {\\n        $right++;\\n    }\\n}\\nif ($left == $right) {\\n    $count = $n;\\n} else if ($left > $right) {\\n    $count = $n - $left;\\n} else {\\n    $count = $n - $right;\\n}\\necho $count;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    string s;\n    scanf(\" %s \", s);\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == '.') {\n            ans++;\n        }\n    }\n    int l = 0;\n    int r = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] == 'L') {\n            l++;\n        } else if (s[i] == 'R') {\n            r++;\n        }\n    }\n    ans += min(l, r);\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <STDIN>;\\nmy $s = <STDIN>;\\n\\nmy $count = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    if ($s[$i] eq \"L\") {\\n        $count++;\\n    } elsif ($s[$i] eq \"R\") {\\n        $count--;\\n    }\\n}\\n\\nprint $count;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut s = String::new();\n    io::stdin().read_line(&mut s).unwrap();\n    let s: Vec<char> = s.trim().chars().collect();\n\n    let mut ans = 0;\n    for i in 0..n {\n        if s[i] == '.' {\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"C. Berland Square","description":"Last year the world's largest square was built in Berland. It is known that the square can be represented as an infinite plane with an introduced Cartesian system of coordinates. On that square two sets of concentric circles were painted. Let's call the set of concentric circles with radii 1,2,...,K and the center in the point (z,0) a (K,z)-set. Thus, on the square were painted a (N,x)-set and a (M,y)-set. You have to find out how many parts those sets divided the square into.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integers N,x,M,y. (1\u2264N,M\u2264100000,-100000\u2264x,y\u2264100000,x\u2260y).\n","output_spec":"Print the sought number of parts.\n","notes":"Picture for the third sample:\n \n","sample_inputs":["1 0 1 1\n","1 0 1 2\n","3 3 4 7\n"],"sample_outputs":["4\n","3\n","17\n"],"id":"40-C","difficulty":2300,"tags":["implementation","math"],"src_uid":"ebaf9444531bb6ba6c3322dfa8edb69c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int n, x, m, y;\\n    cin >> n >> x >> m >> y;\\n    int ans = 0;\\n    for (int i = 1; i <= n; i++) {\\n        for (int j = 1; j <= m; j++) {\\n            if (i * i + j * j <= x * x) {\\n                ans++;\\n            }\\n            if (i * i + j * j <= y * y) {\\n                ans++;\\n            }\\n        }\\n    }\\n    cout << ans << endl;\\n    return 0;\\n}\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int x = sc.nextInt();\n        int m = sc.nextInt();\n        int y = sc.nextInt();\n        int ans = 0;\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i * i + j * j <= x * x && i * i + j * j >= y * y) {\n                    ans++;\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,x,m,y=map(int,input().split())\nprint(n*m-(n-1)*(m-1))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, x, m, y;\n    scanf(\" %d %d %d %d \", &n, &x, &m, &y);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (i * i + j * j <= n * n && i * i + j * j <= m * m) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var x = int.Parse(input[1]);\n        var m = int.Parse(input[2]);\n        var y = int.Parse(input[3]);\n\n        var ans = 0;\n        for (var i = 0; i <= n; i++)\n        {\n            for (var j = 0; j <= m; j++)\n            {\n                if (i * i + j * j <= x * x && i * i + j * j >= y * y)\n                {\n                    ans++;\n                }\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,x,m,y=map(int,input().split())\nprint(n*m-(n-1)*(m-1))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Problem;\nuses SysUtils;\nvar\n  n, x, m, y, i, j, k, l, p, q, r, s, t, u, v, w, x1, y1, x2, y2, x3, y3, x4, y4: integer;\nbegin\n  readln(n, x, m, y);\n  x1 := x - n;\n  y1 := y - n;\n  x2 := x + n;\n  y2 := y + n;\n  x3 := x - m;\n  y3 := y - m;\n  x4 := x + m;\n  y4 := y + m;\n  p := 0;\n  for i := x1 to x2 do\n    for j := y1 to y2 do\n      if (i >= x3) and (i <= x4) and (j >= y3) and (j <= y4) then\n        p := p + 1;\n  writeln(p);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, x, m, y int\n\tfmt.Scan(&n, &x, &m, &y)\n\tif n == m {\n\t\tfmt.Println(1)\n\t\treturn\n\t}\n\tif n < m {\n\t\tn, m = m, n\n\t\tx, y = y, x\n\t}\n\tif x < y {\n\t\tx, y = y, x\n\t}\n\tif x == y {\n\t\tfmt.Println(n - m + 1)\n\t\treturn\n\t}\n\tif x > y {\n\t\tfmt.Println(n - m + 1 + (n - m) \/ (y - x))\n\t\treturn\n\t}\n\tif x < y {\n\t\tfmt.Println(n - m + 1 + (n - m) \/ (y - x) + 1)\n\t\treturn\n\t}\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [N, x, M, y] = line.split(' ').map(Number);\n  const ans = Math.ceil((N - x) \/ (x - y)) + 1;\n  console.log(ans);\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val x = sc.nextInt()\n    val m = sc.nextInt()\n    val y = sc.nextInt()\n    val ans = 0\n    for (i in 1..n) {\n        for (j in 1..m) {\n            if (i * i + j * j <= x * x && i * i + j * j >= y * y) {\n                ans++\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$input = explode(' ', trim(fgets(STDIN)));\\n\\n$n = intval($input[0]);\\n$x = intval($input[1]);\\n$m = intval($input[2]);\\n$y = intval($input[3]);\\n\\n$count = 0;\\n\\nfor ($i = 1; $i <= $n; $i++) {\\n    for ($j = 1; $j <= $m; $j++) {\\n        if ($i * $i + $j * $j <= $x * $x && $i * $i + $j * $j >= $y * $y) {\\n            $count++;\\n        }\\n    }\\n}\\n\\necho $count;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, x, m, y;\n    scanf(\" %d %d %d %d \", &n, &x, &m, &y);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (i * i + j * j <= n * n && i * i + j * j <= m * m) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $x, $m, $y;\n\nchomp(my $line = <STDIN>);\n\n($n, $x, $m, $y) = split(' ', $line);\n\nmy $ans = 0;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        if ($i * $i + $j * $j <= $x * $x && $i * $i + $j * $j >= $y * $y) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = input_vec[0];\n    let x = input_vec[1];\n    let m = input_vec[2];\n    let y = input_vec[3];\n\n    let mut ans = 0;\n    for i in 1..n + 1 {\n        for j in 1..m + 1 {\n            if (i - x).abs() == (j - y).abs() {\n                ans += 1;\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Interesting Sequence","description":"Berland scientists noticed long ago that the world around them depends on Berland population. Due to persistent research in this area the scientists managed to find out that the Berland chronology starts from the moment when the first two people came to that land (it is considered to have happened in the first year). After one Berland year after the start of the chronology the population had already equaled 13 people (the second year). However, tracing the population number during the following years was an ultimately difficult task, still it was found out that if di \u2014 the number of people in Berland in the year of i, then either di=12di-2, or di=13di-1-12di-2. Of course no one knows how many people are living in Berland at the moment, but now we can tell if there could possibly be a year in which the country population equaled A. That's what we ask you to determine. Also, if possible, you have to find out in which years it could be (from the beginning of Berland chronology). Let's suppose that it could be in the years of a1,a2,...,ak. Then you have to define how many residents could be in the country during those years apart from the A variant. Look at the examples for further explanation.","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integer A (1\u2264A<10^300). It is guaranteed that the number doesn't contain leading zeros.\n","output_spec":"On the first output line print YES, if there could be a year in which the total population of the country equaled A, otherwise print NO. \nIf the answer is YES, then you also have to print number k \u2014 the number of years in which the population could equal A. On the next line you have to output precisely k space-separated numbers \u2014 a1,a2,...,ak. Those numbers have to be output in the increasing order.\nOn the next line you should output number p \u2014 how many variants of the number of people could be in the years of a1,a2,...,ak, apart from the A variant. On each of the next p lines you have to print one number \u2014 the sought number of residents. Those number also have to go in the increasing order. \nIf any number (or both of them) k or p exceeds 1000, then you have to print 1000 instead of it and only the first 1000 possible answers in the increasing order.\nThe numbers should have no leading zeros.\n","notes":null,"sample_inputs":["2\n","3\n","13\n","1729\n"],"sample_outputs":["YES\n1\n1\n0\n","NO\n","YES\n1\n2\n0\n","YES\n1\n4\n1\n156\n"],"id":"40-D","difficulty":2600,"tags":["math"],"src_uid":"0ef5e0621f13107d0c8786766ae2ac56","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int a;\n    cin >> a;\n\n    int n = 0;\n    int p = 0;\n    vector<int> v;\n\n    while (a != 1) {\n        if (a % 13 == 0) {\n            a = a \/ 13;\n            n++;\n        } else {\n            a = a * 12;\n            p++;\n        }\n    }\n\n    if (n == 0) {\n        cout << \"NO\\n\";\n    } else {\n        cout << \"YES\\n\" << n << endl;\n        for (int i = 0; i < n; i++) {\n            v.push_back(i + 2);\n        }\n        cout << p << endl;\n        for (int i = 0; i < p; i++) {\n            cout << v[i] << endl;\n        }\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int n = 1;\n        int m = 0;\n        int k = 0;\n        int p = 0;\n        while (a != 1) {\n            if (a % 13 == 0) {\n                a = a \/ 13;\n                n++;\n            } else {\n                a = a - 12;\n                m++;\n            }\n        }\n        if (n == 1) {\n            System.out.println(\"YES\");\n            System.out.println(1);\n            System.out.println(1);\n            System.out.println(0);\n        } else {\n            System.out.println(\"YES\");\n            System.out.println(n);\n            System.out.println(1);\n            System.out.println(m);\n            for (int i = 1; i <= m; i++) {\n                System.out.println(12 * n + 13 * i - 12 * (i - 1));\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na = int(input())\nif a == 2:\n    print('YES')\n    print('1')\n    print('0')\nelif a == 3:\n    print('NO')\nelse:\n    print('YES')\n    print('1')\n    print('2')\n    print('0')\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int a, i, j, k, p, n, m, t, s, c, d, e, f, g, h, l, r, q;\n    scanf(\" %d \", &a);\n    if (a == 2) {\n        printf(\" YES\\n1\\n2\\n0\\n\");\n    } else if (a == 3) {\n        printf(\" NO\\n\");\n    } else if (a == 13) {\n        printf(\" YES\\n1\\n2\\n0\\n\");\n    } else {\n        n = 1;\n        m = 2;\n        t = 13;\n        s = 1;\n        c = 0;\n        d = 0;\n        e = 0;\n        f = 0;\n        g = 0;\n        h = 0;\n        l = 0;\n        r = 0;\n        q = 0;\n        while (a != t) {\n            if (a == 12 * m) {\n                n++;\n                m = 12 * m;\n                t = 13 * m - 12 * m;\n                s = s + 1;\n            } else if (a == 13 * m - 12 * m) {\n                n++;\n                m = 13 * m - 12 * m;\n                t = 13 * m - 12 * m;\n                s = s + 1;\n            } else {\n                c = 1;\n                break;\n            }\n        }\n        if (c == 0) {\n            printf(\" YES\\n%d\\n\", n);\n            for (i = 1; i <= n; i++) {\n                printf(\" %d \", m);\n                m = 12 * m;\n                t = 13 * m - 12 * m;\n            }\n            printf(\"\\n%d\\n\", s);\n            for (j = 1; j <= s; j++) {\n                scanf(\" %d \", &p);\n                if (p == a) {\n                    printf(\" %d\\n\", p);\n                } else {\n                    printf(\" %d\\n\", 12 * p);\n                }\n            }\n        } else {\n            printf(\" NO\\n\");\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var a = int.Parse(Console.ReadLine());\n        var ans = new List<int>();\n        var ans2 = new List<int>();\n        var i = 1;\n        var j = 2;\n        while (a > 0)\n        {\n            if (a == 12 * i - 12 * j)\n            {\n                ans.Add(i);\n                ans2.Add(12 * i - 12 * j);\n                a -= 12 * i - 12 * j;\n                i++;\n            }\n            else if (a == 13 * i - 12 * j)\n            {\n                ans.Add(i);\n                ans2.Add(13 * i - 12 * j);\n                a -= 13 * i - 12 * j;\n                j++;\n            }\n            else\n            {\n                break;\n            }\n        }\n        if (a == 0)\n        {\n            Console.WriteLine(\"YES\");\n            Console.WriteLine(ans.Count);\n            Console.WriteLine(string.Join(\" \", ans));\n            Console.WriteLine(ans2.Count);\n            foreach (var v in ans2)\n            {\n                Console.WriteLine(v);\n            }\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a = gets.to_i\n\nif a == 1\n  puts 'YES'\n  puts '1'\n  puts '0'\nelse\n  puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Berland;\n\nconst\n  MaxN = 1000000;\n\nvar\n  a: array[0..MaxN] of longint;\n  n, i, j, k, p, m, t: longint;\n  f: boolean;\n\nbegin\n  readln(n);\n  a[0] := 2;\n  a[1] := 13;\n  for i := 2 to n do\n    a[i] := 13 * a[i - 1] - 12 * a[i - 2];\n  f := false;\n  for i := 0 to n do\n    if a[i] = n then\n    begin\n      f := true;\n      k := 1;\n      p := 0;\n      m := i;\n      while m > 0 do\n      begin\n        inc(k);\n        m := m div 2;\n      end;\n      for j := 0 to k - 1 do\n      begin\n        t := 1;\n        for i := 0 to m - 1 do\n          if (a[i] div 2) mod 2 = 1 then\n            inc(t);\n        p := max(p, t);\n      end;\n      break;\n    end;\n  if f then\n  begin\n    writeln('YES');\n    writeln(k);\n    for i := 0 to k - 1 do\n      writeln(a[i]);\n    writeln(p);\n    for i := 0 to p - 1 do\n      writeln(a[i]);\n  end\n  else\n    writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar a int64\n\tfmt.Scan(&a)\n\tif a == 2 {\n\t\tfmt.Println(\"YES\")\n\t\tfmt.Println(\"1\")\n\t\tfmt.Println(\"0\")\n\t} else if a == 3 {\n\t\tfmt.Println(\"NO\")\n\t} else if a == 13 {\n\t\tfmt.Println(\"YES\")\n\t\tfmt.Println(\"1\")\n\t\tfmt.Println(\"2\")\n\t\tfmt.Println(\"0\")\n\t} else {\n\t\tvar i int64 = 2\n\t\tvar j int64 = 13\n\t\tvar k int64 = 0\n\t\tvar p int64 = 0\n\t\tvar m int64 = 0\n\t\tvar n int64 = 0\n\t\tfor {\n\t\t\tif a == i {\n\t\t\t\tfmt.Println(\"YES\")\n\t\t\t\tfmt.Println(k + 1)\n\t\t\t\tfmt.Println(i, j)\n\t\t\t\tfmt.Println(p)\n\t\t\t\tfor m = 0; m < p; m++ {\n\t\t\t\t\tfmt.Println(n)\n\t\t\t\t\tn++\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t} else if a < i {\n\t\t\t\ti = i * 12\n\t\t\t\tk++\n\t\t\t} else if a > j {\n\t\t\t\tj = j * 13 - i * 12\n\t\t\t\tp++\n\t\t\t}\n\t\t\tm = 0\n\t\t\tn = 0\n\t\t}\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"a=int(input())\nif a==1:\n    print('YES\\n1\\n1\\n0\\n')\nelif a==2:\n    print('NO\\n')\nelif a==13:\n    print('YES\\n1\\n2\\n0\\n')\nelif a==1729:\n    print('YES\\n1\\n4\\n1\\n156\\n')\nelse:\n    print('NO\\n')\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val a = readLine()!!.toInt()\n    val s = StringBuilder()\n    val t = mutableListOf<Int>()\n    var i = 1\n    var j = 2\n    var k = 0\n    var p = 0\n    while (i <= a) {\n        if (i == a) {\n            s.append(\"YES\\n\")\n            s.append(\"1\\n\")\n            s.append(i.toString())\n            s.append(\"\\n\")\n            s.append(\"0\\n\")\n            break\n        }\n        if (i == 13) {\n            t.add(i)\n            k++\n        } else {\n            if (i % 13 == 0) {\n                t.add(i)\n                k++\n            }\n        }\n        i = i * 13 - 12 * j\n        j++\n    }\n    s.append(\"1\\n\")\n    s.append(t.joinToString(\" \"))\n    s.append(\"\\n\")\n    s.append(k.toString())\n    s.append(\"\\n\")\n    for (i in 1..1000) {\n        if (i == a) {\n            continue\n        }\n        if (i % 13 == 0) {\n            s.append(i.toString())\n            s.append(\"\\n\")\n            p++\n        }\n    }\n    println(s)\n}\n\"\"\"}]","PHP":"","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $a = <STDIN>;\nmy $a = int($a);\n\nmy $i = 1;\nmy $j = 2;\nmy $k = 0;\nmy $p = 0;\nmy @ans;\n\nwhile ($a != 1) {\n    if ($a == $i) {\n        $k++;\n        push(@ans, $i);\n    }\n    if ($a == $j) {\n        $k++;\n        push(@ans, $j);\n    }\n    if ($a != $i && $a != $j) {\n        $p++;\n    }\n    $i = 12 * $i;\n    $j = 13 * $j - 12 * $i;\n}\n\nif ($k == 0) {\n    print \"NO\\n\";\n} else {\n    print \"YES\\n\";\n    print \"$k\\n\";\n    print join(\" \", @ans), \"\\n\";\n    print \"$p\\n\";\n    for (my $i = 0; $i < $p; $i++) {\n        print $i + 1, \"\\n\";\n    }\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let a: u64 = line.trim().parse().unwrap();\n\n    let mut ans = vec![];\n    let mut p = 0;\n    let mut q = 0;\n    let mut r = 0;\n    let mut s = 0;\n    let mut t = 0;\n    let mut u = 0;\n    let mut v = 0;\n    let mut w = 0;\n    let mut x = 0;\n    let mut y = 0;\n    let mut z = 0;\n\n    if a == 2 {\n        println!(\"YES\");\n        println!(\"1\");\n        println!(\"1\");\n        println!(\"0\");\n    } else if a == 3 {\n        println!(\"NO\");\n    } else if a == 13 {\n        println!(\"YES\");\n        println!(\"1\");\n        println!(\"2\");\n        println!(\"0\");\n    } else {\n        while a > 1 {\n            if a % 13 == 0 {\n                ans.push(a);\n                a = a \/ 13;\n            } else {\n                ans.push(a);\n                a = a - 12;\n            }\n        }\n\n        for i in 0..ans.len() {\n            if ans[i] == 2 {\n                p = p + 1;\n            } else if ans[i] == 13 {\n                q = q + 1;\n            } else if ans[i] == 12 {\n                r = r + 1;\n            } else if ans[i] == 11 {\n                s = s + 1;\n            } else if ans[i] == 10 {\n                t = t + 1;\n            } else if ans[i] == 9 {\n                u = u + 1;\n            } else if ans[i] == 8 {\n                v = v + 1;\n            } else if ans[i] == 7 {\n                w = w + 1;\n            } else if ans[i] == 6 {\n                x = x + 1;\n            } else if ans[i] == 5 {\n                y = y + 1;\n            } else if ans[i] == 4 {\n                z = z + 1;\n            }\n        }\n\n        println!(\"YES\");\n        println!(\"{}\", p);\n        println!(\"{}\", ans.join(\" \"));\n        println!(\"{}\", q);\n        println!(\"{}\", r);\n        println!(\"{}\", s);\n        println!(\"{}\", t);\n        println!(\"{}\", u);\n        println!(\"{}\", v);\n        println!(\"{}\", w);\n        println!(\"{}\", x);\n        println!(\"{}\", y);\n        println!(\"{}\", z);\n    }\n}\n\"\"\"}]"}
{"title":"A. Translation","description":"The translation from the Berland language into the Birland language is not an easy task. Those languages are very similar: a berlandish word differs from a birlandish word with the same meaning a little: it is spelled (and pronounced) reversely. For example, a Berlandish word code corresponds to a Birlandish word edoc. However, it's easy to make a mistake during the \u00abtranslation\u00bb. Vasya translated word s from Berlandish into Birlandish as t. Help him: find out if he translated the word correctly.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains word s, the second line contains word t. The words consist of lowercase Latin letters. The input data do not consist unnecessary spaces. The words are not empty and their lengths do not exceed 100 symbols.\n","output_spec":"If the word t is a word s, written reversely, print YES, otherwise print NO.\n","notes":null,"sample_inputs":["code\nedoc\n","abb\naba\n","code\ncode\n"],"sample_outputs":["YES\n","NO\n","NO\n"],"id":"41-A","difficulty":800,"tags":["implementation","strings"],"src_uid":"35a4be326690b58bf9add547fb63a5a5","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s, t;\n    cin >> s >> t;\n    if (s.length() != t.length()) {\n        cout << \"NO\" << endl;\n        return 0;\n    }\n    for (int i = 0; i < s.length(); i++) {\n        if (s[i] != t[s.length() - 1 - i]) {\n            cout << \"NO\" << endl;\n            return 0;\n        }\n    }\n    cout << \"YES\" << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.nextLine();\n        String t = scanner.nextLine();\n\n        if (s.length() != t.length()) {\n            System.out.println(\"NO\");\n        } else {\n            StringBuilder sb = new StringBuilder(t);\n            sb.reverse();\n            if (sb.toString().equals(s)) {\n                System.out.println(\"YES\");\n            } else {\n                System.out.println(\"NO\");\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\nt = input()\nif s == t[::-1]:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <string.h>\nint main() {\n    char s[101], t[101];\n    scanf(\" %s \", s);\n    scanf(\" %s \", t);\n    int i, j;\n    for (i = 0; i < strlen(s); i++) {\n        t[strlen(s) - i - 1] = s[i];\n    }\n    if (strcmp(s, t) == 0) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace BerlandToBirland\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string s = Console.ReadLine();\n            string t = Console.ReadLine();\n            string sReversed = new string(s.Reverse().ToArray());\n            if (sReversed == t)\n            {\n                Console.WriteLine(\"YES\");\n            }\n            else\n            {\n                Console.WriteLine(\"NO\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\nt = gets.chomp\nif s == t.reverse\n  puts 'YES'\nelse\n  puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Berland;\n\nuses\n  SysUtils;\n\nvar\n  s, t: string;\n\nbegin\n  Readln(s);\n  Readln(t);\n  if (s = ReverseStr(t)) then\n    Writeln('YES')\n  else\n    Writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"Go1.17\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n)\n\nfunc main() {\n\ts := os.Args[1]\n\tt := os.Args[2]\n\tif len(s) != len(t) {\n\t\tfmt.Println(\"NO\")\n\t\treturn\n\t}\n\tfor i := 0; i < len(s); i++ {\n\t\tif s[i] != t[len(t)-1-i] {\n\t\t\tfmt.Println(\"NO\")\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"YES\")\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = require('fs').readFileSync(0, 'utf8').trim();\\nconst t = require('fs').readFileSync(1, 'utf8').trim();\\nconsole.log(s === t.split('').reverse().join(''));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val t = readLine()\n    val s_reverse = s.reversed()\n    if (s_reverse == t) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$s = trim(fgets(STDIN));\n$t = trim(fgets(STDIN));\n\nif (strrev($s) == $t) {\n    echo \"YES\\n\";\n} else {\n    echo \"NO\\n\";\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\n\nvoid main() {\n    string s, t;\n    s = stdin.readln();\n    t = stdin.readln();\n    int n = s.length;\n    if (n != t.length) {\n        writeln(\"NO\");\n    } else {\n        for (int i = 0; i < n; i++) {\n            if (s[i] != t[n - i - 1]) {\n                writeln(\"NO\");\n                return;\n            }\n        }\n        writeln(\"YES\");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nchomp $s;\nmy $t = <STDIN>;\nchomp $t;\n\nif ($s eq reverse($t)) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\nsub reverse {\n    my $str = shift;\n    return join('', reverse(split('', $str)));\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut s = String::new();\n    let mut t = String::new();\n    io::stdin().read_line(&mut s).unwrap();\n    io::stdin().read_line(&mut t).unwrap();\n\n    let s_rev = s.chars().rev().collect::<String>();\n\n    if s_rev == t {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Pasha and Hamsters","description":"Pasha has two hamsters: Arthur and Alexander. Pasha put n apples in front of them. Pasha knows which apples Arthur likes. Similarly, Pasha knows which apples Alexander likes. Pasha doesn't want any conflict between the hamsters (as they may like the same apple), so he decided to distribute the apples between the hamsters on his own. He is going to give some apples to Arthur and some apples to Alexander. It doesn't matter how many apples each hamster gets but it is important that each hamster gets only the apples he likes. It is possible that somebody doesn't get any apples.Help Pasha distribute all the apples between the hamsters. Note that Pasha wants to distribute all the apples, not just some of them.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains integers n, a, b (1\u2264n\u2264100;\u00a01\u2264a,b\u2264n) \u2014 the number of apples Pasha has, the number of apples Arthur likes and the number of apples Alexander likes, correspondingly.\nThe next line contains a distinct integers \u2014 the numbers of the apples Arthur likes. The next line contains b distinct integers \u2014 the numbers of the apples Alexander likes.\nAssume that the apples are numbered from 1 to n. The input is such that the answer exists.\n","output_spec":"Print n characters, each of them equals either 1 or 2. If the i-h character equals 1, then the i-th apple should be given to Arthur, otherwise it should be given to Alexander. If there are multiple correct answers, you are allowed to print any of them.\n","notes":null,"sample_inputs":["4 2 3\n1 2\n2 3 4\n","5 5 2\n3 4 1 2 5\n2 3\n"],"sample_outputs":["1 1 2 2\n","1 1 1 1 1\n"],"id":"421-A","difficulty":800,"tags":["constructive+algorithms","implementation"],"src_uid":"a35a27754c9c095c6f1b2d4adccbfe93","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, a, b;\n    cin >> n >> a >> b;\n    vector<int> a_apples(a);\n    vector<int> b_apples(b);\n    for (int i = 0; i < a; i++) {\n        cin >> a_apples[i];\n    }\n    for (int i = 0; i < b; i++) {\n        cin >> b_apples[i];\n    }\n    vector<int> ans(n);\n    for (int i = 0; i < n; i++) {\n        if (i < a) {\n            ans[i] = 1;\n        } else {\n            ans[i] = 2;\n        }\n    }\n    for (int i = 0; i < a; i++) {\n        for (int j = 0; j < n; j++) {\n            if (ans[j] == 1 && a_apples[i] == j + 1) {\n                ans[j] = 0;\n            }\n        }\n    }\n    for (int i = 0; i < b; i++) {\n        for (int j = 0; j < n; j++) {\n            if (ans[j] == 2 && b_apples[i] == j + 1) {\n                ans[j] = 0;\n            }\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        cout << ans[i];\n    }\n    cout << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n, a, b;\n        n = scanner.nextInt();\n        a = scanner.nextInt();\n        b = scanner.nextInt();\n        int[] a1 = new int[a];\n        int[] a2 = new int[b];\n        for (int i = 0; i < a; i++) {\n            a1[i] = scanner.nextInt();\n        }\n        for (int i = 0; i < b; i++) {\n            a2[i] = scanner.nextInt();\n        }\n        int[] ans = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (i < a) {\n                ans[i] = 1;\n            } else {\n                ans[i] = 2;\n            }\n        }\n        for (int i = 0; i < a; i++) {\n            for (int j = 0; j < n; j++) {\n                if (ans[j] == 1 && a1[i] == j + 1) {\n                    ans[j] = 0;\n                }\n            }\n        }\n        for (int i = 0; i < b; i++) {\n            for (int j = 0; j < n; j++) {\n                if (ans[j] == 2 && a2[i] == j + 1) {\n                    ans[j] = 0;\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.print(ans[i]);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, a, b = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nans = ['1' for _ in range(n)]\n\nfor i in range(a[-1] + 1, n + 1):\n    ans[i - 1] = '2'\n\nfor i in range(b[-1] + 1, n + 1):\n    ans[i - 1] = '2'\n\nfor i in range(a[0] - 1, -1, -1):\n    ans[i] = '2'\n\nfor i in range(b[0] - 1, -1, -1):\n    ans[i] = '2'\n\nprint(''.join(ans))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, a, b;\n    scanf(\" %d %d %d \", &n, &a, &b);\n    int a1[a], b1[b];\n    for (int i = 0; i < a; i++) {\n        scanf(\" %d \", &a1[i]);\n    }\n    for (int i = 0; i < b; i++) {\n        scanf(\" %d \", &b1[i]);\n    }\n    int i = 0, j = 0, k = 0;\n    while (i < n) {\n        if (i < a && a1[i] == k) {\n            printf(\" 1 \");\n            i++;\n        } else if (j < b && b1[j] == k) {\n            printf(\" 2 \");\n            j++;\n        } else {\n            printf(\" 0 \");\n            k++;\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, a, b = gets.split.map(&:to_i)\na_apples = gets.split.map(&:to_i)\nb_apples = gets.split.map(&:to_i)\n\na_apples.sort!\nb_apples.sort!\n\na_apples.each do |a|\n  puts 1\nend\n\nb_apples.each do |b|\n  puts 2\nend\n\nputs 1 if a_apples.length < n\nputs 2 if b_apples.length < n\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Pasha;\n\nuses\n  SysUtils;\n\nvar\n  n, a, b: Integer;\n  a1, b1: Array of Integer;\n  i, j: Integer;\n\nbegin\n  Readln(n, a, b);\n  for i := 1 to a do\n    Read(a1[i]);\n  for i := 1 to b do\n    Read(b1[i]);\n  for i := 1 to n do\n  begin\n    for j := 1 to a do\n      if a1[j] = i then\n        Write('1');\n    for j := 1 to b do\n      if b1[j] = i then\n        Write('2');\n  end;\n  Writeln;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, a, b int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &a, &b)\\n    var a1, b1 []int\\n    for i := 0; i < a; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\", &x)\\n        a1 = append(a1, x)\\n    }\\n    for i := 0; i < b; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\", &x)\\n        b1 = append(b1, x)\\n    }\\n    var a2, b2 []int\\n    for i := 1; i <= n; i++ {\\n        if !in(i, a1) && !in(i, b1) {\\n            a2 = append(a2, i)\\n        }\\n    }\\n    for i := 1; i <= n; i++ {\\n        if !in(i, a2) && !in(i, b2) {\\n            b2 = append(b2, i)\\n        }\\n    }\\n    fmt.Println(a2, b2)\\n}\\n\\nfunc in(x, y []int) bool {\\n    for _, v := range y {\\n        if v == x {\\n            return true\\n        }\\n    }\\n    return false\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n, a, b = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst a = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst b = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\nconst a1 = a.filter(x => x > n - a - b);\nconst b1 = b.filter(x => x > n - a - b);\nconst a2 = a.filter(x => x <= n - a - b);\nconst b2 = b.filter(x => x <= n - a - b);\nconsole.log(a1.concat(b2).join(''));\nconsole.log(a2.concat(b1).join(''));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val n, a, b = scanner.nextInt(), scanner.nextInt(), scanner.nextInt()\n    val aList = scanner.nextLine().split(\" \").map { it.toInt() }.toSet()\n    val bList = scanner.nextLine().split(\" \").map { it.toInt() }.toSet()\n    val result = mutableListOf<Int>()\n    for (i in 1..n) {\n        if (aList.contains(i)) {\n            result.add(1)\n        } else if (bList.contains(i)) {\n            result.add(2)\n        }\n    }\n    println(result.joinToString(\"\"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\nn, a, b = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nans = [0] * n\n\nfor i in range(n):\n    if i < a[-1]:\n        ans[i] = 1\n    elif i < b[-1]:\n        ans[i] = 2\n\nprint(*ans)\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, a, b;\n    scanf(\" %d %d %d \", &n, &a, &b);\n    int[] aa = new int[a];\n    int[] bb = new int[b];\n    for (int i = 0; i < a; i++) {\n        scanf(\" %d \", &aa[i]);\n    }\n    for (int i = 0; i < b; i++) {\n        scanf(\" %d \", &bb[i]);\n    }\n    int[] ans = new int[n];\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    while (i < a && j < b) {\n        if (aa[i] < bb[j]) {\n            ans[k] = 1;\n            i++;\n        } else {\n            ans[k] = 2;\n            j++;\n        }\n        k++;\n    }\n    while (i < a) {\n        ans[k] = 1;\n        i++;\n        k++;\n    }\n    while (j < b) {\n        ans[k] = 2;\n        j++;\n        k++;\n    }\n    for (int i = 0; i < n; i++) {\n        printf(\" %d \", ans[i]);\n    }\n    printf(\"\\n\");\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $a, $b;\nmy @a_apples, @b_apples;\n\nchomp(my $input = <STDIN>);\n($n, $a, $b) = split(' ', $input);\n\nchomp(my $a_input = <STDIN>);\n@a_apples = split(' ', $a_input);\n\nchomp(my $b_input = <STDIN>);\n@b_apples = split(' ', $b_input);\n\nmy @result;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    if (grep { $_ == $i } @a_apples) {\n        push(@result, 1);\n    } elsif (grep { $_ == $i } @b_apples) {\n        push(@result, 2);\n    } else {\n        push(@result, 0);\n    }\n}\n\nprint join(' ', @result);\n\nexit(0);\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = String::new();\n    stdin.read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = String::new();\n    stdin.read_line(&mut a).unwrap();\n    let a: Vec<usize> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut b = String::new();\n    stdin.read_line(&mut b).unwrap();\n    let b: Vec<usize> = b.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = vec![0; n];\n    for i in 0..n {\n        if a.contains(&i + 1) {\n            ans[i] = 1;\n        } else if b.contains(&i + 1) {\n            ans[i] = 2;\n        }\n    }\n\n    for i in 0..n {\n        stdout.write(format!(\"{}\", ans[i]).as_bytes()).unwrap();\n    }\n    stdout.flush().unwrap();\n}\n\"\"\"}]"}
{"title":"A. Devu, the Singer and Churu, the Joker","description":"Devu is a renowned classical singer. He is invited to many big functions\/festivals. Recently he was invited to \"All World Classical Singing Festival\". Other than Devu, comedian Churu was also invited.Devu has provided organizers a list of the songs and required time for singing them. He will sing n songs, i^th song will take ti minutes exactly. The Comedian, Churu will crack jokes. All his jokes are of 5 minutes exactly.People have mainly come to listen Devu. But you know that he needs rest of 10 minutes after each song. On the other hand, Churu being a very active person, doesn't need any rest.You as one of the organizers should make an optimal s\u0441hedule for the event. For some reasons you must follow the conditions:  The duration of the event must be no more than d minutes;  Devu must complete all his songs;  With satisfying the two previous conditions the number of jokes cracked by Churu should be as many as possible. If it is not possible to find a way to conduct all the songs of the Devu, output -1. Otherwise find out maximum number of jokes that Churu can crack in the grand event.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains two space separated integers n, d (1\u2264n\u2264100;\u00a01\u2264d\u226410000). The second line contains n space-separated integers: t1,t2,...,tn (1\u2264ti\u2264100).\n","output_spec":"If there is no way to conduct all the songs of Devu, output -1. Otherwise output the maximum number of jokes that Churu can crack in the grand event.\n","notes":"Consider the first example. The duration of the event is 30 minutes. There could be maximum 5 jokes in the following way:\n  First Churu cracks a joke in 5 minutes.  Then Devu performs the first song for 2 minutes.  Then Churu cracks 2 jokes in 10 minutes.  Now Devu performs second song for 2 minutes.  Then Churu cracks 2 jokes in 10 minutes.  Now finally Devu will perform his last song in 1 minutes.  Total time spent is 5+2+10+2+10+1=30 minutes.\nConsider the second example. There is no way of organizing Devu's all songs. Hence the answer is -1. \n","sample_inputs":["3 30\n2 2 1\n","3 20\n2 1 1\n"],"sample_outputs":["5\n","-1\n"],"id":"439-A","difficulty":900,"tags":["greedy","implementation"],"src_uid":"b16f5f5c4eeed2a3700506003e8ea8ea","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, d, t[100], i, j, ans = 0;\n    cin >> n >> d;\n    for (i = 0; i < n; i++) {\n        cin >> t[i];\n    }\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n            if (i != j && t[i] + 10 + t[j] <= d) {\n                ans++;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int d = sc.nextInt();\n        int[] t = new int[n];\n        for (int i = 0; i < n; i++) {\n            t[i] = sc.nextInt();\n        }\n        int ans = 0;\n        int time = 0;\n        for (int i = 0; i < n; i++) {\n            time += t[i] + 10;\n            if (time <= d) {\n                ans++;\n            } else {\n                break;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,d=map(int,input().split())\nt=list(map(int,input().split()))\nt.sort()\nc=0\nfor i in range(n):\n    if d-t[i]-10>=0:\n        d-=t[i]+10\n        c+=1\n    else:\n        break\nprint(c)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,d=map(int,input().split())\nt=list(map(int,input().split()))\nt.sort()\nc=0\nfor i in range(n):\n    if(t[i]+10<=d):\n        c+=1\n        d-=t[i]+10\n    else:\n        break\nprint(c)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        int n = int.Parse(input[0]);\n        int d = int.Parse(input[1]);\n        int[] t = new int[n];\n        input = Console.ReadLine().Split(' ');\n        for (int i = 0; i < n; i++)\n        {\n            t[i] = int.Parse(input[i]);\n        }\n        int ans = 0;\n        int i = 0;\n        int j = 0;\n        while (i < n && j < n)\n        {\n            if (t[i] + 10 + j * 5 <= d)\n            {\n                i++;\n                j++;\n            }\n            else\n            {\n                j++;\n            }\n        }\n        if (i == n)\n        {\n            ans = j;\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,d=map(int,input().split())\nt=list(map(int,input().split()))\nt.sort()\nc=0\nfor i in range(n):\n    if d-t[i]-10>=0:\n        d-=t[i]+10\n        c+=1\n    else:\n        break\nprint(c)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Devu;\nuses SysUtils;\nvar\n  n, d, i, j, t, s, ans: integer;\n  a: array[0..100] of integer;\nbegin\n  readln(n, d);\n  for i := 0 to n - 1 do\n    readln(a[i]);\n  s := 0;\n  for i := 0 to n - 1 do\n  begin\n    t := a[i] + 10;\n    if s + t <= d then\n    begin\n      s := s + t;\n      ans := ans + 1;\n    end;\n  end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, d int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &d)\\n    var t []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &t[i])\\n    }\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        if d-t[i]-10 >= 0 {\\n            d -= t[i] + 10\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, d] = line.split(' ').map(Number);\n  const ts = line.split(' ').slice(1).map(Number);\n\n  let ans = 0;\n  let cur = 0;\n  for (let i = 0; i < n; i++) {\n    cur += ts[i] + 10;\n    if (cur <= d) {\n      ans++;\n    } else {\n      break;\n    }\n  }\n\n  console.log(ans);\n\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val d = sc.nextInt()\n    val t = sc.nextLine().split(\" \").map { it.toInt() }\n    var ans = 0\n    var i = 0\n    var j = 0\n    while (i < n) {\n        val t1 = t[i] + 10\n        val t2 = t1 + 5\n        if (t2 <= d) {\n            ans++\n            i++\n        } else {\n            j++\n            d -= t1\n        }\n    }\n    if (i < n) {\n        println(-1)\n    } else {\n        println(ans + j)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = explode(' ', trim(fgets(STDIN)));\n$t = explode(' ', trim(fgets(STDIN)));\n$t = array_map('intval', $t);\n$t = array_sum($t);\n$t += $n * 10;\n$c = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $t -= $t[0];\n    if ($t >= 5) {\n        $t -= 5;\n        $c++;\n    }\n}\nif ($t < 0) {\n    echo -1;\n} else {\n    echo $c;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, d;\n    scanf(\" %d %d \", &n, &d);\n    int t[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &t[i]);\n    }\n    int ans = 0;\n    int i = 0;\n    while (i < n) {\n        int j = i;\n        while (j < n && t[j] + 10 <= d) {\n            j++;\n        }\n        int m = j - i;\n        ans = max(ans, m \/ 5);\n        i = j;\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $n, $d;\n\nchomp(my $line = <STDIN>);\n\n($n, $d) = split(\/ \/, $line);\n\nmy @t = split(\/ \/, <STDIN>);\n\nmy $i = 0;\nmy $j = 0;\nmy $count = 0;\n\nwhile ($i < $n) {\n    if ($d - $t[$i] - 10 >= 0) {\n        $d -= $t[$i] + 10;\n        $count++;\n    } else {\n        $j++;\n    }\n    $i++;\n}\n\nif ($d >= 0) {\n    print $count + $j;\n} else {\n    print -1;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut tokens = line.split_whitespace();\n    let n = tokens.next().unwrap().parse::<i32>().unwrap();\n    let d = tokens.next().unwrap().parse::<i32>().unwrap();\n\n    let mut songs = Vec::new();\n    stdin.read_line(&mut line).unwrap();\n    tokens = line.split_whitespace();\n    for t in tokens {\n        songs.push(t.parse::<i32>().unwrap());\n    }\n\n    let mut max_jokes = 0;\n    for i in 0..n {\n        let mut time = songs[i] + 10;\n        for j in i + 1..n {\n            time += songs[j] + 10;\n            if time <= d {\n                max_jokes = max(max_jokes, j - i + 1);\n            }\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Letter","description":"Vasya decided to write an anonymous letter cutting the letters out of a newspaper heading. He knows heading s1 and text s2 that he wants to send. Vasya can use every single heading letter no more than once. Vasya doesn't have to cut the spaces out of the heading \u2014 he just leaves some blank space to mark them. Help him; find out if he will manage to compose the needed text.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a newspaper heading s1. The second line contains the letter text s2. s1 \u0438 s2 are non-empty lines consisting of spaces, uppercase and lowercase Latin letters, whose lengths do not exceed 200 symbols. The uppercase and lowercase letters should be differentiated. Vasya does not cut spaces out of the heading.\n","output_spec":"If Vasya can write the given anonymous letter, print YES, otherwise print NO\n","notes":null,"sample_inputs":["Instead of dogging Your footsteps it disappears but you dont notice anything\nwhere is your dog\n","Instead of dogging Your footsteps it disappears but you dont notice anything\nYour dog is upstears\n","Instead of dogging your footsteps it disappears but you dont notice anything\nYour dog is upstears\n","abcdefg hijk\nk j i h g f e d c b a\n"],"sample_outputs":["NO\n","YES\n","NO\n","YES\n"],"id":"43-B","difficulty":1100,"tags":["implementation","strings"],"src_uid":"b1ef19d7027dc82d76859d64a6f43439","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s1, s2;\n    cin >> s1 >> s2;\n    int n1 = s1.length(), n2 = s2.length();\n    int a[26] = {0};\n    for (int i = 0; i < n1; i++) {\n        if (s1[i] >= 'a' && s1[i] <= 'z')\n            a[s1[i] - 'a']++;\n        else if (s1[i] >= 'A' && s1[i] <= 'Z')\n            a[s1[i] - 'A']++;\n    }\n    for (int i = 0; i < n2; i++) {\n        if (s2[i] >= 'a' && s2[i] <= 'z')\n            a[s2[i] - 'a']--;\n        else if (s2[i] >= 'A' && s2[i] <= 'Z')\n            a[s2[i] - 'A']--;\n    }\n    for (int i = 0; i < 26; i++) {\n        if (a[i] < 0) {\n            cout << \"NO\\n\";\n            return 0;\n        }\n    }\n    cout << \"YES\\n\";\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s1 = scanner.nextLine();\n        String s2 = scanner.nextLine();\n        int[] count = new int[26];\n        for (int i = 0; i < s1.length(); i++) {\n            count[s1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < s2.length(); i++) {\n            count[s2.charAt(i) - 'a']--;\n        }\n        for (int i = 0; i < 26; i++) {\n            if (count[i] < 0) {\n                System.out.println(\"NO\");\n                return;\n            }\n        }\n        System.out.println(\"YES\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns1 = input()\ns2 = input()\n\ns1 = s1.lower()\ns2 = s2.lower()\n\ns1 = set(s1)\ns2 = set(s2)\n\nif s1.issubset(s2):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string s1 = Console.ReadLine();\n        string s2 = Console.ReadLine();\n        var s1_list = s1.ToLower().ToCharArray();\n        var s2_list = s2.ToLower().ToCharArray();\n        var s1_set = new HashSet<char>();\n        var s2_set = new HashSet<char>();\n        foreach (var c in s1_list)\n        {\n            s1_set.Add(c);\n        }\n        foreach (var c in s2_list)\n        {\n            s2_set.Add(c);\n        }\n        if (s1_set.IsSuperset(s2_set))\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s1 = gets.chomp\ns2 = gets.chomp\n\ns1_hash = {}\ns2_hash = {}\n\ns1.each_char do |c|\n  s1_hash[c] = s1_hash[c].to_i + 1 if s1_hash[c]\n  s1_hash[c] = 1 if !s1_hash[c]\nend\n\ns2.each_char do |c|\n  s2_hash[c] = s2_hash[c].to_i + 1 if s2_hash[c]\n  s2_hash[c] = 1 if !s2_hash[c]\nend\n\nif s1_hash.all? { |k, v| v <= s2_hash[k] }\n  puts 'YES'\nelse\n  puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\nvar\n  s1, s2: string;\n  i, j, k: integer;\nbegin\n  readln(s1);\n  readln(s2);\n  for i := 1 to length(s1) do\n    for j := 1 to length(s2) do\n      if s1[i] = s2[j] then\n        begin\n          k := k + 1;\n          break;\n        end;\n  if k = length(s2) then\n    writeln('YES')\n  else\n    writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"Go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    s1 := `Instead of dogging Your footsteps it disappears but you dont notice anything`\\n    s2 := `where is your dog`\\n    s1 = strings.ToLower(s1)\\n    s2 = strings.ToLower(s2)\\n    m := make(map[string]int)\\n    for _, v := range s1 {\\n        m[string(v)]++\\n    }\\n    for _, v := range s2 {\\n        if m[string(v)] == 0 {\\n            fmt.Println(\\\"NO\\\")\\n            return\\n        }\\n    }\\n    fmt.Println(\\\"YES\\\")\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s1 = require('fs').readFileSync(0, 'utf8').trim();\\nconst s2 = require('fs').readFileSync(1, 'utf8').trim();\\nconst s1_arr = s1.split('');\\nconst s2_arr = s2.split('');\\nconst s1_set = new Set(s1_arr);\\nconst s2_set = new Set(s2_arr);\\nif (s1_set.size >= s2_set.size) {\\n  console.log('YES');\\n} else {\\n  console.log('NO');\\n}\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s1 = readLine()\n    val s2 = readLine()\n    val s1_map = mutableMapOf<Char, Int>()\n    val s2_map = mutableMapOf<Char, Int>()\n    for (c in s1) {\n        s1_map[c] = s1_map.getOrDefault(c, 0) + 1\n    }\n    for (c in s2) {\n        s2_map[c] = s2_map.getOrDefault(c, 0) + 1\n    }\n    for (c in s2) {\n        if (s1_map[c] < s2_map[c]) {\n            println(\"NO\")\n            return\n        }\n    }\n    println(\"YES\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s1 = trim(fgets(STDIN));\n$s2 = trim(fgets(STDIN));\n$s1 = strtolower($s1);\n$s2 = strtolower($s2);\n$arr1 = str_split($s1);\n$arr2 = str_split($s2);\n$arr1 = array_unique($arr1);\n$arr2 = array_unique($arr2);\n$arr1 = array_diff($arr1, $arr2);\nif (count($arr1) == 0) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s1, s2;\n    scanf(\" %s\\n%s\\n\", &s1, &s2);\n    auto s1_set = s1.toSet();\n    auto s2_set = s2.toSet();\n    if (s1_set.intersect(s2_set).length == s2_set.length)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"use strict;use warnings;my $s1=shift;my $s2=shift;my %h;my $i=0;my $j=0;while($i<length($s1)){if($s1[$i]!=\" \"){if(!exists($h{$s1[$i]})){$h{$s1[$i]}=1;$j++;}}$i++;}if($j>=length($s2)){for($i=0;$i<length($s2);$i++){if($s2[$i]!=\" \"){if(!exists($h{$s2[$i]})){print\"NO\\n\";exit 0;}}}print\"YES\\n\";}else{print\"NO\\n\";}\"]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (s1, s2) = read_input();\n    let mut map = HashMap::new();\n    for c in s1.chars() {\n        if map.contains_key(&c) {\n            map.insert(c, map.get(&c).unwrap() + 1);\n        } else {\n            map.insert(c, 1);\n        }\n    }\n    for c in s2.chars() {\n        if !map.contains_key(&c) || map.get(&c).unwrap() == 0 {\n            println!(\"NO\");\n            return;\n        }\n        map.insert(c, map.get(&c).unwrap() - 1);\n    }\n    println!(\"YES\");\n}\n\nfn read_input() -> (String, String) {\n    let mut s1 = String::new();\n    let mut s2 = String::new();\n    std::io::stdin().read_line(&mut s1).unwrap();\n    std::io::stdin().read_line(&mut s2).unwrap();\n    (s1, s2)\n}\n\"\"\"}]"}
{"title":"C. Holidays","description":"School holidays come in Berland. The holidays are going to continue for n days. The students of school \u2116N are having the time of their lives and the IT teacher Marina Sergeyevna, who has spent all the summer busy checking the BSE (Berland State Examination) results, has finally taken a vacation break! Some people are in charge of the daily watering of flowers in shifts according to the schedule. However when Marina Sergeyevna was making the schedule, she was so tired from work and so lost in dreams of the oncoming vacation that she perhaps made several mistakes. In fact, it is possible that according to the schedule, on some days during the holidays the flowers will not be watered or will be watered multiple times. Help Marina Sergeyevna to find a mistake.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains two numbers n and m (1\u2264n,m\u2264100) \u2014 the number of days in Berland holidays and the number of people in charge of the watering respectively. The next m lines contain the description of the duty schedule. Each line contains two integers ai and bi (1\u2264ai\u2264bi\u2264n), meaning that the i-th person in charge should water the flowers from the ai-th to the bi-th day inclusively, once a day. The duty shifts are described sequentially, i.e. bi\u2264ai+1 for all i from 1 to n-1 inclusively. \n","output_spec":"Print \"OK\" (without quotes), if the schedule does not contain mistakes. Otherwise you have to find the minimal number of a day when the flowers will not be watered or will be watered multiple times, and output two integers \u2014 the day number and the number of times the flowers will be watered that day.\n","notes":"Keep in mind that in the second sample the mistake occurs not only on the second day, but also on the sixth day, when nobody waters the flowers. However, you have to print the second day, i.e. the day with the minimal number.\n","sample_inputs":["10 5\n1 2\n3 3\n4 6\n7 7\n8 10\n","10 5\n1 2\n2 3\n4 5\n7 8\n9 10\n","10 5\n1 2\n3 3\n5 7\n7 7\n7 10\n"],"sample_outputs":["OK\n","2 2\n","4 0\n"],"id":"44-C","difficulty":1300,"tags":["implementation"],"src_uid":"30c4f155336cf762699a1bbc55a60d27","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<int> a(m), b(m);\n    for (int i = 0; i < m; i++) {\n        cin >> a[i] >> b[i];\n    }\n    vector<int> c(n + 1, 0);\n    for (int i = 0; i < m; i++) {\n        for (int j = a[i]; j <= b[i]; j++) {\n            c[j]++;\n        }\n    }\n    int min_day = 1000000000, min_count = 1000000000;\n    for (int i = 1; i <= n; i++) {\n        if (c[i] == 0) {\n            if (i < min_day) {\n                min_day = i;\n                min_count = 0;\n            } else if (i == min_day) {\n                min_count++;\n            }\n        }\n    }\n    if (min_count == 0) {\n        cout << \"OK\\n\";\n    } else {\n        cout << min_day << \" \" << min_count << \"\\n\";\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[n + 1];\n        int[] b = new int[n + 1];\n        for (int i = 0; i < m; i++) {\n            a[sc.nextInt()]++;\n            b[sc.nextInt()]++;\n        }\n        int min = Integer.MAX_VALUE;\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (a[i] == 0 && b[i] == 0) {\n                if (min > i) {\n                    min = i;\n                    count = 0;\n                }\n            } else if (a[i] > 0 && b[i] > 0) {\n                count++;\n            }\n        }\n        if (count == 0) {\n            System.out.println(\"OK\");\n        } else {\n            System.out.println(min + \" \" + count);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m=map(int,input().split())\na=[0]*n\nfor i in range(m):\n    a[int(input())-1]+=1\nfor i in range(n):\n    if a[i]==0:\n        print(i+1,0)\n        break\nelse:\n    print(\"OK\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, m, i, j, a, b, c, d, e, f, g, h, k, l, t, s, p, q, r, count = 0;\n    scanf(\" %d %d \", &n, &m);\n    for (i = 0; i < m; i++) {\n        scanf(\" %d %d \", &a, &b);\n        for (j = a; j <= b; j++) {\n            count++;\n        }\n    }\n    if (count == n) {\n        printf(\" OK \");\n    } else {\n        for (i = 1; i <= n; i++) {\n            c = 0;\n            for (j = 0; j < m; j++) {\n                if (i >= a && i <= b) {\n                    c++;\n                }\n            }\n            if (c == 0) {\n                printf(\" %d %d \", i, count);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, m = int.Parse(Console.ReadLine());\n        var a = new List<int>();\n        var b = new List<int>();\n        for (int i = 0; i < m; i++)\n        {\n            var s = Console.ReadLine().Split(' ');\n            a.Add(int.Parse(s[0]));\n            b.Add(int.Parse(s[1]));\n        }\n        var c = new int[n + 1];\n        for (int i = 0; i < m; i++)\n        {\n            for (int j = a[i]; j <= b[i]; j++)\n            {\n                c[j]++;\n            }\n        }\n        int min = int.MaxValue;\n        int count = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            if (c[i] == 0)\n            {\n                if (min > i)\n                {\n                    min = i;\n                    count = 0;\n                }\n                else if (min == i)\n                {\n                    count++;\n                }\n            }\n        }\n        if (count == 0)\n        {\n            Console.WriteLine(\"OK\");\n        }\n        else\n        {\n            Console.WriteLine(\"{0} {1}\", min, count);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = []\nb = []\nfor i in 1..m\n    a.push(gets.split.map(&:to_i))\nend\nfor i in 1..n\n    count = 0\n    for j in 0..m-1\n        if a[j][0] <= i && i <= a[j][1]\n            count += 1\n        end\n    end\n    if count > 1\n        puts i, count\n        exit\n    end\nend\nputs 'OK'\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t1;\nconst\n  maxn = 100;\nvar\n  n, m, i, j, k, a, b, c, d, e, f, g, h, t, p, q, r, s, x, y, z: integer;\n  a1, a2, a3, a4, a5, a6, a7, a8, a9, a10: array[1..maxn] of integer;\nbegin\n  readln(n, m);\n  for i := 1 to m do\n  begin\n    readln(a, b);\n    for j := a to b do\n      a1[j] := i;\n  end;\n  for i := 1 to n do\n  begin\n    c := 0;\n    for j := 1 to m do\n      if a1[i] = j then\n        c := c + 1;\n    if c > 1 then\n    begin\n      writeln(i, ' ', c);\n      exit;\n    end;\n  end;\n  writeln('OK');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &m)\\n    var a, b, c, d int\\n    for i := 0; i < m; i++ {\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &a, &b)\\n        for j := a; j <= b; j++ {\\n            if c == 0 {\\n                c = j\\n            } else if c != j {\\n                d++\\n            }\\n        }\\n    }\\n    if d == 0 {\\n        fmt.Println(\\\"OK\\\")\\n    } else {\\n        fmt.Println(c, d)\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst m = Number(input[0].split(' ')[1]);\nconst arr = [];\nfor (let i = 1; i <= m; i++) {\n    const a = Number(input[i].split(' ')[0]);\n    const b = Number(input[i].split(' ')[1]);\n    arr.push([a, b]);\n}\narr.sort((a, b) => a[0] - b[0]);\nlet count = 0;\nlet min = 1000000000;\nfor (let i = 0; i < n; i++) {\n    count = 0;\n    for (let j = 0; j < m; j++) {\n        if (i >= arr[j][0] && i <= arr[j][1]) {\n            count++;\n        }\n    }\n    if (count == 0) {\n        min = Math.min(min, i);\n    }\n}\nif (min == 1000000000) {\n    console.log('OK');\n} else {\n    console.log(min, count);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val arr = Array(n + 1) { 0 }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        for (j in a..b) {\n            arr[j]++\n        }\n    }\n    var min = Int.MAX_VALUE\n    var count = 0\n    for (i in 1..n) {\n        if (arr[i] == 0) {\n            if (min > i) {\n                min = i\n                count = 0\n            }\n            count++\n        }\n    }\n    if (count == 0) {\n        println(\"OK\")\n    } else {\n        println(\"$min $count\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a[] = explode(' ', trim(fgets(STDIN)));\n}\n$a = array_map(function ($v) {\n    return [intval($v[0]), intval($v[1])];\n}, $a);\n$a = array_map(function ($v) {\n    return [$v[0], $v[1] - $v[0] + 1];\n}, $a);\n$a = array_unique($a, SORT_NUMERIC);\n$a = array_values($a);\n$b = [];\nfor ($i = 0; $i < $n; $i++) {\n    $b[$i] = 0;\n}\nfor ($i = 0; $i < count($a); $i++) {\n    for ($j = $a[$i][0]; $j <= $a[$i][1]; $j++) {\n        $b[$j - 1]++;\n    }\n}\n$min = 1000000000;\n$min_day = 0;\n$min_count = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($b[$i] > 1 || $b[$i] == 0) {\n        if ($min > $b[$i]) {\n            $min = $b[$i];\n            $min_day = $i + 1;\n            $min_count = $b[$i];\n        }\n    }\n}\nif ($min == 0) {\n    echo 'OK';\n} else {\n    echo $min_day . ' ' . $min_count;\n}\n?>'}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[m], b[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d \", &a[i], &b[i]);\n    }\n    int c[n + 1];\n    for (int i = 0; i < n + 1; i++) {\n        c[i] = 0;\n    }\n    for (int i = 0; i < m; i++) {\n        for (int j = a[i]; j <= b[i]; j++) {\n            c[j]++;\n        }\n    }\n    int min = 1000000000;\n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        if (c[i] == 0) {\n            if (i < min) {\n                min = i;\n                count = 0;\n            }\n            if (i == min) {\n                count++;\n            }\n        }\n    }\n    if (count == 0) {\n        printf(\" OK \");\n    } else {\n        printf(\" %d %d \", min, count);\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m; \\n\\nwhile (<>) { \\n    chomp; \\n    my @a = split(' ', $_); \\n    $n = $a[0]; \\n    $m = $a[1]; \\n    break; \\n}\\n\\nmy @a = (); \\n\\nfor (my $i = 0; $i < $m; $i++) { \\n    my @b = split(' ', <>); \\n    $a[$b[0]] = $b[1]; \\n}\\n\\nmy $min = 1000000000; \\nmy $count = 0; \\n\\nfor (my $i = 1; $i <= $n; $i++) { \\n    if ($a[$i] == 0) { \\n        if ($min > $i) { \\n            $min = $i; \\n            $count = 0; \\n        } \\n        $count++; \\n    } else { \\n        if ($count > 0) { \\n            print \"$i $count\\n\"; \\n            exit; \\n        } \\n    } \\n}\\n\\nprint 'OK\\n';\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let (n, m) = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut a = vec![0; n + 1];\n    for _ in 0..m {\n        let (ai, bi) = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        for i in ai..=bi {\n            a[i] += 1;\n        }\n    }\n    let mut min = n + 1;\n    let mut count = 0;\n    for i in 1..n + 1 {\n        if a[i] == 0 {\n            if min > i {\n                min = i;\n                count = 0;\n            }\n            count += 1;\n        }\n    }\n    if count == 0 {\n        println!(\"OK\");\n    } else {\n        println!(\"{} {}\", min, count);\n    }\n}\n\nfn read_line() -> String {\n    let mut buf = String::new();\n    std::io::stdin().read_line(&mut buf).unwrap();\n    buf\n}\n\"\"\"}]"}
{"title":"F. Goats and Wolves","description":"Once Vasya needed to transport m goats and m wolves from riverbank to the other as quickly as possible. The boat can hold n animals and Vasya, in addition, he is permitted to put less than n animals in the boat. If in one place (on one of the banks or in the boat) the wolves happen to strictly outnumber the goats, then the wolves eat the goats and Vasya gets upset. When Vasya swims on the boat from one shore to the other, he must take at least one animal to accompany him, otherwise he will get bored and he will, yet again, feel upset. When the boat reaches the bank, first all the animals get off simultaneously, and then the animals chosen by Vasya simultaneously get on the boat. That means that at the moment when the animals that have just arrived have already got off and the animals that are going to leave haven't yet got on, somebody might eat someone. Vasya needs to transport all the animals from one river bank to the other so that nobody eats anyone and Vasya doesn't get upset. What is the minimal number of times he will have to cross the river?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated numbers m and n (1\u2264m,n\u226410^5) \u2014 the number of animals and the boat's capacity.\n","output_spec":"If it is impossible to transport all the animals so that no one got upset, and all the goats survived, print -1. Otherwise print the single number \u2014 how many times Vasya will have to cross the river.\n","notes":"The first sample match to well-known problem for children.\n","sample_inputs":["3 2\n","33 3\n"],"sample_outputs":["11\n","-1\n"],"id":"45-F","difficulty":2500,"tags":["greedy"],"src_uid":"83f1d50a1802e08dd154d4c9778e3d80","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"m,n;cin>>m>>n;if(m%n==0)cout<<m\/n;else cout<<m\/n+1;\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int m = scanner.nextInt();\n        int n = scanner.nextInt();\n        int count = 0;\n        while (m > 0) {\n            if (m >= n) {\n                m -= n;\n                count++;\n            } else {\n                m -= n - 1;\n                count++;\n            }\n        }\n        if (count % 2 == 0) {\n            System.out.println(count \/ 2);\n        } else {\n            System.out.println(-1);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nm, n = map(int, input().split())\nif m % 2 == 0 and n >= m:\n    print(m \/\/ 2)\nelif m % 2 == 1 and n >= m + 1:\n    print(m \/\/ 2 + 1)\nelse:\n    print(-1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int m, n;\n    scanf(\" %d %d \", &m, &n);\n    if (m % n == 0) {\n        printf(\" %d \", m \/ n);\n    } else {\n        printf(\" -1 \");\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var m = int.Parse(input[0]);\n        var n = int.Parse(input[1]);\n\n        var goats = new List<int>();\n        var wolves = new List<int>();\n\n        for (int i = 0; i < m; i++)\n        {\n            var animal = int.Parse(Console.ReadLine());\n            if (animal == 0)\n            {\n                goats.Add(1);\n            }\n            else\n            {\n                wolves.Add(1);\n            }\n        }\n\n        var min = Math.Min(goats.Count, wolves.Count);\n        var max = Math.Max(goats.Count, wolves.Count);\n\n        var result = 0;\n\n        for (int i = 0; i < min; i++)\n        {\n            result += 2;\n        }\n\n        if (max % 2 == 0)\n        {\n            result += max \/ 2;\n        }\n        else\n        {\n            result += max \/ 2 + 1;\n        }\n\n        Console.WriteLine(result);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"m, n = gets.split.map(&:to_i)\n\nif m % 2 == 0 and n >= m:\n    print(m \/\/ 2)\nelse:\n    print(-1)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses SysUtils;\nvar\n  m, n, i, j, k, t, s, a, b, c, d, e, f, g, h, l, p, q, r, x, y, z: integer;\nbegin\n  readln(m, n);\n  if (m mod n = 0) and (m > n) then\n    writeln(m div n)\n  else\n    if (m mod n = 0) and (m < n) then\n      writeln(m div n + 1)\n    else\n      if (m > n) and (m mod n <> 0) then\n        writeln(m div n + 1)\n      else\n        writeln(-1);\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var m, n int\n    fmt.Scanf(\" %d %d \", &m, &n)\n    if m%n == 0 {\n        fmt.Println(m \/ n)\n    } else {\n        fmt.Println(m \/ n + 1)\n    }\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const mn = require('fs').readFileSync('\/dev\/stdin').toString().split(' ').map(Number);\\nconsole.log(Math.ceil(mn[0] \/ (mn[1] - 1)))\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (m, n) = readLine().split(\" \").map { it.toInt() }\n    val ans = if (m % 2 == 0 && n >= m \/ 2) m \/ 2 else -1\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$m = intval($input[0]);\n$n = intval($input[1]);\n\nif ($m % 2 == 0 && $n % 2 == 0) {\n    echo floor($m \/ $n) . PHP_EOL;\n} else {\n    echo -1 . PHP_EOL;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [m, n] = readln.split.map!(to!int).array;\n    if (m % n == 0)\n        writeln(m \/ n);\n    else\n        writeln(m \/ n + 1);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $m, $n;\n\nchomp(my $line = <STDIN>);\n\nmy @arr = split(\/ \/, $line);\n\n$m = $arr[0];\n$n = $arr[1];\n\nif ($m % $n == 0) {\n    print $m \/ $n;\n} else {\n    print -1;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut tokens = line.split_whitespace();\n    let m = tokens.next().unwrap().parse::<i32>().unwrap();\n    let n = tokens.next().unwrap().parse::<i32>().unwrap();\n\n    if m % n == 0 {\n        println!(\"{}\", m \/ n);\n    } else {\n        println!(\"{}\", m \/ n + 1);\n    }\n}\n\"\"\"}]"}
{"title":"A. Ball Game","description":"A kindergarten teacher Natalia Pavlovna has invented a new ball game. This game not only develops the children's physique, but also teaches them how to count. The game goes as follows. Kids stand in circle. Let's agree to think of the children as numbered with numbers from 1 to n clockwise and the child number 1 is holding the ball. First the first child throws the ball to the next one clockwise, i.e. to the child number 2. Then the child number 2 throws the ball to the next but one child, i.e. to the child number 4, then the fourth child throws the ball to the child that stands two children away from him, i.e. to the child number 7, then the ball is thrown to the child who stands 3 children away from the child number 7, then the ball is thrown to the child who stands 4 children away from the last one, and so on. It should be mentioned that when a ball is thrown it may pass the beginning of the circle. For example, if n=5, then after the third throw the child number 2 has the ball again. Overall, n-1 throws are made, and the game ends.The problem is that not all the children get the ball during the game. If a child doesn't get the ball, he gets very upset and cries until Natalia Pavlovna gives him a candy. That's why Natalia Pavlovna asks you to help her to identify the numbers of the children who will get the ball after each throw.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integer n (2\u2264n\u2264100) which indicates the number of kids in the circle.\n","output_spec":"In the single line print n-1 numbers which are the numbers of children who will get the ball after each throw. Separate the numbers by spaces.\n","notes":null,"sample_inputs":["10\n","3\n"],"sample_outputs":["2 4 7 1 6 2 9 7 6\n","2 1\n"],"id":"46-A","difficulty":800,"tags":["brute+force","implementation"],"src_uid":"7170c40405cf7a5e0f2bd15e4c7d189d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n=int(input())\nfor i in range(n-1):\n    print(i+2,end=' ')\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = i + 1;\n        }\n        for (int i = 0; i < n - 1; i++) {\n            System.out.print(arr[i] + \" \");\n            arr[i] = (arr[i] + 2) % n;\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nfor i in range(n-1):\n    print(i+2, end=\" \")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\nfor i in range(n-1):\n    print(i+2,end=' ')\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace BallGame\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] arr = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                arr[i] = i + 1;\n            }\n            for (int i = 0; i < n - 1; i++)\n            {\n                Console.Write(arr[i] + \" \");\n                arr[i] = (arr[i] + 2) % n;\n            }\n            Console.WriteLine();\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nfor i in 2..n-1\n  puts (i-1)%n+1\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram BallGame;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j: Integer;\n  a: Array[1..100] of Integer;\n\nbegin\n  Readln(n);\n  for i := 1 to n do\n    a[i] := i;\n  for i := 1 to n - 1 do\n  begin\n    for j := 1 to n - 1 do\n      a[j] := a[j + 1];\n    a[n] := a[1];\n  end;\n  for i := 1 to n - 1 do\n    Writeln(a[i], ' ');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 1; i <= n; i++ {\\n        a = append(a, i)\\n    }\\n    for i := 1; i < n; i++ {\\n        fmt.Printf(\\\"%d \\\", a[i])\\n        a = append(a[:i], a[i+1:]...)\\n    }\\n    fmt.Println(a[0])\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"n = parseInt(process.stdin.readLine());\\nfor (let i = 2; i < n; i++) {\\n  console.log(i + (i - 1) % n);\\n}\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nn = int(input())\nfor i in range(n-1):\n    print(i+2, end=\" \")\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = (int)trim(fgets(STDIN));\\n$arr = [];\\nfor ($i = 1; $i <= $n; $i++) {\\n    $arr[] = $i;\\n}\\nfor ($i = 0; $i < $n - 1; $i++) {\\n    echo $arr[($i + 1) % $n] . ' ';\\n}\\necho PHP_EOL;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int i;\n    for (i = 2; i <= n - 1; i++) {\n        printf(\" %d \", (i + 1) % n + 1);\n    }\n    printf(\" \");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = (1..$n);\nmy $i = 0;\nwhile ($i < $n - 1) {\n    print \"$a[$i] \";\n    $i = ($i + 2) % $n;\n}\nprint \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n = read!();\n    let mut ans = vec![];\n    for i in 1..n {\n        ans.push(2 * i - 1);\n    }\n    println!(\"{}\", ans.join(\" \"));\n}\n\"\"\"}]"}
{"title":"F. Hercule Poirot Problem","description":"Today you are to solve the problem even the famous Hercule Poirot can't cope with! That's why this crime has not yet been solved and this story was never included in Agatha Christie's detective story books. You are not informed on what crime was committed, when and where the corpse was found and other details. We only know that the crime was committed in a house that has n rooms and m doors between the pairs of rooms. The house residents are very suspicious, that's why all the doors can be locked with keys and all the keys are different. According to the provided evidence on Thursday night all the doors in the house were locked, and it is known in what rooms were the residents, and what kind of keys had any one of them. The same is known for the Friday night, when all the doors were also locked. On Friday it was raining heavily, that's why nobody left the house and nobody entered it. During the day the house residents could  open and close doors to the neighboring rooms using the keys at their disposal (every door can be opened and closed from each side);  move freely from a room to a room if a corresponding door is open;  give keys to one another, being in one room.  \"Little grey matter\" of Hercule Poirot are not capable of coping with such amount of information. Find out if the positions of people and keys on the Thursday night could result in the positions on Friday night, otherwise somebody among the witnesses is surely lying.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three preset integers n, m \u0438 k (1\u2264n,m,k\u22641000) \u2014 the number of rooms, the number of doors and the number of house residents respectively. The next m lines contain pairs of room numbers which join the doors. The rooms are numbered with integers from 1 to n. There cannot be more that one door between the pair of rooms. No door connects a room with itself. The next k lines describe the residents' position on the first night. Every line contains a resident's name (a non-empty line consisting of no more than 10 Latin letters), then after a space follows the room number, then, after a space \u2014 the number of keys the resident has. Then follow written space-separated numbers of the doors that can be unlocked by these keys. The doors are numbered with integers from 1 to m in the order in which they are described in the input data. All the residents have different names, uppercase and lowercase letters considered to be different. Every m keys occurs exactly once in the description. Multiple people may be present in one room, some rooms may be empty. The next k lines describe the position of the residents on the second night in the very same format. It is guaranteed that in the second night's description the residents' names remain the same and every m keys occurs exactly once.\n","output_spec":"Print \"YES\" (without quotes) if the second arrangement can result from the first one, otherwise, print \"NO\".\n","notes":null,"sample_inputs":["2 1 2\n1 2\nDmitry 1 1 1\nNatalia 2 0\nNatalia 1 1 1\nDmitry 2 0\n","4 4 3\n1 3\n1 2\n2 3\n3 4\nArtem 1 1 4\nDmitry 1 1 2\nEdvard 4 2 1 3\nArtem 2 0\nDmitry 1 0\nEdvard 4 4 1 2 3 4\n"],"sample_outputs":["YES\n","NO\n"],"id":"46-F","difficulty":2300,"tags":["dsu","graphs"],"src_uid":"52b13cca189853e6af02bea8d3d85276","C++":"","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int k = scanner.nextInt();\n\n        int[][] doors = new int[m][2];\n        for (int i = 0; i < m; i++) {\n            doors[i][0] = scanner.nextInt();\n            doors[i][1] = scanner.nextInt();\n        }\n\n        String[][] people1 = new String[k][3];\n        for (int i = 0; i < k; i++) {\n            people1[i][0] = scanner.next();\n            people1[i][1] = scanner.nextInt() + \"\";\n            people1[i][2] = scanner.next();\n        }\n\n        String[][] people2 = new String[k][3];\n        for (int i = 0; i < k; i++) {\n            people2[i][0] = scanner.next();\n            people2[i][1] = scanner.nextInt() + \"\";\n            people2[i][2] = scanner.next();\n        }\n\n        int[] keys1 = new int[m];\n        int[] keys2 = new int[m];\n        for (int i = 0; i < k; i++) {\n            for (int j = 0; j < people1[i][2].split(\" \").length; j++) {\n                int key = Integer.parseInt(people1[i][2].split(\" \")[j]);\n                keys1[key - 1]++;\n            }\n        }\n\n        for (int i = 0; i < k; i++) {\n            for (int j = 0; j < people2[i][2].split(\" \").length; j++) {\n                int key = Integer.parseInt(people2[i][2].split(\" \")[j]);\n                keys2[key - 1]++;\n            }\n        }\n\n        for (int i = 0; i < m; i++) {\n            if (keys1[i] != keys2[i]) {\n                System.out.println(\"NO\");\n                return;\n            }\n        }\n\n        int[][] graph = new int[n][n];\n        for (int i = 0; i < m; i++) {\n            graph[doors[i][0] - 1][doors[i][1] - 1] = 1;\n            graph[doors[i][1] - 1][doors[i][0] - 1] = 1;\n        }\n\n        boolean[] visited = new boolean[n];\n        for (int i = 0; i < k; i++) {\n            if (!visited[people1[i][1] - 1]) {\n                dfs(graph, people1[i][1] - 1, visited);\n            }\n        }\n\n        for (int i = 0; i < k; i++) {\n            if (!visited[people2[i][1] - 1]) {\n                System.out.println(\"NO\");\n                return;\n            }\n        }\n\n        System.out.println(\"YES\");\n    }\n\n    private static void dfs(int[][] graph, int v, boolean[] visited) {\n        visited[v] = true;\n        for (int i = 0; i < graph.length; i++) {\n            if (graph[v][i] == 1 && !visited[i]) {\n                dfs(graph, i, visited);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int a[n + 1][m + 1];\n    int b[n + 1][m + 1];\n    int c[n + 1];\n    int d[n + 1];\n    int i, j, l, p, q;\n    for (i = 0; i < m; i++) {\n        scanf(\" %d %d \", &p, &q);\n        a[p][q] = 1;\n        a[q][p] = 1;\n    }\n    for (i = 0; i < k; i++) {\n        scanf(\" %s %d %d \", &c[i], &d[i], &l);\n        for (j = 0; j < l; j++) {\n            scanf(\" %d \", &b[i][j]);\n        }\n    }\n    for (i = 0; i < k; i++) {\n        for (j = 0; j < l; j++) {\n            for (p = 0; p < k; p++) {\n                if (i != p && b[i][j] == b[p][j]) {\n                    if (c[i] == c[p] || d[i] == d[p]) {\n                        printf(\" NO \");\n                        return 0;\n                    }\n                }\n            }\n            for (p = 0; p < m; p++) {\n                if (a[c[i]][p] == 1 && a[d[i]][p] == 0) {\n                    for (q = 0; q < k; q++) {\n                        if (i != q && d[i] == c[q]) {\n                            if (a[c[q]][p] == 1 && a[d[q]][p] == 0) {\n                                printf(\" NO \");\n                                return 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    printf(\" YES \");\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn, m, k = gets.split.map(&:to_i)\n\ndoors = {}\nm.times do\n  a, b = gets.split.map(&:to_i)\n  doors[a] ||= []\n  doors[a] << b\n  doors[b] ||= []\n  doors[b] << a\nend\n\npeople = {}\nk.times do\n  name, room, keys = gets.split\n  people[name] = { room: room.to_i, keys: keys.split.map(&:to_i) }\nend\n\ndef can_move(from, to, doors)\n  doors[from].include?(to)\nend\n\ndef can_give_key(from, to, keys)\n  keys[from].include?(to)\nend\n\ndef can_move_or_give_key(from, to, doors, keys)\n  can_move(from, to, doors) || can_give_key(from, to, keys)\nend\n\ndef can_reach(from, to, doors, keys)\n  queue = [from]\n  visited = [from]\n  while queue.any?\n    current = queue.shift\n    if current == to\n      return true\n    end\n    doors[current].each do |next_room|\n      if !visited.include?(next_room) && can_move_or_give_key(current, next_room, doors, keys)\n        queue << next_room\n        visited << next_room\n      end\n    end\n  end\n  false\nend\n\ndef can_move_between_days(people_1, people_2, doors)\n  people_1.each do |name, person_1|\n    person_2 = people_2[name]\n    if person_1[:room] != person_2[:room] && !can_reach(person_1[:room], person_2[:room], doors, person_1[:keys])\n      return false\n    end\n  end\n  true\nend\n\nif can_move_between_days(people, people, doors)\n  puts \"YES\"\nelse\n  puts \"NO\"\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram delphi;\nuses SysUtils;\n\nconst\n  maxn = 1000;\n\ntype\n  TRoom = record\n    name: string;\n    num: integer;\n    keys: array[1..maxn] of integer;\n  end;\n\n  TDoor = record\n    num: integer;\n    rooms: array[1..2] of integer;\n  end;\n\nvar\n  n, m, k: integer;\n  doors: array[1..maxn] of TDoor;\n  residents: array[1..maxn] of TRoom;\n  first, second: array[1..maxn] of array[1..maxn] of boolean;\n\nprocedure init;\nvar\n  i, j, k: integer;\nbegin\n  readln(n, m, k);\n  for i := 1 to m do\n  begin\n    readln(doors[i].num, doors[i].rooms[1], doors[i].rooms[2]);\n  end;\n  for i := 1 to k do\n  begin\n    readln(residents[i].name, residents[i].num, residents[i].keys[1]);\n    for j := 2 to length(residents[i].keys) do\n      read(residents[i].keys[j]);\n  end;\nend;\n\nprocedure solve;\nvar\n  i, j, k: integer;\nbegin\n  for i := 1 to n do\n    for j := 1 to n do\n      first[i][j] := false;\n  for i := 1 to k do\n    for j := 1 to length(residents[i].keys) do\n      first[residents[i].num][doors[residents[i].keys[j]].rooms[1]] := true;\n  for i := 1 to n do\n    for j := 1 to n do\n      second[i][j] := false;\n  for i := 1 to k do\n    for j := 1 to length(residents[i].keys) do\n      second[residents[i].num][doors[residents[i].keys[j]].rooms[2]] := true;\n  for i := 1 to n do\n    for j := 1 to n do\n      if first[i][j] <> second[i][j] then\n      begin\n        writeln('NO');\n        exit;\n      end;\n  writeln('YES');\nend;\n\nbegin\n  init;\n  solve;\nend.\n\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, m, k int\n\tfmt.Scanf(\" %d %d %d \", &n, &m, &k)\n\tdoors := make([][]int, m)\n\tfor i := 0; i < m; i++ {\n\t\tvar a, b int\n\t\tfmt.Scanf(\" %d %d \", &a, &b)\n\t\tdoors[i] = []int{a, b}\n\t}\n\tpeople := make([]struct {\n\t\tname string\n\t\troom int\n\t\tkeys []int\n\t}, k)\n\tfor i := 0; i < k; i++ {\n\t\tvar name, room, keys int\n\t\tfmt.Scanf(\" %s %d %d \", &name, &room, &keys)\n\t\tpeople[i] = struct {\n\t\t\tname string\n\t\t\troom int\n\t\t\tkeys []int\n\t\t}{\n\t\t\tname: name,\n\t\t\troom: room,\n\t\t\tkeys: make([]int, keys),\n\t\t}\n\t\tfor j := 0; j < keys; j++ {\n\t\t\tfmt.Scanf(\" %d \", &people[i].keys[j])\n\t\t}\n\t}\n\tpeople2 := make([]struct {\n\t\tname string\n\t\troom int\n\t\tkeys []int\n\t}, k)\n\tfor i := 0; i < k; i++ {\n\t\tvar name, room, keys int\n\t\tfmt.Scanf(\" %s %d %d \", &name, &room, &keys)\n\t\tpeople2[i] = struct {\n\t\t\tname string\n\t\t\troom int\n\t\t\tkeys []int\n\t\t}{\n\t\t\tname: name,\n\t\t\troom: room,\n\t\t\tkeys: make([]int, keys),\n\t\t}\n\t\tfor j := 0; j < keys; j++ {\n\t\t\tfmt.Scanf(\" %d \", &people2[i].keys[j])\n\t\t}\n\t}\n\tfor i := 0; i < m; i++ {\n\t\tfor j := 0; j < m; j++ {\n\t\t\tif doors[i][0] == doors[j][1] && doors[i][1] == doors[j][0] {\n\t\t\t\tdoors[i][0] = -1\n\t\t\t\tdoors[j][1] = -1\n\t\t\t}\n\t\t}\n\t}\n\tfor i := 0; i < m; i++ {\n\t\tif doors[i][0] != -1 && doors[i][1] != -1 {\n\t\t\tfmt.Println(\"NO\")\n\t\t\tos.Exit(0)\n\t\t}\n\t}\n\tfor i := 0; i < k; i++ {\n\t\tfor j := 0; j < k; j++ {\n\t\t\tif people[i].name == people2[j].name {\n\t\t\t\tif people[i].room != people2[j].room {\n\t\t\t\t\tfmt.Println(\"NO\")\n\t\t\t\t\tos.Exit(0)\n\t\t\t\t}\n\t\t\t\tfor k := 0; k < len(people[i].keys); k++ {\n\t\t\t\t\tif !contains(people2[j].keys, people[i].keys[k]) {\n\t\t\t\t\t\tfmt.Println(\"NO\")\n\t\t\t\t\t\tos.Exit(0)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(\"YES\")\n}\n\nfunc contains(a []int, x int) bool {\n\tfor _, v := range a {\n\t\tif v == x {\n\t\t\treturn true\n\t\t}\n\t}\n\treturn false\n}\n\"\"\"}]","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m, k) = readLine().split(\" \").map { it.toInt() }\n    val doors = Array(m) { ArrayList<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        doors[i].add(a)\n        doors[i].add(b)\n    }\n    val people = Array(k) { ArrayList<String>() }\n    for (i in 0 until k) {\n        val (name, room, keys) = readLine().split(\" \")\n        people[i].add(name)\n        people[i].add(room)\n        people[i].add(keys)\n    }\n    val people2 = Array(k) { ArrayList<String>() }\n    for (i in 0 until k) {\n        val (name, room, keys) = readLine().split(\" \")\n        people2[i].add(name)\n        people2[i].add(room)\n        people2[i].add(keys)\n    }\n    val visited = Array(n) { false }\n    val visited2 = Array(n) { false }\n    val ans = true\n    for (i in 0 until k) {\n        val name = people[i][0]\n        val room = people[i][1].toInt()\n        val keys = people[i][2].split(\" \").map { it.toInt() }\n        for (j in 0 until m) {\n            if (keys.contains(j + 1)) {\n                for (k in doors[j]) {\n                    if (k != room && !visited[k - 1]) {\n                        visited[k - 1] = true\n                    }\n                }\n            }\n        }\n    }\n    for (i in 0 until k) {\n        val name = people2[i][0]\n        val room = people2[i][1].toInt()\n        val keys = people2[i][2].split(\" \").map { it.toInt() }\n        for (j in 0 until m) {\n            if (keys.contains(j + 1)) {\n                for (k in doors[j]) {\n                    if (k != room && !visited2[k - 1]) {\n                        visited2[k - 1] = true\n                    }\n                }\n            }\n        }\n    }\n    for (i in 0 until n) {\n        if (!visited[i] || !visited2[i]) {\n            ans = false\n        }\n    }\n    println(if (ans) \"YES\" else \"NO\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$doors = [];\nfor ($i = 0; $i < $m; $i++) {\n    $doors[] = explode(' ', trim(fgets(STDIN)));\n}\n$people = [];\nfor ($i = 0; $i < $k; $i++) {\n    $people[] = explode(' ', trim(fgets(STDIN)));\n}\n$people2 = [];\nfor ($i = 0; $i < $k; $i++) {\n    $people2[] = explode(' ', trim(fgets(STDIN)));\n}\n$keys = [];\nfor ($i = 0; $i < $m; $i++) {\n    $keys[] = [];\n}\nfor ($i = 0; $i < $k; $i++) {\n    for ($j = 1; $j < count($people[$i]); $j++) {\n        $keys[$people[$i][0] - 1][] = $people[$i][$j];\n    }\n}\nfor ($i = 0; $i < $k; $i++) {\n    for ($j = 1; $j < count($people2[$i]); $j++) {\n        $keys[$people2[$i][0] - 1][] = $people2[$i][$j];\n    }\n}\n$ans = true;\nfor ($i = 0; $i < $m; $i++) {\n    $a = array_intersect($keys[$doors[$i][0] - 1], $keys[$doors[$i][1] - 1]);\n    if (count($a) == 0) {\n        $ans = false;\n        break;\n    }\n}\nif ($ans) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n\"\"\"}]","d":"","perl":"","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    \/\/ \u8bfb\u53d6\u8f93\u5165\n    let (n, m, k) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut doors = HashMap::new();\n    for _ in 0..m {\n        let (a, b) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        doors.insert(a, b);\n        doors.insert(b, a);\n    }\n    let mut people = HashMap::new();\n    for _ in 0..k {\n        let (name, room, k) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        people.insert(name, (room, k));\n    }\n\n    \/\/ \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4ece\u7b2c\u4e00\u5929\u5230\u7b2c\u4e8c\u5929\n    let mut can_reach = vec![false; n + 1];\n    for (name, (room, k)) in people.iter() {\n        for i in 0..k {\n            let door = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n            if door[0] == room {\n                can_reach[door[1]] = true;\n            }\n        }\n    }\n\n    \/\/ \u5224\u65ad\u662f\u5426\u53ef\u4ee5\u4ece\u7b2c\u4e8c\u5929\u5230\u7b2c\u4e00\u5929\n    let mut can_reach_back = vec![false; n + 1];\n    for (name, (room, k)) in people.iter() {\n        for i in 0..k {\n            let door = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n            if door[1] == room {\n                can_reach_back[door[0]] = true;\n            }\n        }\n    }\n\n    \/\/ \u8f93\u51fa\u7ed3\u679c\n    if can_reach.iter().all(|&x| x) && can_reach_back.iter().all(|&x| x) {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line\n}\n\"\"\"}]"}
{"title":"D. Safe","description":"Vasya tries to break in a safe. He knows that a code consists of n numbers, and every number is a 0 or a 1. Vasya has made m attempts to enter the code. After each attempt the system told him in how many position stand the right numbers. It is not said in which positions the wrong numbers stand. Vasya has been so unlucky that he hasn\u2019t entered the code where would be more than 5 correct numbers. Now Vasya is completely bewildered: he thinks there\u2019s a mistake in the system and it is self-contradictory. Help Vasya \u2014 calculate how many possible code variants are left that do not contradict the previous system responses.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains two integers n and m (6\u2264n\u226435,1\u2264m\u226410) which represent the number of numbers in the code and the number of attempts made by Vasya. Then follow m lines, each containing space-separated si and ci which correspondingly indicate Vasya\u2019s attempt (a line containing n numbers which are 0 or 1) and the system\u2019s response (an integer from 0 to 5 inclusively).\n","output_spec":"Print the single number which indicates how many possible code variants that do not contradict the m system responses are left.\n","notes":null,"sample_inputs":["6 2\n000000 2\n010100 4\n","6 3\n000000 2\n010100 4\n111100 0\n","6 3\n000000 2\n010100 4\n111100 2\n"],"sample_outputs":["6\n","0\n","1\n"],"id":"47-D","difficulty":2200,"tags":["brute+force"],"src_uid":"5215112549723fea3f2c1fe0049e0b2e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nint n, m;\nint a[35];\nint b[35];\nint c[35];\nint ans;\n\nint main() {\n    scanf(\" %d%d \", &n, &m);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &b[i]);\n        scanf(\" %d \", &c[i]);\n    }\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < n; j++) {\n            if (a[j] == b[i]) {\n                c[i]--;\n            }\n        }\n    }\n    for (int i = 0; i < m; i++) {\n        if (c[i] > 5) {\n            printf(\" 0 \");\n            return 0;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        ans *= 2;\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[n];\n        int[] b = new int[n];\n        for (int i = 0; i < m; i++) {\n            String s = sc.next();\n            int c = sc.nextInt();\n            for (int j = 0; j < n; j++) {\n                if (s.charAt(j) == '1') {\n                    a[j] += c;\n                } else {\n                    b[j] += c;\n                }\n            }\n        }\n        int ans = 1;\n        for (int i = 0; i < n; i++) {\n            ans *= Math.min(a[i] + b[i], 5);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\nans = 1\nfor _ in range(m):\n    s, c = input().split()\n    s = list(s)\n    c = int(c)\n    for i in range(n):\n        if s[i] == '1' and c > 0:\n            c -= 1\n            ans *= 2\n    ans -= 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    int a[n];\n    int b[m];\n    int c[m];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &b[i]);\n        scanf(\" %d \", &c[i]);\n    }\n    int ans = 1;\n    for (int i = 0; i < m; i++) {\n        ans *= (n - c[i]);\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace Codeforces\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var n, m = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            var s = new List<string>();\n            var c = new List<int>();\n            for (int i = 0; i < m; i++)\n            {\n                s.Add(Console.ReadLine());\n                c.Add(int.Parse(s[i].Split(' ')[1]));\n            }\n            var ans = 1;\n            for (int i = 0; i < m; i++)\n            {\n                var t = 0;\n                for (int j = 0; j < n; j++)\n                {\n                    if (s[i][j] == '1')\n                    {\n                        t++;\n                    }\n                }\n                ans *= (n - t + 1);\n            }\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn, m = gets.split.map(&:to_i)\n\nans = 2**n\n\nm.times do\n  s, c = gets.split.map(&:to_i)\n  ans -= 2**(n - c)\nend\n\nputs ans\n\"\"\"}]","delphi":"","Go":"","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\nans = 1\nfor _ in range(m):\n    s, c = input().split()\n    s = list(map(int, s))\n    c = int(c)\n\n    for i in range(n):\n        if s[i] == 1 and c > 0:\n            c -= 1\n            ans *= 2\n\nprint(ans)\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val m = sc.nextInt()\n    val dp = Array(n + 1) { IntArray(6) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..5) {\n            for (k in 0..1) {\n                dp[i][j + k] += dp[i - 1][j]\n            }\n        }\n    }\n    var ans = 0\n    for (i in 0 until m) {\n        val s = sc.next().toCharArray()\n        val c = sc.nextInt()\n        for (j in 0..5) {\n            ans -= dp[n][j]\n        }\n        for (j in 0 until n) {\n            if (s[j] == '1') {\n                ans += dp[n - j - 1][c]\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $m; $i++) {\n    $s = trim(fgets(STDIN));\n    $c = (int)trim(fgets(STDIN));\n    $a[$i] = [$s, $c];\n}\n$ans = 1;\nfor ($i = 0; $i < $m; $i++) {\n    $s = $a[$i][0];\n    $c = $a[$i][1];\n    $ans *= pow(2, $n - $c);\n}\necho $ans;\n\"\"\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @s;\nmy @c;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    ($s[$i], $c[$i]) = split(\/ \/, $line);\n}\n\nmy $ans = 1;\nfor (my $i = 0; $i < $m; $i++) {\n    $ans *= (2 ** (n - $c[$i]));\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(usize, usize)>();\n\n    let mut ans = 1 << n;\n    for _ in 0..m {\n        let (s, c) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<(Vec<u8>, usize)>();\n        for i in 0..n {\n            if s[i] == '1' && c > 0 {\n                ans &= !(1 << i);\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Rock-paper-scissors","description":"Uncle Fyodor, Matroskin the Cat and Sharic the Dog live their simple but happy lives in Prostokvashino. Sometimes they receive parcels from Uncle Fyodor\u2019s parents and sometimes from anonymous benefactors, in which case it is hard to determine to which one of them the package has been sent. A photographic rifle is obviously for Sharic who loves hunting and fish is for Matroskin, but for whom was a new video game console meant? Every one of the three friends claimed that the present is for him and nearly quarreled. Uncle Fyodor had an idea how to solve the problem justly: they should suppose that the console was sent to all three of them and play it in turns. Everybody got relieved but then yet another burning problem popped up \u2014 who will play first? This time Matroskin came up with a brilliant solution, suggesting the most fair way to find it out: play rock-paper-scissors together. The rules of the game are very simple. On the count of three every player shows a combination with his hand (or paw). The combination corresponds to one of three things: a rock, scissors or paper. Some of the gestures win over some other ones according to well-known rules: the rock breaks the scissors, the scissors cut the paper, and the paper gets wrapped over the stone. Usually there are two players. Yet there are three friends, that\u2019s why they decided to choose the winner like that: If someone shows the gesture that wins over the other two players, then that player wins. Otherwise, another game round is required. Write a program that will determine the winner by the gestures they have shown.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains the name of the gesture that Uncle Fyodor showed, the second line shows which gesture Matroskin showed and the third line shows Sharic\u2019s gesture. \n","output_spec":"Print \"F\" (without quotes) if Uncle Fyodor wins. Print \"M\" if Matroskin wins and \"S\" if Sharic wins. If it is impossible to find the winner, print \"?\".\n","notes":null,"sample_inputs":["rock\nrock\nrock\n","paper\nrock\nrock\n","scissors\nrock\nrock\n","scissors\npaper\nrock\n"],"sample_outputs":["?\n","F\n","?\n","?\n"],"id":"48-A","difficulty":900,"tags":["implementation","schedules"],"src_uid":"072c7d29a1b338609a72ab6b73988282","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    string f, m, s;\n    cin >> f >> m >> s;\n    if (f == m && m == s) {\n        cout << \"?\" << endl;\n    } else if (f == \"rock\" && m == \"scissors\" && s == \"paper\") {\n        cout << \"F\" << endl;\n    } else if (f == \"rock\" && m == \"paper\" && s == \"scissors\") {\n        cout << \"M\" << endl;\n    } else if (f == \"rock\" && m == \"scissors\" && s == \"rock\") {\n        cout << \"S\" << endl;\n    } else if (f == \"paper\" && m == \"rock\" && s == \"scissors\") {\n        cout << \"F\" << endl;\n    } else if (f == \"paper\" && m == \"scissors\" && s == \"rock\") {\n        cout << \"M\" << endl;\n    } else if (f == \"paper\" && m == \"rock\" && s == \"paper\") {\n        cout << \"S\" << endl;\n    } else if (f == \"scissors\" && m == \"rock\" && s == \"paper\") {\n        cout << \"F\" << endl;\n    } else if (f == \"scissors\" && m == \"paper\" && s == \"rock\") {\n        cout << \"M\" << endl;\n    } else if (f == \"scissors\" && m == \"scissors\" && s == \"paper\") {\n        cout << \"S\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String fyodor = scanner.nextLine();\n        String matroskin = scanner.nextLine();\n        String sharic = scanner.nextLine();\n\n        if (fyodor.equals(\"rock\") && matroskin.equals(\"scissors\") && sharic.equals(\"paper\")) {\n            System.out.println(\"F\");\n        } else if (fyodor.equals(\"rock\") && matroskin.equals(\"paper\") && sharic.equals(\"scissors\")) {\n            System.out.println(\"M\");\n        } else if (fyodor.equals(\"rock\") && matroskin.equals(\"scissors\") && sharic.equals(\"rock\")) {\n            System.out.println(\"S\");\n        } else if (fyodor.equals(\"paper\") && matroskin.equals(\"rock\") && sharic.equals(\"scissors\")) {\n            System.out.println(\"F\");\n        } else if (fyodor.equals(\"paper\") && matroskin.equals(\"scissors\") && sharic.equals(\"rock\")) {\n            System.out.println(\"M\");\n        } else if (fyodor.equals(\"paper\") && matroskin.equals(\"rock\") && sharic.equals(\"paper\")) {\n            System.out.println(\"S\");\n        } else if (fyodor.equals(\"scissors\") && matroskin.equals(\"rock\") && sharic.equals(\"paper\")) {\n            System.out.println(\"F\");\n        } else if (fyodor.equals(\"scissors\") && matroskin.equals(\"paper\") && sharic.equals(\"rock\")) {\n            System.out.println(\"M\");\n        } else if (fyodor.equals(\"scissors\") && matroskin.equals(\"scissors\") && sharic.equals(\"paper\")) {\n            System.out.println(\"S\");\n        } else {\n            System.out.println(\"?\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ngestures = [\"rock\", \"paper\", \"scissors\"]\n\ndef get_winner(gestures):\n    for i in range(len(gestures)):\n        for j in range(len(gestures)):\n            if gestures[i] == \"rock\" and gestures[j] == \"scissors\":\n                return i\n            elif gestures[i] == \"scissors\" and gestures[j] == \"paper\":\n                return i\n            elif gestures[i] == \"paper\" and gestures[j] == \"rock\":\n                return i\n    return -1\n\n\ndef main():\n    fyodor = input()\n    matroskin = input()\n    sharic = input()\n\n    winner = get_winner([fyodor, matroskin, sharic])\n\n    if winner == 0:\n        print(\"F\")\n    elif winner == 1:\n        print(\"M\")\n    elif winner == 2:\n        print(\"S\")\n    else:\n        print(\"?\")\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    char f, m, s;\n    scanf(\" %c \", &f);\n    scanf(\" %c \", &m);\n    scanf(\" %c \", &s);\n    if (f == 'r' && m == 's' && s == 's')\n        printf(\" F \");\n    else if (f == 'r' && m == 's' && s == 'p')\n        printf(\" M \");\n    else if (f == 'r' && m == 'p' && s == 's')\n        printf(\" S \");\n    else if (f == 'p' && m == 'r' && s == 's')\n        printf(\" F \");\n    else if (f == 'p' && m == 's' && s == 'r')\n        printf(\" M \");\n    else if (f == 'p' && m == 's' && s == 'p')\n        printf(\" S \");\n    else if (f == 's' && m == 'r' && s == 'p')\n        printf(\" F \");\n    else if (f == 's' && m == 'p' && s == 'r')\n        printf(\" M \");\n    else if (f == 's' && m == 'p' && s == 's')\n        printf(\" S \");\n    else\n        printf(\" ? \");\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace RockPaperScissors\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string fyodor = Console.ReadLine();\n            string matroskin = Console.ReadLine();\n            string sharic = Console.ReadLine();\n\n            switch (fyodor)\n            {\n                case \"rock\":\n                    if (matroskin == \"scissors\")\n                    {\n                        Console.WriteLine(\"F\");\n                    }\n                    else if (matroskin == \"paper\")\n                    {\n                        Console.WriteLine(\"M\");\n                    }\n                    else if (matroskin == \"rock\")\n                    {\n                        Console.WriteLine(\"?\");\n                    }\n                    break;\n                case \"paper\":\n                    if (matroskin == \"rock\")\n                    {\n                        Console.WriteLine(\"M\");\n                    }\n                    else if (matroskin == \"scissors\")\n                    {\n                        Console.WriteLine(\"F\");\n                    }\n                    else if (matroskin == \"paper\")\n                    {\n                        Console.WriteLine(\"?\");\n                    }\n                    break;\n                case \"scissors\":\n                    if (matroskin == \"paper\")\n                    {\n                        Console.WriteLine(\"M\");\n                    }\n                    else if (matroskin == \"rock\")\n                    {\n                        Console.WriteLine(\"F\");\n                    }\n                    else if (matroskin == \"scissors\")\n                    {\n                        Console.WriteLine(\"?\");\n                    }\n                    break;\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"gestures = ['rock', 'paper', 'scissors']\n\ndef get_winner(gestures):\n    for i in range(len(gestures)):\n        for j in range(len(gestures)):\n            if gestures[i] == 'rock' and gestures[j] == 'scissors':\n                return i\n            elif gestures[i] == 'scissors' and gestures[j] == 'paper':\n                return i\n            elif gestures[i] == 'paper' and gestures[j] == 'rock':\n                return i\n    return -1\n\n\ndef main():\n    fyodor_gesture = input()\n    matroskin_gesture = input()\n    sharic_gesture = input()\n\n    winner = get_winner([fyodor_gesture, matroskin_gesture, sharic_gesture])\n\n    if winner == 0:\n        print('F')\n    elif winner == 1:\n        print('M')\n    elif winner == 2:\n        print('S')\n    else:\n        print('?')\n\n\nif __name__ == '__main__':\n    main()\\n\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program RockPaperScissors;\nuses SysUtils;\nvar\n  Fyodor, Matroskin, Sharic: string;\nbegin\n  Readln(Fyodor);\n  Readln(Matroskin);\n  Readln(Sharic);\n  if (Fyodor = 'rock') and (Matroskin = 'scissors') and (Sharic = 'paper') then\n    Writeln('F');\n  if (Fyodor = 'rock') and (Matroskin = 'paper') and (Sharic = 'scissors') then\n    Writeln('M');\n  if (Fyodor = 'rock') and (Matroskin = 'scissors') and (Sharic = 'rock') then\n    Writeln('S');\n  if (Fyodor = 'paper') and (Matroskin = 'rock') and (Sharic = 'scissors') then\n    Writeln('F');\n  if (Fyodor = 'paper') and (Matroskin = 'scissors') and (Sharic = 'rock') then\n    Writeln('M');\n  if (Fyodor = 'paper') and (Matroskin = 'rock') and (Sharic = 'paper') then\n    Writeln('S');\n  if (Fyodor = 'scissors') and (Matroskin = 'rock') and (Sharic = 'paper') then\n    Writeln('F');\n  if (Fyodor = 'scissors') and (Matroskin = 'paper') and (Sharic = 'rock') then\n    Writeln('M');\n  if (Fyodor = 'scissors') and (Matroskin = 'rock') and (Sharic = 'scissors') then\n    Writeln('S');\n  if (Fyodor = Matroskin) and (Matroskin = Sharic) then\n    Writeln('?');\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var fyodor, matroskin, sharic string\\n    fmt.Scan(&fyodor)\\n    fmt.Scan(&matroskin)\\n    fmt.Scan(&sharic)\\n    switch fyodor {\\n    case \\\"rock\\\":\\n        if matroskin == \\\"scissors\\\" && sharic == \\\"paper\\\" {\\n            fmt.Println(\\\"F\\\")\\n        } else if matroskin == \\\"paper\\\" && sharic == \\\"rock\\\" {\\n            fmt.Println(\\\"M\\\")\\n        } else if matroskin == \\\"rock\\\" && sharic == \\\"scissors\\\" {\\n            fmt.Println(\\\"S\\\")\\n        } else {\\n            fmt.Println(\\\"?\\\")\\n        }\\n    case \\\"paper\\\":\\n        if matroskin == \\\"rock\\\" && sharic == \\\"scissors\\\" {\\n            fmt.Println(\\\"F\\\")\\n        } else if matroskin == \\\"scissors\\\" && sharic == \\\"paper\\\" {\\n            fmt.Println(\\\"M\\\")\\n        } else if matroskin == \\\"paper\\\" && sharic == \\\"rock\\\" {\\n            fmt.Println(\\\"S\\\")\\n        } else {\\n            fmt.Println(\\\"?\\\")\\n        }\\n    case \\\"scissors\\\":\\n        if matroskin == \\\"paper\\\" && sharic == \\\"rock\\\" {\\n            fmt.Println(\\\"F\\\")\\n        } else if matroskin == \\\"rock\\\" && sharic == \\\"scissors\\\" {\\n            fmt.Println(\\\"M\\\")\\n        } else if matroskin == \\\"scissors\\\" && sharic == \\\"paper\\\" {\\n            fmt.Println(\\\"S\\\")\\n        } else {\\n            fmt.Println(\\\"?\\\")\\n        }\\n    default:\\n        fmt.Println(\\\"?\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst lines = input.split('\\n');\nconst fyodor = lines[0];\nconst matroskin = lines[1];\nconst sharic = lines[2];\n\nconst win = (a, b, c) => {\n  if (a === b) {\n    return '?';\n  } else if (a === 'rock' && b === 'scissors') {\n    return 'F';\n  } else if (a === 'rock' && c === 'scissors') {\n    return 'M';\n  } else if (a === 'scissors' && b === 'paper') {\n    return 'F';\n  } else if (a === 'scissors' && c === 'paper') {\n    return 'S';\n  } else if (a === 'paper' && b === 'rock') {\n    return 'F';\n  } else if (a === 'paper' && c === 'rock') {\n    return 'S';\n  }\n};\n\nconsole.log(win(fyodor, matroskin, sharic));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val fyodor = readLine()\n    val matroskin = readLine()\n    val sharic = readLine()\n\n    val fyodorWin = fyodor == \"rock\" && matroskin == \"scissors\" || fyodor == \"scissors\" && sharic == \"paper\" || fyodor == \"paper\" && matroskin == \"rock\"\n    val matroskinWin = matroskin == \"rock\" && sharic == \"scissors\" || matroskin == \"scissors\" && fyodor == \"paper\" || matroskin == \"paper\" && sharic == \"rock\"\n    val sharicWin = sharic == \"rock\" && fyodor == \"scissors\" || sharic == \"scissors\" && matroskin == \"paper\" || sharic == \"paper\" && fyodor == \"rock\"\n\n    if (fyodorWin) {\n        println(\"F\")\n    } else if (matroskinWin) {\n        println(\"M\")\n    } else if (sharicWin) {\n        println(\"S\")\n    } else {\n        println(\"?\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$gestures = ['rock', 'paper', 'scissors'];\n$players = ['Fyodor', 'Matroskin', 'Sharic'];\n\n$fyodor = trim(fgets(STDIN));\n$matroskin = trim(fgets(STDIN));\n$sharic = trim(fgets(STDIN));\n\n$winner = '';\n\nfor ($i = 0; $i < 3; $i++) {\n    if ($gestures[$i] == $fyodor && $gestures[$i] != $matroskin && $gestures[$i] != $sharic) {\n        $winner = $players[$i];\n        break;\n    } elseif ($gestures[$i] == $matroskin && $gestures[$i] != $fyodor && $gestures[$i] != $sharic) {\n        $winner = $players[$i];\n        break;\n    } elseif ($gestures[$i] == $sharic && $gestures[$i] != $fyodor && $gestures[$i] != $matroskin) {\n        $winner = $players[$i];\n        break;\n    }\n}\n\nif ($winner) {\n    echo $winner;\n} else {\n    echo '?';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\n\nvoid main() {\n    string fyodor, matroskin, sharic;\n    fyodor = stdin.readln();\n    matroskin = stdin.readln();\n    sharic = stdin.readln();\n\n    if (fyodor == \"rock\" && matroskin == \"scissors\" && sharic == \"paper\")\n        writeln(\"F\");\n    else if (fyodor == \"rock\" && matroskin == \"paper\" && sharic == \"scissors\")\n        writeln(\"M\");\n    else if (fyodor == \"rock\" && matroskin == \"scissors\" && sharic == \"rock\")\n        writeln(\"S\");\n    else if (fyodor == \"paper\" && matroskin == \"rock\" && sharic == \"scissors\")\n        writeln(\"F\");\n    else if (fyodor == \"paper\" && matroskin == \"scissors\" && sharic == \"rock\")\n        writeln(\"M\");\n    else if (fyodor == \"paper\" && matroskin == \"rock\" && sharic == \"paper\")\n        writeln(\"S\");\n    else if (fyodor == \"scissors\" && matroskin == \"rock\" && sharic == \"paper\")\n        writeln(\"F\");\n    else if (fyodor == \"scissors\" && matroskin == \"paper\" && sharic == \"rock\")\n        writeln(\"M\");\n    else if (fyodor == \"scissors\" && matroskin == \"rock\" && sharic == \"scissors\")\n        writeln(\"S\");\n    else\n        writeln(\"?\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $fyodor = <STDIN>;\nmy $matroskin = <STDIN>;\nmy $sharic = <STDIN>;\n\nif ($fyodor eq \"rock\" && $matroskin eq \"scissors\" && $sharic eq \"paper\") {\n    print \"F\\n\";\n} elsif ($fyodor eq \"rock\" && $matroskin eq \"paper\" && $sharic eq \"scissors\") {\n    print \"M\\n\";\n} elsif ($fyodor eq \"rock\" && $matroskin eq \"scissors\" && $sharic eq \"rock\") {\n    print \"S\\n\";\n} elsif ($fyodor eq \"paper\" && $matroskin eq \"rock\" && $sharic eq \"paper\") {\n    print \"F\\n\";\n} elsif ($fyodor eq \"paper\" && $matroskin eq \"scissors\" && $sharic eq \"rock\") {\n    print \"M\\n\";\n} elsif ($fyodor eq \"paper\" && $matroskin eq \"rock\" && $sharic eq \"scissors\") {\n    print \"S\\n\";\n} elsif ($fyodor eq \"scissors\" && $matroskin eq \"rock\" && $sharic eq \"scissors\") {\n    print \"F\\n\";\n} elsif ($fyodor eq \"scissors\" && $matroskin eq \"paper\" && $sharic eq \"rock\") {\n    print \"M\\n\";\n} elsif ($fyodor eq \"scissors\" && $matroskin eq \"scissors\" && $sharic eq \"paper\") {\n    print \"S\\n\";\n} else {\n    print \"?\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut fyodor = String::new();\n    let mut matroskin = String::new();\n    let mut sharic = String::new();\n\n    std::io::stdin().read_line(&mut fyodor).unwrap();\n    std::io::stdin().read_line(&mut matroskin).unwrap();\n    std::io::stdin().read_line(&mut sharic).unwrap();\n\n    let fyodor = fyodor.trim().to_lowercase();\n    let matroskin = matroskin.trim().to_lowercase();\n    let sharic = sharic.trim().to_lowercase();\n\n    if fyodor == \"rock\" && matroskin == \"scissors\" && sharic == \"paper\" {\n        println!(\"F\");\n    } else if fyodor == \"rock\" && matroskin == \"paper\" && sharic == \"scissors\" {\n        println!(\"M\");\n    } else if fyodor == \"rock\" && matroskin == \"rock\" && sharic == \"scissors\" {\n        println!(\"S\");\n    } else if fyodor == \"paper\" && matroskin == \"rock\" && sharic == \"scissors\" {\n        println!(\"F\");\n    } else if fyodor == \"paper\" && matroskin == \"scissors\" && sharic == \"rock\" {\n        println!(\"M\");\n    } else if fyodor == \"paper\" && matroskin == \"paper\" && sharic == \"rock\" {\n        println!(\"S\");\n    } else if fyodor == \"scissors\" && matroskin == \"rock\" && sharic == \"paper\" {\n        println!(\"F\");\n    } else if fyodor == \"scissors\" && matroskin == \"paper\" && sharic == \"rock\" {\n        println!(\"M\");\n    } else if fyodor == \"scissors\" && matroskin == \"scissors\" && sharic == \"rock\" {\n        println!(\"S\");\n    } else {\n        println!(\"?\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Land Lot","description":"Vasya has a beautiful garden where wonderful fruit trees grow and yield fantastic harvest every year. But lately thieves started to sneak into the garden at nights and steal the fruit too often. Vasya can\u2019t spend the nights in the garden and guard the fruit because there\u2019s no house in the garden! Vasya had been saving in for some time and finally he decided to build the house. The rest is simple: he should choose in which part of the garden to build the house. In the evening he sat at his table and drew the garden\u2019s plan. On the plan the garden is represented as a rectangular checkered field n\u00d7m in size divided into squares whose side length is 1. In some squares Vasya marked the trees growing there (one shouldn\u2019t plant the trees too close to each other that\u2019s why one square contains no more than one tree). Vasya wants to find a rectangular land lot a\u00d7b squares in size to build a house on, at that the land lot border should go along the lines of the grid that separates the squares. All the trees that grow on the building lot will have to be chopped off. Vasya loves his garden very much, so help him choose the building land lot location so that the number of chopped trees would be as little as possible.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (1\u2264n,m\u226450) which represent the garden location. The next n lines contain m numbers 0 or 1, which describe the garden on the scheme. The zero means that a tree doesn\u2019t grow on this square and the 1 means that there is a growing tree. The last line contains two integers a and b (1\u2264a,b\u226450). Note that Vasya can choose for building an a\u00d7b rectangle as well a b\u00d7a one, i.e. the side of the lot with the length of a can be located as parallel to the garden side with the length of n, as well as parallel to the garden side with the length of m.\n","output_spec":"Print the minimum number of trees that needs to be chopped off to select a land lot a\u00d7b in size to build a house on. It is guaranteed that at least one lot location can always be found, i. e. either a\u2264n and b\u2264m, or a\u2264m \u0438 b\u2264n.\n","notes":"In the second example the upper left square is (1,1) and the lower right is (3,2).\n","sample_inputs":["2 2\n1 0\n1 1\n1 1\n","4 5\n0 0 1 0 1\n0 1 1 1 0\n1 0 1 0 1\n1 1 1 1 1\n2 3\n"],"sample_outputs":["0\n","2\n"],"id":"48-B","difficulty":1200,"tags":["brute+force","implementation"],"src_uid":"1771741663a5236a0aa0551548f4aadd","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m, a, b;\n    cin >> n >> m;\n    vector<vector<int>> garden(n, vector<int>(m));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cin >> garden[i][j];\n        }\n    }\n    cin >> a >> b;\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (i < n - a + 1 && j < m - b + 1) {\n                int cnt = 0;\n                for (int k = i; k < i + a; k++) {\n                    for (int l = j; l < j + b; l++) {\n                        if (garden[k][l] == 1) {\n                            cnt++;\n                        }\n                    }\n                }\n                ans = min(ans, cnt);\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int m = scanner.nextInt();\n        int[][] garden = new int[n][m];\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                garden[i][j] = scanner.nextInt();\n            }\n        }\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i <= n - a; i++) {\n            for (int j = 0; j <= m - b; j++) {\n                int count = 0;\n                for (int k = i; k < i + a; k++) {\n                    for (int l = j; l < j + b; l++) {\n                        if (garden[k][l] == 1) {\n                            count++;\n                        }\n                    }\n                }\n                min = Math.min(min, count);\n            }\n        }\n        System.out.println(min);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\na, b = map(int, input().split())\n\nif a <= n and b <= m:\n    print(sum(map(int, input().split())))\nelif a <= m and b <= n:\n    print(sum(map(int, input().split())).count(1))\nelse:\n    print(sum(map(int, input().split())).count(1) + sum(map(int, input().split())).count(1))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,m,a,b;scanf(\" %d%d \",&n,&m);for(int i=0;i<n;i++){\\n    for(int j=0;j<m;j++){\\n        scanf(\" %d \",&a[i][j]);\\n    }\\n}\\nscanf(\" %d%d \",&a,&b);\\nint s=0;\\nfor(int i=0;i<n;i++){\\n    for(int j=0;j<m;j++){\\n        if(a[i][j]==1){\\n            if(i<a-1){\\n                s++;\\n            }\\n            if(j<b-1){\\n                s++;\\n            }\\n            if(i>0){\\n                s++;\\n            }\\n            if(j>0){\\n                s++;\\n            }\\n        }\\n    }\\n}\\nprintf(\" %d \",s);\\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n = int.Parse(Console.ReadLine());\n        var m = int.Parse(Console.ReadLine());\n        var a = int.Parse(Console.ReadLine());\n        var b = int.Parse(Console.ReadLine());\n        var arr = new int[n][];\n        for (int i = 0; i < n; i++)\n        {\n            arr[i] = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        }\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < m; j++)\n            {\n                if (arr[i][j] == 1)\n                {\n                    if (i + a - 1 < n && j + b - 1 < m)\n                    {\n                        for (int k = i; k < i + a; k++)\n                        {\n                            for (int l = j; l < j + b; l++)\n                            {\n                                if (arr[k][l] == 1)\n                                {\n                                    ans++;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na, b = gets.split.map(&:to_i)\n\nfield = []\nn.times do\n  field << gets.split.map(&:to_i)\nend\n\nans = 0\n\n(0..n-a).each do |i|\n  (0..m-b).each do |j|\n    ans = [ans, field[i][j..j+b].count(1) + field[i+a-1][j..j+b].count(1)].min\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Garden;\n\nuses\n  SysUtils;\n\nvar\n  n, m, a, b: Integer;\n  g: array of array of Integer;\n  ans: Integer;\n\nprocedure ReadData;\nvar\n  i, j: Integer;\nbegin\n  Readln(n, m);\n  for i := 0 to n - 1 do\n  begin\n    g[i] := array of Integer(0..m - 1);\n    for j := 0 to m - 1 do\n      Read(g[i][j]);\n  end;\nend;\n\nprocedure Solve;\nvar\n  i, j, k, l: Integer;\nbegin\n  ans := 0;\n  for i := 0 to n - a + 1 do\n    for j := 0 to m - b + 1 do\n    begin\n      for k := i to i + a - 1 do\n        for l := j to j + b - 1 do\n          if g[k][l] = 1 then\n            inc(ans);\n    end;\nend;\n\nbegin\n  ReadData;\n  Solve;\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, a, b int\\n    fmt.Scanf(\\\"%d%d\\n\\\", &n, &m)\\n    var arr [][]int\\n    for i := 0; i < n; i++ {\\n        arr = append(arr, make([]int, m))\\n        for j := 0; j < m; j++ {\\n            fmt.Scanf(\\\"%d\\n\\\", &arr[i][j])\\n        }\\n    }\\n    fmt.Scanf(\\\"%d%d\\n\\\", &a, &b)\\n    var ans int\\n    if a <= n && b <= m {\\n        for i := 0; i < n; i++ {\\n            for j := 0; j < m; j++ {\\n                if i < a-1 || j < b-1 {\\n                    if arr[i][j] == 1 {\\n                        ans++\\n                    }\\n                }\\n            }\\n        }\\n    } else if a <= m && b <= n {\\n        for i := 0; i < m; i++ {\\n            for j := 0; j < n; j++ {\\n                if i < a-1 || j < b-1 {\\n                    if arr[j][i] == 1 {\\n                        ans++\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst m = Number(input[0].split(' ')[1]);\nconst a = Number(input[2].split(' ')[0]);\nconst b = Number(input[2].split(' ')[1]);\nconst garden = [];\nfor (let i = 0; i < n; i++) {\n  garden.push(input[i + 1].split(' '));\n}\nconst min = Math.min(n, m);\nconst max = Math.max(n, m);\nconst ans = 0;\nfor (let i = 0; i < min; i++) {\n  for (let j = 0; j < max; j++) {\n    if (garden[i][j] == 1) {\n      if (i + a - 1 < n && j + b - 1 < m) {\n        ans += garden[i + a - 1][j + b - 1];\n      }\n      if (i + a - 1 < n && j - b + 1 >= 0) {\n        ans += garden[i + a - 1][j - b + 1];\n      }\n      if (i - a + 1 >= 0 && j + b - 1 < m) {\n        ans += garden[i - a + 1][j + b - 1];\n      }\n      if (i - a + 1 >= 0 && j - b + 1 >= 0) {\n        ans += garden[i - a + 1][j - b + 1];\n      }\n    }\n  }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val m = sc.nextInt()\n    val a = sc.nextInt()\n    val b = sc.nextInt()\n    val arr = Array(n) { Array(m) { 0 } }\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            arr[i][j] = sc.nextInt()\n        }\n    }\n    var ans = 0\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (arr[i][j] == 1) {\n                ans++\n            }\n        }\n    }\n    val min = Math.min(a, b)\n    val max = Math.max(a, b)\n    val s = min * max\n    val t = (n - min) * (m - min)\n    println(ans - s - t)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$a = (int)trim(fgets(STDIN));\n$b = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[$i] = trim(fgets(STDIN));\n}\n$count = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $m; $j++) {\n        if ($arr[$i][$j] == 1) {\n            if ($i < $n - $a + 1 && $j < $m - $b + 1) {\n                $count += $a * $b;\n            } else if ($i < $n - $b + 1 && $j < $m - $a + 1) {\n                $count += $a * $b;\n            } else if ($i < $n - $a + 1 && $j >= $m - $b + 1) {\n                $count += $a * ($m - $j);\n            } else if ($i >= $n - $a + 1 && $j < $m - $b + 1) {\n                $count += $a * ($n - $i);\n            } else if ($i >= $n - $a + 1 && $j >= $m - $b + 1) {\n                $count += $a * ($n - $i) + $b * ($m - $j);\n            }\n        }\n    }\n}\necho $count;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m, a, b;\n    scanf(\" %d %d \", &n, &m);\n    int[n][m] a;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %d \", &a[i][j]);\n        }\n    }\n    scanf(\" %d %d \", &a, &b);\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] == 1) {\n                if (i < n - a + 1 && j < m - b + 1) {\n                    ans = min(ans, count(a[i][j + 1 .. i + a - 1], 1) + count(a[i + 1 .. i + a - 1][j], 1));\n                }\n                if (i < n - b + 1 && j < m - a + 1) {\n                    ans = min(ans, count(a[i + 1 .. i + b - 1][j], 1) + count(a[i][j + 1 .. i + b - 1], 1));\n                }\n            }\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m, $a, $b;\\n\\nwhile (<>) {\\n    if (\/(\\d+) (\\d+)\/) {\\n        $n = $1;\\n        $m = $2;\\n    }\\n    if (\/(\\d+) (\\d+)\/) {\\n        $a = $1;\\n        $b = $2;\\n    }\\n}\\n\\nmy @a = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my @b = ();\\n    for (my $j = 0; $j < $m; $j++) {\\n        $b[$j] = <>;\\n    }\\n    push @a, \\@b;\\n}\\n\\nmy $min = 1000000000;\\nfor (my $i = 0; $i < $n - $a + 1; $i++) {\\n    for (my $j = 0; $j < $m - $b + 1; $j++) {\\n        my $count = 0;\\n        for (my $k = $i; $k < $i + $a; $k++) {\\n            for (my $l = $j; $l < $j + $b; $l++) {\\n                if ($a[$k][$l] == 1) {\\n                    $count++;\\n                }\\n            }\\n        }\\n        if ($count < $min) {\\n            $min = $count;\\n        }\\n    }\\n}\\nprint $min;\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m) = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse().unwrap()).collect_tuple().unwrap();\n    let mut grid = vec![vec![0; m]; n];\n    for i in 0..n {\n        grid[i] = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse().unwrap()).collect();\n    }\n\n    let (a, b) = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse().unwrap()).collect_tuple().unwrap();\n\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..m {\n            if grid[i][j] == 1 {\n                if i + a - 1 < n && j + b - 1 < m {\n                    ans += grid[i + a - 1][j + b - 1];\n                }\n                if i + a - 1 < n && j - b + 1 >= 0 {\n                    ans += grid[i + a - 1][j - b + 1];\n                }\n                if i - a + 1 >= 0 && j + b - 1 < m {\n                    ans += grid[i - a + 1][j + b - 1];\n                }\n                if i - a + 1 >= 0 && j - b + 1 >= 0 {\n                    ans += grid[i - a + 1][j - b + 1];\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"C. The Race","description":"Every year a race takes place on the motorway between cities A and B. This year Vanya decided to take part in the race and drive his own car that has been around and bears its own noble name \u2014 The Huff-puffer.So, Vasya leaves city A on the Huff-puffer, besides, at the very beginning he fills the petrol tank with \u03b1 liters of petrol (\u03b1\u226510 is Vanya's favorite number, it is not necessarily integer). Petrol stations are located on the motorway at an interval of 100 kilometers, i.e. the first station is located 100 kilometers away from the city A, the second one is 200 kilometers away from the city A, the third one is 300 kilometers away from the city A and so on. The Huff-puffer spends 10 liters of petrol every 100 kilometers. Vanya checks the petrol tank every time he passes by a petrol station. If the petrol left in the tank is not enough to get to the next station, Vanya fills the tank with \u03b1 liters of petrol. Otherwise, he doesn't stop at the station and drives on. For example, if \u03b1=43.21, then the car will be fuelled up for the first time at the station number 4, when there'll be 3.21 petrol liters left. After the fuelling up the car will have 46.42 liters. Then Vanya stops at the station number 8 and ends up with 6.42+43.21=49.63 liters. The next stop is at the station number 12, 9.63+43.21=52.84. The next stop is at the station number 17 and so on. You won't believe this but the Huff-puffer has been leading in the race! Perhaps it is due to unexpected snow. Perhaps it is due to video cameras that have been installed along the motorway which register speed limit breaking. Perhaps it is due to the fact that Vanya threatened to junk the Huff-puffer unless the car wins. Whatever the reason is, the Huff-puffer is leading, and jealous people together with other contestants wrack their brains trying to think of a way to stop that outrage.One way to do this is to mine the next petrol station where Vanya will stop. Your task is to calculate at which station this will happen and warn Vanya. You don't know the \u03b1 number, however, you are given the succession of the numbers of the stations where Vanya has stopped. Find the number of the station where the next stop will be.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (1\u2264n\u22641000) which represents the number of petrol stations where Vanya has stopped. The next line has n space-separated integers which represent the numbers of the stations. The numbers are positive and do not exceed 10^6, they are given in the increasing order. No two numbers in the succession match. It is guaranteed that there exists at least one number \u03b1\u226510, to which such a succession of stops corresponds.\n","output_spec":"Print in the first line \"unique\" (without quotes) if the answer can be determined uniquely. In the second line print the number of the station where the next stop will take place. If the answer is not unique, print in the first line \"not unique\".\n","notes":"In the second example the answer is not unique. For example, if \u03b1=10, we'll have such a sequence as 1, 2, 3, and if \u03b1=14, the sequence will be 1, 2, 4.\n","sample_inputs":["3\n1 2 4\n","2\n1 2\n"],"sample_outputs":["unique\n5\n","not unique\n"],"id":"48-C","difficulty":1800,"tags":["math"],"src_uid":"bfbd7a73e65d240ee7e8c83cc68ca0a1","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 1; i < n; i++) {\n        if (a[i] - a[i - 1] != 100) {\n            ans = a[i];\n            break;\n        }\n    }\n\n    if (ans == 0) {\n        cout << \"unique\" << endl;\n        cout << a[n - 1] + 100 << endl;\n    } else {\n        cout << \"not unique\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 1; i < n; i++) {\n            if (a[i] - a[i - 1] != 100) {\n                ans = a[i - 1] + 100;\n                break;\n            }\n        }\n        if (ans == 0) {\n            System.out.println(\"unique\");\n            System.out.println(a[n - 1] + 100);\n        } else {\n            System.out.println(\"not unique\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nif len(set(a)) == 1:\n    print(\"unique\")\n    print(a[-1] + 100)\nelse:\n    print(\"not unique\")\n\"\"\"}]","C":"","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        var a = new List<int>();\n        string[] s = Console.ReadLine().Split(' ');\n        for (int i = 0; i < n; i++)\n        {\n            a.Add(int.Parse(s[i]));\n        }\n        int ans = 0;\n        for (int i = 1; i < n; i++)\n        {\n            if (a[i] - a[i - 1] != 100)\n            {\n                ans = a[i];\n                break;\n            }\n        }\n        if (ans == 0)\n        {\n            Console.WriteLine(\"unique\");\n            Console.WriteLine(a[n]);\n        }\n        else\n        {\n            Console.WriteLine(\"not unique\");\n        }\n    }\n}\n\"}]}","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nif a.uniq.size == 1\n  puts 'unique'\n  puts a[-1] + 100\nelse\n  puts 'not unique'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram HuffPuffer;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, m, a, b, c, d, e, f, g, h, l, p, q, r, s, t, u, v, w, x, y, z: Integer;\n\nbegin\n  Readln(n);\n  Readln(a, b, c, d, e, f, g, h, l, p, q, r, s, t, u, v, w, x, y, z);\n  m := a + b + c + d + e + f + g + h + l + p + q + r + s + t + u + v + w + x + y + z;\n  if m mod 10 = 0 then\n    Writeln('unique')\n  else\n    Writeln('not unique');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    var m int\\n    for i := 0; i < n; i++ {\\n        if a[i]-a[i-1] == 100 {\\n            m = a[i]\\n            break\\n        }\\n    }\\n    if m == 0 {\\n        fmt.Println(\\\"not unique\\\")\\n    } else {\\n        fmt.Println(\\\"unique\\\")\\n        fmt.Println(m + 100)\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readline().trim());\nconst a = process.stdin.readline().trim().split(' ').map(Number);\nconst m = a.reduce((a, b) => a + b);\nconst k = m \/ 10;\nconst s = a.reduce((a, b) => a + b - k);\nif (s % 10 === 0) {\n  console.log('unique');\n  console.log(s \/ 10 + 1);\n} else {\n  console.log('not unique');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    val dp = Array(n + 1) { IntArray(n + 1) { -1 } }\n    dp[0][0] = 0\n    for (i in 1..n) {\n        for (j in 0..i) {\n            if (dp[i - 1][j] != -1) {\n                dp[i][j] = dp[i - 1][j]\n            } else {\n                for (k in 1..10) {\n                    if (i - k >= 0 && a[i] - a[i - k] <= k) {\n                        dp[i][j] = maxOf(dp[i][j], dp[i - k][j + 1] + 1)\n                    }\n                }\n            }\n        }\n    }\n    val ans = dp[n][0]\n    if (ans == -1) {\n        println(\"not unique\")\n    } else {\n        println(\"unique\")\n        println(a[ans + 1])\n    }\n}\n\"\"\"}]","PHP":"","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int m = a[0];\n    int s = 0;\n    for (int i = 1; i < n; i++) {\n        s += a[i] - m;\n    }\n    int k = s \/ 10;\n    if (s % 10 == 0) {\n        printf(\" unique \");\n        printf(\" %d \", a[n - 1] + k);\n    } else {\n        printf(\" not unique \");\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $i = 0;\nmy $j = 0;\nmy $k = 0;\nmy $l = 0;\nmy $m = 0;\nmy $p = 0;\nmy $q = 0;\nmy $r = 0;\nmy $s = 0;\nmy $t = 0;\nmy $u = 0;\nmy $v = 0;\nmy $w = 0;\nmy $x = 0;\nmy $y = 0;\nmy $z = 0;\n\nwhile ($i < $n) {\n    if ($a[$i] == $a[$i + 1]) {\n        print \"not unique\\n\";\n        exit;\n    }\n    $i++;\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($a[$i] % 100 == 0) {\n        $p = $a[$i];\n    }\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($a[$i] % 100 != 0) {\n        $q = $a[$i];\n    }\n}\n\nif ($p == $q) {\n    print \"unique\\n\";\n    print $a[$n] + $p;\n} else {\n    print \"not unique\\n\";\n}\n\nexit;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let n: usize = stdin.lines().next().unwrap().unwrap().parse().unwrap();\n    let mut stations: Vec<usize> = stdin.lines().next().unwrap().unwrap().split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut last_station: usize = 0;\n    let mut last_distance: usize = 0;\n    let mut next_station: usize = 0;\n    let mut next_distance: usize = 0;\n\n    for station in stations {\n        if station - last_station > last_distance {\n            last_distance = station - last_station;\n            last_station = station;\n        }\n    }\n\n    for station in stations {\n        if station - last_station > next_distance {\n            next_distance = station - last_station;\n            next_station = station;\n        }\n    }\n\n    if next_distance == last_distance {\n        println!(\"not unique\");\n    } else {\n        println!(\"unique\");\n        println!(\"{}\", next_station);\n    }\n}\n\"\"\"}]"}
{"title":"G. Galaxy Union","description":"In a far away galaxy there are n inhabited planets numbered with numbers from 1 to n. One day the presidents of all the n planets independently from each other came up with an idea of creating the Galaxy Union. Now they need to share this wonderful idea with their galaxymates, that\u2019s why each president is busy working out a project of negotiating with the other presidents.For negotiations between some pairs of the planets there are bidirectional communication channels, each of which is characterized with \"dial duration\" ti which, as a rule, takes several hours and exceeds the call duration greatly. Overall the galaxy has n communication channels and they unite all the planets into a uniform network. That means that it is possible to phone to any planet v from any planet u, perhaps, using some transitional planets v1, v2, ..., vm via the existing channels between u and v1, v1 and v2, ..., vm-1 and vm, vm and v. At that the dial duration from u to v will be equal to the sum of dial durations of the used channels.So, every president has to talk one by one to the presidents of all the rest n-1 planets. At that the negotiations take place strictly consecutively, and until the negotiations with a planet stop, the dial to another one does not begin. As the matter is urgent, from the different ways to call the needed planet every time the quickest one is chosen. Little time is needed to assure another president on the importance of the Galaxy Union, that\u2019s why the duration of the negotiations with each planet can be considered equal to the dial duration time for those planets. As the presidents know nothing about each other\u2019s plans, they do not take into consideration the possibility that, for example, the sought president may call himself or already know about the founding of the Galaxy Union from other sources.The governments of all the n planets asked you to work out the negotiation plans. First you are to find out for every president how much time his supposed negotiations will take.","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (3\u2264n\u2264200000) which represents the number of planets in the Galaxy and the number of communication channels equal to it. The next n lines contain three integers each ai, bi and ti (1\u2264ai,bi\u2264n,ai\u2260bi,1\u2264ti\u226410^3) that represent the numbers of planet joined by a communication channel and its \"dial duration\". There can be no more than one communication channel between a pair of planets. \n","output_spec":"In the first line output n integers \u2014 the durations of the supposed negotiations for each president. Separate the numbers by spaces.\n","notes":null,"sample_inputs":["3\n1 2 3\n2 3 2\n1 3 1\n","3\n1 2 3\n2 3 2\n1 3 5\n","4\n1 2 3\n2 3 2\n3 4 1\n4 1 4\n"],"sample_outputs":["4 5 3\n","8 5 7\n","12 8 8 8\n"],"id":"48-G","difficulty":2700,"tags":["dp","trees","two+pointers"],"src_uid":"00480885be97002dca98fe98a4238aee","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<vector<int>> a(n + 1, vector<int>(n + 1, 1000000000));\n    for (int i = 0; i < n; i++) {\n        int ai, bi, ti;\n        cin >> ai >> bi >> ti;\n        a[ai][bi] = ti;\n        a[bi][ai] = ti;\n    }\n    for (int k = 1; k <= n; k++) {\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                a[i][j] = min(a[i][j], a[i][k] + a[k][j]);\n            }\n        }\n    }\n    vector<int> ans(n + 1);\n    for (int i = 1; i <= n; i++) {\n        ans[i] = a[i][1];\n    }\n    for (int i = 1; i <= n; i++) {\n        cout << ans[i] << \" \";\n    }\n    cout << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[][] arr = new int[n][3];\n        for (int i = 0; i < n; i++) {\n            arr[i][0] = sc.nextInt();\n            arr[i][1] = sc.nextInt();\n            arr[i][2] = sc.nextInt();\n        }\n        int[] ans = new int[n];\n        for (int i = 0; i < n; i++) {\n            int min = Integer.MAX_VALUE;\n            for (int j = 0; j < n; j++) {\n                if (i != j && arr[j][0] == i) {\n                    min = Math.min(min, arr[j][2]);\n                }\n            }\n            ans[i] = min;\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.print(ans[i] + \" \");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(n):\n    ai, bi, ti = map(int, input().split())\n    graph[ai - 1].append((bi - 1, ti))\n    graph[bi - 1].append((ai - 1, ti))\n\n\ndef dijkstra(s):\n    dist = [float('inf')] * n\n    dist[s] = 0\n    q = [(0, s)]\n    while q:\n        d, u = heapq.heappop(q)\n        for v, w in graph[u]:\n            if dist[v] > d + w:\n                dist[v] = d + w\n                heapq.heappush(q, (d + w, v))\n    return dist\n\n\nans = dijkstra(0)\nprint(*ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, i, j, k, a, b, t, m[200001], dp[200001];\n    scanf(\" %d \", &n);\n    for (i = 1; i <= n; i++) {\n        scanf(\" %d %d %d \", &a, &b, &t);\n        m[a] = t;\n        m[b] = t;\n    }\n    for (i = 1; i <= n; i++) {\n        dp[i] = m[i];\n    }\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= n; j++) {\n            if (i != j && dp[j] > dp[i] + m[j]) {\n                dp[j] = dp[i] + m[j];\n            }\n        }\n    }\n    for (i = 1; i <= n; i++) {\n        printf(\" %d  \", dp[i]);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace GalaxyUnion\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = new int[n];\n            int[] b = new int[n];\n            int[] t = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                string[] s = Console.ReadLine().Split(' ');\n                a[i] = int.Parse(s[0]);\n                b[i] = int.Parse(s[1]);\n                t[i] = int.Parse(s[2]);\n            }\n            int[] d = new int[n];\n            for (int i = 0; i < n; i++)\n            {\n                d[i] = t[i];\n            }\n            for (int i = 0; i < n; i++)\n            {\n                for (int j = 0; j < n; j++)\n                {\n                    if (i != j && d[j] > d[i] + t[i * n + j])\n                    {\n                        d[j] = d[i] + t[i * n + j];\n                    }\n                }\n            }\n            for (int i = 0; i < n; i++)\n            {\n                Console.Write(d[i] + \" \");\n            }\n            Console.WriteLine();\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\ngraph = {}\n\nfor i in 1..n\n  a, b, c = gets.split.map(&:to_i)\n  graph[a] ||= []\n  graph[a] << [b, c]\n  graph[b] ||= []\n  graph[b] << [a, c]\nend\n\nans = []\n\ndef dfs(v, d)\n  ans[v] = d\n  graph[v].each do |w, t|\n    next if ans[w]\n    dfs(w, d + t)\n  end\nend\n\ndfs(1, 0)\n\nputs ans.join(' ')\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var adj [][]int\\n    for i := 0; i < n; i++ {\\n        adj = append(adj, []int{})\\n    }\\n    for i := 0; i < n; i++ {\\n        var a, b, c int\\n        fmt.Scanf(\\\"%d %d %d\\\\n\\\", &a, &b, &c)\\n        adj[a-1] = append(adj[a-1], b-1)\\n        adj[b-1] = append(adj[b-1], a-1)\\n    }\\n    var dist []int\\n    dist = make([]int, n)\\n    for i := 0; i < n; i++ {\\n        dist[i] = 1000000000\\n    }\\n    dist[0] = 0\\n    var q []int\\n    q = append(q, 0)\\n    for len(q) > 0 {\\n        u := q[0]\\n        q = q[1:]\\n        for _, v := range adj[u] {\\n            if dist[v] > dist[u] + 1 {\\n                dist[v] = dist[u] + 1\\n                q = append(q, v)\\n            }\\n        }\\n    }\\n    for i := 0; i < n; i++ {\\n        fmt.Printf(\\\"%d \\\",\\n            dist[i])\\n    }\\n    fmt.Println()\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = Number(input.split('\\n')[0]);\nconst arr = [];\nfor (let i = 0; i < n; i++) {\n    const line = input.split('\\n')[i + 1];\n    const a = Number(line.split(' ')[0]);\n    const b = Number(line.split(' ')[1]);\n    const t = Number(line.split(' ')[2]);\n    arr.push([a, b, t]);\n}\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n    for (let j = 0; j < arr.length; j++) {\n        if (arr[j][0] == i || arr[j][1] == i) {\n            dp[i] = Math.max(dp[i], dp[arr[j][0]] + arr[j][2]);\n        }\n    }\n}\nconsole.log(dp.join(' '));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val graph = Array(n) { mutableListOf<Pair<Int, Int>>() }\n    for (i in 0 until n) {\n        val (a, b, t) = readLine().split(\" \").map { it.toInt() }\n        graph[a - 1].add(Pair(b - 1, t))\n        graph[b - 1].add(Pair(a - 1, t))\n    }\n    val dp = Array(n) { Int.MAX_VALUE }\n    val queue = LinkedList<Int>()\n    queue.add(0)\n    dp[0] = 0\n    while (queue.isNotEmpty()) {\n        val v = queue.poll()\n        for (edge in graph[v]) {\n            if (dp[edge.first] > dp[v] + edge.second) {\n                dp[edge.first] = dp[v] + edge.second\n                queue.add(edge.first)\n            }\n        }\n    }\n    println(dp.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[] = explode(\" \", trim(fgets(STDIN)));\n}\n$arr = array_map(function ($a) {\n    return [$a[0], $a[1], (int)$a[2]];\n}, $arr);\n$arr = array_sort($arr, function ($a, $b) {\n    return $a[2] - $b[2];\n});\n$res = [];\nfor ($i = 0; $i < $n; $i++) {\n    $res[] = $arr[$i][2];\n}\necho implode(\" \", $res);\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n], b[n], c[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d %d \", &a[i], &b[i], &c[i]);\n    }\n    int d[n];\n    for (int i = 0; i < n; i++) {\n        d[i] = 0;\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i != j && d[j] < d[i] + c[i]) {\n                d[j] = d[i] + c[i];\n            }\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        printf(\" %d  \", d[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\n\"}]}","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let n = read_line().parse::<usize>().unwrap();\n    let mut graph = HashMap::new();\n    for _ in 0..n {\n        let line = read_line();\n        let mut iter = line.split_whitespace();\n        let a = iter.next().unwrap().parse::<usize>().unwrap();\n        let b = iter.next().unwrap().parse::<usize>().unwrap();\n        let c = iter.next().unwrap().parse::<usize>().unwrap();\n        graph.entry(a).or_insert(vec![]).push((b, c));\n        graph.entry(b).or_insert(vec![]).push((a, c));\n    }\n\n    let mut dp = vec![0; n];\n    for i in 0..n {\n        let mut queue = Vec::new();\n        queue.push((i, 0));\n        while let Some((v, d)) = queue.pop() {\n            for (w, c) in graph.get(&v).unwrap() {\n                if dp[w] > d + c {\n                    dp[w] = d + c;\n                    queue.push((w, d + c));\n                }\n            }\n        }\n    }\n\n    for i in 0..n {\n        println!(\"{}\", dp[i]);\n    }\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"A. Watermelon","description":"One hot summer day Pete and his friend Billy decided to buy a watermelon. They chose the biggest and the ripest one, in their opinion. After that the watermelon was weighed, and the scales showed w kilos. They rushed home, dying of thirst, and decided to divide the berry, however they faced a hard problem.Pete and Billy are great fans of even numbers, that's why they want to divide the watermelon in such a way that each of the two parts weighs even number of kilos, at the same time it is not obligatory that the parts are equal. The boys are extremely tired and want to start their meal as soon as possible, that's why you should help them and find out, if they can divide the watermelon in the way they want. For sure, each of them should get a part of positive weight.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The first (and the only) input line contains integer number w (1\u2264w\u2264100) \u2014 the weight of the watermelon bought by the boys.\n","output_spec":"Print YES, if the boys can divide the watermelon into two parts, each of them weighing even number of kilos; and NO in the opposite case.\n","notes":"For example, the boys can divide the watermelon into two parts of 2 and 6 kilos respectively (another variant \u2014 two parts of 4 and 4 kilos).\n","sample_inputs":["8\n"],"sample_outputs":["YES\n"],"id":"4-A","difficulty":800,"tags":["brute+force","math"],"src_uid":"230a3c4d7090401e5fa3c6b9d994cdf2","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int w;\n    cin >> w;\n    if (w % 2 == 0) {\n        cout << \"YES\\n\";\n    } else {\n        cout << \"NO\\n\";\n    }\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Watermelon {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int weight = scanner.nextInt();\n\n        if (weight % 2 == 0) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nw = int(input())\nif w % 2 == 0:\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\\nif n%2==0:print('YES')\\nelse:print('NO')\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int w = int.Parse(Console.ReadLine());\n\n        if (w % 2 == 0)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"w = gets.to_i\nif w % 2 == 0\n  puts 'YES'\nelse\n  puts 'NO'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program watermelon;\nuses crt;\nvar\n  w: integer;\nbegin\n  readln(w);\n  if (w mod 2 = 0) then\n    writeln('YES')\n  else\n    writeln('NO');\n  readln;\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var w int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &w)\\n    if w%2 == 0 {\\n        fmt.Println(\\\"YES\\\")\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"w = parseInt(process.stdin.readLine());\\nif(w%2==0){\\n  console.log('YES');\\n}else{\\n  console.log('NO');\\n}\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.4\", \"target code\": \"import java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val weight = scanner.nextInt()\n\n    if (weight % 2 == 0) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$w = (int)trim(fgets(STDIN));\\nif ($w % 2 == 0) {\\n    echo 'YES';\\n} else {\\n    echo 'NO';\\n}\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\n\nvoid main() {\n    int w;\n    scanf(\" %d \", &w);\n    if (w % 2 == 0)\n        printf(\" YES \");\n    else\n        printf(\" NO \");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $w = <STDIN>;\n\nif ($w % 2 == 0) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let w: i32 = read!();\n    if w % 2 == 0 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\"}]"}
{"title":"C. Happy Farm 5","description":"The Happy Farm 5 creators decided to invent the mechanism of cow grazing. The cows in the game are very slow and they move very slowly, it can even be considered that they stand still. However, carnivores should always be chased off them. For that a young player Vasya decided to make the shepherd run round the cows along one and the same closed path. It is very important that the cows stayed strictly inside the area limited by the path, as otherwise some cows will sooner or later be eaten. To be absolutely sure in the cows' safety, Vasya wants the path completion time to be minimum.The new game is launched for different devices, including mobile phones. That's why the developers decided to quit using the arithmetics with the floating decimal point and use only the arithmetics of integers. The cows and the shepherd in the game are represented as points on the plane with integer coordinates. The playing time is modeled by the turns. During every turn the shepherd can either stay where he stands or step in one of eight directions: horizontally, vertically, or diagonally. As the coordinates should always remain integer, then the length of a horizontal and vertical step is equal to 1, and the length of a diagonal step is equal to . The cows do not move. You have to minimize the number of moves the shepherd needs to run round the whole herd.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer N which represents the number of cows in the herd (1\u2264N\u226410^5). Each of the next N lines contains two integers Xi and Yi which represent the coordinates of one cow of (|Xi|,|Yi|\u226410^6). Several cows can stand on one point.\n","output_spec":"Print the single number \u2014 the minimum number of moves in the sought path.\n","notes":"Picture for the example test: The coordinate grid is painted grey, the coordinates axes are painted black, the cows are painted red and the sought route is painted green.\n \n","sample_inputs":["4\n1 1\n5 1\n5 3\n1 3\n"],"sample_outputs":["16\n"],"id":"50-C","difficulty":2000,"tags":["geometry"],"src_uid":"d2227a4ed6299626c2906962f91b066a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<pair<int, int>> v;\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        cin >> x >> y;\n        v.push_back(make_pair(x, y));\n    }\n    sort(v.begin(), v.end());\n    int ans = 0;\n    for (int i = 0; i < n - 1; i++) {\n        int dx = v[i + 1].first - v[i].first;\n        int dy = v[i + 1].second - v[i].second;\n        ans += max(abs(dx), abs(dy));\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            int dx = x[i] - x[0];\n            int dy = y[i] - y[0];\n            ans += Math.max(Math.abs(dx), Math.abs(dy));\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nx = [0] * 10**6\ny = [0] * 10**6\nfor i in range(n):\n    x[int(input())] += 1\n    y[int(input())] += 1\n\nans = 0\nfor i in range(10**6):\n    ans += min(x[i], y[i])\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int> x = new List<int>();\n        List<int> y = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            string[] s = Console.ReadLine().Split(' ');\n            x.Add(int.Parse(s[0]));\n            y.Add(int.Parse(s[1]));\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            int x1 = x[i];\n            int y1 = y[i];\n            for (int j = i + 1; j < n; j++)\n            {\n                int x2 = x[j];\n                int y2 = y[j];\n                int dx = Math.Abs(x1 - x2);\n                int dy = Math.Abs(y1 - y2);\n                ans = Math.Max(ans, dx + dy);\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nxs = []\nys = []\n\nfor i in 1..n do\n  x, y = gets.split.map(&:to_i)\n  xs << x\n  ys << y\nend\n\nxs.sort!\nys.sort!\n\nx_min = xs.first\nx_max = xs.last\ny_min = ys.first\ny_max = ys.last\n\nx_len = x_max - x_min\ny_len = y_max - y_min\n\nputs x_len * y_len + 2 * (x_len + y_len)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Cows;\nuses SysUtils;\nvar\n  n, i, x, y, x1, y1, x2, y2, x3, y3, x4, y4, x5, y5, x6, y6, x7, y7, x8, y8,\n    a, b, c, d, e, f, g, h, k, l, m, n1, n2, n3, n4, n5, n6, n7, n8,\n    s, s1, s2, s3, s4, s5, s6, s7, s8: integer;\nbegin\n  readln(n);\n  for i := 1 to n do\n  begin\n    readln(x, y);\n    if x = 1 then\n    begin\n      x1 := x;\n      y1 := y;\n    end;\n    if x = 5 then\n    begin\n      x2 := x;\n      y2 := y;\n    end;\n    if y = 1 then\n    begin\n      x3 := x;\n      y3 := y;\n    end;\n    if y = 5 then\n    begin\n      x4 := x;\n      y4 := y;\n    end;\n  end;\n  x5 := x1 + x2 - x3 - x4;\n  y5 := y1 + y2 - y3 - y4;\n  x6 := x1 - x2 + x3 - x4;\n  y6 := y1 - y2 + y3 - y4;\n  x7 := x1 + x2 + x3 - x4;\n  y7 := y1 + y2 + y3 - y4;\n  x8 := x1 - x2 - x3 + x4;\n  y8 := y1 - y2 - y3 + y4;\n  a := abs(x1 - x2);\n  b := abs(y1 - y2);\n  c := abs(x1 - x3);\n  d := abs(y1 - y3);\n  e := abs(x1 - x4);\n  f := abs(y1 - y4);\n  g := abs(x5 - x6);\n  h := abs(y5 - y6);\n  k := abs(x7 - x8);\n  l := abs(y7 - y8);\n  m := abs(x1 - x5);\n  n1 := abs(y1 - y5);\n  n2 := abs(x1 - x7);\n  n3 := abs(y1 - y7);\n  n4 := abs(x1 - x8);\n  n5 := abs(y1 - y8);\n  n6 := abs(x5 - x7);\n  n7 := abs(y5 - y7);\n  n8 := abs(x5 - x8);\n  s := a + b + c + d + e + f + g + h + k + l + m + n1 + n2 + n3 + n4 + n5 + n6 + n7 + n8;\n  writeln(s);\nend.\\n\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var x, y int\\n    var xs, ys []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scan(&x, &y)\\n        xs = append(xs, x)\\n        ys = append(ys, y)\\n    }\\n    xs = append(xs, xs[0])\\n    ys = append(ys, ys[0])\\n    ans := 0\\n    for i := 0; i < n; i++ {\\n        ans += abs(xs[i+1]-xs[i]) + abs(ys[i+1]-ys[i])\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc abs(x int) int {\\n    if x < 0 {\\n        return -x\\n    } else {\\n        return x\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst x = [];\nconst y = [];\nfor (let i = 1; i <= n; i++) {\n    const [a, b] = input[i].split(' ').map(Number);\n    x.push(a);\n    y.push(b);\n}\nconst x_min = Math.min(...x);\nconst x_max = Math.max(...x);\nconst y_min = Math.min(...y);\nconst y_max = Math.max(...y);\nconst dx = x_max - x_min;\nconst dy = y_max - y_min;\nconst ans = dx + dy + 2 * Math.min(dx, dy);\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val xs = mutableListOf<Int>()\n    val ys = mutableListOf<Int>()\n    for (i in 0 until n) {\n        val (x, y) = readLine()!!.split(\" \").map { it.toInt() }\n        xs.add(x)\n        ys.add(y)\n    }\n    val xs = xs.sorted()\n    val ys = ys.sorted()\n    val x = xs.size\n    val y = ys.size\n    val ans = 2 * (x - 1) + 2 * (y - 1)\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$x = [];\n$y = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a = explode(' ', trim(fgets(STDIN)));\n    $x[] = (int)$a[0];\n    $y[] = (int)$a[1];\n}\n$x_min = min($x);\n$x_max = max($x);\n$y_min = min($y);\n$y_max = max($y);\n$ans = 0;\nfor ($i = $x_min; $i <= $x_max; $i++) {\n    for ($j = $y_min; $j <= $y_max; $j++) {\n        $cnt = 0;\n        for ($k = 0; $k < $n; $k++) {\n            $dx = $x[$k] - $i;\n            $dy = $y[$k] - $j;\n            $cnt += abs($dx) + abs($dy);\n        }\n        $ans = max($ans, $cnt);\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int[2][] a = new int[2][](n);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &a[i][0], &a[i][1]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j)\n                continue;\n            int dx = a[i][0] - a[j][0];\n            int dy = a[i][1] - a[j][1];\n            int d = max(abs(dx), abs(dy));\n            ans = max(ans, d);\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <STDIN>;\\nmy @x = ();\\nmy @y = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my @t = split(' ', <STDIN>);\\n    push(@x, $t[0]);\\n    push(@y, $t[1]);\\n}\\n\\nmy $min = 1000000000000000000;\\nfor (my $i = 0; $i < $n; $i++) {\\n    for (my $j = 0; $j < $n; $j++) {\\n        if ($i != $j) {\\n            my $d = abs($x[$i] - $x[$j]) + abs($y[$i] - $y[$j]);\\n            if ($d < $min) {\\n                $min = $d;\\n            }\\n        }\\n    }\\n}\\n\\nprint $min;\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n: usize = lines.next().unwrap().unwrap().parse().unwrap();\n\n    let mut xs: Vec<i64> = Vec::new();\n    let mut ys: Vec<i64> = Vec::new();\n\n    for _ in 0..n {\n        let line = lines.next().unwrap().unwrap();\n        let mut iter = line.split_whitespace();\n        let x: i64 = iter.next().unwrap().parse().unwrap();\n        let y: i64 = iter.next().unwrap().parse().unwrap();\n        xs.push(x);\n        ys.push(y);\n    }\n\n    let mut min_x = xs.iter().min().unwrap();\n    let mut max_x = xs.iter().max().unwrap();\n    let mut min_y = ys.iter().min().unwrap();\n    let mut max_y = ys.iter().max().unwrap();\n\n    let mut ans = 0;\n\n    for i in 0..n {\n        let x = xs[i];\n        let y = ys[i];\n\n        ans += (x - min_x).abs() + (y - min_y).abs();\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Square Equation Roots","description":"A schoolboy Petya studies square equations. The equations that are included in the school curriculum, usually look simple: x^2+2bx+c=0 where b, c are natural numbers.Petya noticed that some equations have two real roots, some of them have only one root and some equations don't have real roots at all. Moreover it turned out that several different square equations can have a common root.Petya is interested in how many different real roots have all the equations of the type described above for all the possible pairs of numbers b and c such that 1\u2264b\u2264n, 1\u2264c\u2264m. Help Petya find that number.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The single line contains two integers n and m. (1\u2264n,m\u22645000000).\n","output_spec":"Print a single number which is the number of real roots of the described set of equations.\n","notes":"In the second test from the statement the following equations are analysed:\n b=1, c=1: x^2+2x+1=0; The root is x=-1\n b=1, c=2: x^2+2x+2=0; No roots\n Overall there's one root\nIn the second test the following equations are analysed:\n b=1, c=1: x^2+2x+1=0; The root is x=-1\n b=1, c=2: x^2+2x+2=0; No roots\n b=1, c=3: x^2+2x+3=0; No roots\n b=2, c=1: x^2+4x+1=0; The roots are \n b=2, c=2: x^2+4x+2=0; The roots are \n b=2, c=3: x^2+4x+3=0; The roots are x1=-3,x2=-1\n b=3, c=1: x^2+6x+1=0; The roots are \n b=3, c=2: x^2+6x+2=0; The roots are \n b=3, c=3: x^2+6x+3=0; The roots are  Overall there are 13 roots and as the root -1 is repeated twice, that means there are 12 different roots.\n","sample_inputs":["3 3\n","1 2\n"],"sample_outputs":["12\n","1\n"],"id":"50-E","difficulty":2300,"tags":["math"],"src_uid":"aad7ebf4fa919fae78bfc878e47e483c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, m;\n    cin >> n >> m;\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            int a = i * i - j * j;\n            if (a > 0) {\n                ans++;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                int a = i * i - j * j;\n                if (a >= 0) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\nans = 0\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if i * i - 4 * j >= 0:\n            ans += 2\n        else:\n            ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, m, i, j, k, count = 0;\n    scanf(\" %d %d \", &n, &m);\n    for (i = 1; i <= n; i++) {\n        for (j = 1; j <= m; j++) {\n            for (k = 1; k <= m; k++) {\n                if ((i * i + 2 * i * j + j * j) == (k * k)) {\n                    count++;\n                }\n            }\n        }\n    }\n    printf(\" %d \", count);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n\n        var roots = new HashSet<int>();\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 1; j <= m; j++)\n            {\n                var a = i * i - j * j;\n                var b = 2 * i * j;\n                var c = i * i + j * j;\n\n                var discriminant = b * b - 4 * a * c;\n                if (discriminant >= 0)\n                {\n                    roots.Add(-b \/ (2 * a));\n                    roots.Add((-b - Math.Sqrt(discriminant)) \/ (2 * a));\n                }\n            }\n        }\n\n        Console.WriteLine(roots.Count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m=map(int,input().split())\nprint(n*m+1)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program SquareEquations;\nuses SysUtils;\n\nvar\n  n, m, i, j, k, count: Integer;\n\nbegin\n  Readln(n, m);\n  count := 0;\n  for i := 1 to n do\n    for j := 1 to m do\n      for k := 1 to m do\n        if (i * i + 2 * i * j + j * j) mod m = 0 then\n          inc(count);\n  Writeln(count);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d %d\\\", &n, &m)\\n    var count int\\n    for i := 1; i <= n; i++ {\\n        for j := 1; j <= m; j++ {\\n            if i*i - 2*i*j + j*j == 0 {\\n                count++\\n            }\\n        }\\n    }\\n    fmt.Println(count)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, m] = line.split(' ').map(Number);\n  const ans = 2 * n * m + 1;\n  console.log(ans);\n  process.exit();\n});\n\nrl.on('close', () => {});\n\nrl.on('error', (err) => {\n  console.error(err);\n  process.exit(1);\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val m = sc.nextInt()\n    val a = IntArray(m + 1)\n    val b = IntArray(m + 1)\n    val c = IntArray(m + 1)\n    var ans = 0\n    for (i in 1..m) {\n        a[i] = sc.nextInt()\n        b[i] = sc.nextInt()\n        c[i] = sc.nextInt()\n    }\n    for (i in 1..m) {\n        for (j in i + 1..m) {\n            if (a[i] == a[j] && b[i] == b[j] && c[i] == c[j]) {\n                ans++\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$count = 0;\nfor ($i = 1; $i <= $n; $i++) {\n    for ($j = 1; $j <= $m; $j++) {\n        $a = $i * $i + 2 * $i * $j + $j * $j;\n        $b = sqrt($a);\n        if ($b == floor($b)) {\n            $count++;\n        }\n    }\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.math;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            int a = 2 * i;\n            int b = i * i + j * j;\n            int c = i * j;\n            if (a * a - 4 * b * c >= 0) {\n                count++;\n            }\n        }\n    }\n    printf(\" %d \", count);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\n\nchomp(my $input = <STDIN>);\n\n($n, $m) = split(' ', $input);\n\nmy $count = 0;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        my $a = $i * $i;\n        my $b = 2 * $i * $j;\n        my $c = $i * $i + $j * $j;\n\n        if ($a - $b - $c == 0) {\n            $count++;\n        }\n    }\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut n = 0;\n    let mut m = 0;\n\n    for c in line.chars() {\n        if c == ' ' {\n            continue;\n        }\n\n        if c == 'n' {\n            n = n * 10 + (c as u8 - '0' as u8);\n        } else {\n            m = m * 10 + (c as u8 - '0' as u8);\n        }\n    }\n\n    let mut count = 0;\n\n    for i in 1..=n {\n        for j in 1..=m {\n            let a = i * i + 2 * i * j + j * j;\n\n            if a % 4 == 0 {\n                count += 2;\n            } else if a % 4 == 1 {\n                count += 1;\n            }\n        }\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", count)).unwrap();\n}\n\"\"\"}]"}
{"title":"D. Geometrical problem","description":"Polycarp loves geometric progressions \u2014 he collects them. However, as such progressions occur very rarely, he also loves the sequences of numbers where it is enough to delete a single element to get a geometric progression.In this task we shall define geometric progressions as finite sequences of numbers a1,a2,...,ak, where ai=c\u00b7b^i-1 for some real numbers c and b. For example, the sequences [2, -4, 8], [0, 0, 0, 0], [199] are geometric progressions and [0, 1, 2, 3] is not.Recently Polycarp has found a sequence and he can't classify it. Help him to do it. Determine whether it is a geometric progression. If it is not, check if it can become a geometric progression if an element is deleted from it.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (1\u2264n\u226410^5) \u2014 the number of elements in the given sequence. The second line contains the given sequence. The numbers are space-separated. All the elements of the given sequence are integers and their absolute value does not exceed 10^4.\n","output_spec":"Print 0, if the given sequence is a geometric progression. Otherwise, check if it is possible to make the sequence a geometric progression by deleting a single element. If it is possible, print 1. If it is impossible, print 2.\n","notes":null,"sample_inputs":["4\n3 6 12 24\n","4\n-8 -16 24 -32\n","4\n0 1 2 3\n"],"sample_outputs":["0\n","1\n","2\n"],"id":"51-D","difficulty":2200,"tags":["implementation"],"src_uid":"a32db37cb2ebe8945a4c2f32fa2d7fc8","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int d = a[1] \/ a[0];\n    for (int i = 2; i < n; i++) {\n        if (a[i] \/ a[i - 1] != d) {\n            cout << 2 << endl;\n            return 0;\n        }\n    }\n    cout << 0 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int d = a[1] \/ a[0];\n        for (int i = 2; i < n; i++) {\n            if (a[i] \/ a[i - 1] != d) {\n                System.out.println(2);\n                return;\n            }\n        }\n        System.out.println(0);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nif n == 1:\n    print(0)\nelif n == 2:\n    if a[0] == a[1]:\n        print(0)\n    else:\n        print(2)\nelse:\n    b = a[1] \/ a[0]\n    for i in range(2, n):\n        if a[i] \/ a[i - 1] != b:\n            print(2)\n            break\n    else:\n        print(0)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, i, j, a, b, c, d, e, f;\n    scanf(\" %d \", &n);\n    scanf(\" %d \", &a);\n    for (i = 1; i < n; i++) {\n        scanf(\" %d \", &b);\n        if (b % a == 0) {\n            c = b \/ a;\n        } else {\n            printf(\" 2 \");\n            return 0;\n        }\n        for (j = i + 1; j < n; j++) {\n            scanf(\" %d \", &d);\n            if (d % c == 0) {\n                e = d \/ c;\n            } else {\n                printf(\" 2 \");\n                return 0;\n            }\n            for (f = j + 1; f < n; f++) {\n                scanf(\" %d \", &f);\n                if (f % e == 0) {\n                    printf(\" 0 \");\n                    return 0;\n                } else {\n                    printf(\" 1 \");\n                    return 0;\n                }\n            }\n        }\n    }\n    printf(\" 2 \");\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string[] s = Console.ReadLine().Split(' ');\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(s[i]);\n        }\n        int g = a[1] \/ a[0];\n        for (int i = 2; i < n; i++)\n        {\n            if (a[i] \/ a[i - 1] != g)\n            {\n                Console.WriteLine(2);\n                return;\n            }\n        }\n        Console.WriteLine(0);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nif a.uniq.size == 1\n  puts 0\nelse\n  a.each_with_index do |e, i|\n    if i == 0\n      next\n    end\n    if a[i] \/ a[i - 1] != a[i - 1] \/ a[i - 2]\n      puts 2\n      exit\n    end\n  end\n  puts 1\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram GeometricProgression;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, a, b, c, d, e, f, g, h, t: Integer;\n  s: String;\n\nbegin\n  Readln(n);\n  Readln(s);\n  a := StrToInt(Copy(s, 1, 1));\n  b := StrToInt(Copy(s, 2, 1));\n  c := StrToInt(Copy(s, 3, 1));\n  if (a = b) and (b = c) then\n    Writeln(0)\n  else if (a = b) and (b <> c) then\n    Writeln(1)\n  else if (a <> b) and (b = c) then\n    Writeln(1)\n  else if (a <> b) and (b <> c) then\n  begin\n    for i := 1 to n - 1 do\n    begin\n      for j := i + 1 to n do\n      begin\n        if (StrToInt(Copy(s, i, 1)) = StrToInt(Copy(s, j, 1))) then\n        begin\n          Writeln(1);\n          Exit;\n        end;\n      end;\n    end;\n    Writeln(2);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scan(&n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scan(&x)\\n        a = append(a, x)\\n    }\\n    var flag = 0\\n    for i := 1; i < n; i++ {\\n        if a[i]%a[i-1] != 0 {\\n            flag = 1\\n            break\\n        }\\n    }\\n    if flag == 0 {\\n        fmt.Println(0)\\n    } else {\\n        var flag2 = 0\\n        for i := 1; i < n-1; i++ {\\n            if a[i]%a[i-1] != 0 && a[i]%a[i+1] != 0 {\\n                flag2 = 1\\n                break\\n            }\\n        }\\n        if flag2 == 1 {\\n            fmt.Println(1)\\n        } else {\\n            fmt.Println(2)\\n        }\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst b = a[1] \/ a[0];\nfor (let i = 2; i < n; i++) {\n  if (a[i] \/ a[i - 1] !== b) {\n    console.log(2);\n    break;\n  }\n}\nif (i === n) {\n  console.log(0);\n} else {\n  console.log(1);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine().toInt()\n    val arr = readLine().split(\" \").map { it.toInt() }\n    val a = arr[0]\n    val b = arr[1] - arr[0]\n    for (i in 2 until n) {\n        if (arr[i] - arr[i - 1] != b) {\n            println(2)\n            return\n        }\n    }\n    println(if (n == 1) 0 else 1)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$diff = $arr[1] \/ $arr[0];\nfor ($i = 2; $i < $n; $i++) {\n    if ($arr[$i] \/ $arr[$i - 1] != $diff) {\n        echo 2 . PHP_EOL;\n        exit;\n    }\n}\necho 0 . PHP_EOL;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int i = 0;\n    int j = 1;\n    int k = 2;\n    int flag = 0;\n    while (j < n) {\n        if (a[j] == a[i] * 2) {\n            i = j;\n            j++;\n        } else if (a[j] == a[i] * 3) {\n            i = j;\n            j++;\n        } else if (a[j] == a[i] * 4) {\n            i = j;\n            j++;\n        } else {\n            flag = 1;\n            break;\n        }\n    }\n    if (flag == 0) {\n        printf(\" 0 \");\n    } else {\n        if (j == n) {\n            printf(\" 2 \");\n        } else {\n            printf(\" 1 \");\n        }\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $i = 0;\nmy $j = 1;\nmy $k = 2;\nmy $flag = 0;\nmy $flag1 = 0;\nmy $flag2 = 0;\n\nwhile ($i < $n - 1) {\n    if ($a[$i] == $a[$j] && $a[$j] == $a[$k]) {\n        $flag = 1;\n    }\n    if ($a[$i] != $a[$j] && $a[$j] != $a[$k] && $a[$k] != $a[$i]) {\n        $flag1 = 1;\n    }\n    if ($a[$i] != $a[$j] && $a[$j] != $a[$k] && $a[$k] == $a[$i]) {\n        $flag2 = 1;\n    }\n    $i++;\n    $j++;\n    $k++;\n}\n\nif ($flag == 1) {\n    print 0;\n} elsif ($flag1 == 1) {\n    if ($flag2 == 1) {\n        print 2;\n    } else {\n        print 1;\n    }\n} else {\n    print 2;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut a: Vec<i32> = stdin.read_line().unwrap().trim().split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut b: i32 = a[1] \/ a[0];\n    for i in 2..n {\n        if a[i] \/ a[i - 1] != b {\n            b = -1;\n            break;\n        }\n    }\n\n    if b == -1 {\n        if n == 2 {\n            stdout.write_all(b\"2\\n\").unwrap();\n        } else {\n            stdout.write_all(b\"1\\n\").unwrap();\n        }\n    } else {\n        stdout.write_all(b\"0\\n\").unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"F. Caterpillar","description":"An undirected graph is called a caterpillar if it is a connected graph without cycles and it has such a path p that any vertex is located at a distance of at most 1 from the path p. The caterpillar can contain loops (edges from a vertex to itself) but cannot contain multiple (parallel) edges.The picture contains an example of a caterpillar:  You are given an undirected graph G. You are allowed to do a merging operations, each such operation merges two vertices into one vertex. For that two any vertices a and b (a\u2260b) are chosen. These verteces are deleted together with their edges (which are incident to at least one of the vertices a or b) but a new vertex w is added together with edges (x,w) for each edge (a,w) and\/or (b,w). If there was the edge (a,b) it transforms to the loop (w,w). The resulting graph (after the merging operation) may contain multiple (parallel) edges between pairs of vertices and loops. Let us note that this operation decreases the number of vertices of graph by 1 but leaves the number of edges in the graph unchanged.The merging operation can be informally described as a unity of two vertices of the graph into one with the natural transformation of the graph edges.You may apply this operation consecutively and make the given graph to be a caterpillar. Write a program that will print the minimal number of merging operations required to make the given graph a caterpillar.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a pair of integers n, m (1\u2264n\u22642000;0\u2264m\u226410^5), where n represents the number of vertices in the graph and m is the number of edges in it. Then the following m lines contain edge descriptions, one edge description per line. Every line contains a pair of integers ai,bi (1\u2264ai,bi\u2264n;ai\u2260bi), ai,bi which represent the indices of the vertices connected by the edge. The vertices are numbered from 1 to n. In the given graph it will be no more than one edge between any pair of vertices. The given graph is not necessarily connected.\n","output_spec":"Print the minimal required number of operations.\n","notes":null,"sample_inputs":["4 4\n1 2\n2 3\n3 4\n4 2\n","6 3\n1 2\n3 4\n5 6\n","7 6\n1 2\n2 3\n1 4\n4 5\n1 6\n6 7\n"],"sample_outputs":["2\n","2\n","1\n"],"id":"51-F","difficulty":2800,"tags":["dfs+and+similar","dp","graphs","trees"],"src_uid":"8241a66c8be5229ed71bf30dd8eecbc1","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n + 1);\n    for (int i = 0; i < m; i++) {\n        int a, b;\n        cin >> a >> b;\n        g[a].push_back(b);\n        g[b].push_back(a);\n    }\n\n    vector<int> d(n + 1, -1);\n    vector<int> p(n + 1, -1);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        if (d[i] == -1) {\n            d[i] = 0;\n            p[i] = i;\n            queue<int> q;\n            q.push(i);\n            while (!q.empty()) {\n                int u = q.front();\n                q.pop();\n                for (int v : g[u]) {\n                    if (d[v] == -1) {\n                        d[v] = d[u] + 1;\n                        p[v] = u;\n                        q.push(v);\n                    }\n                }\n            }\n            ans = max(ans, d[i]);\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[n + 1];\n        int[] b = new int[n + 1];\n        for (int i = 0; i < m; i++) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            a[x]++;\n            b[y]++;\n        }\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            if (a[i] == 1 && b[i] == 1) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ng = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    g[a - 1].append(b - 1)\n    g[b - 1].append(a - 1)\n\n\ndef dfs(v, p):\n    for u in g[v]:\n        if u != p:\n            dfs(u, v)\n\n\nans = 0\nfor i in range(n):\n    if len(g[i]) == 1:\n        ans += 1\n        dfs(i, -1)\n\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var graph = new List<List<int>>();\n        for (int i = 0; i < n; i++)\n        {\n            graph.Add(new List<int>());\n        }\n        for (int i = 0; i < m; i++)\n        {\n            var input = Console.ReadLine().Split(' ');\n            var a = int.Parse(input[0]);\n            var b = int.Parse(input[1]);\n            graph[a - 1].Add(b - 1);\n            graph[b - 1].Add(a - 1);\n        }\n        var ans = 0;\n        var visited = new bool[n];\n        for (int i = 0; i < n; i++)\n        {\n            if (!visited[i])\n            {\n                ans++;\n                var queue = new Queue<int>();\n                queue.Enqueue(i);\n                visited[i] = true;\n                while (queue.Count > 0)\n                {\n                    var v = queue.Dequeue();\n                    foreach (var u in graph[v])\n                    {\n                        if (!visited[u])\n                        {\n                            queue.Enqueue(u);\n                            visited[u] = true;\n                        }\n                    }\n                }\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\ng = {}\n\nm.times do\n  a, b = gets.split.map(&:to_i)\n  g[a] ||= []\n  g[a] << b\n  g[b] ||= []\n  g[b] << a\nend\n\nans = 0\n\nwhile g.size > 1\n  a = g.keys.first\n  g.delete(a)\n  b = g.keys.first\n  g.delete(b)\n\n  g.each do |k, v|\n    v.delete(a)\n    v.delete(b)\n    if v.size == 1\n      g[k] = v.first\n    end\n  end\n\n  ans += 1\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    g := make([][]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n        g[a] = append(g[a], b)\\n        g[b] = append(g[b], a)\\n    }\\n    ans := 0\\n    for i := 1; i <= n; i++ {\\n        if len(g[i]) > 2 {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst m = Number(input[0].split(' ')[1]);\nconst graph = new Map();\nfor (let i = 0; i < m; i++) {\n    const [a, b] = input[i + 1].split(' ').map(Number);\n    if (!graph.has(a)) {\n        graph.set(a, []);\n    }\n    if (!graph.has(b)) {\n        graph.set(b, []);\n    }\n    graph.get(a).push(b);\n    graph.get(b).push(a);\n}\nconst visited = new Set();\nconst queue = [1];\nvisited.add(1);\nlet ans = 0;\nwhile (queue.length) {\n    const v = queue.shift();\n    for (const u of graph.get(v)) {\n        if (!visited.has(u)) {\n            queue.push(u);\n            visited.add(u);\n            ans++;\n        }\n    }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a - 1].add(b - 1)\n        graph[b - 1].add(a - 1)\n    }\n\n    val visited = BooleanArray(n)\n    val queue = LinkedList<Int>()\n    queue.add(0)\n    visited[0] = true\n    var count = 0\n    while (queue.isNotEmpty()) {\n        val v = queue.poll()\n        for (w in graph[v]) {\n            if (!visited[w]) {\n                queue.add(w)\n                visited[w] = true\n                count++\n            }\n        }\n    }\n\n    println(n - count)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a, $b = explode(' ', trim(fgets(STDIN)));\n    $graph[$a][] = $b;\n    $graph[$b][] = $a;\n}\n$ans = 0;\n$visited = [];\n$queue = [$n];\nwhile (!empty($queue)) {\n    $v = array_shift($queue);\n    $visited[$v] = true;\n    $ans++;\n    foreach ($graph[$v] as $w) {\n        if (!isset($visited[$w])) {\n            $queue[] = $w;\n        }\n    }\n}\necho $ans - 1;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nstruct Edge {\n    int a;\n    int b;\n}\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    auto edges = new Edge[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d \", &edges[i].a, &edges[i].b);\n    }\n\n    auto graph = new int[n];\n    for (int i = 0; i < n; i++) {\n        graph[i] = i;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        if (graph[edges[i].a] != graph[edges[i].b]) {\n            int a = graph[edges[i].a];\n            int b = graph[edges[i].b];\n            for (int j = 0; j < n; j++) {\n                if (graph[j] == a || graph[j] == b) {\n                    graph[j] = a;\n                }\n            }\n            ans++;\n        }\n    }\n\n    printf(\" %d\\n \", ans);\n\n    return 0;\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m;\\n\\nwhile (<>) {\\n    chomp;\\n    my @a = split \/\\s+\/;\\n    $n = $a[0];\\n    $m = $a[1];\\n}\\n\\nmy @g = ();\\n\\nfor (my $i = 0; $i < $m; $i++) {\\n    my @a = split \/\\s+\/, <>;\\n    $g[$a[0] - 1][$a[1] - 1] = 1;\\n    $g[$a[1] - 1][$a[0] - 1] = 1;\\n}\\n\\nmy $ans = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $cnt = 0;\\n    for (my $j = 0; $j < $n; $j++) {\\n        if ($g[$i][$j] == 1) {\\n            $cnt++;\\n        }\\n    }\\n    if ($cnt > 2) {\\n        $ans++;\\n    }\\n}\\n\\nprint $ans;\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n        graph.entry(a).or_insert(Vec::new()).push(b);\n        graph.entry(b).or_insert(Vec::new()).push(a);\n    }\n\n    let mut ans = 0;\n    let mut visited = vec![false; n as usize];\n    for i in 0..n {\n        if !visited[i] {\n            ans += 1;\n            visited[i] = true;\n            let mut queue = vec![i];\n            while let Some(v) = queue.pop() {\n                for &w in &graph[&v] {\n                    if !visited[w as usize] {\n                        queue.push(w as usize);\n                        visited[w as usize] = true;\n                    }\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"E. Dead Ends","description":"Life in Bertown has become hard. The city has too many roads and the government spends too much to maintain them. There are n junctions and m two way roads, at which one can get from each junction to any other one. The mayor wants to close some roads so that the number of roads left totaled to n-1 roads and it were still possible to get from each junction to any other one. Besides, the mayor is concerned with the number of dead ends which are the junctions from which only one road goes. There shouldn't be too many or too few junctions. Having discussed the problem, the mayor and his assistants decided that after the roads are closed, the road map should contain exactly k dead ends. Your task is to count the number of different ways of closing the roads at which the following conditions are met:   There are exactly n-1 roads left.  It is possible to get from each junction to any other one.  There are exactly k dead ends on the resulting map. Two ways are considered different if there is a road that is closed in the first way, and is open in the second one.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three integers n, m and k (3\u2264n\u226410,n-1\u2264m\u2264n\u00b7(n-1)\/2,2\u2264k\u2264n-1) which represent the number of junctions, roads and dead ends correspondingly. Then follow m lines each containing two different integers v1 and v2 (1\u2264v1,v2\u2264n,v1\u2260v2) which represent the number of junctions connected by another road. There can be no more than one road between every pair of junctions. The junctions are numbered with integers from 1 to n. It is guaranteed that it is possible to get from each junction to any other one along the original roads.\n","output_spec":"Print a single number \u2014 the required number of ways.\n","notes":null,"sample_inputs":["3 3 2\n1 2\n2 3\n1 3\n","4 6 2\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n","4 6 3\n1 2\n2 3\n3 4\n4 1\n1 3\n2 4\n"],"sample_outputs":["3\n","12\n","4\n"],"id":"53-E","difficulty":2500,"tags":["bitmasks","dp"],"src_uid":"8087605a8f316150372cc4627f26231d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    vector<vector<int>> g(n);\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        g[u - 1].push_back(v - 1);\n        g[v - 1].push_back(u - 1);\n    }\n\n    vector<int> deg(n, 0);\n    for (int i = 0; i < n; i++) {\n        deg[i] = g[i].size();\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j) {\n                continue;\n            }\n\n            int d = deg[i] + deg[j] - 2;\n            if (d == k) {\n                ans++;\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, m, k;\n        n = sc.nextInt();\n        m = sc.nextInt();\n        k = sc.nextInt();\n        int[] a = new int[n + 1];\n        for (int i = 0; i < m; i++) {\n            int v1 = sc.nextInt();\n            int v2 = sc.nextInt();\n            a[v1]++;\n            a[v2]++;\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == k) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,k=map(int,input().split())\na=[[0]*(n+1) for i in range(n+1)]\nfor i in range(m):\n    v1,v2=map(int,input().split())\n    a[v1][v2]=1\n    a[v2][v1]=1\n\ndef dfs(i,j,s):\n    if i==j:\n        return 1\n    if s==k:\n        return 0\n    if a[i][j]==0:\n        return 0\n    return dfs(i,j-1,s+1)+dfs(i,j+1,s+1)\n\nprint(dfs(1,n,0))\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, m, k = int.Parse(Console.ReadLine().Split(' ')[0]), int.Parse(Console.ReadLine().Split(' ')[1]), int.Parse(Console.ReadLine().Split(' ')[2]);\n        var g = new List<List<int>>();\n        for (int i = 0; i < n; i++)\n            g.Add(new List<int>());\n        for (int i = 0; i < m; i++)\n        {\n            var v = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n            g[v[0] - 1].Add(v[1] - 1);\n            g[v[1] - 1].Add(v[0] - 1);\n        }\n        var ans = 0;\n        for (int i = 0; i < (1 << n); i++)\n        {\n            var cnt = 0;\n            var dead = 0;\n            for (int j = 0; j < n; j++)\n            {\n                if ((i >> j) & 1)\n                {\n                    cnt++;\n                    for (int k = 0; k < g[j].Count; k++)\n                        if ((i >> g[j][k]) & 1)\n                            dead++;\n                }\n            }\n            if (cnt == n - 1 && dead == k)\n                ans++;\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  n, m, k, i, j, a, b, c, d, e, f, g, h, t, s, p, q, r, ans: integer;\n  \nbegin\n  readln(n, m, k);\n  for i := 1 to m do\n  begin\n    readln(a, b);\n    if a > b then\n      swap(a, b);\n  end;\n  \n  for i := 1 to n do\n  begin\n    for j := 1 to n do\n    begin\n      if i = j then\n        continue;\n      if (i < j) and (a = i and b = j) or (a = j and b = i) then\n        continue;\n      if (i < j) and (a = i and b = j + 1) or (a = j + 1 and b = i) then\n        continue;\n      if (i < j) and (a = i + 1 and b = j) or (a = j and b = i + 1) then\n        continue;\n      if (i < j) and (a = i + 1 and b = j + 1) or (a = j + 1 and b = i + 1) then\n        continue;\n    end;\n  end;\n  \n  s := 0;\n  for i := 1 to n do\n  begin\n    for j := 1 to n do\n    begin\n      if i = j then\n        continue;\n      if (i < j) and (a = i and b = j) or (a = j and b = i) then\n        continue;\n      if (i < j) and (a = i and b = j + 1) or (a = j + 1 and b = i) then\n        continue;\n      if (i < j) and (a = i + 1 and b = j) or (a = j and b = i + 1) then\n        continue;\n      if (i < j) and (a = i + 1 and b = j + 1) or (a = j + 1 and b = i + 1) then\n        continue;\n      s := s + 1;\n    end;\n  end;\n  \n  ans := 0;\n  for i := 0 to s do\n  begin\n    for j := 0 to s - i do\n    begin\n      for k := 0 to s - i - j do\n      begin\n        for l := 0 to s - i - j - k do\n        begin\n          for m := 0 to s - i - j - k - l do\n          begin\n            for n := 0 to s - i - j - k - l - m do\n            begin\n              for o := 0 to s - i - j - k - l - m - n do\n              begin\n                for p := 0 to s - i - j - k - l - m - n - o do\n                begin\n                  for q := 0 to s - i - j - k - l - m - n - o - p do\n                  begin\n                    for r := 0 to s - i - j - k - l - m - n - o - p - q do\n                    begin\n                      if (i + j + k + l + m + n + o + p + q + r = m) and (i + j + k + l + m + n + o + p + q + r = k) then\n                        ans := ans + 1;\n                    end;\n                  end;\n                end;\n              end;\n            end;\n          end;\n        end;\n      end;\n    end;\n  end;\n  \n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, m, k int\n\tfmt.Scan(&n, &m, &k)\n\tg := make([][]int, n)\n\tfor i := 0; i < m; i++ {\n\t\tvar a, b int\n\t\tfmt.Scan(&a, &b)\n\t\tg[a-1] = append(g[a-1], b-1)\n\t\tg[b-1] = append(g[b-1], a-1)\n\t}\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 0; j < len(g[i]); j++ {\n\t\t\tif len(g[i]) == 1 {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tg[i] = append(g[i][:j], g[i][j+1:]...)\n\t\t\tif len(g[i]) == k {\n\t\t\t\tans++\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nn, m, k = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    v1, v2 = map(int, input().split())\n    graph[v1-1].append(v2-1)\n    graph[v2-1].append(v1-1)\n\ndef dfs(v, visited):\n    visited[v] = True\n    for u in graph[v]:\n        if not visited[u]:\n            dfs(u, visited)\n\ndef count(visited):\n    count = 0\n    for i in range(n):\n        if not visited[i]:\n            count += 1\n    return count\n\nvisited = [False] * n\ndfs(0, visited)\n\nans = 0\nfor i in range(n):\n    if not visited[i]:\n        ans += count(visited)\n\nprint(ans)\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m, k) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        graph[a - 1].add(b - 1)\n        graph[b - 1].add(a - 1)\n    }\n    val ans = dfs(graph, 0, 0, k)\n    println(ans)\n}\n\nfun dfs(graph: Array<MutableList<Int>>, v: Int, count: Int, k: Int): Int {\n    if (count == k) {\n        return 1\n    }\n    var ans = 0\n    for (i in graph[v]) {\n        if (i != v) {\n            ans += dfs(graph, i, count + 1, k)\n        }\n    }\n    return ans\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$n, $m, $k = explode(\" \", trim(fgets(STDIN)));\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $v1, $v2 = explode(\" \", trim(fgets(STDIN)));\n    $graph[$v1][] = $v2;\n    $graph[$v2][] = $v1;\n}\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $visited = [];\n    $stack = [$i];\n    while (!empty($stack)) {\n        $v = array_pop($stack);\n        if (!isset($visited[$v])) {\n            $visited[$v] = true;\n            foreach ($graph[$v] as $w) {\n                if (!isset($visited[$w])) {\n                    $stack[] = $w;\n                }\n            }\n        }\n    }\n    if (count($visited) == $k) {\n        $ans++;\n    }\n}\necho $ans;\n\"\"\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m, $k;\\n\\nwhile (<>) {\\n    chomp;\\n    my @a = split(\/ \/);\\n    $n = $a[0];\\n    $m = $a[1];\\n    $k = $a[2];\\n}\\n\\nmy @g = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    push(@g, []);\\n}\\n\\nfor (my $i = 0; $i < $m; $i++) {\\n    my @a = split(\/ \/, <>);\\n    push(@{$g[$a[0]-1]}, $a[1]-1);\\n    push(@{$g[$a[1]-1]}, $a[0]-1);\\n}\\n\\nmy $ans = 0;\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $c = 0;\\n    for (my $j = 0; $j < @{$g[$i]}; $j++) {\\n        if ($g[$i][$j] != $i) {\\n            $c++;\\n        }\\n    }\\n    if ($c == $k) {\\n        $ans++;\\n    }\\n}\\n\\nprint $ans;\\n\\nexit(0);\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m, k) = read_input();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (u, v) = read_input();\n        graph.entry(u).or_insert(vec![]).push(v);\n        graph.entry(v).or_insert(vec![]).push(u);\n    }\n\n    let mut ans = 0;\n    for i in 0..n {\n        let mut visited = vec![false; n];\n        let mut stack = vec![i];\n        while let Some(u) = stack.pop() {\n            visited[u] = true;\n            for &v in graph.get(&u).unwrap() {\n                if !visited[v] {\n                    stack.push(v);\n                }\n            }\n        }\n        if visited.iter().filter(|&x| x).count() == k {\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\nfn read_input() -> (usize, usize, usize) {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let n = iter.next().unwrap().parse().unwrap();\n    let m = iter.next().unwrap().parse().unwrap();\n    let k = iter.next().unwrap().parse().unwrap();\n    (n, m, k)\n}\n\"\"\"}]"}
{"title":"A. Presents","description":"The Hedgehog likes to give presents to his friend, but no less he likes to receive them.Having received another present today, the Hedgehog suddenly understood that he has no place to put it as there was no room left on the special shelf in the cupboard. He will have to choose another shelf, but which one should he choose, how large should it be?In order to get to know this, the Hedgehog asks you to write him a program that will count the estimated number of presents that he will receive during the following N days. Besides, he is guided by the principle:   on each holiday day the Hedgehog will necessarily receive a present,  he receives presents at least every K days (i.e., if he received a present on the i-th day, he will receive the next present no later than on the i+K-th day).  For the given N and K, as well as the list of holidays among the following N days count the minimal number of presents that could be given to the Hedgehog. The number of today's day is zero, and you should regard today's present as already given (i.e., you shouldn't count it in the answer).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains integers N and K (1\u2264N\u2264365, 1\u2264K\u2264N).\nThe second line contains a number C which represents the number of holidays (0\u2264C\u2264N). Then in the same line follow C numbers ranging from 1 to N which are the numbers of holiday days. The numbers are given in the increasing order, without repeating numbers among them.\n","output_spec":"Print a single number \u2014 the minimal number of presents the Hedgehog will receive over the following N days.\n","notes":null,"sample_inputs":["5 2\n1 3\n","10 1\n3 6 7 8\n"],"sample_outputs":["3","10"],"id":"54-A","difficulty":1300,"tags":["implementation"],"src_uid":"07b750dbf7f942eab80d4260103c7472","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, k, c, i, j, ans = 0;\n    cin >> n >> k;\n    cin >> c;\n    int a[c];\n    for (i = 0; i < c; i++) {\n        cin >> a[i];\n    }\n    for (i = 0; i < c; i++) {\n        for (j = a[i] + k - 1; j <= n; j += k) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        int c = sc.nextInt();\n        int[] a = new int[c];\n        for (int i = 0; i < c; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < c; i++) {\n            ans = Math.max(ans, a[i] - i + 1);\n        }\n        for (int i = 1; i <= n - c; i++) {\n            ans = Math.max(ans, i + k - 1);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\nc=int(input())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(c):\n    ans+=(a[i]-i-1)\/\/k+1\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, k, c, i, j, t, ans = 0;\n    scanf(\" %d %d \", &n, &k);\n    scanf(\" %d \", &c);\n    for (i = 0; i < c; i++) {\n        scanf(\" %d \", &t);\n        ans = (t - 1) \/ k + 1;\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var k = int.Parse(input[1]);\n        var holidays = new List<int>();\n        var count = 0;\n        var i = 0;\n        while (i < n)\n        {\n            var day = int.Parse(Console.ReadLine());\n            if (day >= i && day <= i + k)\n            {\n                count++;\n            }\n            else\n            {\n                holidays.Add(day);\n            }\n            i = day;\n        }\n        foreach (var holiday in holidays)\n        {\n            count++;\n        }\n        Console.WriteLine(count);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\nc = gets.to_i\nholidays = gets.split.map(&:to_i)\n\nholidays.sort!\n\nans = 0\n\n(0..n-1).each do |i|\n  if i < holidays.first\n    ans += 1\n  elsif i >= holidays.last\n    ans += 1\n  elsif i % k == 0\n    ans += 1\n  end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Hedgehog;\n\nuses\n  SysUtils;\n\nvar\n  N, K, C, i, j, t, ans: Integer;\n  a: array[0..365] of Boolean;\n\nbegin\n  Readln(N, K);\n  Readln(C);\n  for i := 1 to C do\n    Read(a[i]);\n  for i := 1 to N do\n    if not a[i] then\n      begin\n        for j := i + K to N do\n          if a[j] then\n            begin\n              ans := j - i;\n              break;\n            end;\n        break;\n      end;\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d \", &n, &k)\n\tvar c int\n\tfmt.Scanf(\" %d \", &c)\n\tvar a []int\n\tfor i := 0; i < c; i++ {\n\t\tvar x int\n\t\tfmt.Scanf(\" %d \", &x)\n\t\ta = append(a, x)\n\t}\n\ta = append(a, n)\n\ta.sort()\n\tvar ans int\n\tfor i := 0; i < len(a)-1; i++ {\n\t\tans = int(math.Max(float64(ans), float64(a[i+1]-a[i]-k+1)))\n\t}\n\tfmt.Println(ans)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst data = input.split('\\n');\nconst n = Number(data[0].split(' ')[0]);\nconst k = Number(data[0].split(' ')[1]);\nconst c = Number(data[1]);\nconst holidays = data[2].split(' ').map(Number);\nconst presents = [];\nfor (let i = 0; i < n; i++) {\n    presents.push(0);\n}\nfor (let i = 0; i < c; i++) {\n    presents[holidays[i] - 1] = 1;\n}\nfor (let i = 0; i < n; i++) {\n    if (presents[i] == 0) {\n        presents[i] = presents[i - k] + 1;\n    }\n}\nconsole.log(presents.reduce((a, b) => a + b));\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val k = sc.nextInt()\n    val c = sc.nextInt()\n    val holidays = IntArray(n + 1)\n    for (i in 0 until c) {\n        holidays[sc.nextInt()] = 1\n    }\n    var ans = 0\n    var i = 0\n    while (i < n) {\n        if (holidays[i] == 1) {\n            ans++\n            i += k\n        } else {\n            i++\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$k = (int)trim(fgets(STDIN));\n$c = (int)trim(fgets(STDIN));\n$holidays = explode(' ', trim(fgets(STDIN)));\n$holidays = array_map('intval', $holidays);\n$holidays = array_unique($holidays);\n$holidays = array_values($holidays);\n$holidays = array_sort($holidays);\n$i = 0;\n$count = 0;\nwhile ($i < $n) {\n    if ($i < $holidays[0]) {\n        $count++;\n    } else {\n        $count += ($i - $holidays[0]) \/ $k + 1;\n    }\n    $i++;\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k, c;\n    scanf(\" %d %d \", &n, &k);\n    scanf(\" %d \", &c);\n    int a[c];\n    for (int i = 0; i < c; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    int i = 0;\n    while (i < n) {\n        if (i < a[0]) {\n            ans++;\n        } else {\n            ans += (i - a[0]) \/ k + 1;\n        }\n        i = a[0] + k;\n    }\n    printf(\" %d \", ans);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @holidays;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\nmy $c = $line;\n\nfor (my $i = 0; $i < $c; $i++) {\n    chomp(my $holiday = <STDIN>);\n    push(@holidays, $holiday);\n}\n\nmy $min = $n;\n\nfor (my $i = 0; $i < $n; $i++) {\n    my $count = 0;\n    for (my $j = 0; $j < $c; $j++) {\n        if ($holidays[$j] >= $i && $holidays[$j] <= $i + $k - 1) {\n            $count++;\n        }\n    }\n    if ($count < $min) {\n        $min = $count;\n    }\n}\n\nprint $min;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n_k[0];\n    let k = n_k[1];\n\n    line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut c = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut ans = 0;\n    for i in 0..c.len() {\n        ans = ans.max(c[i] - i + 1);\n    }\n\n    ans = ans.max(n - k + 1);\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"B. Cutting Jigsaw Puzzle","description":"The Hedgehog recently remembered one of his favorite childhood activities, \u2014 solving puzzles, and got into it with new vigor. He would sit day in, day out with his friend buried into thousands of tiny pieces of the picture, looking for the required items one by one.Soon the Hedgehog came up with a brilliant idea: instead of buying ready-made puzzles, one can take his own large piece of paper with some picture and cut it into many small rectangular pieces, then mix them and solve the resulting puzzle, trying to piece together the picture. The resulting task is even more challenging than the classic puzzle: now all the fragments have the same rectangular shape, and one can assemble the puzzle only relying on the picture drawn on the pieces.All puzzle pieces turn out to be of the same size X\u00d7Y, because the picture is cut first by horizontal cuts with the pitch of X, then with vertical cuts with the pitch of Y. If we denote the initial size of the picture as A\u00d7B, then A must be divisible by X and B must be divisible by Y (X and Y are integer numbers). However, not every such cutting of the picture will result in a good puzzle. The Hedgehog finds a puzzle good if no two pieces in it are the same (It is allowed to rotate the pieces when comparing them, but it is forbidden to turn them over). Your task is to count for a given picture the number of good puzzles that you can make from it, and also to find the puzzle with the minimal piece size.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two numbers A and B which are the sizes of the picture. They are positive integers not exceeding 20.\nThen follow A lines containing B symbols each, describing the actual picture. The lines only contain uppercase English letters.\n","output_spec":"In the first line print the number of possible good puzzles (in other words, the number of pairs (X,Y) such that the puzzle with the corresponding element sizes will be good). This number should always be positive, because the whole picture is a good puzzle itself. \nIn the second line print two numbers \u2014 the sizes X and Y of the smallest possible element among all good puzzles. The comparison is made firstly by the area XY of one element and secondly \u2014 by the length X.\n","notes":"The picture in the first sample test has the following good puzzles: (2,1), (2,2), (2,4).\n","sample_inputs":["2 4\nABDC\nABDC\n","2 6\nABCCBA\nABCCBA\n"],"sample_outputs":["3\n2 1\n","1\n2 6\n"],"id":"54-B","difficulty":1800,"tags":["hashing","implementation"],"src_uid":"4de8b72f9ce12554cae8b6a83b3f023e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int a, b;\n    cin >> a >> b;\n    vector<string> v(a);\n    for (int i = 0; i < a; i++) {\n        cin >> v[i];\n    }\n\n    int ans = 0;\n    int min_x = 1000000000;\n    int min_y = 1000000000;\n    for (int i = 1; i <= a; i++) {\n        for (int j = 1; j <= b; j++) {\n            int cnt = 0;\n            for (int k = 0; k < a; k += i) {\n                for (int l = 0; l < b; l += j) {\n                    if (v[k][l] != v[k + i - 1][l] || v[k][l] != v[k][l + j - 1] || v[k + i - 1][l] != v[k + i - 1][l + j - 1]) {\n                        cnt++;\n                    }\n                }\n            }\n            if (cnt == 0) {\n                ans++;\n                min_x = min(min_x, i);\n                min_y = min(min_y, j);\n            }\n        }\n    }\n\n    cout << ans << endl;\n    cout << min_x << \" \" << min_y << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int[][] arr = new int[a][b];\n        for (int i = 0; i < a; i++) {\n            String s = sc.next();\n            for (int j = 0; j < b; j++) {\n                arr[i][j] = s.charAt(j) - 'A';\n            }\n        }\n        int ans = 0;\n        int min = Integer.MAX_VALUE;\n        for (int i = 1; i <= a; i++) {\n            for (int j = 1; j <= b; j++) {\n                if (check(arr, i, j)) {\n                    ans++;\n                    if (i * j < min) {\n                        min = i * j;\n                    }\n                }\n            }\n        }\n        System.out.println(ans);\n        System.out.println(min \/ Math.min(a, b));\n    }\n\n    private static boolean check(int[][] arr, int x, int y) {\n        for (int i = 0; i < a; i += x) {\n            for (int j = 0; j < b; j += y) {\n                int[] tmp = new int[26];\n                for (int k = i; k < i + x; k++) {\n                    for (int l = j; l < j + y; l++) {\n                        tmp[arr[k][l]]++;\n                    }\n                }\n                for (int k = 0; k < 26; k++) {\n                    if (tmp[k] > 1) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,b=map(int,input().split())\ns=input()\ns=s.replace('A','1').replace('B','2').replace('C','3').replace('D','4').replace('E','5').replace('F','6').replace('G','7').replace('H','8').replace('I','9').replace('J','0')\ns=list(s)\ns.sort()\nans=0\nfor i in range(1,a+1):\n    for j in range(1,b+1):\n        if len(s)%i==0 and len(s[i-1::i])%j==0:\n            ans+=1\nprint(ans)\nprint(i,j)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int a, b, i, j, k, l, m, n, s, t, u, v, w, x, y, z, p, q, r, c, d, e, f, g, h, i1, j1, k1, l1, m1, n1, o1, p1, q1, r1, s1, t1, u1, v1, w1, x1, y1, z1;\n    scanf(\" %d %d \", &a, &b);\n    char a1[a][b];\n    for (i = 0; i < a; i++) {\n        for (j = 0; j < b; j++) {\n            scanf(\" %c \", &a1[i][j]);\n        }\n    }\n    s = 0;\n    for (i = 1; i <= a; i++) {\n        for (j = 1; j <= b; j++) {\n            if (a1[i - 1][j - 1] != a1[i - 1][j] && a1[i - 1][j - 1] != a1[i][j - 1] && a1[i - 1][j - 1] != a1[i][j]) {\n                s++;\n            }\n        }\n    }\n    printf(\" %d\\n \", s);\n    t = 0;\n    for (i = 1; i <= a; i++) {\n        for (j = 1; j <= b; j++) {\n            if (a1[i - 1][j - 1] != a1[i - 1][j] && a1[i - 1][j - 1] != a1[i][j - 1] && a1[i - 1][j - 1] != a1[i][j]) {\n                t++;\n            }\n        }\n    }\n    printf(\" %d %d\\n \", t, s);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace HedgehogPuzzle\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var input = Console.ReadLine().Split(' ');\n            var a = int.Parse(input[0]);\n            var b = int.Parse(input[1]);\n            var matrix = new char[a][];\n            for (int i = 0; i < a; i++)\n            {\n                matrix[i] = Console.ReadLine().ToCharArray();\n            }\n            var result = new List<int>();\n            for (int i = 1; i <= a; i++)\n            {\n                for (int j = 1; j <= b; j++)\n                {\n                    var isGood = true;\n                    for (int k = 0; k < a - i + 1; k++)\n                    {\n                        for (int l = 0; l < b - j + 1; l++)\n                        {\n                            var temp = new char[i][];\n                            for (int m = 0; m < i; m++)\n                            {\n                                temp[m] = new char[j];\n                                for (int n = 0; n < j; n++)\n                                {\n                                    temp[m][n] = matrix[k + m][l + n];\n                                }\n                            }\n                            var isSame = true;\n                            for (int m = 0; m < i - 1; m++)\n                            {\n                                for (int n = 0; n < j - 1; n++)\n                                {\n                                    if (temp[m][n] != temp[m + 1][n] || temp[m][n] != temp[m][n + 1])\n                                    {\n                                        isSame = false;\n                                        break;\n                                    }\n                                }\n                                if (!isSame)\n                                {\n                                    break;\n                                }\n                            }\n                            if (isSame)\n                            {\n                                result.Add(i * j);\n                            }\n                        }\n                    }\n                }\n            }\n            Console.WriteLine(result.Count);\n            Console.WriteLine(result.Min());\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b=gets.split.map(&:to_i)\nc=a*b\nd=c.to_s(2)\ne=d.split('')\nf=e.uniq.size\nputs f\nputs e.min(2).join(' ')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Hedgehog;\n\nuses\n  SysUtils;\n\nconst\n  MaxN = 20;\n\nvar\n  A, B: Integer;\n  a, b: array[0..MaxN] of Boolean;\n  s: array[0..MaxN, 0..MaxN] of Char;\n  n, m: Integer;\n  i, j, k, l: Integer;\n  ans: Integer;\n\nprocedure Solve;\nvar\n  i, j, k, l: Integer;\n  x, y: Integer;\nbegin\n  for i := 1 to n do\n    for j := 1 to m do\n      if a[i] and b[j] then\n        begin\n          inc(ans);\n          for k := 1 to n div i do\n            for l := 1 to m div j do\n              begin\n                x := i * k;\n                y := j * l;\n                if (x * y = n * m) and (x = y) then\n                  begin\n                    Writeln(ans);\n                    Writeln(x, ' ', y);\n                    Exit;\n                  end;\n              end;\n        end;\nend;\n\nbegin\n  Readln(A, B);\n  for i := 1 to A do\n  begin\n    Readln(s[i]);\n    for j := 1 to B do\n      if s[i][j] = 'A' then\n        begin\n          a[i] := True;\n          b[j] := True;\n        end;\n  end;\n  n := A;\n  m := B;\n  ans := 0;\n  Solve;\nend.\n\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var a, b int\\n    fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n    var s = make([][]byte, a)\\n    for i := 0; i < a; i++ {\\n        s[i] = make([]byte, b)\\n        fmt.Scanf(\\\"%s\\\", s[i])\\n    }\\n    var ans = 0\\n    var min = 1000000000000000000\\n    for i := 1; i <= a; i++ {\\n        for j := 1; j <= b; j++ {\\n            if s[i-1][j-1] != s[i-1][j] && s[i-1][j-1] != s[i][j-1] && s[i-1][j-1] != s[i][j] {\\n                ans++\\n                if min > i*j {\\n                    min = i * j\\n                }\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n    fmt.Println(min)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst lines = input.split('\\n');\nconst [A, B] = lines[0].split(' ').map(Number);\nconst picture = lines.slice(1);\nconst dp = new Array(A + 1).fill(0);\nconst dp2 = new Array(A + 1).fill(0);\nfor (let i = 1; i <= A; i++) {\n  for (let j = 1; j <= B; j++) {\n    if (picture[i - 1][j - 1] !== picture[i - 1][j] && picture[i - 1][j - 1] !== picture[i][j - 1]) {\n      dp[i] += dp[i - 1];\n      dp2[i] += dp2[i - 1];\n    }\n    if (picture[i - 1][j - 1] !== picture[i][j - 1] && picture[i - 1][j - 1] !== picture[i][j]) {\n      dp[i] += dp2[i - 1];\n      dp2[i] += dp[i - 1];\n    }\n  }\n}\nconsole.log(dp[A]);\nconsole.log(Math.min(dp[A], dp2[A]));\"}]}","Kotlin":"","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$b = [];\nfor ($i = 0; $i < $a[0]; $i++) {\n    $b[] = trim(fgets(STDIN));\n}\n$ans = 0;\n$min = [1000000000, 1000000000];\nfor ($i = 1; $i <= $a[0]; $i++) {\n    for ($j = 1; $j <= $a[1]; $j++) {\n        $c = 0;\n        for ($k = 0; $k < $a[0]; $k += $i) {\n            for ($l = 0; $l < $a[1]; $l += $j) {\n                if ($b[$k][$l] != $b[$k + $i - 1][$l] || $b[$k][$l] != $b[$k][$l + $j - 1] || $b[$k][$l] != $b[$k + $i - 1][$l + $j - 1]) {\n                    $c++;\n                }\n            }\n        }\n        if ($c == 0) {\n            $ans++;\n            if ($i * $j < $min[0] * $min[1]) {\n                $min = [$i, $j];\n            }\n        }\n    }\n}\necho $ans . PHP_EOL;\necho $min[0] . ' ' . $min[1];\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int[2] a;\n    auto b = readln().split(' ').map!(to!int).array;\n    a[0] = b[0];\n    a[1] = b[1];\n    int[2] m = [a[0], a[1]];\n    int[2] s = [1, 1];\n    int n = 0;\n    for (int i = 1; i <= a[0]; i++) {\n        for (int j = 1; j <= a[1]; j++) {\n            if (a[0] % i == 0 && a[1] % j == 0) {\n                int x = i;\n                int y = j;\n                while (x > 1 && y > 1) {\n                    if (a[0] % x == 0 && a[1] % y == 0) {\n                        x = x \/ 2;\n                        y = y \/ 2;\n                    } else {\n                        break;\n                    }\n                }\n                if (x * y < m[0] * m[1]) {\n                    m[0] = x;\n                    m[1] = y;\n                }\n            }\n        }\n    }\n    for (int i = 1; i <= a[0]; i++) {\n        for (int j = 1; j <= a[1]; j++) {\n            if (a[0] % i == 0 && a[1] % j == 0) {\n                int x = i;\n                int y = j;\n                while (x > 1 && y > 1) {\n                    if (a[0] % x == 0 && a[1] % y == 0) {\n                        x = x \/ 2;\n                        y = y \/ 2;\n                    } else {\n                        break;\n                    }\n                }\n                if (x * y == m[0] * m[1]) {\n                    n++;\n                }\n            }\n        }\n    }\n    writeln(n);\n    writeln(m[0], ' ', m[1]);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $a, $b; \\n\\nwhile (<>) { \\n    chomp; \\n    ($a, $b) = split \/\\s+\/; \\n    $a = $a + 0; \\n    $b = $b + 0; \\n    \\n    my @a = split \/\\n\/, <>; \\n    \\n    my $n = 0; \\n    my $min = 1000000000; \\n    my $min_x = 0; \\n    my $min_y = 0; \\n    \\n    for (my $i = 1; $i <= $a; $i++) { \\n        for (my $j = 1; $j <= $b; $j++) { \\n            my $x = $i; \\n            my $y = $j; \\n            \\n            while ($x <= $a) { \\n                while ($y <= $b) { \\n                    my $ok = 1; \\n                    \\n                    for (my $k = 0; $k < $a; $k++) { \\n                        for (my $l = 0; $l < $b; $l++) { \\n                            if ($a - $k >= $x && $b - $l >= $y && $a - $k % $x == 0 && $b - $l % $y == 0) { \\n                                if ($a - $k \/ $x != $b - $l \/ $y) { \\n                                    $ok = 0; \\n                                    break; \\n                                } \\n                            } \\n                        } \\n                    } \\n                    \\n                    if ($ok) { \\n                        $n++; \\n                        if ($min > $x * $y) { \\n                            $min = $x * $y; \\n                            $min_x = $x; \\n                            $min_y = $y; \\n                        } \\n                    } \\n                    \\n                    $y++; \\n                } \\n                \\n                $x++; \\n            } \\n        } \\n    } \\n    \\n    print $n, \"\\n\"; \\n    print $min_x, \" \", $min_y, \"\\n\"; \\n} \\n\\nexit 0;\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (a, b) = read_input();\n    let mut map = HashMap::new();\n    for i in 0..a {\n        let line = read_line();\n        for j in 0..b {\n            let c = line.chars().nth(j).unwrap();\n            map.entry(c).or_insert(0) += 1;\n        }\n    }\n    let mut ans = 0;\n    for (k, v) in map.iter() {\n        if v > 1 {\n            ans += 1;\n        }\n    }\n    println!(\"{}\", ans);\n    for i in 1..a {\n        for j in 1..b {\n            if map.get(&'A').unwrap() >= i * j && map.get(&'B').unwrap() >= i * j && map.get(&'C').unwrap() >= i * j && map.get(&'D').unwrap() >= i * j {\n                println!(\"{}\", i);\n                println!(\"{}\", j);\n                return;\n            }\n        }\n    }\n}\n\nfn read_input() -> (usize, usize) {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let a = iter.next().unwrap().parse::<usize>().unwrap();\n    let b = iter.next().unwrap().parse::<usize>().unwrap();\n    (a, b)\n}\n\nfn read_line() -> String {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    input\n}\n\"\"\"}]"}
{"title":"C. Pie or die","description":"Volodya and Vlad play the following game. There are k pies at the cells of n\u00d7m board. Each turn Volodya moves one pie to the neighbouring (by side) cell. If the pie lies at the border of the board then Volodya can move it outside the board, get the pie and win. After Volodya's move, Vlad bans some edge at the border of the board of length 1 (between two knots of the board) so that Volodya is not able to move the pie outside the board through this edge anymore. The question is: will Volodya win this game? We suppose both players follow the optimal strategy.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"First line contains 3 integers, separated by space: 1\u2264n,m\u2264100 \u2014 dimensions of the board and 0\u2264k\u2264100 \u2014 the number of pies. Each of the next k lines contains 2 integers, separated by space: 1\u2264x\u2264n, 1\u2264y\u2264m \u2014 coordinates of the corresponding pie. There could be more than one pie at a cell. \n","output_spec":"Output only one word: \"YES\" \u2014 if Volodya wins, \"NO\" \u2014 otherwise.\n","notes":null,"sample_inputs":["2 2 1\n1 2\n","3 4 0\n","100 50 2\n50 25\n50 25\n"],"sample_outputs":["YES","NO","NO"],"id":"55-C","difficulty":1900,"tags":["games"],"src_uid":"6214a85d2be0a908dcbfe089327cf51a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    vector<vector<int>> a(n, vector<int>(m, 0));\n    for (int i = 0; i < k; i++) {\n        int x, y;\n        cin >> x >> y;\n        a[x - 1][y - 1]++;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] > 0) {\n                if (i == 0 || i == n - 1 || j == 0 || j == m - 1) {\n                    ans = 1;\n                }\n            }\n        }\n    }\n\n    cout << (ans ? \"YES\" : \"NO\") << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        int[][] a = new int[n][m];\n        for (int i = 0; i < k; i++) {\n            int x = sc.nextInt();\n            int y = sc.nextInt();\n            a[x - 1][y - 1]++;\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (a[i][j] > 0) {\n                    if (i == 0 || i == n - 1 || j == 0 || j == m - 1) {\n                        ans++;\n                    }\n                }\n            }\n        }\n        System.out.println(ans > 0 ? \"YES\" : \"NO\");\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m, k = map(int, input().split())\n\ndef check(x, y):\n    if x == 1 or x == n:\n        return True\n    if y == 1 or y == m:\n        return True\n    return False\n\nfor _ in range(k):\n    x, y = map(int, input().split())\n    if check(x, y):\n        print(\"YES\")\n        exit()\n\nprint(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int a[n][m];\n    for (int i = 0; i < k; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        a[x - 1][y - 1]++;\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] > 0) {\n                if (i == 0 || i == n - 1 || j == 0 || j == m - 1) {\n                    ans = 1;\n                }\n            }\n        }\n    }\n    if (ans == 1) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var k = int.Parse(input[2]);\n\n        var pies = new List<(int, int)>();\n        for (int i = 0; i < k; i++)\n        {\n            var input = Console.ReadLine().Split(' ');\n            var x = int.Parse(input[0]);\n            var y = int.Parse(input[1]);\n            pies.Add((x, y));\n        }\n\n        var banned = new HashSet<(int, int)>();\n        for (int i = 0; i < n; i++)\n        {\n            if (i == 0 || i == n - 1)\n            {\n                banned.Add((i, 0));\n                banned.Add((i, m - 1));\n            }\n        }\n        for (int i = 0; i < m; i++)\n        {\n            if (i == 0 || i == m - 1)\n            {\n                banned.Add((0, i));\n                banned.Add((n - 1, i));\n            }\n        }\n\n        var canWin = true;\n        for (var pie of pies)\n        {\n            if (banned.Contains(pie))\n            {\n                canWin = false;\n                break;\n            }\n        }\n\n        Console.WriteLine(canWin ? \"YES\" : \"NO\");\n    }\n}\n\"\"\"}]","Ruby":"","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Pies;\n\nuses\n  SysUtils;\n\nconst\n  MaxN = 100;\n\ntype\n  TPoint = record\n    x, y: Integer;\n  end;\n\nvar\n  n, m, k: Integer;\n  a: array[0..MaxN, 0..MaxN] of Integer;\n  p: array[0..MaxN, 0..MaxN] of TPoint;\n  ans: Boolean;\n\nprocedure Solve;\nvar\n  i, j, x, y: Integer;\nbegin\n  ans := True;\n  for i := 1 to n do\n    for j := 1 to m do\n      if a[i, j] > 0 then\n      begin\n        x := i;\n        y := j;\n        while a[x, y] > 0 do\n        begin\n          if x = 1 then\n            ans := False;\n          if y = 1 then\n            ans := False;\n          if x = n then\n            ans := False;\n          if y = m then\n            ans := False;\n          a[x, y] := 0;\n          if x > 1 then\n            x := x - 1;\n          if y > 1 then\n            y := y - 1;\n          if x < n then\n            x := x + 1;\n          if y < m then\n            y := y + 1;\n        end;\n      end;\nend;\n\nbegin\n  Readln(n, m, k);\n  for i := 1 to k do\n  begin\n    Readln(p[i].x, p[i].y);\n    a[p[i].x, p[i].y] := a[p[i].x, p[i].y] + 1;\n  end;\n  Solve;\n  if ans then\n    Writeln('YES')\n  else\n    Writeln('NO');\nend.\n\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar n, m, k int\n\tfmt.Scanf(\" %d %d %d \", &n, &m, &k)\n\tfor i := 0; i < k; i++ {\n\t\tvar x, y int\n\t\tfmt.Scanf(\" %d %d \", &x, &y)\n\t\tif x == 1 || x == n || y == 1 || y == m {\n\t\t\tfmt.Println(\" YES \")\n\t\t\tos.Exit(0)\n\t\t}\n\t}\n\tfmt.Println(\" NO \")\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst k = parseInt(stdin[0].split(' ')[2]);\nconst pies = [];\nfor (let i = 1; i <= k; i++) {\n  const pie = stdin[i].split(' ');\n  pies.push([parseInt(pie[0]), parseInt(pie[1])]);\n}\nconst banned = [];\nfor (let i = 1; i <= n; i++) {\n  banned.push([i, 0]);\n  banned.push([i, m - 1]);\n}\nfor (let i = 1; i <= m; i++) {\n  banned.push([0, i]);\n  banned.push([n - 1, i]);\n}\nfor (let i = 0; i < k; i++) {\n  const pie = pies[i];\n  for (let j = 0; j < banned.length; j++) {\n    if (banned[j][0] == pie[0] || banned[j][1] == pie[1]) {\n      banned.splice(j, 1);\n      j--;\n    }\n  }\n}\nconst canWin = true;\nfor (let i = 0; i < k; i++) {\n  const pie = pies[i];\n  for (let j = 0; j < banned.length; j++) {\n    if (banned[j][0] == pie[0] - 1 && banned[j][1] == pie[1]) {\n      canWin = false;\n    }\n    if (banned[j][0] == pie[0] + 1 && banned[j][1] == pie[1]) {\n      canWin = false;\n    }\n    if (banned[j][0] == pie[0] && banned[j][1] == pie[1] - 1) {\n      canWin = false;\n    }\n    if (banned[j][0] == pie[0] && banned[j][1] == pie[1] + 1) {\n      canWin = false;\n    }\n  }\n}\nconsole.log(canWin ? 'YES' : 'NO');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val (n, m, k) = sc.nextLine().split(\" \").map { it.toInt() }\n    val pies = Array(k) { sc.nextLine().split(\" \").map { it.toInt() } }\n    val banned = Array(n) { BooleanArray(m) }\n    val visited = Array(n) { BooleanArray(m) }\n    val queue = ArrayDeque<Pair<Int, Int>>()\n    queue.add(Pair(pies[0][0], pies[0][1]))\n    visited[pies[0][0]][pies[0][1]] = true\n    while (queue.isNotEmpty()) {\n        val (x, y) = queue.removeFirst()\n        for (i in -1..1) {\n            for (j in -1..1) {\n                if (i == 0 && j == 0) continue\n                val nx = x + i\n                val ny = y + j\n                if (nx < 0 || nx >= n || ny < 0 || ny >= m) continue\n                if (banned[nx][ny]) continue\n                if (visited[nx][ny]) continue\n                visited[nx][ny] = true\n                queue.add(Pair(nx, ny))\n            }\n        }\n    }\n    val ans = if (visited[n - 1][m - 1]) \"YES\" else \"NO\"\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$m = (int)$input[1];\n$k = (int)$input[2];\n$board = [];\nfor ($i = 0; $i < $k; $i++) {\n    $input = explode(' ', trim(fgets(STDIN)));\n    $x = (int)$input[0];\n    $y = (int)$input[1];\n    $board[$x][$y] = 1;\n}\n$ans = 'YES';\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $m; $j++) {\n        if ($board[$i][$j] == 1) {\n            if ($i == 0 || $i == $n - 1 || $j == 0 || $j == $m - 1) {\n                $ans = 'NO';\n                break;\n            }\n        }\n    }\n}\necho $ans;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    int[n][m] a;\n    for (int i = 0; i < k; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        a[x - 1][y - 1]++;\n    }\n    int[n][m] b;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] > 0) {\n                b[i][j] = 1;\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (b[i][j] == 1) {\n                if (i == 0 || i == n - 1 || j == 0 || j == m - 1) {\n                    ans = 1;\n                }\n            }\n        }\n    }\n    if (ans == 1) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\nmy @x, @y;\n\nwhile (<>) {\n    chomp;\n    my @a = split \/ \/;\n    $n = $a[0];\n    $m = $a[1];\n    $k = $a[2];\n}\n\nfor (my $i = 0; $i < $k; $i++) {\n    chomp;\n    my @a = split \/ \/;\n    push @x, $a[0];\n    push @y, $a[1];\n}\n\nmy $ans = 'YES';\n\nfor (my $i = 0; $i < $k; $i++) {\n    my $x = $x[$i];\n    my $y = $y[$i];\n\n    if ($x == 1) {\n        $ans = 'NO';\n    } elsif ($x == $n) {\n        $ans = 'NO';\n    } elsif ($y == 1) {\n        $ans = 'NO';\n    } elsif ($y == $m) {\n        $ans = 'NO';\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n = 0;\n    let mut m = 0;\n    let mut k = 0;\n\n    stdin.read_line(&mut n).unwrap();\n    stdin.read_line(&mut m).unwrap();\n    stdin.read_line(&mut k).unwrap();\n\n    let mut pies = Vec::new();\n\n    for _ in 0..k {\n        let mut x = 0;\n        let mut y = 0;\n\n        stdin.read_line(&mut x).unwrap();\n        stdin.read_line(&mut y).unwrap();\n\n        pies.push((x.parse::<i32>().unwrap(), y.parse::<i32>().unwrap()));\n    }\n\n    let mut banned = Vec::new();\n\n    for _ in 0..k {\n        let mut x = 0;\n        let mut y = 0;\n\n        stdin.read_line(&mut x).unwrap();\n        stdin.read_line(&mut y).unwrap();\n\n        banned.push((x.parse::<i32>().unwrap(), y.parse::<i32>().unwrap()));\n    }\n\n    let mut can_win = true;\n\n    for (x, y) in pies {\n        if x == 1 || x == n || y == 1 || y == m {\n            can_win = false;\n            break;\n        }\n    }\n\n    for (x, y) in banned {\n        if x == 1 || x == n || y == 1 || y == m {\n            can_win = false;\n            break;\n        }\n    }\n\n    if can_win {\n        stdout.write_all(b\"YES\\n\").unwrap();\n    } else {\n        stdout.write_all(b\"NO\\n\").unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"D. Beautiful numbers","description":"Volodya is an odd boy and his taste is strange as well. It seems to him that a positive integer number is beautiful if and only if it is divisible by each of its nonzero digits. We will not argue with this and just count the quantity of beautiful numbers in given ranges.","input_from":"standard input","output_to":"standard output","time_limit":"4 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains the number of cases t (1\u2264t\u226410). Each of the next t lines contains two natural numbers li and ri (1\u2264li\u2264ri\u22649\u00b710^18).\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cin (also you may use %I64d).\n","output_spec":"Output should contain t numbers \u2014 answers to the queries, one number per line \u2014 quantities of beautiful numbers in given intervals (from li to ri, inclusively).\n","notes":null,"sample_inputs":["1\n1 9\n","1\n12 15\n"],"sample_outputs":["9\n","2\n"],"id":"55-D","difficulty":2500,"tags":["dp","number+theory"],"src_uid":"37feadce373f728ba2a560b198ca4bc9","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint main() {\n    int t;\n    cin >> t;\n    for (int i = 0; i < t; i++) {\n        int l, r;\n        cin >> l >> r;\n        int ans = 0;\n        for (int j = l; j <= r; j++) {\n            int d = j;\n            int cnt = 0;\n            while (d > 0) {\n                int dd = d % 10;\n                if (dd != 0 && j % dd == 0) {\n                    cnt++;\n                }\n                d \/= 10;\n            }\n            if (cnt == d) {\n                ans++;\n            }\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nt = int(input())\nfor _ in range(t):\n    l, r = map(int, input().split())\n    ans = 0\n    for i in range(l, r + 1):\n        if i == 1:\n            ans += 1\n        else:\n            flag = True\n            for j in str(i):\n                if i % int(j) != 0:\n                    flag = False\n                    break\n            if flag:\n                ans += 1\n    print(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int t = int.Parse(Console.ReadLine());\n        for (int i = 0; i < t; i++)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int l = int.Parse(input[0]);\n            int r = int.Parse(input[1]);\n            int count = 0;\n            for (int j = l; j <= r; j++)\n            {\n                int temp = j;\n                bool flag = true;\n                while (temp > 0)\n                {\n                    if (temp % 10 == 0)\n                    {\n                        flag = false;\n                        break;\n                    }\n                    temp \/= 10;\n                }\n                if (flag)\n                {\n                    count++;\n                }\n            }\n            Console.WriteLine(count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"t = gets.to_i\nfor _ in 1..t\n  li, ri = gets.split.map(&:to_i)\n  puts (ri - li + 1) \/ 2\nend\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"math\"\r\n)\r\n\r\nfunc main() {\r\n    var t int\r\n    fmt.Scan(&t)\r\n    for i := 0; i < t; i++ {\r\n        var l, r int64\r\n        fmt.Scan(&l, &r)\r\n        res := 0\r\n        for i := l; i <= r; i++ {\r\n            flag := true\r\n            tmp := i\r\n            for tmp != 0 {\r\n                if tmp%10 == 0 {\r\n                    flag = false\r\n                    break\r\n                }\r\n                tmp \/= 10\r\n            }\r\n            if flag {\r\n                res++\r\n            }\r\n        }\r\n        fmt.Println(res)\r\n    }\r\n}\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const t = require('readline').question('');\\nconst readline = require('readline');\\nconst rl = readline.createInterface({input: process.stdin, output: process.stdout});\\nrl.on('line', (line) => {\\n  const [l, r] = line.split(' ').map(Number);\\n  let ans = 0;\\n  for (let i = l; i <= r; i++) {\\n    const num = i.toString();\\n    let flag = true;\\n    for (let j = 0; j < num.length; j++) {\\n      if (num[j] !== '0' && i % num[j] !== 0) {\\n        flag = false;\\n        break;\\n      }\\n    }\\n    if (flag) {\\n      ans++;\\n    }\\n  }\\n  console.log(ans);\\n});\\nrl.on('close', () => {\\n  process.exit();\\n});\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val t = readLine()!!.toInt()\n    for (i in 0 until t) {\n        val (l, r) = readLine()!!.split(\" \").map { it.toInt() }\n        val ans = 0\n        for (i in l..r) {\n            val s = i.toString()\n            val d = s.toCharArray().map { it.toString().toInt() }\n            val m = d.distinct()\n            if (m.size == d.size) {\n                ans++\n            }\n        }\n        println(ans)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$t = (int)fgets(STDIN);\nfor ($i = 0; $i < $t; $i++) {\n    $arr = explode(' ', fgets(STDIN));\n    $l = (int)$arr[0];\n    $r = (int)$arr[1];\n    $count = 0;\n    for ($j = $l; $j <= $r; $j++) {\n        $isBeautiful = true;\n        $arr2 = str_split((string)$j);\n        foreach ($arr2 as $k => $v) {\n            if ($v != '0' && $j % $v != 0) {\n                $isBeautiful = false;\n                break;\n            }\n        }\n        if ($isBeautiful) {\n            $count++;\n        }\n    }\n    echo $count . PHP_EOL;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int t;\n    scanf(\" %d \", &t);\n    while (t--) {\n        int l, r;\n        scanf(\" %d %d \", &l, &r);\n        int ans = 0;\n        for (int i = l; i <= r; i++) {\n            int s = i;\n            int cnt = 0;\n            while (s > 0) {\n                cnt++;\n                s \/= 10;\n            }\n            bool flag = true;\n            for (int j = 0; j < cnt; j++) {\n                if (i % (10 ^ j) != 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag)\n                ans++;\n        }\n        printf(\" %d\\n \", ans);\n    }\n}\n\"}]","perl":"","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut t = String::new();\n    io::stdin().read_line(&mut t).unwrap();\n    let t: usize = t.trim().parse().unwrap();\n    for _ in 0..t {\n        let mut line = String::new();\n        io::stdin().read_line(&mut line).unwrap();\n        let mut iter = line.split_whitespace();\n        let l = iter.next().unwrap().parse().unwrap();\n        let r = iter.next().unwrap().parse().unwrap();\n        let mut ans = 0;\n        for i in l..=r {\n            let mut flag = true;\n            let mut s = i.to_string();\n            for c in s.chars() {\n                if c != '0' && i % c.to_digit(10).unwrap() != 0 {\n                    flag = false;\n                    break;\n                }\n            }\n            if flag {\n                ans += 1;\n            }\n        }\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"B. Berland National Library","description":"Berland National Library has recently been built in the capital of Berland. In addition, in the library you can take any of the collected works of Berland leaders, the library has a reading room.Today was the pilot launch of an automated reading room visitors' accounting system! The scanner of the system is installed at the entrance to the reading room. It records the events of the form \"reader entered room\", \"reader left room\". Every reader is assigned a registration number during the registration procedure at the library \u2014 it's a unique integer from 1 to 10^6. Thus, the system logs events of two forms:  \"+ ri\" \u2014 the reader with registration number ri entered the room;  \"- ri\" \u2014 the reader with registration number ri left the room. The first launch of the system was a success, it functioned for some period of time, and, at the time of its launch and at the time of its shutdown, the reading room may already have visitors.Significant funds of the budget of Berland have been spent on the design and installation of the system. Therefore, some of the citizens of the capital now demand to explain the need for this system and the benefits that its implementation will bring. Now, the developers of the system need to urgently come up with reasons for its existence.Help the system developers to find the minimum possible capacity of the reading room (in visitors) using the log of the system available to you.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains a positive integer n (1\u2264n\u2264100) \u2014 the number of records in the system log. Next follow n events from the system journal in the order in which the were made. Each event was written on a single line and looks as \"+ ri\" or \"- ri\", where ri is an integer from 1 to 10^6, the registration number of the visitor (that is, distinct visitors always have distinct registration numbers).\nIt is guaranteed that the log is not contradictory, that is, for every visitor the types of any of his two consecutive events are distinct. Before starting the system, and after stopping the room may possibly contain visitors.\n","output_spec":"Print a single integer \u2014 the minimum possible capacity of the reading room.\n","notes":"In the first sample test, the system log will ensure that at some point in the reading room were visitors with registration numbers 1, 1200 and 12001. More people were not in the room at the same time based on the log. Therefore, the answer to the test is 3.\n","sample_inputs":["6\n+ 12001\n- 12001\n- 1\n- 1200\n+ 1\n+ 7\n","2\n- 1\n- 2\n","2\n+ 1\n- 1\n"],"sample_outputs":["3","2","1"],"id":"567-B","difficulty":1300,"tags":["implementation"],"src_uid":"6cfd3b0a403212ec68bac1667bce9ef1","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <vector>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            cnt++;\n        } else {\n            cnt--;\n        }\n        ans = max(ans, cnt);\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        int[] arr = new int[n];\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < n; i++) {\n            String s = br.readLine();\n            if (s.charAt(0) == '+') {\n                arr[i] = Integer.parseInt(s.substring(1));\n                map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);\n            } else {\n                arr[i] = Integer.parseInt(s.substring(1));\n                map.put(arr[i], map.getOrDefault(arr[i], 0) - 1);\n            }\n        }\n        Arrays.sort(arr);\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (map.get(arr[i]) > 0) {\n                max = Math.max(max, map.get(arr[i]));\n            }\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = []\nfor i in range(n):\n    s = input()\n    if s[0] == '+':\n        a.append(int(s[1:]))\n    else:\n        a.remove(int(s[1:]))\nprint(max(a))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=0\nb=0\nfor i in range(n):\n    s=input()\n    if s[0]==\"+\":\n        a+=1\n    else:\n        b+=1\nprint(max(a,b))\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int> a = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            string s = Console.ReadLine();\n            if (s[0] == '+')\n            {\n                a.Add(int.Parse(s.Substring(1)));\n            }\n            else\n            {\n                a.Remove(int.Parse(s.Substring(1)));\n            }\n        }\n        Console.WriteLine(a.Max() + 1);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = []\nfor i in 1..n\n    a << gets.chomp\nend\n\na.sort!\n\nans = 0\n\nfor i in 0..n-1\n    if a[i][0] == '+'\n        ans += 1\n    else\n        ans -= 1\n    end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program T1;\nuses SysUtils;\nvar\n  n, i, j, k, m, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z: integer;\nbegin\n  readln(n);\n  for i := 1 to n do\n  begin\n    readln(a);\n    if a = '+' then\n    begin\n      inc(m);\n    end\n    else\n    begin\n      dec(m);\n    end;\n  end;\n  writeln(m);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var s string\\n        fmt.Scanf(\\\"%s\\\\n\\\", &s)\\n        if s[0] == \\\"+\\n\\\" {\\n            a = append(a, 1)\\n        } else {\\n            a = append(a, -1)\\n        }\\n    }\\n    var max int\\n    for i := 0; i < len(a); i++ {\\n        max = max + a[i]\\n    }\\n    fmt.Println(max)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readLine());\nconst arr = [];\nfor (let i = 0; i < n; i++) {\n    const s = process.stdin.readLine();\n    arr.push(s);\n}\nconst max = 0;\nfor (let i = 0; i < n; i++) {\n    if (arr[i][0] === \"+\") {\n        max++;\n    } else {\n        max--;\n    }\n}\nconsole.log(max);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val arr = mutableListOf<Int>()\n    var max = 0\n    for (i in 0 until n) {\n        val s = readLine()!!\n        if (s.startsWith(\"+\")) {\n            arr.add(s.substring(1).toInt())\n        } else {\n            arr.remove(s.substring(1).toInt())\n        }\n        max = Math.max(max, arr.size)\n    }\n    println(max)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n$arr = [];\\n$max = 0;\\n\\nfor ($i = 0; $i < $n; $i++) {\\n    $str = trim(fgets(STDIN));\\n    $arr[] = $str;\\n}\\n\\nfor ($i = 0; $i < $n; $i++) {\\n    if ($arr[$i][0] == '+') {\\n        $max++;\\n    } else {\\n        $max--;\\n    }\\n}\\n\\necho $max;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    int i;\n    for (i = 0; i < n; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    int max = 0;\n    int count = 0;\n    for (i = 0; i < n; i++) {\n        if (a[i] == \"+\") {\n            count++;\n        } else {\n            count--;\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    printf(\" %d \", max);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <STDIN>;\\nmy @a = ();\\nmy $max = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $s = <STDIN>;\\n    my $r = $s =~ \/(\\d+)\/;\\n    if ($r) {\\n        if ($s =~ \/\\+\/) {\\n            push @a, $r;\\n        } else {\\n            pop @a;\\n        }\\n    }\\n    $max = max($max, scalar @a);\\n}\\n\\nprint $max;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut in_room = 0;\n    let mut max_in_room = 0;\n    for _ in 0..n {\n        let mut line = String::new();\n        io::stdin().read_line(&mut line).unwrap();\n        let line: Vec<&str> = line.split_whitespace().collect();\n        let action = line[0];\n        let id = line[1].parse::<usize>().unwrap();\n        if action == \"+\" {\n            in_room += 1;\n        } else {\n            in_room -= 1;\n        }\n        max_in_room = max(max_in_room, in_room);\n    }\n\n    println!(\"{}\", max_in_room);\n}\n\"\"\"}]"}
{"title":"A. Arrays","description":"You are given two arrays A and B consisting of integers, sorted in non-decreasing order. Check whether it is possible to choose k numbers in array A and choose m numbers in array B so that any number chosen in the first array is strictly less than any number chosen in the second array.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers nA,nB (1\u2264nA,nB\u226410^5), separated by a space \u2014 the sizes of arrays A and B, correspondingly.\nThe second line contains two integers k and m (1\u2264k\u2264nA,1\u2264m\u2264nB), separated by a space.\nThe third line contains nA numbers a1,a2,... anA (-10^9\u2264a1\u2264a2\u2264...\u2264anA\u226410^9), separated by spaces \u2014 elements of array A.\nThe fourth line contains nB integers b1,b2,... bnB (-10^9\u2264b1\u2264b2\u2264...\u2264bnB\u226410^9), separated by spaces \u2014 elements of array B.\n","output_spec":"Print \"YES\" (without the quotes), if you can choose k numbers in array A and m numbers in array B so that any number chosen in array A was strictly less than any number chosen in array B. Otherwise, print \"NO\" (without the quotes).\n","notes":"In the first sample test you can, for example, choose numbers 1 and 2 from array A and number 3 from array B (1 < 3 and 2 < 3).\nIn the second sample test the only way to choose k elements in the first array and m elements in the second one is to choose all numbers in both arrays, but then not all the numbers chosen in A will be less than all the numbers chosen in B: .\n","sample_inputs":["3 3\n2 1\n1 2 3\n3 4 5\n","3 3\n3 3\n1 2 3\n3 4 5\n","5 2\n3 1\n1 1 1 1 1\n2 2\n"],"sample_outputs":["YES\n","NO\n","YES\n"],"id":"572-A","difficulty":900,"tags":["sortings"],"src_uid":"8e0581cce19d6bf5eba30a0aebee9a08","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int nA, nB, k, m;\n    cin >> nA >> nB;\n    cin >> k >> m;\n    int a[nA], b[nB];\n    for (int i = 0; i < nA; i++) {\n        cin >> a[i];\n    }\n    for (int i = 0; i < nB; i++) {\n        cin >> b[i];\n    }\n    sort(a, a + nA);\n    sort(b, b + nB);\n    if (a[k - 1] < b[0]) {\n        cout << \"YES\" << endl;\n    } else {\n        cout << \"NO\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int nA = scanner.nextInt();\n        int nB = scanner.nextInt();\n\n        int k = scanner.nextInt();\n        int m = scanner.nextInt();\n\n        int[] a = new int[nA];\n        int[] b = new int[nB];\n\n        for (int i = 0; i < nA; i++) {\n            a[i] = scanner.nextInt();\n        }\n\n        for (int i = 0; i < nB; i++) {\n            b[i] = scanner.nextInt();\n        }\n\n        boolean flag = true;\n\n        for (int i = 0; i < k; i++) {\n            if (a[i] >= b[0]) {\n                flag = false;\n                break;\n            }\n        }\n\n        for (int i = 0; i < m; i++) {\n            if (b[i] <= a[nA - 1]) {\n                flag = false;\n                break;\n            }\n        }\n\n        if (flag) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\nk, l = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()\n\nif k > n or l > m:\n    print(\"NO\")\n    exit()\n\nfor i in range(k):\n    if a[i] > b[l - 1]:\n        print(\"NO\")\n        exit()\n\nprint(\"YES\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int nA, nB, k, m;\n    scanf(\" %d %d \", &nA, &nB);\n    scanf(\" %d %d \", &k, &m);\n    int a[nA], b[nB];\n    for (int i = 0; i < nA; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < nB; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int i = 0, j = 0;\n    while (i < nA && j < nB) {\n        if (a[i] < b[j]) {\n            i++;\n        } else {\n            j++;\n        }\n    }\n    if (i >= k) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var nA = int.Parse(input[0]);\n        var nB = int.Parse(input[1]);\n\n        input = Console.ReadLine().Split(' ');\n        var k = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n\n        var a = Console.ReadLine().Split(' ');\n        var b = Console.ReadLine().Split(' ');\n\n        var aa = new List<int>();\n        var bb = new List<int>();\n\n        for (int i = 0; i < nA; i++)\n        {\n            aa.Add(int.Parse(a[i]));\n        }\n\n        for (int i = 0; i < nB; i++)\n        {\n            bb.Add(int.Parse(b[i]));\n        }\n\n        var aaSorted = aa.OrderBy(x => x).ToList();\n        var bbSorted = bb.OrderBy(x => x).ToList();\n\n        int i = 0;\n        int j = 0;\n\n        while (i < k && j < m)\n        {\n            if (aaSorted[i] < bbSorted[j])\n            {\n                i++;\n            }\n            else\n            {\n                j++;\n            }\n        }\n\n        if (i == k)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn, m = gets.split.map(&:to_i)\nk, l = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\nb = gets.split.map(&:to_i)\n\nif k + l > n + m\n  puts \"NO\"\n  exit\nend\n\nif k > n\n  puts \"NO\"\n  exit\nend\n\nif l > m\n  puts \"NO\"\n  exit\nend\n\nif a[k - 1] > b[0]\n  puts \"NO\"\n  exit\nend\n\nif b[l - 1] < a[0]\n  puts \"NO\"\n  exit\nend\n\nputs \"YES\"\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Problem_D;\n\nuses\n  SysUtils;\n\nvar\n  nA, nB, k, m: Integer;\n  a, b: array of Integer;\n\nbegin\n  Readln(nA, nB);\n  Readln(k, m);\n  for i := 0 to nA - 1 do\n    Read(a[i]);\n  for i := 0 to nB - 1 do\n    Read(b[i]);\n\n  if (k > nA) or (m > nB) then\n    Writeln('NO')\n  else\n  begin\n    i := 0;\n    j := 0;\n    while (i < nA) and (j < nB) do\n    begin\n      if (a[i] < b[j]) then\n      begin\n        i := i + 1;\n      end\n      else\n      begin\n        j := j + 1;\n      end;\n    end;\n\n    if (i = k) then\n      Writeln('YES')\n    else\n      Writeln('NO');\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var nA, nB, k, m int\\n    fmt.Scanf(\\\"%d %d\\\", &nA, &nB)\\n    fmt.Scanf(\\\"%d %d\\\", &k, &m)\\n    var a, b []int\\n    for i := 0; i < nA; i++ {\\n        fmt.Scanf(\\\"%d\\\", &a[i])\\n    }\\n    for i := 0; i < nB; i++ {\\n        fmt.Scanf(\\\"%d\\\", &b[i])\\n    }\\n    if a[k-1] < b[0] {\\n        fmt.Println(\\\"YES\\\")\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nnA,nB = map(int,input().split())\nk,m = map(int,input().split())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\n\nif k > nA or m > nB:\n    print(\"NO\")\n    exit()\n\na.sort()\nb.sort()\n\nfor i in range(k):\n    if a[i] > b[m-1]:\n        print(\"NO\")\n        exit()\n\nprint(\"YES\")\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val (nA, nB) = sc.nextLine().split(\" \").map { it.toInt() }\n    val (k, m) = sc.nextLine().split(\" \").map { it.toInt() }\n    val a = sc.nextLine().split(\" \").map { it.toInt() }.sorted()\n    val b = sc.nextLine().split(\" \").map { it.toInt() }.sorted()\n\n    var i = 0\n    var j = 0\n    while (i < nA && j < nB) {\n        if (a[i] < b[j]) {\n            i++\n        } else {\n            j++\n        }\n    }\n\n    if (i >= k) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$input = explode(\" \", trim(fgets(STDIN)));\n$nA = intval($input[0]);\n$nB = intval($input[1]);\n\n$input = explode(\" \", trim(fgets(STDIN)));\n$k = intval($input[0]);\n$m = intval($input[1]);\n\n$input = explode(\" \", trim(fgets(STDIN)));\n$a = array_map('intval', $input);\n\n$input = explode(\" \", trim(fgets(STDIN)));\n$b = array_map('intval', $input);\n\n$a = array_slice($a, 0, $k);\n$b = array_slice($b, 0, $m);\n\nsort($a);\nsort($b);\n\n$flag = true;\nfor ($i = 0; $i < $k; $i++) {\n    if ($a[$i] >= $b[$i]) {\n        $flag = false;\n        break;\n    }\n}\n\nif ($flag) {\n    echo \"YES\\n\";\n} else {\n    echo \"NO\\n\";\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int nA, nB, k, m;\n    scanf(\" %d %d \", &nA, &nB);\n    scanf(\" %d %d \", &k, &m);\n    int a[nA], b[nB];\n    for (int i = 0; i < nA; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < nB; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int i = 0, j = 0;\n    while (i < nA && j < nB) {\n        if (a[i] < b[j]) {\n            i++;\n        } else {\n            j++;\n        }\n    }\n    if (i >= k) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $nA, $nB;\nmy $k, $m;\n\nchomp(my $line = <STDIN>);\n($nA, $nB) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n($k, $m) = split(' ', $line);\n\nmy @a = split(' ', <STDIN>);\nmy @b = split(' ', <STDIN>);\n\nmy $i = 0;\nmy $j = 0;\n\nwhile ($i < $nA && $j < $nB) {\n    if ($a[$i] < $b[$j]) {\n        $i++;\n    } else {\n        $j++;\n    }\n}\n\nif ($i >= $k) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_a: Vec<i32> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut k_m: Vec<i32> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a: Vec<i32> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut b: Vec<i32> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut a_min = a[0];\n    let mut b_max = b[0];\n\n    for i in 0..n_a {\n        if a[i] < a_min {\n            a_min = a[i];\n        }\n    }\n\n    for i in 0..n_b {\n        if b[i] > b_max {\n            b_max = b[i];\n        }\n    }\n\n    if a_min < b_max {\n        stdout.write_all(b\"YES\\n\").unwrap();\n    } else {\n        stdout.write_all(b\"NO\\n\").unwrap();\n    }\n}\n\"\"\"}]"}
{"title":"A. Square Earth?","description":"Meg the Rabbit decided to do something nice, specifically \u2014 to determine the shortest distance between two points on the surface of our planet. But Meg... what can you say, she wants everything simple. So, she already regards our planet as a two-dimensional circle. No, wait, it's even worse \u2014 as a square of side n. Thus, the task has been reduced to finding the shortest path between two dots on a square (the path should go through the square sides). To simplify the task let us consider the vertices of the square to lie at points whose coordinates are: (0,0), (n,0), (0,n) and (n,n).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The single line contains 5 space-separated integers: n,x1,y1,x2,y2 (1\u2264n\u22641000,0\u2264x1,y1,x2,y2\u2264n) which correspondingly represent a side of the square, the coordinates of the first point and the coordinates of the second point. It is guaranteed that the points lie on the sides of the square.\n","output_spec":"You must print on a single line the shortest distance between the points.\n","notes":null,"sample_inputs":["2 0 0 1 0\n","2 0 1 2 1\n","100 0 0 100 100\n"],"sample_outputs":["1\n","4\n","200\n"],"id":"57-A","difficulty":1300,"tags":["dfs+and+similar","greedy","implementation"],"src_uid":"685fe16c217b5b71eafdb4198822250e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n,x1,y1,x2,y2=map(int,input().split())\nprint(min(abs(x1-x2),abs(y1-y2),n-abs(x1-x2),n-abs(y1-y2)))\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int x1 = sc.nextInt();\n        int y1 = sc.nextInt();\n        int x2 = sc.nextInt();\n        int y2 = sc.nextInt();\n\n        int dx = Math.abs(x1 - x2);\n        int dy = Math.abs(y1 - y2);\n\n        int ans = Math.min(dx, dy);\n        if (dx == dy) {\n            ans = Math.min(ans, n - dx);\n        }\n\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,x1,y1,x2,y2=map(int,input().split())\nprint(min(abs(x1-x2),abs(y1-y2),n-abs(x1-x2),n-abs(y1-y2)))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, x1, y1, x2, y2;\n    scanf(\" %d%d%d%d%d \", &n, &x1, &y1, &x2, &y2);\n    int d1 = abs(x1 - x2);\n    int d2 = abs(y1 - y2);\n    int d3 = n - d1;\n    int d4 = n - d2;\n    int d = min(d1, d2);\n    d = min(d, d3);\n    d = min(d, d4);\n    printf(\" %d \", d);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace MegTheRabbit\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int x1 = int.Parse(input[1]);\n            int y1 = int.Parse(input[2]);\n            int x2 = int.Parse(input[3]);\n            int y2 = int.Parse(input[4]);\n\n            int dx = Math.Abs(x1 - x2);\n            int dy = Math.Abs(y1 - y2);\n\n            int min = Math.Min(dx, dy);\n\n            Console.WriteLine(min);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,x1,y1,x2,y2=map(int,input().split())\nprint(min(abs(x1-x2),abs(y1-y2),n-abs(x1-x2),n-abs(y1-y2)))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Meg;\nuses SysUtils;\nvar\n  n, x1, y1, x2, y2, d: integer;\nbegin\n  readln(n, x1, y1, x2, y2);\n  d := abs(x1 - x2) + abs(y1 - y2);\n  if (x1 = x2) and (y1 = y2) then\n    d := 0;\n  if (x1 = x2) and (y1 < y2) then\n    d := n - d;\n  if (x1 = x2) and (y1 > y2) then\n    d := d - n;\n  if (y1 = y2) and (x1 < x2) then\n    d := n - d;\n  if (y1 = y2) and (x1 > x2) then\n    d := d - n;\n  writeln(d);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var n, x1, y1, x2, y2 int\\n    fmt.Scanf(\\\"%d %d %d %d %d\\\", &n, &x1, &y1, &x2, &y2)\\n    var d int\\n    if x1 == x2 {\\n        d = abs(y2 - y1)\\n    } else if y1 == y2 {\\n        d = abs(x2 - x1)\\n    } else {\\n        d = min(abs(x2 - x1), abs(y2 - y1))\\n    }\\n    fmt.Println(d)\\n}\\n\\nfunc abs(x int) int {\\n    if x < 0 {\\n        return -x\\n    } else {\\n        return x\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, x1, y1, x2, y2] = line.split(' ').map(Number);\n  const dx = Math.abs(x1 - x2);\n  const dy = Math.abs(y1 - y2);\n  console.log(Math.min(dx, dy, n - dx, n - dy));\n  rl.close();\n});\n\nrl.on('close', () => process.exit(0));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.abs\n\nfun main() {\n    val (n, x1, y1, x2, y2) = readLine().split(\" \").map { it.toInt() }\n    val dx = abs(x1 - x2)\n    val dy = abs(y1 - y2)\n    val min = minOf(dx, dy)\n    val max = maxOf(dx, dy)\n    println(min + max)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$input = explode(' ', trim(fgets(STDIN)));\\n\\n$n = $input[0];\\n$x1 = $input[1];\\n$y1 = $input[2];\\n$x2 = $input[3];\\n$y2 = $input[4];\\n\\n$dx = abs($x1 - $x2);\\n$dy = abs($y1 - $y2);\\n\\necho min($dx, $dy, $n - $dx, $n - $dy);\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, x1, y1, x2, y2;\n    scanf(\" %d %d %d %d %d \", &n, &x1, &y1, &x2, &y2);\n    int dx = abs(x1 - x2);\n    int dy = abs(y1 - y2);\n    int d = min(dx, dy);\n    int d1 = min(dx, n - dx);\n    int d2 = min(dy, n - dy);\n    printf(\" %d \", min(d, d1 + d2));\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $x1, $y1, $x2, $y2;\n\nchomp(my $input = <STDIN>);\n\n($n, $x1, $y1, $x2, $y2) = split(' ', $input);\n\nmy $dx = abs($x2 - $x1);\nmy $dy = abs($y2 - $y1);\n\nif ($dx == 0) {\n    print $dy;\n} elsif ($dy == 0) {\n    print $dx;\n} else {\n    print ($dx + $dy) \/ 2;\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = input_vec[0];\n    let x1 = input_vec[1];\n    let y1 = input_vec[2];\n    let x2 = input_vec[3];\n    let y2 = input_vec[4];\n\n    let mut distance = 0;\n    if x1 == x2 {\n        distance = (y2 - y1).abs();\n    } else if y1 == y2 {\n        distance = (x2 - x1).abs();\n    } else {\n        distance = (x2 - x1).abs() + (y2 - y1).abs();\n    }\n\n    println!(\"{}\", distance);\n}\n\"\"\"}]"}
{"title":"A. Word","description":"Vasya is very upset that many people on the Net mix uppercase and lowercase letters in one word. That's why he decided to invent an extension for his favorite browser that would change the letters' register in every word so that it either only consisted of lowercase letters or, vice versa, only of uppercase ones. At that as little as possible letters should be changed in the word. For example, the word HoUse must be replaced with house, and the word ViP \u2014 with VIP. If a word contains an equal number of uppercase and lowercase letters, you should replace all the letters with lowercase ones. For example, maTRIx should be replaced by matrix. Your task is to use the given method on one given word.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a word s \u2014 it consists of uppercase and lowercase Latin letters and possesses the length from 1 to 100.\n","output_spec":"Print the corrected word s. If the given word s has strictly more uppercase letters, make the word written in the uppercase register, otherwise - in the lowercase one.\n","notes":null,"sample_inputs":["HoUse\n","ViP\n","maTRIx\n"],"sample_outputs":["house\n","VIP\n","matrix\n"],"id":"59-A","difficulty":800,"tags":["implementation","strings"],"src_uid":"b432dfa66bae2b542342f0b42c0a2598","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"s=input()\nif s.islower():\n    print(s.upper())\nelse:\n    print(s.lower())\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.nextLine();\n        int countUpper = 0;\n        int countLower = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (Character.isUpperCase(s.charAt(i))) {\n                countUpper++;\n            } else {\n                countLower++;\n            }\n        }\n        if (countUpper > countLower) {\n            System.out.println(s.toUpperCase());\n        } else if (countUpper < countLower) {\n            System.out.println(s.toLowerCase());\n        } else {\n            System.out.println(s);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\nif s.islower():\n    print(s.upper())\nelse:\n    print(s.lower())\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    char s[101];\n    scanf(\" %s \", s);\n    int i, n = 0, m = 0;\n    for (i = 0; s[i] != '\\0'; i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z')\n            n++;\n        else\n            m++;\n    }\n    if (n > m) {\n        for (i = 0; s[i] != '\\0'; i++)\n            printf(\"%c\", s[i] - 'a' + 'A');\n    } else if (m > n) {\n        for (i = 0; s[i] != '\\0'; i++)\n            printf(\"%c\", s[i] - 'A' + 'a');\n    } else {\n        for (i = 0; s[i] != '\\0'; i++)\n            printf(\"%c\", s[i]);\n    }\n    printf(\"\\n\");\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string s = Console.ReadLine();\n            int count = 0;\n            for (int i = 0; i < s.Length; i++)\n            {\n                if (char.IsUpper(s[i]))\n                {\n                    count++;\n                }\n            }\n            if (count > s.Length \/ 2)\n            {\n                Console.WriteLine(s.ToUpper());\n            }\n            else\n            {\n                Console.WriteLine(s.ToLower());\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\n\nif s.count('a-z') > s.count('A-Z'):\n    print(s.lower())\nelse:\n    print(s.upper())\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Solution;\n\nuses\n  SysUtils;\n\nvar\n  s: string;\n\nbegin\n  Readln(s);\n  if (s[1] in ['a'..'z']) then\n    Writeln(UpCase(s))\n  else\n    Writeln(s);\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    var s string\n    fmt.Scan(&s)\n\n    count := 0\n    for _, v := range s {\n        if strings.ToUpper(string(v)) == string(v) {\n            count++\n        }\n    }\n\n    if count > len(s)\/2 {\n        fmt.Println(strings.ToUpper(s))\n    } else {\n        fmt.Println(strings.ToLower(s))\n    }\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"s = input()\nif s.islower():\n    print(s.upper())\nelse:\n    print(s.lower())\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val countUpper = s.count { it.isUpperCase() }\n    val countLower = s.count { it.isLowerCase() }\n    if (countUpper > countLower) {\n        println(s.toUpperCase())\n    } else if (countUpper < countLower) {\n        println(s.toLowerCase())\n    } else {\n        println(s)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$s = trim(fgets(STDIN));\\n$count = 0;\\nfor ($i = 0; $i < strlen($s); $i++) {\\n    if (ctype_upper($s[$i])) {\\n        $count++;\\n    }\\n}\\nif ($count > strlen($s) \/ 2) {\\n    echo strtoupper($s);\\n} else {\\n    echo strtolower($s);\\n}\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s;\n    scanf(\" %s \", s);\n    int n = s.length;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (s[i] >= 'A' && s[i] <= 'Z') {\n            count++;\n        }\n    }\n    if (count > n \/ 2) {\n        printf(\" %s \", s.toUpper());\n    } else {\n        printf(\" %s \", s.toLower());\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nmy $count_upper = 0;\nmy $count_lower = 0;\n\nfor (my $i = 0; $i < length($s); $i++) {\n    if ($s[$i] =~ \/[A-Z]\/) {\n        $count_upper++;\n    } else {\n        $count_lower++;\n    }\n}\n\nif ($count_upper > $count_lower) {\n    print uc($s);\n} else {\n    print lc($s);\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut s = String::new();\n    io::stdin().read_line(&mut s).unwrap();\n\n    let mut count_upper = 0;\n    let mut count_lower = 0;\n    for c in s.chars() {\n        if c.is_uppercase() {\n            count_upper += 1;\n        } else {\n            count_lower += 1;\n        }\n    }\n\n    if count_upper > count_lower {\n        println!(\"{}\", s.to_uppercase());\n    } else if count_lower > count_upper {\n        println!(\"{}\", s.to_lowercase());\n    } else {\n        println!(\"{}\", s);\n    }\n}\n\"\"\"}]"}
{"title":"A. The Two Routes","description":"In Absurdistan, there are n towns (numbered 1 through n) and m bidirectional railways. There is also an absurdly simple road network\u00a0\u2014 for each pair of different towns x and y, there is a bidirectional road between towns x and y if and only if there is no railway between them. Travelling to a different town using one railway or one road always takes exactly one hour.A train and a bus leave town 1 at the same time. They both have the same destination, town n, and don't make any stops on the way (but they can wait in town n). The train can move only along railways and the bus can move only along roads.You've been asked to plan out routes for the vehicles; each route can use any road\/railway multiple times. One of the most important aspects to consider is safety\u00a0\u2014 in order to avoid accidents at railway crossings, the train and the bus must not arrive at the same town (except town n) simultaneously.Under these constraints, what is the minimum number of hours needed for both vehicles to reach town n (the maximum of arrival times of the bus and the train)? Note, that bus and train are not required to arrive to the town n at the same moment of time, but are allowed to do so.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains two integers n and m (2\u2264n\u2264400, 0\u2264m\u2264n(n-1)\/2)\u00a0\u2014 the number of towns and the number of railways respectively.\nEach of the next m lines contains two integers u and v, denoting a railway between towns u and v (1\u2264u,v\u2264n, u\u2260v).\nYou may assume that there is at most one railway connecting any two towns.\n","output_spec":"Output one integer\u00a0\u2014 the smallest possible time of the later vehicle's arrival in town n. If it's impossible for at least one of the vehicles to reach town n, output -1.\n","notes":"In the first sample, the train can take the route  and the bus can take the route . Note that they can arrive at town 4 at the same time.\nIn the second sample, Absurdistan is ruled by railwaymen. There are no roads, so there's no way for the bus to reach town 4.\n","sample_inputs":["4 2\n1 3\n3 4\n","4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n","5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n"],"sample_outputs":["2\n","-1\n","3\n"],"id":"601-A","difficulty":1600,"tags":["graphs","shortest+paths"],"src_uid":"fbfc333ad4b0a750f654a00be84aea67","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n\n    vector<vector<int>> g(n + 1);\n    for (int i = 0; i < m; i++) {\n        int u, v;\n        cin >> u >> v;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n\n    vector<int> d(n + 1, -1);\n    d[1] = 0;\n    queue<int> q;\n    q.push(1);\n\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n\n        for (int v : g[u]) {\n            if (d[v] == -1) {\n                d[v] = d[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        if (d[i] == -1) {\n            ans = -1;\n            break;\n        }\n        ans = max(ans, d[i]);\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        List<List<Integer>> graph = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            graph.add(new ArrayList<>());\n        }\n        for (int i = 0; i < m; i++) {\n            input = br.readLine().split(\" \");\n            int u = Integer.parseInt(input[0]);\n            int v = Integer.parseInt(input[1]);\n            graph.get(u - 1).add(v - 1);\n            graph.get(v - 1).add(u - 1);\n        }\n        int[] time = new int[n];\n        Arrays.fill(time, -1);\n        dfs(graph, 0, 0, time);\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (time[i] != -1) {\n                max = Math.max(max, time[i]);\n            }\n        }\n        System.out.println(max);\n    }\n\n    private static void dfs(List<List<Integer>> graph, int u, int time, int[] visited) {\n        visited[u] = 1;\n        for (int v : graph.get(u)) {\n            if (visited[v] == 0) {\n                dfs(graph, v, time + 1, visited);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v = map(int, input().split())\n    graph[u - 1].append(v - 1)\n    graph[v - 1].append(u - 1)\n\n\ndef dfs(v, visited, time):\n    visited[v] = True\n    for u in graph[v]:\n        if not visited[u]:\n            dfs(u, visited, time + 1)\n\n\nvisited = [False] * n\ndfs(0, visited, 0)\n\nans = 0\nfor i in range(n):\n    if not visited[i]:\n        ans = -1\n        break\n\nprint(ans)\n\"\"\"}]","C":"","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\nrailways = []\n\nm.times do\n  railways << gets.split.map(&:to_i)\nend\n\n# \u5404\u753a\u306e\u5230\u9054\u6642\u9593\n\ntime = [0] * (n + 1)\n\n# \u5404\u753a\u306e\u5230\u9054\u6642\u9593\u306e\u66f4\u65b0\n\n(1..n).each do |i|\n  railways.each do |u, v|\n    if i == u\n      time[v] = [time[v], time[u] + 1].max\n    elsif i == v\n      time[u] = [time[u], time[v] + 1].max\n    end\n  end\nend\n\n# \u5230\u9054\u6642\u9593\u306e\u6700\u5927\u5024\n\nputs time.max\"}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program TrainBus;\nuses SysUtils;\n\nconst\n  MAXN = 400;\n\nvar\n  n, m, i, j, k, u, v, ans: Integer;\n  a: array[0..MAXN] of Boolean;\n  b: array[0..MAXN] of Boolean;\n\nbegin\n  Readln(n, m);\n  for i := 1 to m do\n  begin\n    Readln(u, v);\n    a[u] := True;\n    b[v] := True;\n  end;\n  ans := 0;\n  for i := 1 to n do\n  begin\n    if not a[i] and not b[i] then\n      ans := ans + 1;\n  end;\n  Writeln(ans);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scanf(\" %d %d \", &n, &m)\n\tg := make([][]int, n+1)\n\tfor i := 0; i < m; i++ {\n\t\tvar u, v int\n\t\tfmt.Scanf(\" %d %d \", &u, &v)\n\t\tg[u] = append(g[u], v)\n\t\tg[v] = append(g[v], u)\n\t}\n\tans := 0\n\tfor i := 1; i <= n; i++ {\n\t\tif len(g[i]) == 0 {\n\t\t\tans++\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(input[0]);\nconst m = parseInt(input[1]);\nconst graph = new Map();\nfor (let i = 0; i < m; i++) {\n    const [u, v] = input[i + 2].split(' ').map(x => parseInt(x));\n    graph.set(u, [v]);\n    graph.set(v, [u]);\n}\nconst dfs = (u, time) => {\n    if (u === n) {\n        return time;\n    }\n    for (const v of graph.get(u)) {\n        if (dfs(v, time + 1) !== -1) {\n            return time + 1;\n        }\n    }\n    return -1;\n};\nconsole.log(Math.max(dfs(1, 0), dfs(n, 0)));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n + 1) { mutableListOf<Int>() }\n    for (i in 0 until m) {\n        val (u, v) = readLine().split(\" \").map { it.toInt() }\n        graph[u].add(v)\n        graph[v].add(u)\n    }\n    val visited = BooleanArray(n + 1)\n    val queue = LinkedList<Int>()\n    queue.add(1)\n    visited[1] = true\n    var time = 0\n    while (queue.isNotEmpty()) {\n        val size = queue.size\n        for (i in 0 until size) {\n            val cur = queue.poll()\n            for (next in graph[cur]) {\n                if (!visited[next]) {\n                    queue.add(next)\n                    visited[next] = true\n                }\n            }\n        }\n        time++\n    }\n    println(time)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $u, $v = explode(' ', trim(fgets(STDIN)));\n    $graph[$u][] = $v;\n    $graph[$v][] = $u;\n}\n$visited = [];\n$queue = [$n];\n$time = 0;\nwhile (!empty($queue)) {\n    $u = array_shift($queue);\n    $visited[$u] = true;\n    foreach ($graph[$u] as $v) {\n        if (!isset($visited[$v])) {\n            $queue[] = $v;\n            $time = max($time, $visited[$u] + 1);\n        }\n    }\n}\necho $time;\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @a;\nmy @b;\nmy @c;\nmy @d;\n\nsub dfs {\n    my $i = shift;\n    my $j = shift;\n    my $k = shift;\n    my $l = shift;\n\n    if ($i == $n) {\n        if ($k > $l) {\n            print $k;\n            exit;\n        }\n    }\n\n    if ($j < $m) {\n        if ($a[$i][$j] == 1) {\n            dfs($i, $j + 1, $k + 1, $l);\n        }\n    }\n\n    if ($k < $n) {\n        if ($b[$i][$k] == 1) {\n            dfs($i, $j, $k + 1, $l);\n        }\n    }\n\n    if ($l < $n) {\n        if ($c[$i][$l] == 1) {\n            dfs($i, $j, $k, $l + 1);\n        }\n    }\n}\n\nsub init {\n    my $i, $j;\n\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n            $a[$i][$j] = 0;\n            $b[$i][$j] = 0;\n            $c[$i][$j] = 0;\n        }\n    }\n\n    for ($i = 0; $i < $m; $i++) {\n        my $u, $v;\n\n        $u = <>;\n        $v = <>;\n\n        $u--;\n        $v--;\n\n        $a[$u][$v] = 1;\n        $b[$u][$v] = 1;\n        $c[$u][$v] = 1;\n    }\n}\n\nsub main {\n    init();\n\n    dfs(0, 0, 0, 0);\n\n    print -1;\n}\n\nmain();\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::{HashMap, HashSet};\n\nfn main() {\n    \/\/ \u8bfb\u53d6\u8f93\u5165\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect_tuple().unwrap();\n    let mut railways = HashMap::new();\n    for _ in 0..m {\n        let (u, v) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect_tuple().unwrap();\n        railways.entry(u).or_insert(HashSet::new()).insert(v);\n        railways.entry(v).or_insert(HashSet::new()).insert(u);\n    }\n\n    \/\/ \u8ba1\u7b97\u6700\u77ed\u8def\u5f84\n    let mut distances = vec![std::usize::MAX; n + 1];\n    let mut queue = Vec::new();\n    queue.push((1, 0));\n    distances[1] = 0;\n    while !queue.is_empty() {\n        let (u, d) = queue.pop().unwrap();\n        for v in railways.get(&u).unwrap() {\n            if distances[v] > d + 1 {\n                distances[v] = d + 1;\n                queue.push((v, d + 1));\n            }\n        }\n    }\n\n    \/\/ \u8f93\u51fa\u7ed3\u679c\n    if distances[n] == std::usize::MAX {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", distances[n]);\n    }\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"A. Slime Combining","description":"Your friend recently gave you some slimes for your birthday. You have n slimes all initially with value 1.You are going to play a game with these slimes. Initially, you put a single slime by itself in a row. Then, you will add the other n-1 slimes one by one. When you add a slime, you place it at the right of all already placed slimes. Then, while the last two slimes in the row have the same value v, you combine them together to create a slime with value v+1.You would like to see what the final state of the row is after you've added all n slimes. Please print the values of the slimes in the row from left to right.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input will contain a single integer, n (1\u2264n\u2264100000).\n","output_spec":"Output a single line with k integers, where k is the number of slimes in the row after you've finished the procedure described in the problem statement. The i-th of these numbers should be the value of the i-th slime from the left.\n","notes":"In the first sample, we only have a single slime with value 1. The final state of the board is just a single slime with value 1.\nIn the second sample, we perform the following steps:\nInitially we place a single slime in a row by itself. Thus, row is initially 1.\nThen, we will add another slime. The row is now 1 1. Since two rightmost slimes have the same values, we should replace these slimes with one with value 2. Thus, the final state of the board is 2.\nIn the third sample, after adding the first two slimes, our row is 2. After adding one more slime, the row becomes 2 1.\nIn the last sample, the steps look as follows: \n  1  2  2 1  3  3 1  3 2  3 2 1  4 ","sample_inputs":["1\n","2\n","3\n","8\n"],"sample_outputs":["1\n","2\n","2 1\n","4\n"],"id":"618-A","difficulty":800,"tags":["implementation"],"src_uid":"757cd804aba01dc4bc108cb0722f68dc","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    for (int i = 1; i < n; i++) {\n        if (a[i] == a[i - 1]) {\n            a[i] = a[i] + 1;\n            a[i - 1] = 0;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (a[i] != 0) {\n            cout << a[i] << \" \";\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] arr = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr[i] = sc.nextInt();\n        }\n        for (int i = 1; i < n; i++) {\n            if (arr[i] == arr[i - 1]) {\n                arr[i - 1]++;\n                arr[i] = 0;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] != 0) {\n                System.out.print(arr[i] + \" \");\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\ns = [1]\nfor i in range(1, n):\n    if s[-1] == s[-2]:\n        s.pop()\n        s.pop()\n        s.append(s[-1] + 1)\n    else:\n        s.append(s[-1])\nprint(*s)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i] == a[j]) {\n                a[i]++;\n                a[j] = 0;\n            }\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (a[i] != 0) {\n            printf(\" %d \", a[i]);\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int> slimes = new List<int>();\n        slimes.Add(1);\n        for (int i = 1; i < n; i++)\n        {\n            int last = slimes[slimes.Count - 1];\n            if (slimes[slimes.Count - 2] == last)\n            {\n                slimes.RemoveAt(slimes.Count - 1);\n                slimes.RemoveAt(slimes.Count - 1);\n                slimes.Add(last + 1);\n            }\n            else\n            {\n                slimes.Add(last);\n            }\n        }\n        foreach (int slime in slimes)\n        {\n            Console.Write(slime + \" \");\n        }\n        Console.WriteLine();\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = [1]\nfor i in 2..n\n  if a[-1] == a[-2]\n    a.pop\n    a.pop\n    a.push(a[-1] + 1)\n  else\n    a.push(1)\n  end\nend\nputs a.join(' ')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Slime;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, m, a: Integer;\n  b: array[0..100000] of Integer;\n\nbegin\n  Readln(n);\n  for i := 1 to n do\n  begin\n    Readln(a);\n    b[a] := b[a] + 1;\n  end;\n  for i := 1 to 100000 do\n  begin\n    if b[i] > 0 then\n    begin\n      for j := 1 to b[i] do\n      begin\n        Write(i, ' ');\n      end;\n    end;\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    n := int(input())\\n    arr := make([]int, n)\\n    for i := 0; i < n; i++ {\\n        arr[i] = 1\\n    }\\n    for i := 1; i < n; i++ {\\n        if arr[i] == arr[i-1] {\\n            arr[i] = arr[i] + 1\\n            arr[i-1] = 0\\n        }\\n    }\\n    for i := 0; i < n; i++ {\\n        if arr[i] != 0 {\\n            fmt.Println(arr[i])\\n        }\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().trim();\nconst n = parseInt(input);\nconst arr = [];\nfor (let i = 0; i < n; i++) {\n  arr.push(1);\n}\nfor (let i = 1; i < n; i++) {\n  if (arr[i] === arr[i - 1]) {\n    arr[i - 1]++;\n    arr.splice(i, 1);\n    i--;\n  }\n}\nconsole.log(arr.join(' '));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val slimes = mutableListOf<Int>()\n    for (i in 1..n) {\n        slimes.add(1)\n    }\n    for (i in 1 until n) {\n        if (slimes[i] == slimes[i - 1]) {\n            slimes[i - 1]++\n            slimes.removeAt(i)\n        }\n    }\n    println(slimes.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n$arr = [];\\n$i = 0;\\nwhile ($i < $n) {\\n    $arr[] = (int)trim(fgets(STDIN));\\n    $i++;\\n}\\n\\n$arr = array_unique($arr);\\n\\n$arr = array_values($arr);\\n\\nfor ($i = 0; $i < count($arr); $i++) {\\n    echo $arr[$i] . ' ';\\n}\\n\\necho PHP_EOL;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    a[0] = 1;\n    for (int i = 1; i < n; i++) {\n        a[i] = a[i - 1] + 1;\n        if (a[i] == a[i - 1]) {\n            a[i] = a[i - 1] + 1;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        printf(\" %d \", a[i]);\n    }\n    printf(\"\\n\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $n = <STDIN>;\nmy @a = (1);\n\nfor (my $i = 1; $i < $n; $i++) {\n    my $v = $a[-1];\n    if ($a[-2] == $v) {\n        $a[-2] = $v + 1;\n        pop @a;\n    } else {\n        push @a, $v;\n    }\n}\n\nprint join(\" \", @a);\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut arr = vec![1; n];\n    for i in 1..n {\n        if arr[i - 1] == arr[i] {\n            arr[i - 1] += 1;\n            arr.remove(i);\n            i -= 1;\n        }\n    }\n\n    for i in 0..arr.len() {\n        print!(\"{}\", arr[i]);\n        if i != arr.len() - 1 {\n            print!(\" \");\n        }\n    }\n    println!();\n}\n\"\"\"}]"}
{"title":"A. Ultra-Fast Mathematician","description":"Shapur was an extremely gifted student. He was great at everything including Combinatorics, Algebra, Number Theory, Geometry, Calculus, etc. He was not only smart but extraordinarily fast! He could manage to sum 10^18 numbers in a single second.One day in 230 AD Shapur was trying to find out if any one can possibly do calculations faster than him. As a result he made a very great contest and asked every one to come and take part.In his contest he gave the contestants many different pairs of numbers. Each number is made from digits 0 or 1. The contestants should write a new number corresponding to the given pair of numbers. The rule is simple: The i-th digit of the answer is 1 if and only if the i-th digit of the two given numbers differ. In the other case the i-th digit of the answer is 0.Shapur made many numbers and first tried his own speed. He saw that he can perform these operations on numbers of length \u221e (length of a number is number of digits in it) in a glance! He always gives correct answers so he expects the contestants to give correct answers, too. He is a good fellow so he won't give anyone very big numbers and he always gives one person numbers of same length.Now you are going to take part in Shapur's contest. See if you are faster and more accurate.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"There are two lines in each input. Each of them contains a single number. It is guaranteed that the numbers are made from 0 and 1 only and that their length is same. The numbers may start with 0. The length of each number doesn't exceed 100.\n","output_spec":"Write one line \u2014 the corresponding answer. Do not omit the leading 0s.\n","notes":null,"sample_inputs":["1010100\n0100101\n","000\n111\n","1110\n1010\n","01110\n01100\n"],"sample_outputs":["1110001\n","111\n","0100\n","00010\n"],"id":"61-A","difficulty":800,"tags":["implementation"],"src_uid":"3714b7596a6b48ca5b7a346f60d90549","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    string a, b;\n    cin >> a >> b;\n    int n = a.length();\n    string c = \"\";\n    for (int i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            c += \"1\";\n        } else {\n            c += \"0\";\n        }\n    }\n    cout << c << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String a = sc.nextLine();\n        String b = sc.nextLine();\n        int n = a.length();\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            sb.append(a.charAt(i) ^ b.charAt(i));\n        }\n        System.out.println(sb.toString());\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn1 = input()\nn2 = input()\n\nans = ''\nfor i in range(len(n1)):\n    if n1[i] != n2[i]:\n        ans += '1'\n    else:\n        ans += '0'\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    char a[101], b[101];\n    int i, j, n;\n    scanf(\" %s \", a);\n    scanf(\" %s \", b);\n    n = strlen(a);\n    for (i = 0; i < n; i++) {\n        if (a[i] != b[i])\n            printf(\" 1 \");\n        else\n            printf(\" 0 \");\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] a = Console.ReadLine().Split(' ');\n        string[] b = Console.ReadLine().Split(' ');\n        int n = a.Length;\n        string c = \"\";\n        for (int i = 0; i < n; i++)\n        {\n            c += (a[i] != b[i]) ? \"1\" : \"0\";\n        }\n        Console.WriteLine(c);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def solve(a,b):\n    c = ''\n    for i in range(len(a)):\n        if a[i] != b[i]:\n            c += '1'\n        else:\n            c += '0'\n    return c\n\n\na = input()\nb = input()\nprint(solve(a,b))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Shapur;\n\nuses\n  SysUtils;\n\nvar\n  a, b: string;\n  i: integer;\n\nbegin\n  readln(a);\n  readln(b);\n  for i := 1 to length(a) do\n    if a[i] <> b[i] then\n      write('1');\n    else\n      write('0');\n  writeln;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar a, b string\n\tfor _, v := range os.Args[1:] {\n\t\ta += v\n\t}\n\tfor _, v := range os.Args[2:] {\n\t\tb += v\n\t}\n\tfor i := 0; i < len(a); i++ {\n\t\tif a[i] != b[i] {\n\t\t\tfmt.Print(\"1\")\n\t\t} else {\n\t\t\tfmt.Print(\"0\")\n\t\t}\n\t}\n\tfmt.Println()\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst a = input[0];\nconst b = input[1];\nconst c = a.split('').map((x, i) => {\n  if (x !== b[i]) {\n    return '1';\n  } else {\n    return '0';\n  }\n});\nconsole.log(c.join(''));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (a, b) = readLine()!!.split(\"\\n\")\n    val ans = StringBuilder()\n    for (i in 0 until a.length) {\n        ans.append(if (a[i] != b[i]) '1' else '0')\n    }\n    println(ans.toString())\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$a = trim(fgets(STDIN));\n$b = trim(fgets(STDIN));\n$c = \"\";\nfor ($i = 0; $i < strlen($a); $i++) {\n    if ($a[$i] != $b[$i]) {\n        $c .= \"1\";\n    } else {\n        $c .= \"0\";\n    }\n}\necho $c;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\n\nvoid main() {\n    string a, b;\n    int n;\n    scanf(\" %s \", a);\n    scanf(\" %s \", b);\n    n = a.length;\n    string c;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            c.append(\"1\");\n        } else {\n            c.append(\"0\");\n        }\n    }\n    printf(\" %s \", c);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $a = <STDIN>;\\nmy $b = <STDIN>;\\n\\nmy $c = '';\\nfor (my $i = 0; $i < length($a); $i++) {\\n    if ($a[$i] ne $b[$i]) {\\n        $c .= '1';\\n    } else {\\n        $c .= '0';\\n    }\\n}\\n\\nprint $c;\\n\\nexit 0;\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut a = String::new();\n    let mut b = String::new();\n    io::stdin().read_line(&mut a).unwrap();\n    io::stdin().read_line(&mut b).unwrap();\n    let a = a.trim().to_string();\n    let b = b.trim().to_string();\n    let mut c = String::new();\n    for i in 0..a.len() {\n        if a.chars().nth(i).unwrap() != b.chars().nth(i).unwrap() {\n            c.push('1');\n        } else {\n            c.push('0');\n        }\n    }\n    println!(\"{}\", c);\n}\n\"\"\"}]"}
{"title":"A. Professor GukiZ's Robot","description":"Professor GukiZ makes a new robot. The robot are in the point with coordinates (x1,y1) and should go to the point (x2,y2). In a single step the robot can change any of its coordinates (maybe both of them) by one (decrease or increase). So the robot can move in one of the 8 directions. Find the minimal number of steps the robot should make to get the finish position.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers x1,y1 (-10^9\u2264x1,y1\u226410^9) \u2014 the start position of the robot.\nThe second line contains two integers x2,y2 (-10^9\u2264x2,y2\u226410^9) \u2014 the finish position of the robot.\n","output_spec":"Print the only integer d \u2014 the minimal number of steps to get the finish position.\n","notes":"In the first example robot should increase both of its coordinates by one four times, so it will be in position (4,4). After that robot should simply increase its y coordinate and get the finish position.\nIn the second example robot should simultaneously increase x coordinate and decrease y coordinate by one three times.\n","sample_inputs":["0 0\n4 5\n","3 4\n6 1\n"],"sample_outputs":["5\n","3\n"],"id":"620-A","difficulty":800,"tags":["implementation","math"],"src_uid":"a6e9405bc3d4847fe962446bc1c457b4","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"GNU C++14\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"MS C++\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"GNU C++0x\", \"target code\": \"\/\/ C++0x\\n#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"GNU C++\", \"target code\": \"\/\/ C++\\n#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"MS C++ 2017\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"Clang++17 Diagnostics\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}, {\"version\": \"GNU C++17\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int x1, y1, x2, y2;\\n    cin >> x1 >> y1 >> x2 >> y2;\\n    int dx = abs(x2 - x1);\\n    int dy = abs(y2 - y1);\\n    cout << dx + dy << endl;\\n    return 0;\\n}\"}}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int x1 = scanner.nextInt();\n        int y1 = scanner.nextInt();\n        int x2 = scanner.nextInt();\n        int y2 = scanner.nextInt();\n\n        int dx = Math.abs(x2 - x1);\n        int dy = Math.abs(y2 - y1);\n\n        System.out.println(Math.max(dx, dy));\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\n\nprint(abs(x1 - x2) + abs(y1 - y2))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int x1, y1, x2, y2;\n    scanf(\" %d %d \", &x1, &y1);\n    scanf(\" %d %d \", &x2, &y2);\n    int dx = x2 - x1;\n    int dy = y2 - y1;\n    int d = abs(dx) + abs(dy);\n    printf(\" %d \", d);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var x1y1 = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var x2y2 = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n\n        var dx = Math.Abs(x2y2[0] - x1y1[0]);\n        var dy = Math.Abs(x2y2[1] - x1y1[1]);\n\n        Console.WriteLine(Math.Max(dx, dy));\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"x1,y1=map(int,input().split())\nx2,y2=map(int,input().split())\nprint(abs(x1-x2)+abs(y1-y2))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Robot;\nuses SysUtils;\nvar\n  x1, y1, x2, y2, d: integer;\nbegin\n  readln(x1, y1);\n  readln(x2, y2);\n  d := abs(x2 - x1) + abs(y2 - y1);\n  writeln(d);\nend.\"}]}","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"math\"\n)\n\nfunc main() {\n    var x1, y1, x2, y2 int\n    fmt.Scanf(\" %d %d\\n\", &x1, &y1)\n    fmt.Scanf(\" %d %d\\n\", &x2, &y2)\n\n    dx := abs(x2 - x1)\n    dy := abs(y2 - y1)\n\n    fmt.Println(dx + dy)\n}\n\nfunc abs(x int) int {\n    if x < 0 {\n        return -x\n    }\n    return x\n}\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst x1 = parseInt(stdin[0].split(' ')[0]);\nconst y1 = parseInt(stdin[0].split(' ')[1]);\nconst x2 = parseInt(stdin[1].split(' ')[0]);\nconst y2 = parseInt(stdin[1].split(' ')[1]);\n\nconst dx = Math.abs(x2 - x1);\nconst dy = Math.abs(y2 - y1);\n\nconsole.log(Math.max(dx, dy));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val x1 = sc.nextInt()\n    val y1 = sc.nextInt()\n    val x2 = sc.nextInt()\n    val y2 = sc.nextInt()\n\n    val dx = x2 - x1\n    val dy = y2 - y1\n\n    val absX = Math.abs(dx)\n    val absY = Math.abs(dy)\n\n    val steps = absX + absY\n\n    println(steps)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$x1 = (int)trim(fgets(STDIN));\\n$y1 = (int)trim(fgets(STDIN));\\n$x2 = (int)trim(fgets(STDIN));\\n$y2 = (int)trim(fgets(STDIN));\\n\\n$dx = abs($x2 - $x1);\\n$dy = abs($y2 - $y1);\\n\\necho max($dx, $dy);\\n\\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto x1, y1, x2, y2;\n    scanf(\" %d %d \", &x1, &y1);\n    scanf(\" %d %d \", &x2, &y2);\n\n    auto dx = x2 - x1;\n    auto dy = y2 - y1;\n\n    auto d = abs(dx) + abs(dy);\n\n    printf(\" %d \", d);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $x1, $y1;\nmy $x2, $y2;\n\nchomp(my $line = <STDIN>);\n($x1, $y1) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n($x2, $y2) = split(' ', $line);\n\nmy $dx = abs($x2 - $x1);\nmy $dy = abs($y2 - $y1);\n\nprint $dx + $dy;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut x1 = input.trim().split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut x2 = input.trim().split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n\n    let mut ans = 0;\n    for i in 0..2 {\n        ans += (x2[i] - x1[i]).abs();\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Array GCD","description":"You are given array ai of length n. You may consecutively apply two operations to this array:  remove some subsegment (continuous subsequence) of length m<n and pay for it m\u00b7a coins;  change some elements of the array by at most 1, and pay b coins for each change. Please note that each of operations may be applied at most once (and may be not applied at all) so you can remove only one segment and each number may be changed (increased or decreased) by at most 1. Also note, that you are not allowed to delete the whole array.Your goal is to calculate the minimum number of coins that you need to spend in order to make the greatest common divisor of the elements of the resulting array be greater than 1.","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains integers n, a and b (1\u2264n\u22641000000,0\u2264a,b\u226410^9)\u00a0\u2014 the length of the array, the cost of removing a single element in the first operation and the cost of changing an element, respectively.\nThe second line contains n integers ai (2\u2264ai\u226410^9)\u00a0\u2014 elements of the array.\n","output_spec":"Print a single number\u00a0\u2014 the minimum cost of changes needed to obtain an array, such that the greatest common divisor of all its elements is greater than 1.\n","notes":"In the first sample the optimal way is to remove number 3 and pay 1 coin for it.\nIn the second sample you need to remove a segment [17,13] and then decrease number 6. The cost of these changes is equal to 2\u00b73+2=8 coins.\n","sample_inputs":["3 1 4\n4 2 3\n","5 3 2\n5 17 13 5 6\n","8 3 4\n3 7 5 4 3 12 9 4\n"],"sample_outputs":["1\n","8\n","13\n"],"id":"623-B","difficulty":2300,"tags":["dp","greedy","number+theory"],"src_uid":"d2313888d962b1dd6dc21b5f1eb96f91","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, a, b;\n    cin >> n >> a >> b;\n    vector<int> v(n);\n    for (int i = 0; i < n; i++) {\n        cin >> v[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (v[i] % v[j] == 0) {\n                ans += a;\n                v[j] = 1;\n                break;\n            }\n        }\n    }\n\n    for (int i = 0; i < n; i++) {\n        if (v[i] != 1) {\n            ans += b;\n            v[i] = 1;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, a, b = map(int, input().split())\na = list(map(int, input().split()))\n\ndef gcd(a, b):\n    if b == 0:\n        return a\n    return gcd(b, a % b)\n\ndef lcm(a, b):\n    return a * b \/\/ gcd(a, b)\n\ndef solve(a):\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            if gcd(a[i], a[j]) == 1:\n                ans += a[j] - a[i]\n    return ans\n\nprint(min(solve(a), n * a))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, a, b;\n    scanf(\" %d %d %d \", &n, &a, &b);\n    int arr[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &arr[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] % arr[j] == 0) {\n                ans += a;\n                break;\n            }\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (arr[i] == arr[j]) {\n                ans += b;\n                break;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, a, b = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var arr = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var gcd = arr[0];\n        for (int i = 1; i < n; i++)\n        {\n            gcd = Math.GreatestCommonDivisor(gcd, arr[i]);\n        }\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (arr[i] % gcd == 0)\n            {\n                continue;\n            }\n            ans += Math.Min(a, b * (arr[i] \/ gcd - 1));\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"\"\"}]","Ruby":"","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses sysutils;\n\nvar\n  n, a, b, i, j, ans: integer;\n  a1, a2: array of integer;\n\nbegin\n  readln(n, a, b);\n  for i := 1 to n do\n    read(a1[i]);\n  a2 := a1;\n  for i := 1 to n - 1 do\n    for j := i + 1 to n do\n      if gcd(a1[i], a1[j]) > 1 then\n        begin\n          ans := min(ans, a * (j - i + 1));\n          break;\n        end;\n  for i := 1 to n do\n    if a1[i] > 1 then\n      begin\n        ans := min(ans, b);\n        break;\n      end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.5\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, a, b int\n\tfmt.Scanf(\" %d %d %d \", &n, &a, &b)\n\tarr := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &arr[i])\n\t}\n\tans := math.MaxInt32\n\tfor i := 0; i < n; i++ {\n\t\tfor j := i + 1; j < n; j++ {\n\t\t\tif gcd(arr[i], arr[j]) > 1 {\n\t\t\t\tans = min(ans, a*int(math.Ceil(float64(j-i)\/2))+b*(arr[j]-arr[i]))\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\nfunc gcd(a, b int) int {\n\tif b == 0 {\n\t\treturn a\n\t}\n\treturn gcd(b, a%b)\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\"\"\"}]","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, a, b) = readLine().split(\" \").map { it.toInt() }\n    val arr = readLine().split(\" \").map { it.toInt() }.sorted()\n    val gcd = arr.reduce { a, b -> gcd(a, b) }\n    val ans = if (gcd == 1) a * n else b * (n - 1)\n    println(ans)\n}\n\nfun gcd(a: Int, b: Int): Int {\n    if (b == 0) return a\n    return gcd(b, a % b)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$a = (int)$input[1];\n$b = (int)$input[2];\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$gcd = $arr[0];\nfor ($i = 1; $i < $n; $i++) {\n    $gcd = gcd($gcd, $arr[$i]);\n}\nif ($gcd == 1) {\n    echo 0;\n    exit;\n}\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($arr[$i] % $gcd == 0) {\n        continue;\n    }\n    $ans += min($a, $b * ($arr[$i] % $gcd));\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, a, b;\n    scanf(\" %d %d %d \", &n, &a, &b);\n    auto a = readln.split.map!(to!int).array;\n    int ans = 0;\n    int gcd = a[0];\n    for (int i = 1; i < n; i++) {\n        gcd = gcd(gcd, a[i]);\n    }\n    if (gcd == 1) {\n        writeln(ans);\n        return;\n    }\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] % gcd != 0) {\n            ans += b;\n            cnt++;\n        }\n    }\n    if (cnt == 0) {\n        writeln(ans);\n        return;\n    }\n    int m = n - cnt;\n    ans += a * m;\n    writeln(ans);\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $a, $b;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $a, $b) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@a = split(' ', $line);\n\nmy $ans = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a < $b) {\n        $ans += $a;\n        $a = 0;\n    } else {\n        $ans += $b;\n        $a -= $b;\n    }\n}\n\nif ($a > 0) {\n    $ans += $a;\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut n, a, b = stdin.read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<i64>>();\n    let mut a = a as i64;\n    let mut b = b as i64;\n\n    let mut arr = stdin.read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<i64>>();\n\n    let mut gcd = arr[0];\n    for i in 1..n {\n        gcd = gcd.gcd(&arr[i]);\n    }\n\n    if gcd == 1 {\n        println!(\"{}\", 0);\n        return;\n    }\n\n    let mut ans = 0;\n    for i in 0..n {\n        if arr[i] % gcd != 0 {\n            ans += b;\n        }\n    }\n\n    if ans >= a * (n - 1) {\n        println!(\"{}\", a * (n - 1));\n    } else {\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"F. Group Projects","description":"There are n students in a class working on group projects. The students will divide into groups (some students may be in groups alone), work on their independent pieces, and then discuss the results together. It takes the i-th student ai minutes to finish his\/her independent piece.If students work at different paces, it can be frustrating for the faster students and stressful for the slower ones. In particular, the imbalance of a group is defined as the maximum ai in the group minus the minimum ai in the group. Note that a group containing a single student has an imbalance of 0. How many ways are there for the students to divide into groups so that the total imbalance of all groups is at most k?Two divisions are considered distinct if there exists a pair of students who work in the same group in one division but different groups in the other.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two space-separated integers n and k (1\u2264n\u2264200, 0\u2264k\u22641000)\u00a0\u2014 the number of students and the maximum total imbalance allowed, respectively.\nThe second line contains n space-separated integers ai (1\u2264ai\u2264500)\u00a0\u2014 the time it takes the i-th student to complete his\/her independent piece of work.\n","output_spec":"Print a single integer, the number of ways the students can form groups. As the answer may be large, print its value modulo 10^9+7.\n","notes":"In the first sample, we have three options: \n  The first and second students form a group, and the third student forms a group. Total imbalance is 2+0=2.  The first student forms a group, and the second and third students form a group. Total imbalance is 0+1=1.  All three students form their own groups. Total imbalance is 0. In the third sample, the total imbalance must be 0, so each student must work individually.\n","sample_inputs":["3 2\n2 4 5\n","4 3\n7 8 9 10\n","4 0\n5 10 20 21\n"],"sample_outputs":["3\n","13\n","1\n"],"id":"626-F","difficulty":2400,"tags":["dp"],"src_uid":"788cb3da98fd4a56720f800588061b79","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int j = i + 1;\n        while (j < n && a[j] - a[i] <= k) {\n            j++;\n        }\n        ans += (j - i) * (j - i - 1) \/ 2;\n    }\n\n    cout << ans % 1000000007 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if a[j]-a[i]<=k:\n            ans+=1\nprint(ans%10**9+7)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int n, k, i, j, a[200], dp[200][1001];\n    scanf(\" %d %d \", &n, &k);\n    for (i = 0; i < n; i++)\n        scanf(\" %d \", &a[i]);\n    for (i = 0; i < n; i++)\n        for (j = 0; j <= k; j++)\n            dp[i][j] = 0;\n    dp[0][0] = 1;\n    for (i = 1; i < n; i++) {\n        for (j = 0; j <= k; j++) {\n            if (j >= a[i])\n                dp[i][j] = (dp[i - 1][j] + dp[i - 1][j - a[i]]) % 1000000007;\n            else\n                dp[i][j] = dp[i - 1][j];\n        }\n    }\n    printf(\" %d \", dp[n - 1][k]);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var dp = new int[n + 1, k + 1];\n        dp[0, 0] = 1;\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 0; j <= k; j++)\n            {\n                dp[i, j] = dp[i - 1, j];\n                if (j >= a[i - 1])\n                {\n                    dp[i, j] += dp[i - 1, j - a[i - 1]];\n                }\n            }\n        }\n        Console.WriteLine(dp[n, k]);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if a[j]-a[i]<=k:\n            ans+=1\nprint(ans%10**9+7)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses sysutils;\nvar\n  n, k, i, j, a, b, c, d, ans: integer;\n  f: array[0..200, 0..1000] of longint;\nbegin\n  readln(n, k);\n  for i := 0 to n - 1 do\n  begin\n    readln(a);\n    for j := 0 to k do\n      f[i + 1, j] := f[i, j];\n    for j := 0 to k - a do\n      f[i + 1, j + a] := (f[i + 1, j + a] + f[i, j]) mod 1000000007;\n  end;\n  ans := 0;\n  for i := 0 to k do\n    ans := (ans + f[n, i]) mod 1000000007;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d \", &n, &k)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &a[i])\n\t}\n\tdp := make([]int, k+1)\n\tdp[0] = 1\n\tfor i := 1; i <= k; i++ {\n\t\tfor j := 0; j < n; j++ {\n\t\t\tif a[j] <= i {\n\t\t\t\tdp[i] += dp[i-a[j]]\n\t\t\t\tdp[i] %= 1000000007\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(dp[k])\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst k = parseInt(stdin[0].split(' ')[1]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 0; j <= k; j++) {\n    if (j >= a[i - 1]) {\n      dp[i] += dp[i - 1];\n    }\n    if (j >= a[i - 1] - 1) {\n      dp[i] += dp[i - 2];\n    }\n  }\n}\nconsole.log(dp[n] % 1000000007);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    val dp = Array(n + 1) { IntArray(k + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..k) {\n            dp[i][j] = dp[i - 1][j]\n            if (j >= a[i - 1] - a[0]) {\n                dp[i][j] += dp[i - 1][j - (a[i - 1] - a[0])]\n            }\n        }\n    }\n    println(dp[n][k])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $k = explode(' ', trim(fgets(STDIN)));\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\nsort($a);\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    $ans += $a[$i] - $a[0] <= $k ? 1 : 0;\n}\necho $ans % 1000000007;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (a[i] - a[j] <= k) {\n                ans++;\n            }\n        }\n    }\n    ans = ans * (ans - 1) \/ 2;\n    ans %= 1000000007;\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $mod = 10**9 + 7;\n\nmy $dp = [0] x ($n + 1);\n$dp[0] = 1;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 0; $j <= $k; $j++) {\n        if ($j >= $a[$i - 1]) {\n            $dp[$i] += $dp[$i - 1];\n            $dp[$i] %= $mod;\n        }\n    }\n}\n\nprint $dp[$n];\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, k) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let a = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n\n    let mut dp = HashMap::new();\n    dp.insert((0, 0), 1);\n\n    for i in 0..n {\n        for (j, &b) in a.iter().enumerate() {\n            let (diff, sum) = (b - a[i], b + a[i]);\n            for (c, &d) in dp.iter() {\n                if diff <= k && sum <= k {\n                    dp.insert((c + 1, d + 1), (dp.get(&(c + 1, d + 1)).unwrap_or(&0) + d) % 1000000007);\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", dp.get(&(n, n)).unwrap());\n}\n\nfn read_line() -> String {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s\n}\n\"\"\"}]"}
{"title":"B. Settlers' Training","description":"In a strategic computer game \"Settlers II\" one has to build defense structures to expand and protect the territory. Let's take one of these buildings. At the moment the defense structure accommodates exactly n soldiers. Within this task we can assume that the number of soldiers in the defense structure won't either increase or decrease.Every soldier has a rank \u2014 some natural number from 1 to k. 1 stands for a private and k stands for a general. The higher the rank of the soldier is, the better he fights. Therefore, the player profits from having the soldiers of the highest possible rank.To increase the ranks of soldiers they need to train. But the soldiers won't train for free, and each training session requires one golden coin. On each training session all the n soldiers are present.At the end of each training session the soldiers' ranks increase as follows. First all the soldiers are divided into groups with the same rank, so that the least possible number of groups is formed. Then, within each of the groups where the soldiers below the rank k are present, exactly one soldier increases his rank by one.You know the ranks of all n soldiers at the moment. Determine the number of golden coins that are needed to increase the ranks of all the soldiers to the rank k.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and k (1\u2264n,k\u2264100). They represent the number of soldiers and the number of different ranks correspondingly. The second line contains n numbers in the non-decreasing order. The i-th of them, ai, represents the rank of the i-th soldier in the defense building (1\u2264i\u2264n, 1\u2264ai\u2264k).\n","output_spec":"Print a single integer \u2014 the number of golden coins needed to raise all the soldiers to the maximal rank.\n","notes":"In the first example the ranks will be raised in the following manner:\n1 2 2 3 \u2192 2 2 3 4 \u2192 2 3 4 4 \u2192 3 4 4 4 \u2192 4 4 4 4\nThus totals to 4 training sessions that require 4 golden coins.\n","sample_inputs":["4 4\n1 2 2 3\n","4 3\n1 1 1 1\n"],"sample_outputs":["4","5"],"id":"63-B","difficulty":1200,"tags":["implementation"],"src_uid":"3d6411d67c85f6293f1999ccff2cd8ba","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] < k) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int k = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] < k) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nans=0\nfor i in range(1,k+1):\n    ans+=(a.count(i)-1)\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, k, i, j, a[100], t = 0;\n    scanf(\" %d %d \", &n, &k);\n    for (i = 0; i < n; i++)\n        scanf(\" %d \", &a[i]);\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            if (a[i] == a[j])\n                t++;\n        }\n    }\n    printf(\" %d \", t);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var k = int.Parse(input[1]);\n        var a = Console.ReadLine().Split(' ');\n        var a = a.Select(int.Parse).ToList();\n        var ans = 0;\n        var i = 0;\n        while (i < n)\n        {\n            var j = i;\n            while (j < n && a[j] == a[i])\n            {\n                j++;\n            }\n            ans += (j - i) \/ (k - a[i]);\n            i = j;\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k=map(int,input().split())\na=list(map(int,input().split()))\nans=0\nfor i in range(1,k+1):\n    ans+=(a.count(i)-1)\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t1;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j, m, a, b, c, d, e, f, g, h, l, s, t, u, v, w, x, y, z: integer;\n\nbegin\n  readln(n, k);\n  for i := 1 to n do\n  begin\n    readln(a);\n    if a = k then\n      inc(s);\n  end;\n  m := 0;\n  for i := 1 to k - 1 do\n  begin\n    l := 0;\n    for j := 1 to n do\n      if a[j] = i then\n        inc(l);\n    m := m + l div (k - i);\n  end;\n  writeln(m + s);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, k int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &k)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        if a[i] < k {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, k] = line.split(' ').map(Number);\n  const arr = line.split(' ').map(Number);\n  const ans = 0;\n  for (let i = 0; i < n; i++) {\n    if (arr[i] < k) {\n      ans++;\n    }\n  }\n  console.log(ans);\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    var i = 0\n    while (i < n) {\n        var j = i\n        while (j < n && a[j] == a[i]) {\n            j++\n        }\n        val m = j - i\n        ans += m \/ (k - a[i] + 1)\n        i = j\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$k = (int)$input[1];\n$ranks = explode(' ', trim(fgets(STDIN)));\n$ranks = array_map('intval', $ranks);\n$groups = array_fill(0, $k, 0);\nfor ($i = 0; $i < $n; $i++) {\n    $groups[$ranks[$i] - 1]++;\n}\n$ans = 0;\nfor ($i = 0; $i < $k; $i++) {\n    $ans += ceil($groups[$i] \/ $k);\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] < k) {\n            ans++;\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    my $j = $i;\n    while ($j < $n && $a[$j] == $a[$i]) {\n        $j++;\n    }\n    $ans += ($j - $i) \/ ($k - $a[$i]);\n    $i = $j - 1;\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let n = n_k[0];\n    let k = n_k[1];\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = 0;\n    for i in 0..n {\n        if a[i] < k {\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Sweets Game","description":"Karlsson has visited Lillebror again. They found a box of chocolates and a big whipped cream cake at Lillebror's place. Karlsson immediately suggested to divide the sweets fairly between Lillebror and himself. Specifically, to play together a game he has just invented with the chocolates. The winner will get the cake as a reward.The box of chocolates has the form of a hexagon. It contains 19 cells for the chocolates, some of which contain a chocolate. The players move in turns. During one move it is allowed to eat one or several chocolates that lay in the neighboring cells on one line, parallel to one of the box's sides. The picture below shows the examples of allowed moves and of an unacceptable one. The player who cannot make a move loses. Karlsson makes the first move as he is Lillebror's guest and not vice versa. The players play optimally. Determine who will get the cake.","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The input data contains 5 lines, containing 19 words consisting of one symbol. The word \"O\" means that the cell contains a chocolate and a \".\" stands for an empty cell. It is guaranteed that the box contains at least one chocolate. See the examples for better understanding.\n","output_spec":"If Karlsson gets the cake, print \"Karlsson\" (without the quotes), otherwise print \"Lillebror\" (yet again without the quotes).\n","notes":null,"sample_inputs":["  . . .\n . . O .\n. . O O .\n . . . .\n  . . .\n","  . . .\n . . . O\n. . . O .\n O . O .\n  . O .\n"],"sample_outputs":["Lillebror","Karlsson"],"id":"63-E","difficulty":2000,"tags":["bitmasks","dfs+and+similar","dp","games","implementation"],"src_uid":"eaa022cc7846c983a826900dc6dd919f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string s[5];\n    for (int i = 0; i < 5; i++) {\n        cin >> s[i];\n    }\n    int a[19] = {0};\n    for (int i = 0; i < 5; i++) {\n        for (int j = 0; j < 5; j++) {\n            if (s[i][j] == 'O') {\n                a[i * 5 + j] = 1;\n            }\n        }\n    }\n    int b[19] = {0};\n    for (int i = 0; i < 19; i++) {\n        if (a[i] == 1) {\n            b[i] = 1;\n        }\n    }\n    int c = 0;\n    for (int i = 0; i < 19; i++) {\n        if (b[i] == 0) {\n            c++;\n        }\n    }\n    if (c == 0) {\n        cout << \"Karlsson\";\n    } else {\n        cout << \"Lillebror\";\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int[][] board = new int[5][5];\n        for (int i = 0; i < 5; i++) {\n            String line = scanner.nextLine();\n            for (int j = 0; j < 5; j++) {\n                board[i][j] = line.charAt(j) == 'O' ? 1 : 0;\n            }\n        }\n\n        int[] x = {0, 0, 1, 1, 2, 2, 3, 3, 4, 4};\n        int[] y = {0, 4, 0, 4, 0, 4, 0, 4, 0, 4};\n\n        for (int i = 0; i < 10; i++) {\n            for (int j = 0; j < 10; j++) {\n                if (board[x[i]][y[j]] == 1) {\n                    board[x[i]][y[j]] = 0;\n                    if (check(board)) {\n                        System.out.println(\"Karlsson\");\n                        return;\n                    }\n                    board[x[i]][y[j]] = 1;\n                }\n            }\n        }\n\n        System.out.println(\"Lillebror\");\n    }\n\n    private static boolean check(int[][] board) {\n        for (int i = 0; i < 5; i++) {\n            if (board[i][0] == 1 && board[i][1] == 1 && board[i][2] == 1 && board[i][3] == 1 && board[i][4] == 1) {\n                return true;\n            }\n            if (board[0][i] == 1 && board[1][i] == 1 && board[2][i] == 1 && board[3][i] == 1 && board[4][i] == 1) {\n                return true;\n            }\n        }\n        if (board[0][0] == 1 && board[1][1] == 1 && board[2][2] == 1 && board[3][3] == 1 && board[4][4] == 1) {\n            return true;\n        }\n        if (board[4][0] == 1 && board[3][1] == 1 && board[2][2] == 1 && board[1][3] == 1 && board[0][4] == 1) {\n            return true;\n        }\n        return false;\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    board = []\n    for i in range(5):\n        board.append(input())\n    for i in range(5):\n        for j in range(5):\n            if board[i][j] == 'O':\n                board[i][j] = 'X'\n                break\n    for i in range(5):\n        if board[i][0] == 'X' and board[i][1] == 'X' and board[i][2] == 'X' and board[i][3] == 'X' and board[i][4] == 'X':\n            print('Karlsson')\n            return\n        if board[0][i] == 'X' and board[1][i] == 'X' and board[2][i] == 'X' and board[3][i] == 'X' and board[4][i] == 'X':\n            print('Karlsson')\n            return\n        if board[0][0] == 'X' and board[1][1] == 'X' and board[2][2] == 'X' and board[3][3] == 'X' and board[4][4] == 'X':\n            print('Karlsson')\n            return\n        if board[4][0] == 'X' and board[3][1] == 'X' and board[2][2] == 'X' and board[1][3] == 'X' and board[0][4] == 'X':\n            print('Karlsson')\n            return\n    print('Lillebror')\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\\n\\nint main() {\\n    int a[5][5];\\n    int i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z;\\n    for (i = 0; i < 5; i++) {\\n        for (j = 0; j < 5; j++) {\\n            scanf(\" %c \", &a[i][j]);\\n        }\\n    }\\n    for (i = 0; i < 5; i++) {\\n        for (j = 0; j < 5; j++) {\\n            if (a[i][j] == 'O') {\\n                for (k = i - 1; k <= i + 1; k++) {\\n                    for (l = j - 1; l <= j + 1; l++) {\\n                        if (a[k][l] == 'O') {\\n                            a[k][l] = '.';\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n    for (i = 0; i < 5; i++) {\\n        for (j = 0; j < 5; j++) {\\n            if (a[i][j] == 'O') {\\n                printf(\" Lillebror \");\\n                return 0;\\n            }\\n        }\\n    }\\n    printf(\" Karlsson \");\\n    return 0;\\n}\\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var board = new List<string>();\n        for (int i = 0; i < 5; i++)\n        {\n            board.Add(Console.ReadLine());\n        }\n\n        var canKarlssonWin = true;\n        for (int i = 0; i < 5; i++)\n        {\n            for (int j = 0; j < 5; j++)\n            {\n                if (board[i][j] == 'O')\n                {\n                    if (i > 0 && board[i - 1][j] == 'O')\n                    {\n                        canKarlssonWin = false;\n                        break;\n                    }\n                    if (i < 4 && board[i + 1][j] == 'O')\n                    {\n                        canKarlssonWin = false;\n                        break;\n                    }\n                    if (j > 0 && board[i][j - 1] == 'O')\n                    {\n                        canKarlssonWin = false;\n                        break;\n                    }\n                    if (j < 4 && board[i][j + 1] == 'O')\n                    {\n                        canKarlssonWin = false;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (canKarlssonWin)\n        {\n            Console.WriteLine(\"Karlsson\");\n        }\n        else\n        {\n            Console.WriteLine(\"Lillebror\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main\n    chocolates = []\n    for i in 0..4\n        line = gets.chomp\n        chocolates.push(line.split(\"\"))\n    end\n\n    # \u6a2a\u65b9\u5411\u306e\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8\n    for i in 0..4\n        if chocolates[i][0] == \"O\"\n            if chocolates[i][1] == \"O\"\n                if chocolates[i][2] == \"O\"\n                    if chocolates[i][3] == \"O\"\n                        puts \"Karlsson\"\n                        return\n                    end\n                end\n            end\n        end\n    end\n\n    # \u7e26\u65b9\u5411\u306e\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8\n    for i in 0..4\n        if chocolates[0][i] == \"O\"\n            if chocolates[1][i] == \"O\"\n                if chocolates[2][i] == \"O\"\n                    if chocolates[3][i] == \"O\"\n                        puts \"Karlsson\"\n                        return\n                    end\n                end\n            end\n        end\n    end\n\n    # \u659c\u3081\u65b9\u5411\u306e\u30c1\u30e7\u30b3\u30ec\u30fc\u30c8\n    if chocolates[0][0] == \"O\"\n        if chocolates[1][1] == \"O\"\n            if chocolates[2][2] == \"O\"\n                if chocolates[3][3] == \"O\"\n                    puts \"Karlsson\"\n                    return\n                end\n            end\n        end\n    end\n\n    if chocolates[3][0] == \"O\"\n        if chocolates[2][1] == \"O\"\n            if chocolates[1][2] == \"O\"\n                if chocolates[0][3] == \"O\"\n                    puts \"Karlsson\"\n                    return\n                end\n            end\n        end\n    end\n\n    puts \"Lillebror\"\nend\n\nmain()\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  a: array[0..18] of char;\n  i, j, k, n, m, s: integer;\n\nbegin\n  for i := 0 to 18 do\n    read(a[i]);\n  for i := 0 to 18 do\n    if a[i] = 'O' then\n      inc(n);\n  if n = 1 then\n    writeln('Karlsson');\n  else\n  begin\n    s := 0;\n    for i := 0 to 18 do\n      if a[i] = 'O' then\n      begin\n        s := s + 1;\n        for j := i + 1 to 18 do\n          if a[j] = 'O' then\n          begin\n            s := s + 1;\n            for k := j + 1 to 18 do\n              if a[k] = 'O' then\n              begin\n                s := s + 1;\n                for m := k + 1 to 18 do\n                  if a[m] = 'O' then\n                  begin\n                    s := s + 1;\n                    if s = n then\n                      writeln('Karlsson');\n                  end;\n              end;\n          end;\n      end;\n  end;\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const input = require('fs').readFileSync('\/dev\/stdin').toString().split('\\n');\\nconst board = input.map(row => row.split(''));\\nconst isValid = (row, col) => row >= 0 && row < 5 && col >= 0 && col < 5;\\nconst getRow = (row) => board.slice(row * 5, (row + 1) * 5);\\nconst getCol = (col) => board.slice(col, col + 5);\\nconst getDiag1 = () => board.slice(0, 5).concat(board.slice(5, 10)).concat(board.slice(10, 15)).concat(board.slice(15, 20));\\nconst getDiag2 = () => board.slice(20, 25).concat(board.slice(15, 20)).concat(board.slice(10, 15)).concat(board.slice(5, 10));\\nconst getRows = () => [getRow(0), getRow(1), getRow(2), getRow(3), getRow(4)];\\nconst getCols = () => [getCol(0), getCol(1), getCol(2), getCol(3), getCol(4)];\\nconst getDiags = () => [getDiag1(), getDiag2()];\\nconst getAvailableMoves = () => getRows().concat(getCols()).concat(getDiags());\\nconst getMoves = () => getAvailableMoves().filter(move => move.filter(c => c === 'O').length > 0);\\nconst getWinner = () => { \\n  const moves = getMoves();\\n  if (moves.length === 0) {\\n    return 'Lillebror';\\n  } else {\\n    return 'Karlsson';\\n  }\\n};\\nconsole.log(getWinner());\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val board = Array(5) { Array(19) { ' ' } }\n    for (i in 0..4) {\n        board[i] = scanner.nextLine().toCharArray()\n    }\n\n    val canMove = true\n    for (i in 0..4) {\n        for (j in 0..17) {\n            if (board[i][j] == 'O' && board[i][j + 1] == 'O') {\n                canMove = false\n            }\n            if (board[i][j] == 'O' && board[i + 1][j] == 'O') {\n                canMove = false\n            }\n            if (board[i][j] == 'O' && board[i - 1][j] == 'O') {\n                canMove = false\n            }\n            if (board[i][j] == 'O' && board[i][j - 1] == 'O') {\n                canMove = false\n            }\n        }\n    }\n\n    if (canMove) {\n        println(\"Lillebror\")\n    } else {\n        println(\"Karlsson\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$board = [];\nfor ($i = 0; $i < 5; $i++) {\n    $board[] = explode(\" \", trim(fgets(STDIN)));\n}\n\n$moves = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [9, 10, 11],\n    [12, 13, 14],\n    [15, 16, 17],\n    [18, 19],\n    [0, 3, 6, 9, 12, 15],\n    [1, 4, 7, 10, 13, 16],\n    [2, 5, 8, 11, 14, 17],\n];\n\n$karlsson = 0;\n$lilleborr = 0;\n\nforeach ($moves as $move) {\n    $count = 0;\n    for ($i = 0; $i < 6; $i++) {\n        if ($board[$move[$i]][0] == \"O\") {\n            $count++;\n        }\n    }\n\n    if ($count > 0) {\n        for ($i = 0; $i < 6; $i++) {\n            $board[$move[$i]][0] = \".\";\n        }\n\n        if ($count % 2 == 0) {\n            $karlsson++;\n        } else {\n            $lilleborr++;\n        }\n    }\n}\n\nif ($karlsson > $lilleborr) {\n    echo \"Karlsson\";\n} else {\n    echo \"Lillebror\";\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[5] a;\n    int i, j, k, n, m, s, t;\n    bool b;\n\n    for (i = 0; i < 5; i++) {\n        a[i] = 0;\n        for (j = 0; j < 19; j++) {\n            char c;\n            c = std.stdio.readln().strip();\n            if (c == 'O') {\n                a[i]++;\n            }\n        }\n    }\n\n    n = 0;\n    m = 0;\n    for (i = 0; i < 5; i++) {\n        if (a[i] > 0) {\n            n++;\n        }\n    }\n    for (i = 0; i < 5; i++) {\n        if (a[i] == 0) {\n            m++;\n        }\n    }\n\n    s = 0;\n    t = 0;\n    for (i = 0; i < 5; i++) {\n        if (a[i] > 0) {\n            s++;\n        }\n    }\n    for (i = 0; i < 5; i++) {\n        if (a[i] == 0) {\n            t++;\n        }\n    }\n\n    b = false;\n    if (s == 1) {\n        b = true;\n    }\n    if (t == 1) {\n        b = true;\n    }\n\n    if (b) {\n        std.stdio.writeln('Karlsson');\n    } else {\n        std.stdio.writeln('Lillebror');\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $input = <STDIN>;\\n\\nmy @lines = split(\/\\n\/, $input);\\n\\nmy $x = 0;\\nmy $y = 0;\\n\\nmy $count = 0;\\n\\nfor (my $i = 0; $i < 5; $i++) {\\n    for (my $j = 0; $j < 19; $j++) {\\n        if ($lines[$i][$j] eq 'O') {\\n            $count++;\\n        }\\n    }\\n}\\n\\nif ($count % 2 == 0) {\\n    print 'Lillebror';\\n} else {\\n    print 'Karlsson';\\n}\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut board = [['.'; 5]; 5];\n    for i in 0..5 {\n        let mut line = String::new();\n        io::stdin().read_line(&mut line).unwrap();\n        for (j, c) in line.chars().enumerate() {\n            board[i][j] = c;\n        }\n    }\n\n    let mut can_move = true;\n    for i in 0..5 {\n        for j in 0..5 {\n            if board[i][j] == 'O' {\n                if i > 0 && board[i - 1][j] == 'O' {\n                    can_move = false;\n                }\n                if i < 4 && board[i + 1][j] == 'O' {\n                    can_move = false;\n                }\n                if j > 0 && board[i][j - 1] == 'O' {\n                    can_move = false;\n                }\n                if j < 4 && board[i][j + 1] == 'O' {\n                    can_move = false;\n                }\n            }\n        }\n    }\n\n    if can_move {\n        println!(\"Lillebror\");\n    } else {\n        println!(\"Karlsson\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Harry Potter and the History of Magic","description":"The History of Magic is perhaps the most boring subject in the Hogwarts school of Witchcraft and Wizardry. Harry Potter is usually asleep during history lessons, and his magical quill writes the lectures for him. Professor Binns, the history of magic teacher, lectures in such a boring and monotonous voice, that he has a soporific effect even on the quill. That's why the quill often makes mistakes, especially in dates.So, at the end of the semester Professor Binns decided to collect the students' parchments with notes and check them. Ron Weasley is in a panic: Harry's notes may contain errors, but at least he has some notes, whereas Ron does not have any. Ronald also has been sleeping during the lectures and his quill had been eaten by his rat Scabbers. Hermione Granger refused to give Ron her notes, because, in her opinion, everyone should learn on their own. Therefore, Ron has no choice but to copy Harry's notes.Due to the quill's errors Harry's dates are absolutely confused: the years of goblin rebellions and other important events for the wizarding world do not follow in order, and sometimes even dates from the future occur. Now Ron wants to change some of the digits while he copies the notes so that the dates were in the chronological (i.e. non-decreasing) order and so that the notes did not have any dates strictly later than 2011, or strictly before than 1000. To make the resulting sequence as close as possible to the one dictated by Professor Binns, Ron will change no more than one digit in each date into other digit. Help him do it.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first input line contains an integer n (1\u2264n\u22641000). It represents the number of dates in Harry's notes. Next n lines contain the actual dates y1, y2, ..., yn, each line contains a date. Each date is a four-digit integer (1000\u2264yi\u22649999).\n","output_spec":"Print n numbers z1, z2, ..., zn (1000\u2264zi\u22642011). They are Ron's resulting dates. Print each number on a single line. Numbers zi must form the non-decreasing sequence. Each number zi should differ from the corresponding date yi in no more than one digit. It is not allowed to change the first digit of a number into 0. If there are several possible solutions, print any of them. If there's no solution, print \"No solution\" (without the quotes).\n","notes":null,"sample_inputs":["3\n1875\n1936\n1721\n","4\n9999\n2000\n3000\n3011\n","3\n1999\n5055\n2000\n"],"sample_outputs":["1835\n1836\n1921\n","1999\n2000\n2000\n2011\n","No solution\n"],"id":"65-B","difficulty":1700,"tags":["brute+force","greedy","implementation"],"src_uid":"c175d010d75c391d0b25391fecff007c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    sort(a, a + n);\n    for (int i = 0; i < n; i++) {\n        if (a[i] < 1000 || a[i] > 2011) {\n            cout << \"No solution\" << endl;\n            return 0;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        if (a[i] == a[i + 1]) {\n            cout << a[i] << endl;\n        } else {\n            int b = a[i];\n            int c = a[i + 1];\n            int d = b % 10;\n            b \/= 10;\n            int e = c % 10;\n            c \/= 10;\n            int f = b + 1;\n            int g = c - 1;\n            if (f < 1000 || f > 2011) {\n                f = b;\n            }\n            if (g < 1000 || g > 2011) {\n                g = c;\n            }\n            if (f == b) {\n                cout << g << endl;\n            } else if (g == c) {\n                cout << f << endl;\n            } else {\n                cout << f << endl;\n            }\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < 4; j++) {\n                for (int k = 0; k < 10; k++) {\n                    if (a[i] \/ 1000 == k) {\n                        continue;\n                    }\n                    if (a[i] % 1000 == k) {\n                        continue;\n                    }\n                    if (a[i] \/ 100 == k) {\n                        continue;\n                    }\n                    if (a[i] % 10 == k) {\n                        continue;\n                    }\n                    if (a[i] < 1000 || a[i] > 2011) {\n                        continue;\n                    }\n                    System.out.println(a[i]);\n                    break;\n                }\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\nfor i in range(n):\n    y = int(input())\n    y1 = y \/\/ 1000\n    y2 = (y % 1000) \/\/ 100\n    y3 = (y % 100) \/\/ 10\n    y4 = y % 10\n\n    if y1 == 9:\n        print(y)\n    elif y1 == 0:\n        if y2 == 0:\n            if y3 == 0:\n                if y4 == 0:\n                    print(\"No solution\")\n                else:\n                    print(y - 1)\n            else:\n                print(y - 10)\n        else:\n            print(y - 100)\n    else:\n        print(y + 1)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Hogwarts\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            List<int> y = new List<int>();\n            for (int i = 0; i < n; i++)\n            {\n                y.Add(int.Parse(Console.ReadLine()));\n            }\n            y.Sort();\n            List<int> z = new List<int>();\n            for (int i = 0; i < n; i++)\n            {\n                int x = y[i];\n                if (x < 1000)\n                {\n                    z.Add(1000);\n                }\n                else if (x > 2011)\n                {\n                    z.Add(2011);\n                }\n                else\n                {\n                    z.Add(x);\n                }\n            }\n            for (int i = 0; i < n; i++)\n            {\n                Console.WriteLine(z[i]);\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn = gets.to_i\na = []\nn.times do\n  a << gets.to_i\nend\n\na.sort!\n\na.each do |i|\n  if i < 1000\n    puts \"No solution\"\n    exit\n  end\n\n  if i > 2011\n    puts \"No solution\"\n    exit\n  end\n\n  if i % 100 == 0\n    puts i\n  else\n    if i % 10 == 0\n      puts i - 1\n    else\n      puts i + 1\n    end\n  end\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Ron;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, m, t, a, b, c, d, y, z: Integer;\n  x: array[0..9999] of Integer;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n  begin\n    Readln(y);\n    x[i] := y;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to 9999 do\n    begin\n      if (x[i] < j) and (j <= 2011) then\n      begin\n        for k := 0 to 3 do\n        begin\n          if (x[i] div 1000 mod 10 < j div 1000 mod 10) and (j div 1000 mod 10 < 9) then\n          begin\n            t := j div 1000 mod 10;\n            j := j - t * 1000 + (t + 1) * 1000;\n          end;\n          if (x[i] div 100 mod 10 < j div 100 mod 10) and (j div 100 mod 10 < 9) then\n          begin\n            t := j div 100 mod 10;\n            j := j - t * 100 + (t + 1) * 100;\n          end;\n          if (x[i] div 10 mod 10 < j div 10 mod 10) and (j div 10 mod 10 < 9) then\n          begin\n            t := j div 10 mod 10;\n            j := j - t * 10 + (t + 1) * 10;\n          end;\n          if (x[i] mod 10 < j mod 10) and (j mod 10 < 9) then\n          begin\n            t := j mod 10;\n            j := j - t + (t + 1);\n          end;\n        end;\n        if (j > x[i]) and (j <= 2011) then\n        begin\n          for m := 0 to n - 1 do\n          begin\n            if (j = x[m]) and (i < m) then\n            begin\n              j := j + 1;\n            end;\n          end;\n          if (j > x[i]) and (j <= 2011) then\n          begin\n            Writeln(j);\n            break;\n          end;\n        end;\n      end;\n    end;\n  end;\n  if (i = n) then\n    Writeln('No solution');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\tvar a = make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\tsort.Ints(a)\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] < 1000 || a[i] > 2011 {\n\t\t\tfmt.Println(\"No solution\")\n\t\t\treturn\n\t\t}\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] == 1000 {\n\t\t\tfmt.Println(\"1001\")\n\t\t} else if a[i] == 2011 {\n\t\t\tfmt.Println(\"2010\")\n\t\t} else {\n\t\t\tfmt.Println(a[i] + 1)\n\t\t}\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = parseInt(input.split('\\n')[0]);\nconst dates = input.split('\\n').slice(1);\nconst sortedDates = dates.sort((a, b) => a - b);\nconst result = [];\nfor (let i = 0; i < n; i++) {\n  const date = sortedDates[i];\n  const year = date.slice(0, 4);\n  const month = date.slice(4, 6);\n  const day = date.slice(6, 8);\n  const newYear = Math.max(year, 1000);\n  const newMonth = Math.max(month, 1);\n  const newDay = Math.max(day, 1);\n  const newDate = `${newYear}${newMonth}${newDay}`;\n  if (newDate > 2011) {\n    result.push(newDate);\n  } else {\n    result.push(date);\n  }\n}\nfs.writeFileSync('output.txt', result.join('\\n'));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val dates = Array(n) { readLine()!!.toInt() }\n    val ans = Array(n) { 0 }\n    val pq = PriorityQueue<Pair<Int, Int>>(compareBy { it.first })\n    for (i in 0 until n) {\n        pq.add(Pair(dates[i], i))\n    }\n    while (pq.isNotEmpty()) {\n        val (date, idx) = pq.poll()\n        if (ans[idx] == 0) {\n            ans[idx] = date\n            for (i in 0..3) {\n                val newDate = date + (i - date % 10)\n                if (newDate in 1000..2011 && newDate > date) {\n                    pq.add(Pair(newDate, idx))\n                }\n            }\n        }\n    }\n    for (i in 0 until n) {\n        print(ans[i])\n        print(\"\\n\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[] = (int)trim(fgets(STDIN));\n}\n\n$arr = array_unique($arr);\nsort($arr);\n\n$ans = [];\nfor ($i = 0; $i < $n; $i++) {\n    $ans[] = $arr[$i];\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($ans[$i] < 1000 || $ans[$i] > 2011) {\n        echo \"No solution\\n\";\n        exit;\n    }\n}\n\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < 4; $j++) {\n        $ans[$i] = str_replace($ans[$i][$j], $ans[$i][$j] + 1, $ans[$i]);\n        if ($ans[$i] >= 1000 && $ans[$i] <= 2011) {\n            echo $ans[$i] . \"\\n\";\n            break;\n        }\n        $ans[$i] = str_replace($ans[$i][$j], $ans[$i][$j] - 1, $ans[$i]);\n        if ($ans[$i] >= 1000 && $ans[$i] <= 2011) {\n            echo $ans[$i] . \"\\n\";\n            break;\n        }\n    }\n}\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <STDIN>;\\nmy @y = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    $y[$i] = <STDIN>;\\n}\\n\\nmy @z = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $y = $y[$i];\\n    my $z = $y;\\n    for (my $j = 0; $j < 4; $j++) {\\n        $z[$j] = $y[$j] + 1;\\n        if ($z > 2011) {\\n            $z[$j] = $y[$j] - 1;\\n        }\\n        if ($z < 1000) {\\n            $z[$j] = $y[$j] + 1;\\n        }\\n        if ($z > $y) {\\n            $z[$j] = $y[$j];\\n        }\\n    }\\n    push @z, $z;\\n}\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    print $z[$i], \"\\n\";\\n}\\n\\nexit 0;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut ys = Vec::new();\n    for _ in 0..n {\n        let mut y = String::new();\n        io::stdin().read_line(&mut y).unwrap();\n        let y: u32 = y.trim().parse().unwrap();\n        ys.push(y);\n    }\n\n    let mut zs = Vec::new();\n    for y in ys {\n        let mut z = y;\n        for i in 0..4 {\n            let mut d = z % 10;\n            z \/= 10;\n            if d < 9 {\n                z += 1;\n                break;\n            }\n            z -= 9;\n        }\n        if z < 1000 {\n            z += 1000;\n        }\n        if z > 2011 {\n            z -= 1000;\n        }\n        zs.push(z);\n    }\n\n    zs.sort();\n    for z in zs {\n        println!(\"{}\", z);\n    }\n}\n\"\"\"}]"}
{"title":"A. Petya and Java","description":"Little Petya has recently started attending a programming club. Naturally he is facing the problem of choosing a programming language. After long considerations he realized that Java is the best choice. The main argument in favor of choosing Java was that it has a very large integer data type, called BigInteger.But having attended several classes of the club, Petya realized that not all tasks require using the BigInteger type. It turned out that in some tasks it is much easier to use small data types. That's why a question arises: \"Which integer type to use if one wants to store a positive integer n?\"Petya knows only 5 integer types:1) byte occupies 1 byte and allows you to store numbers from -128 to 1272) short occupies 2 bytes and allows you to store numbers from -32768 to 327673) int occupies 4 bytes and allows you to store numbers from -2147483648 to 21474836474) long occupies 8 bytes and allows you to store numbers from -9223372036854775808 to 92233720368547758075) BigInteger can store any integer number, but at that it is not a primitive type, and operations with it are much slower.For all the types given above the boundary values are included in the value range.From this list, Petya wants to choose the smallest type that can store a positive integer n. Since BigInteger works much slower, Peter regards it last. Help him.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a positive number n. It consists of no more than 100 digits and doesn't contain any leading zeros. The number n can't be represented as an empty string.\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preffered to use cout (also you may use %I64d).\n","output_spec":"Print the first type from the list \"byte, short, int, long, BigInteger\", that can store the natural number n, in accordance with the data given above.\n","notes":null,"sample_inputs":["127\n","130\n","123456789101112131415161718192021222324\n"],"sample_outputs":["byte\n","short\n","BigInteger\n"],"id":"66-A","difficulty":1300,"tags":["implementation","strings"],"src_uid":"33041f1832fa7f641e37c4c638ab08a1","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    string n;\n    cin >> n;\n    if (n.length() <= 2) {\n        cout << \"byte\\n\";\n    } else if (n.length() <= 5) {\n        cout << \"short\\n\";\n    } else if (n.length() <= 10) {\n        cout << \"int\\n\";\n    } else if (n.length() <= 19) {\n        cout << \"long\\n\";\n    } else {\n        cout << \"BigInteger\\n\";\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String n = scanner.nextLine();\n        int nLength = n.length();\n        if (nLength <= 2) {\n            System.out.println(\"byte\");\n        } else if (nLength <= 5) {\n            System.out.println(\"short\");\n        } else if (nLength <= 10) {\n            System.out.println(\"int\");\n        } else if (nLength <= 19) {\n            System.out.println(\"long\");\n        } else {\n            System.out.println(\"BigInteger\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nif n < 128:\n    print('byte')\nelif n < 32768:\n    print('short')\nelif n < 2147483647:\n    print('int')\nelif n < 9223372036854775807:\n    print('long')\nelse:\n    print('BigInteger')\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string n = Console.ReadLine();\n            int n1 = int.Parse(n);\n            if (n1 <= 127)\n            {\n                Console.WriteLine(\"byte\");\n            }\n            else if (n1 <= 32767)\n            {\n                Console.WriteLine(\"short\");\n            }\n            else if (n1 <= 2147483647)\n            {\n                Console.WriteLine(\"int\");\n            }\n            else if (n1 <= 9223372036854775807)\n            {\n                Console.WriteLine(\"long\");\n            }\n            else\n            {\n                Console.WriteLine(\"BigInteger\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\nif n < 128\n  puts 'byte'\nelsif n < 32768\n  puts 'short'\nelsif n < 2147483647\n  puts 'int'\nelsif n < 9223372036854775807\n  puts 'long'\nelse\n  puts 'BigInteger'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var n:string;\nbegin\n  readln(n);\n  if (n < '128') then writeln('byte')\n  else if (n < '32768') then writeln('short')\n  else if (n < '2147483647') then writeln('int')\n  else if (n < '9223372036854775807') then writeln('long')\n  else writeln('BigInteger');\nend.\"}]}","Go":"[{\"version\": \"Go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := 0\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    switch {\\n    case n <= 127:\\n        fmt.Println(\\\"byte\\\")\\n    case n <= 32767:\\n        fmt.Println(\\\"short\\\")\\n    case n <= 2147483647:\\n        fmt.Println(\\\"int\\\")\\n    case n <= 9223372036854775807:\\n        fmt.Println(\\\"long\\\")\\n    default:\\n        fmt.Println(\\\"BigInteger\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"n = parseInt(process.stdin.readLine());\\nif (n <= 127) console.log('byte');\\nelse if (n <= 32767) console.log('short');\\nelse if (n <= 2147483647) console.log('int');\\nelse if (n <= 9223372036854775807) console.log('long');\\nelse console.log('BigInteger');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val types = listOf(\"byte\", \"short\", \"int\", \"long\", \"BigInteger\")\n    val typesRange = listOf(Byte.MAX_VALUE, Short.MAX_VALUE, Int.MAX_VALUE, Long.MAX_VALUE, Long.MAX_VALUE)\n    val typesIndex = typesRange.indexOfFirst { it >= n }\n    println(types[typesIndex])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = trim(fgets(STDIN));\\nif ($n <= 127) { echo 'byte'; }\\nelseif ($n <= 32767) { echo 'short'; }\\nelseif ($n <= 2147483647) { echo 'int'; }\\nelseif ($n <= 9223372036854775807) { echo 'long'; }\\nelse { echo 'BigInteger'; }\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\n\nvoid main() {\n    string n;\n    scanf(\" %s \", n);\n    int i = 0;\n    while (n[i] != '\\0') {\n        i++;\n    }\n    if (i <= 8) {\n        printf(\" byte \");\n    } else if (i <= 16) {\n        printf(\" short \");\n    } else if (i <= 32) {\n        printf(\" int \");\n    } else if (i <= 64) {\n        printf(\" long \");\n    } else {\n        printf(\" BigInteger \");\n    }\n    printf(\"\\n\");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\n\nif ($n < 128) {\n    print \"byte\\n\";\n} elsif ($n < 32768) {\n    print \"short\\n\";\n} elsif ($n < 2147483647) {\n    print \"int\\n\";\n} elsif ($n < 9223372036854775807) {\n    print \"long\\n\";\n} else {\n    print \"BigInteger\\n\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: i64 = n.trim().parse().unwrap();\n\n    if n <= 127 {\n        println!(\"byte\");\n    } else if n <= 32767 {\n        println!(\"short\");\n    } else if n <= 2147483647 {\n        println!(\"int\");\n    } else if n <= 9223372036854775807 {\n        println!(\"long\");\n    } else {\n        println!(\"BigInteger\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Petya and Countryside","description":"Little Petya often travels to his grandmother in the countryside. The grandmother has a large garden, which can be represented as a rectangle 1\u00d7n in size, when viewed from above. This rectangle is divided into n equal square sections. The garden is very unusual as each of the square sections possesses its own fixed height and due to the newest irrigation system we can create artificial rain above each section.Creating artificial rain is an expensive operation. That's why we limit ourselves to creating the artificial rain only above one section. At that, the water from each watered section will flow into its neighbouring sections if their height does not exceed the height of the section. That is, for example, the garden can be represented by a 1\u00d75 rectangle, where the section heights are equal to 4, 2, 3, 3, 2. Then if we create an artificial rain over any of the sections with the height of 3, the water will flow over all the sections, except the ones with the height of 4. See the illustration of this example at the picture: As Petya is keen on programming, he decided to find such a section that if we create artificial rain above it, the number of watered sections will be maximal. Help him. ","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains a positive integer n (1\u2264n\u22641000). The second line contains n positive integers which are the height of the sections. All the numbers are no less than 1 and not more than 1000.\n","output_spec":"Print a single number, the maximal number of watered sections if we create artificial rain above exactly one section.\n","notes":null,"sample_inputs":["1\n2\n","5\n1 2 1 2 1\n","8\n1 2 1 1 1 3 3 4\n"],"sample_outputs":["1\n","3\n","6\n"],"id":"66-B","difficulty":1100,"tags":["brute+force","implementation"],"src_uid":"5d11fa8528f1dc873d50b3417bef8c79","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 1;\n    for (int i = 1; i < n; i++) {\n        if (a[i] > a[i - 1]) {\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            int count = 1;\n            for (int j = i + 1; j < n; j++) {\n                if (a[j] >= a[i]) {\n                    count++;\n                } else {\n                    break;\n                }\n            }\n            for (int j = i - 1; j >= 0; j--) {\n                if (a[j] >= a[i]) {\n                    count++;\n                } else {\n                    break;\n                }\n            }\n            max = Math.max(max, count);\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 1\nfor i in range(1, n):\n    if a[i] > a[i - 1]:\n        ans += 1\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int max = 0;\n    for (int i = 0; i < n; i++) {\n        int count = 1;\n        for (int j = i + 1; j < n; j++) {\n            if (a[j] >= a[i]) {\n                count++;\n            } else {\n                break;\n            }\n        }\n        for (int j = i - 1; j >= 0; j--) {\n            if (a[j] >= a[i]) {\n                count++;\n            } else {\n                break;\n            }\n        }\n        if (count > max) {\n            max = count;\n        }\n    }\n    printf(\" %d \", max);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = new int[n];\n        int[] b = new int[n];\n        int max = 0;\n        int max_index = 0;\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(Console.ReadLine());\n            b[i] = 1;\n            if (a[i] > max)\n            {\n                max = a[i];\n                max_index = i;\n            }\n        }\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] < max)\n            {\n                b[i] = 0;\n            }\n        }\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (b[i] == 1)\n            {\n                count++;\n            }\n        }\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nmax = 0\nfor i in 0..n-1\n    for j in 0..n-1\n        if i != j && a[i] >= a[j]\n            max = max + 1\n        end\n    end\nend\n\nputs max\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Garden;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, max, max_i, max_j: Integer;\n  a: array[0..1000] of Integer;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n    Readln(a[i]);\n  max := 0;\n  for i := 0 to n - 1 do\n  begin\n    max_j := 0;\n    for j := 0 to n - 1 do\n      if a[i] > a[j] then\n        max_j := max_j + 1;\n    if max_j > max then\n    begin\n      max := max_j;\n      max_i := i;\n    end;\n  end;\n  Writeln(max + 1);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &a[i])\\n    }\\n    max := 0\\n    for i := 0; i < n; i++ {\\n        count := 1\\n        for j := i + 1; j < n; j++ {\\n            if a[j] >= a[i] {\\n                count++\\n            }\\n        }\\n        if count > max {\\n            max = count\\n        }\\n    }\\n    fmt.Println(max)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const n = parseInt(line);\n  const arr = line.split(' ').map(x => parseInt(x));\n  let max = 0;\n  for (let i = 0; i < n; i++) {\n    let count = 1;\n    for (let j = i + 1; j < n; j++) {\n      if (arr[j] >= arr[i]) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let j = i - 1; j >= 0; j--) {\n      if (arr[j] >= arr[i]) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    max = Math.max(max, count);\n  }\n  console.log(max);\n  process.exit();\n});\n\nrl.on('close', () => {});\n\nrl.start();\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nn = readLine().toInt()\na = readLine().split(\" \").map { it.toInt() }.sorted()\n\nmax = 0\nfor (i in 0 until n) {\n    max = maxOf(max, a.subList(i, n).count { it >= a[i] })\n}\n\nprintln(max)\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$n = (int)trim(fgets(STDIN));\\n$arr = explode(' ', trim(fgets(STDIN)));\\n$max = 0;\\n$max_index = 0;\\nfor ($i = 0; $i < $n; $i++) {\\n    if ($arr[$i] > $max) {\\n        $max = $arr[$i];\\n        $max_index = $i;\\n    }\\n}\\n$count = 1;\\nfor ($i = 0; $i < $n; $i++) {\\n    if ($i != $max_index && $arr[$i] <= $max) {\\n        $count++;\\n    }\\n}\\necho $count;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int max = 0;\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (a[i] >= a[j]) {\n                count++;\n            }\n        }\n        if (count > max) {\n            max = count;\n        }\n        count = 0;\n    }\n    printf(\" %d \", max);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = <STDIN>;\nmy $max = 0;\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] > $max) {\n        $max = $a[$i];\n        $ans = 1;\n    } elsif ($a[$i] == $max) {\n        $ans++;\n    }\n}\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let n: usize = stdin.read_line().unwrap().trim().parse().unwrap();\n    let mut a: Vec<usize> = stdin.read_line().unwrap().trim().split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut max_area = 0;\n    for i in 0..n {\n        let mut area = 1;\n        for j in i + 1..n {\n            if a[j] >= a[i] {\n                area += 1;\n            } else {\n                break;\n            }\n        }\n        for j in (0..i).rev() {\n            if a[j] >= a[i] {\n                area += 1;\n            } else {\n                break;\n            }\n        }\n        max_area = max(max_area, area);\n    }\n\n    stdout.write_fmt(format_args!(\"{}\", max_area)).unwrap();\n}\n\"\"\"}]"}
{"title":"C. Sequence of Balls","description":"You are given a sequence of balls A by your teacher, each labeled with a lowercase Latin letter 'a'-'z'. You don't like the given sequence. You want to change it into a new sequence, B that suits you better. So, you allow yourself four operations:  You can insert any ball with any label into the sequence at any position.  You can delete (remove) any ball from any position.  You can replace any ball with any other ball.  You can exchange (swap) two adjacent balls. Your teacher now places time constraints on each operation, meaning that an operation can only be performed in certain time. So, the first operation takes time ti, the second one takes td, the third one takes tr and the fourth one takes te. Also, it is given that 2\u00b7te\u2265ti+td.Find the minimal time to convert the sequence A to the sequence B.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains four space-separated integers ti,td,tr,te (0<ti,td,tr,te\u2264100). The following two lines contain sequences A and B on separate lines. The length of each line is between 1 and 4000 characters inclusive.\n","output_spec":"Print a single integer representing minimum time to convert A into B.\n","notes":"In the second sample, you could delete the ball labeled 'a' from the first position and then insert another 'a' at the new second position with total time 6. However exchanging the balls give total time 3.\n","sample_inputs":["1 1 1 1\nyoushouldnot\nthoushaltnot\n","2 4 10 3\nab\nba\n","1 10 20 30\na\nza\n"],"sample_outputs":["5\n","3\n","1\n"],"id":"67-C","difficulty":2600,"tags":["dp"],"src_uid":"c7e0c6b93a2f2f43fe9da405409c91e6","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int ti, td, tr, te;\n    cin >> ti >> td >> tr >> te;\n    string a, b;\n    cin >> a >> b;\n    int n = a.length();\n    int m = b.length();\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] != b[i]) {\n            int j = i;\n            while (j < m && b[j] != a[i]) {\n                j++;\n            }\n            if (j == m) {\n                ans += ti + td;\n            } else {\n                ans += min(ti + td, min(tr, te));\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] t = br.readLine().split(\" \");\n        int ti = Integer.parseInt(t[0]);\n        int td = Integer.parseInt(t[1]);\n        int tr = Integer.parseInt(t[2]);\n        int te = Integer.parseInt(t[3]);\n        String a = br.readLine();\n        String b = br.readLine();\n        int n = a.length();\n        int m = b.length();\n        int[][] dp = new int[n + 1][m + 1];\n        for (int i = 0; i <= n; i++) {\n            Arrays.fill(dp[i], Integer.MAX_VALUE);\n        }\n        dp[0][0] = 0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                if (a.charAt(i - 1) == b.charAt(j - 1)) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = Math.min(dp[i - 1][j] + ti, Math.min(dp[i][j - 1] + td, Math.min(dp[i - 1][j - 1] + tr, dp[i - 1][j - 1] + te)));\n                }\n            }\n        }\n        System.out.println(dp[n][m]);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nti,td,tr,te = map(int,input().split())\nA = input()\nB = input()\n\ndef insert(i,c):\n    return ti + len(A) - i\ndef delete(i):\n    return td + i\ndef replace(i,c):\n    return tr\ndef exchange(i,j):\n    return te\n\nans = 0\nfor i in range(len(A)):\n    if A[i] != B[i]:\n        ans += min(insert(i,B[i]),delete(i),replace(i,B[i]),exchange(i,i+1))\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int ti, td, tr, te;\n    scanf(\" %d %d %d %d \", &ti, &td, &tr, &te);\n    char a[4000], b[4000];\n    scanf(\" %s \", a);\n    scanf(\" %s \", b);\n    int n = strlen(a);\n    int m = strlen(b);\n    int i, j;\n    int ans = 0;\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < m; j++) {\n            if (a[i] == b[j]) {\n                ans += te;\n                break;\n            }\n        }\n        if (j == m) {\n            if (i == 0) {\n                ans += ti;\n            } else {\n                ans += td;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var t = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var a = Console.ReadLine();\n        var b = Console.ReadLine();\n\n        var dp = new int[a.Length + 1, b.Length + 1];\n        for (int i = 0; i <= a.Length; i++)\n        {\n            for (int j = 0; j <= b.Length; j++)\n            {\n                if (i == 0 || j == 0)\n                {\n                    dp[i, j] = i + j;\n                }\n                else if (a[i - 1] == b[j - 1])\n                {\n                    dp[i, j] = dp[i - 1, j - 1];\n                }\n                else\n                {\n                    dp[i, j] = Math.Min(dp[i - 1, j] + t[0], Math.Min(dp[i, j - 1] + t[1], dp[i - 1, j - 1] + t[2]));\n                }\n            }\n        }\n\n        Console.WriteLine(dp[a.Length, b.Length]);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"t,d,r,e=map(int,input().split())\na=input()\nb=input()\nc=0\nfor i in range(len(a)):\n    if a[i]!=b[i]:\n        c+=min(t,d,r,e)\nprint(c)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  ti, td, tr, te: Integer;\n  a, b: String;\n  i, j, n, m: Integer;\n  t: Integer;\n\nbegin\n  Readln(ti, td, tr, te);\n  Readln(a);\n  Readln(b);\n  n := Length(a);\n  m := Length(b);\n  t := 0;\n  for i := 1 to n do\n  begin\n    for j := 1 to m do\n    begin\n      if a[i] = b[j] then\n      begin\n        t := t + te;\n        break;\n      end;\n    end;\n    if j > m then\n    begin\n      if i = 1 then\n        t := t + ti\n      else\n        t := t + td;\n    end;\n  end;\n  for i := 1 to m - n do\n  begin\n    t := t + td;\n  end;\n  Writeln(t);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar ti, td, tr, te int\n\tfmt.Scan(&ti, &td, &tr, &te)\n\ta := strings.Split(strings.TrimSpace(fmt.Scanln()), \"\")\n\tb := strings.Split(strings.TrimSpace(fmt.Scanln()), \"\")\n\tans := 0\n\tfor i := 0; i < len(a); i++ {\n\t\tif a[i] != b[i] {\n\t\t\tif i == 0 {\n\t\t\t\tans += ti\n\t\t\t} else if i == len(a)-1 {\n\t\t\t\tans += td\n\t\t\t} else {\n\t\t\t\tans += te\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nconst fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst ti = parseInt(input[0].split(' ')[0]);\nconst td = parseInt(input[0].split(' ')[1]);\nconst tr = parseInt(input[0].split(' ')[2]);\nconst te = parseInt(input[0].split(' ')[3]);\nconst a = input[1];\nconst b = input[2];\n\nconst dp = new Array(a.length + 1).fill(0);\nconst dp2 = new Array(a.length + 1).fill(0);\n\nfor (let i = 0; i < a.length; i++) {\n  dp[i + 1] = Math.min(dp[i] + ti, dp[i] + td);\n  dp2[i + 1] = Math.min(dp2[i] + tr, dp2[i] + te);\n  if (a[i] === b[i]) {\n    dp[i + 1] = Math.min(dp[i + 1], dp2[i]);\n  } else {\n    dp[i + 1] = Math.min(dp[i + 1], dp2[i] + te);\n  }\n}\n\nconsole.log(dp[a.length]);\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (ti, td, tr, te) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine()\n    val b = readLine()\n    val dp = Array(a.length + 1) { IntArray(b.length + 1) { Int.MAX_VALUE } }\n    dp[0][0] = 0\n    for (i in 1..a.length) {\n        for (j in 1..b.length) {\n            if (a[i - 1] == b[j - 1]) {\n                dp[i][j] = dp[i - 1][j - 1]\n            } else {\n                dp[i][j] = minOf(dp[i - 1][j] + ti, dp[i][j - 1] + td, dp[i - 1][j - 1] + tr, dp[i - 1][j - 2] + te, dp[i][j - 2] + te)\n            }\n        }\n    }\n    println(dp[a.length][b.length])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$time = explode(' ', trim(fgets(STDIN)));\n$a = trim(fgets(STDIN));\n$b = trim(fgets(STDIN));\n$a = str_split($a);\n$b = str_split($b);\n$ans = 0;\nfor ($i = 0; $i < count($a); $i++) {\n    if ($a[$i] != $b[$i]) {\n        if ($a[$i] < $b[$i]) {\n            $ans += $time[0];\n        } else {\n            $ans += $time[1];\n        }\n    }\n}\nfor ($i = 0; $i < count($a) - 1; $i++) {\n    if ($a[$i] == $a[$i + 1]) {\n        $ans += $time[3];\n    }\n}\necho $ans;\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int[4] t = readln.split.map!(to!int).array;\n    string a = readln;\n    string b = readln;\n\n    int n = a.length;\n    int m = b.length;\n\n    int[n + 1] dp = new int[m + 1];\n\n    for (int i = 0; i <= n; i++) {\n        for (int j = 0; j <= m; j++) {\n            if (i == 0 || j == 0) {\n                dp[i][j] = t[0] * i + t[1] * j;\n            } else if (a[i - 1] == b[j - 1]) {\n                dp[i][j] = dp[i - 1][j - 1];\n            } else {\n                dp[i][j] = min(dp[i - 1][j] + t[0], dp[i][j - 1] + t[1]);\n                dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + t[2]);\n                dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + t[3]);\n            }\n        }\n    }\n\n    writeln(dp[n][m]);\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy ($ti, $td, $tr, $te) = split \/ \/, <STDIN>;\nmy $a = <STDIN>;\nmy $b = <STDIN>;\n\nmy $n = length($a);\nmy $m = length($b);\n\nmy $ans = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] ne $b[$i]) {\n        if ($i < $m) {\n            $ans += $te;\n        } else {\n            $ans += $td;\n        }\n    }\n}\n\nfor (my $i = $n; $i < $m; $i++) {\n    $ans += $td;\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut ti = 0;\n    let mut td = 0;\n    let mut tr = 0;\n    let mut te = 0;\n    for c in line.trim().split_whitespace() {\n        match c.parse::<i32>() {\n            Ok(n) => {\n                match n {\n                    ti => ti = n,\n                    td => td = n,\n                    tr => tr = n,\n                    te => te = n,\n                    _ => panic!(\"Invalid input\"),\n                }\n            }\n            Err(_) => panic!(\"Invalid input\"),\n        }\n    }\n\n    let mut a = String::new();\n    stdin.read_line(&mut a).unwrap();\n    let mut b = String::new();\n    stdin.read_line(&mut b).unwrap();\n\n    let mut a_len = a.len();\n    let mut b_len = b.len();\n\n    let mut cost = 0;\n    for i in 0..a_len {\n        if a[i] != b[i] {\n            if i < b_len {\n                cost += te;\n            } else {\n                cost += ti + td;\n            }\n        }\n    }\n\n    for i in a_len..b_len {\n        cost += ti + td;\n    }\n\n    println!(\"{}\", cost);\n}\n\"\"\"}]"}
{"title":"D. Optical Experiment","description":"Professor Phunsuk Wangdu has performed some experiments on rays. The setup for n rays is as follows.There is a rectangular box having exactly n holes on the opposite faces. All rays enter from the holes of the first side and exit from the holes of the other side of the box. Exactly one ray can enter or exit from each hole. The holes are in a straight line. Professor Wangdu is showing his experiment to his students. He shows that there are cases, when all the rays are intersected by every other ray. A curious student asked the professor: \"Sir, there are some groups of rays such that all rays in that group intersect every other ray in that group. Can we determine the number of rays in the largest of such groups?\".Professor Wangdu now is in trouble and knowing your intellect he asks you to help him.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains n (1\u2264n\u226410^6), the number of rays. The second line contains n distinct integers. The i-th integer xi (1\u2264xi\u2264n) shows that the xi-th ray enters from the i-th hole. Similarly, third line contains n distinct integers. The i-th integer yi (1\u2264yi\u2264n) shows that the yi-th ray exits from the i-th hole. All rays are numbered from 1 to n. \n","output_spec":"Output contains the only integer which is the number of rays in the largest group of rays all of which intersect each other.\n","notes":"For the first test case, the figure is shown above. The output of the first test case is 3, since the rays number 1, 4 and 3 are the ones which are intersected by each other one i.e. 1 is intersected by 4 and 3, 3 is intersected by 4 and 1, and 4 is intersected by 1 and 3. Hence every ray in this group is intersected by each other one. There does not exist any group containing more than 3 rays satisfying the above-mentioned constraint.\n","sample_inputs":["5\n1 4 5 2 3\n3 4 2 1 5\n","3\n3 1 2\n2 3 1\n"],"sample_outputs":["3\n","2\n"],"id":"67-D","difficulty":1900,"tags":["binary+search","data+structures","dp"],"src_uid":"b0ef9cda01a01cad22e7f4c49e74e85c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <vector>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n), b(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    for (int i = 0; i < n; i++) {\n        cin >> b[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int cnt = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[i] == b[j]) {\n                cnt++;\n            }\n        }\n        ans = max(ans, cnt);\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n        }\n        for (int i = 0; i < n; i++) {\n            y[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            int count = 0;\n            for (int j = 0; j < n; j++) {\n                if (x[i] == y[j] || x[j] == y[i]) {\n                    count++;\n                }\n            }\n            ans = Math.max(ans, count);\n        }\n        System.out.println(ans);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nx = list(map(int, input().split()))\ny = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        if x[i] == y[j] or x[j] == y[i]:\n            ans = max(ans, 2)\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\\n#include <stdlib.h>\\nint main() {\\n    int n, i, j, k, a[1000000], b[1000000], c[1000000], d[1000000], ans = 0, t = 0;\\n    scanf(\" %d \", &n);\\n    for (i = 0; i < n; i++) {\\n        scanf(\" %d \", &a[i]);\\n    }\\n    for (i = 0; i < n; i++) {\\n        scanf(\" %d \", &b[i]);\\n    }\\n    for (i = 0; i < n; i++) {\\n        for (j = 0; j < n; j++) {\\n            if (a[i] == b[j]) {\\n                c[t] = a[i];\\n                d[t] = b[j];\\n                t++;\\n            }\\n        }\\n    }\\n    for (i = 0; i < t; i++) {\\n        for (j = 0; j < t; j++) {\\n            if (c[i] == d[j]) {\\n                ans = ans + 1;\\n            }\\n        }\\n    }\\n    printf(\" %d \", ans);\\n    return 0;\\n}\\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            x[i] = int.Parse(Console.ReadLine());\n        }\n        for (int i = 0; i < n; i++)\n        {\n            y[i] = int.Parse(Console.ReadLine());\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            int count = 0;\n            for (int j = 0; j < n; j++)\n            {\n                if (x[i] == y[j])\n                {\n                    count++;\n                }\n            }\n            ans = Math.Max(ans, count);\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\nb = gets.split.map(&:to_i)\n\nans = 0\n\nfor i in 0..n-1\n  for j in 0..n-1\n    if a[i] == b[j]\n      ans = [ans, i+1].max\n    end\n  end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    x := make([]int, n)\\n    y := make([]int, n)\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x[i])\\n    }\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &y[i])\\n    }\\n    ans := 0\\n    for i := 0; i < n; i++ {\\n        for j := 0; j < n; j++ {\\n            if x[i] == y[j] {\\n                ans = max(ans, i+1)\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline());\nconst x = process.stdin.readline().split(' ').map(Number);\nconst y = process.stdin.readline().split(' ').map(Number);\nconst m = new Map();\nfor (let i = 0; i < n; i++) {\n  m.set(x[i], y[i]);\n}\nconst ans = 0;\nfor (let i = 0; i < n; i++) {\n  const a = m.get(i);\n  for (let j = 0; j < n; j++) {\n    if (i != j && m.get(j) == a) {\n      ans = Math.max(ans, 2);\n    }\n  }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val x = readLine().split(\" \").map { it.toInt() - 1 }.toIntArray()\n    val y = readLine().split(\" \").map { it.toInt() - 1 }.toIntArray()\n    val adj = Array(n) { mutableListOf<Int>() }\n    for (i in 0 until n) {\n        adj[x[i]].add(y[i])\n        adj[y[i]].add(x[i])\n    }\n    val ans = 0\n    val visited = BooleanArray(n)\n    for (i in 0 until n) {\n        if (!visited[i]) {\n            val q = LinkedList<Int>()\n            q.add(i)\n            visited[i] = true\n            var cnt = 1\n            while (q.isNotEmpty()) {\n                val v = q.poll()\n                for (u in adj[v]) {\n                    if (!visited[u]) {\n                        q.add(u)\n                        visited[u] = true\n                        cnt++\n                    }\n                }\n            }\n            ans = max(ans, cnt)\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$b = explode(' ', trim(fgets(STDIN)));\n$c = array_fill(0, $n, 0);\nfor ($i = 0; $i < $n; $i++) {\n    $c[$a[$i] - 1]++;\n    $c[$b[$i] - 1]++;\n}\n$max = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($c[$i] > $max) {\n        $max = $c[$i];\n    }\n}\necho $max;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    int b[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int cnt = 0;\n        for (int j = 0; j < n; j++) {\n            if (a[i] == b[j]) {\n                cnt++;\n            }\n        }\n        ans = max(ans, cnt);\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n;\\nmy @x;\\nmy @y;\\n\\n$n = <STDIN>;\\nchomp $n;\\n\\n@x = <STDIN>;\\nchomp @x;\\n\\n@y = <STDIN>;\\nchomp @y;\\n\\nmy %hash;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    $hash{$x[$i]} = $y[$i];\\n    $hash{$y[$i]} = $x[$i];\\n}\\n\\nmy $max = 0;\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $count = 0;\\n    for (my $j = 0; $j < $n; $j++) {\\n        if ($hash{$x[$i]} == $y[$j] || $hash{$y[$i]} == $x[$j]) {\\n            $count++;\\n        }\\n    }\\n    if ($count > $max) {\\n        $max = $count;\\n    }\\n}\\n\\nprint $max;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut x = Vec::new();\n    let mut y = Vec::new();\n    for _ in 0..n {\n        let mut s = String::new();\n        io::stdin().read_line(&mut s).unwrap();\n        let s: Vec<usize> = s.trim().split_whitespace().map(|s| s.parse().unwrap()).collect();\n        x.push(s[0]);\n        y.push(s[1]);\n    }\n\n    let mut ans = 0;\n    for i in 0..n {\n        let mut cnt = 0;\n        for j in 0..n {\n            if i != j && x[i] == y[j] {\n                cnt += 1;\n            }\n        }\n        ans = ans.max(cnt);\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Save the City!","description":"In the town of Aalam-Aara (meaning the Light of the Earth), previously there was no crime, no criminals but as the time progressed, sins started creeping into the hearts of once righteous people. Seeking solution to the problem, some of the elders found that as long as the corrupted part of population was kept away from the uncorrupted part, the crimes could be stopped. So, they are trying to set up a compound where they can keep the corrupted people. To ensure that the criminals don't escape the compound, a watchtower needs to be set up, so that they can be watched.Since the people of Aalam-Aara aren't very rich, they met up with a merchant from some rich town who agreed to sell them a land-plot which has already a straight line fence AB along which a few points are set up where they can put up a watchtower. Your task is to help them find out the number of points on that fence where the tower can be put up, so that all the criminals can be watched from there. Only one watchtower can be set up. A criminal is watchable from the watchtower if the line of visibility from the watchtower to him doesn't cross the plot-edges at any point between him and the tower i.e. as shown in figure 1 below, points X, Y, C and A are visible from point B but the points E and D are not.    Figure 1     Figure 2 Assume that the land plot is in the shape of a polygon and coordinate axes have been setup such that the fence AB is parallel to x-axis and the points where the watchtower can be set up are the integer points on the line. For example, in given figure 2, watchtower can be setup on any of five integer points on AB i.e. (4,8), (5,8), (6,8), (7,8) or (8,8). You can assume that no three consecutive points are collinear and all the corner points other than A and B, lie towards same side of fence AB. The given polygon doesn't contain self-intersections.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line of the test case will consist of the number of vertices n (3\u2264n\u22641000).\nNext n lines will contain the coordinates of the vertices in the clockwise order of the polygon. On the i-th line are integers xi and yi (0\u2264xi,yi\u226410^6) separated by a space.\nThe endpoints of the fence AB are the first two points, (x1,y1) and (x2,y2).\n","output_spec":"Output consists of a single line containing the number of points where the watchtower can be set up.\n","notes":"Figure 2 shows the first test case. All the points in the figure are watchable from any point on fence AB. Since, AB has 5 integer coordinates, so answer is 5.\nFor case two, fence CD and DE are not completely visible, thus answer is 0.\n","sample_inputs":["5\n4 8\n8 8\n9 4\n4 0\n0 4\n","5\n4 8\n5 8\n5 4\n7 4\n2 2\n"],"sample_outputs":["5\n","0\n"],"id":"67-E","difficulty":2500,"tags":["geometry"],"src_uid":"1503f0379bf8d7f25c191ddea9278842","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<pair<int, int>> v(n);\n    for (int i = 0; i < n; i++) {\n        cin >> v[i].first >> v[i].second;\n    }\n\n    int ans = 0;\n    for (int i = 1; i < n - 1; i++) {\n        if (v[i].first == v[0].first) {\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            if (x[i] == x[i + 1]) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())\n\nif x1 == x2:\n    print(0)\n    exit()\n\nans = 0\nfor i in range(n):\n    x, y = map(int, input().split())\n    if x == x1 or x == x2:\n        ans += 1\n    elif y1 * (x - x1) == y2 * (x - x2):\n        ans += 1\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int n, i, j, x1, y1, x2, y2, x, y, count = 0;\n    scanf(\" %d \", &n);\n    for (i = 0; i < n; i++) {\n        scanf(\" %d %d \", &x1, &y1);\n        if (i == 0) {\n            x2 = x1;\n            y2 = y1;\n        } else {\n            if (x1 < x2) {\n                if (y1 < y2) {\n                    for (j = x1; j <= x2; j++) {\n                        if (j == x1 || j == x2) {\n                            count++;\n                        } else {\n                            if (y1 <= y2) {\n                                if (y1 <= y[j] && y[j] <= y2) {\n                                    count++;\n                                }\n                            } else {\n                                if (y2 <= y[j] && y[j] <= y1) {\n                                    count++;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    for (j = x1; j <= x2; j++) {\n                        if (j == x1 || j == x2) {\n                            count++;\n                        } else {\n                            if (y2 <= y1) {\n                                if (y2 <= y[j] && y[j] <= y1) {\n                                    count++;\n                                }\n                            } else {\n                                if (y1 <= y[j] && y[j] <= y2) {\n                                    count++;\n                                }\n                            }\n                        }\n                    }\n                }\n            } else {\n                if (y1 < y2) {\n                    for (j = x1; j >= x2; j--) {\n                        if (j == x1 || j == x2) {\n                            count++;\n                        } else {\n                            if (y1 <= y2) {\n                                if (y1 <= y[j] && y[j] <= y2) {\n                                    count++;\n                                }\n                            } else {\n                                if (y2 <= y[j] && y[j] <= y1) {\n                                    count++;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    for (j = x1; j >= x2; j--) {\n                        if (j == x1 || j == x2) {\n                            count++;\n                        } else {\n                            if (y2 <= y1) {\n                                if (y2 <= y[j] && y[j] <= y1) {\n                                    count++;\n                                }\n                            } else {\n                                if (y1 <= y[j] && y[j] <= y2) {\n                                    count++;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    printf(\" %d \", count);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<int> x = new List<int>();\n        List<int> y = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            string[] s = Console.ReadLine().Split(' ');\n            x.Add(int.Parse(s[0]));\n            y.Add(int.Parse(s[1]));\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (x[i] == x[i + 1])\n            {\n                ans++;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = []\nfor i in 1..n\n  x, y = gets.split.map(&:to_i)\n  a << [x, y]\nend\n\na.sort! { |a, b| a[0] <=> b[0] }\n\nans = 0\nfor i in 0..n - 1\n  for j in i + 1..n - 1\n    if a[i][1] == a[j][1]\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n    \"fmt\"\r\n    \"math\"\r\n)\r\n\r\nfunc main() {\r\n    var n int\r\n    fmt.Scan(&n)\r\n    var x1, y1, x2, y2 int\r\n    fmt.Scan(&x1, &y1)\r\n    fmt.Scan(&x2, &y2)\r\n    var x, y int\r\n    var ans int\r\n    for i := 0; i < n; i++ {\r\n        fmt.Scan(&x, &y)\r\n        if x == x1 || x == x2 {\r\n            ans++\r\n        } else {\r\n            m := (y2 - y1) \/ (x2 - x1)\r\n            b := y1 - m*x1\r\n            ans += int(math.Ceil((y - b) \/ m))\r\n        }\r\n    }\r\n    fmt.Println(ans)\r\n}\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst points = [];\nfor (let i = 1; i <= n; i++) {\n  const [x, y] = stdin[i].split(' ').map(Number);\n  points.push([x, y]);\n}\nconst x1 = points[0][0];\nconst y1 = points[0][1];\nconst x2 = points[1][0];\nconst y2 = points[1][1];\nconst dx = x2 - x1;\nconst dy = y2 - y1;\nconst m = dy \/ dx;\nconst b = y1 - m * x1;\nconst ans = 0;\nfor (let i = 2; i < n; i++) {\n  const [x, y] = points[i];\n  if (x1 * y - x * y1 == x2 * y - x * y2) {\n    ans++;\n  } else if (x * m + b == y) {\n    ans++;\n  }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val x = IntArray(n)\n    val y = IntArray(n)\n    for (i in 0 until n) {\n        x[i] = sc.nextInt()\n        y[i] = sc.nextInt()\n    }\n    val ans = 0\n    for (i in 0 until n) {\n        if (x[i] == x[0]) {\n            ans++\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = intval(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[] = explode(' ', fgets(STDIN));\n}\n$x1 = $arr[0][0];\n$y1 = $arr[0][1];\n$x2 = $arr[1][0];\n$y2 = $arr[1][1];\n$ans = 0;\nfor ($i = 2; $i < $n; $i++) {\n    $x = $arr[$i][0];\n    $y = $arr[$i][1];\n    if ($x1 < $x && $x < $x2) {\n        if ($y1 < $y && $y < $y2) {\n            $ans++;\n        }\n    }\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.math;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int x1, y1, x2, y2;\n    scanf(\" %d %d \", &x1, &y1);\n    scanf(\" %d %d \", &x2, &y2);\n    int x[n], y[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &x[i], &y[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (x[i] == x1 || x[i] == x2) {\n            ans++;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <STDIN>;\\nmy @x = ();\\nmy @y = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my @a = split(' ', <STDIN>);\\n    push(@x, $a[0]);\\n    push(@y, $a[1]);\\n}\\n\\nmy $x1 = $x[0];\\nmy $y1 = $y[0];\\nmy $x2 = $x[$n - 1];\\nmy $y2 = $y[$n - 1];\\n\\nmy $ans = 0;\\nfor (my $i = 1; $i < $n - 1; $i++) {\\n    if ($x[$i] == $x1 || $x[$i] == $x2) {\\n        $ans++;\\n    }\\n}\\n\\nprint $ans;\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n\n    let mut xs = Vec::new();\n    let mut ys = Vec::new();\n\n    for _ in 0..n {\n        let line = lines.next().unwrap().unwrap();\n        let mut iter = line.split_whitespace();\n        let x = iter.next().unwrap().parse::<i32>().unwrap();\n        let y = iter.next().unwrap().parse::<i32>().unwrap();\n        xs.push(x);\n        ys.push(y);\n    }\n\n    let mut ans = 0;\n\n    for i in 0..n {\n        let x1 = xs[i];\n        let y1 = ys[i];\n        let x2 = xs[(i + 1) % n];\n        let y2 = ys[(i + 1) % n];\n\n        for j in 0..n {\n            let x3 = xs[j];\n            let y3 = ys[j];\n\n            if x1 == x2 && x3 == x2 {\n                continue;\n            }\n\n            let m = (y2 - y1) \/ (x2 - x1);\n            let b = y1 - m * x1;\n\n            let y = m * x3 + b;\n\n            if y >= y3 && y <= y2 {\n                ans += 1;\n            }\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Contact","description":"Little Petya is preparing for the first contact with aliens. He knows that alien spaceships have shapes of non-degenerate triangles and there will be exactly 4 ships. Landing platform for a ship can be made of 3 special columns located at some points of a Cartesian plane such that these 3 points form a triangle equal to the ship with respect to rotations, translations (parallel shifts along some vector) and reflections (symmetries along the edges). The ships can overlap after the landing.Each column can be used to land more than one ship, for example, if there are two equal ships, we don't need to build 6 columns to land both ships, 3 will be enough. Petya wants to know what minimum number of columns will be enough to land all ships. ","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"Each of 4 lines will contain 6 integers x1 y1 x2 y2 x3 y3 (0\u2264x1,y1,x2,y2,x3,y3\u226420), representing 3 points that describe the shape of each of 4 ships. It is guaranteed that 3 points in each line will represent a non-degenerate triangle.\n","output_spec":"First line should contain minimum number of columns enough to land all spaceships.\n","notes":"In the first test case columns can be put in these points: (0,0),(1,0),(3,0),(1,2). Note that the second ship can land using last 3 columns.\nIn the second test case following points can be chosen: (0,0),(0,1),(1,0),(0,2),(2,0),(0,5),(5,0),(0,17),(17,0). It is impossible to use less than 9 columns.\n","sample_inputs":["0 0 1 0 1 2\n0 0 0 2 2 2\n0 0 3 0 1 2\n0 0 3 0 2 2\n","0 0 0 1 1 1\n0 0 0 2 2 2\n0 0 0 5 5 5\n0 0 0 17 17 17\n"],"sample_outputs":["4\n","9\n"],"id":"68-E","difficulty":2900,"tags":["geometry"],"src_uid":"369f37d3487ba8c158e24f5ca759287b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<vector<int>> a(n, vector<int>(6));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < 6; j++) {\n            cin >> a[i][j];\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j) {\n                continue;\n            }\n            for (int k = 0; k < n; k++) {\n                if (i == k || j == k) {\n                    continue;\n                }\n                if (a[i][0] == a[j][0] && a[i][1] == a[j][1] && a[i][2] == a[j][2]) {\n                    ans++;\n                } else if (a[i][0] == a[k][0] && a[i][1] == a[k][1] && a[i][2] == a[k][2]) {\n                    ans++;\n                } else if (a[j][0] == a[k][0] && a[j][1] == a[k][1] && a[j][2] == a[k][2]) {\n                    ans++;\n                }\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n\n        int[][][] ships = new int[4][3][2];\n        for (int i = 0; i < 4; i++) {\n            for (int j = 0; j < 3; j++) {\n                for (int k = 0; k < 2; k++) {\n                    ships[i][j][k] = scanner.nextInt();\n                }\n            }\n        }\n\n        int[][][] columns = new int[4][3][2];\n        int count = 0;\n        for (int i = 0; i < 4; i++) {\n            for (int j = 0; j < 3; j++) {\n                for (int k = 0; k < 2; k++) {\n                    for (int l = 0; l < 4; l++) {\n                        if (i != l) {\n                            if (columns[l][j][k] == 0) {\n                                columns[l][j][k] = 1;\n                                count++;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nfrom collections import defaultdict\n\ndef main():\n    n = 4\n    ans = 0\n    d = defaultdict(list)\n    for i in range(n):\n        x1, y1, x2, y2, x3, y3 = map(int, input().split())\n        d[(x1, y1)].append(i)\n        d[(x2, y2)].append(i)\n        d[(x3, y3)].append(i)\n\n    for k, v in d.items():\n        if len(v) > ans:\n            ans = len(v)\n\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var points = new List<(int, int)>();\n        for (int i = 0; i < 4; i++)\n        {\n            var line = Console.ReadLine().Split(' ');\n            points.Add((int.Parse(line[0]), int.Parse(line[1])));\n            points.Add((int.Parse(line[2]), int.Parse(line[3])));\n            points.Add((int.Parse(line[4]), int.Parse(line[5])));\n        }\n\n        var columns = new HashSet<(int, int)>();\n        for (int i = 0; i < points.Count; i++)\n        {\n            for (int j = i + 1; j < points.Count; j++)\n            {\n                for (int k = j + 1; k < points.Count; k++)\n                {\n                    var a = points[i];\n                    var b = points[j];\n                    var c = points[k];\n\n                    var s = (a.Item1 + b.Item1 + c.Item1) \/ 3;\n                    var t = (a.Item2 + b.Item2 + c.Item2) \/ 3;\n\n                    columns.Add((s, t));\n                }\n            }\n        }\n\n        Console.WriteLine(columns.Count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"#!\/usr\/bin\/env ruby\\n\\ndef get_points(line)\\n  points = line.split(' ').map(&:to_i)\\n  points.map! { |p| [p[0], p[1]] }\\n  points\\nend\\n\\ndef get_triangles(points)\\n  triangles = []\\n  points.each_with_index do |p1, i|\\n    points.each_with_index do |p2, j|\\n      if i != j\\n        triangles << [p1, p2]\\n      \\n        points.each_with_index do |p3, k|\\n          if i != k && j != k\\n            triangles << [p1, p2, p3]\\n          \\n            points.each_with_index do |p4, l|\\n              if i != l && j != l && k != l\\n                triangles << [p1, p2, p3, p4]\\n              \\n                points.each_with_index do |p5, m|\\n                  if i != m && j != m && k != m && l != m\\n                    triangles << [p1, p2, p3, p4, p5]\\n                  endif\\n                end\\n              endif\\n            end\\n          endif\\n        endif\\n      endif\\n    end\\n  end\\n  triangles\\nend\\n\\ndef get_intersections(triangles)\\n  intersections = []\\n  triangles.each do |triangle|\\n    intersections << triangle[0][0] == triangle[1][0] && triangle[0][1] == triangle[1][1]\\n    intersections << triangle[0][0] == triangle[2][0] && triangle[0][1] == triangle[2][1]\\n    intersections << triangle[0][0] == triangle[3][0] && triangle[0][1] == triangle[3][1]\\n    intersections << triangle[1][0] == triangle[2][0] && triangle[1][1] == triangle[2][1]\\n    intersections << triangle[1][0] == triangle[3][0] && triangle[1][1] == triangle[3][1]\\n    intersections << triangle[2][0] == triangle[3][0] && triangle[2][1] == triangle[3][1]\\n  end\\n  intersections.uniq.count\\nend\\n\\ndef main()\\n  triangles = get_triangles(get_points(gets()))\\n  puts get_intersections(triangles)\\nend\\n\\nmain()\\n\"}]}","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var x1, y1, x2, y2, x3, y3 int\\n    for i := 0; i < 4; i++ {\\n        fmt.Scanf(\\\"%d %d %d %d %d %d\\\\n\\\", &x1, &y1, &x2, &y2, &x3, &y3)\\n    }\\n    var a, b, c, d, e, f int\\n    a = x1 * y2 + x2 * y3 + x3 * y1\\n    b = x2 * y1 + x3 * y2 + x1 * y3\\n    c = x3 * y1 + x1 * y2 + x2 * y3\\n    d = x1 * x2 + x2 * x3 + x3 * x1\\n    e = y1 * y2 + y2 * y3 + y3 * y1\\n    f = x1 * x1 + x2 * x2 + x3 * x3\\n    fmt.Println(max(a, b, c, d, e, f))\\n}\\n\\nfunc max(a, b, c, d, e, f int) int {\\n    if a > b && a > c && a > d && a > e && a > f {\\n        return a\\n    } else if b > a && b > c && b > d && b > e && b > f {\\n        return b\\n    } else if c > a && c > b && c > d && c > e && c > f {\\n        return c\\n    } else if d > a && d > b && d > c && d > e && d > f {\\n        return d\\n    } else if e > a && e > b && e > c && e > d && e > f {\\n        return e\\n    } else {\\n        return f\\n    }\\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst output = [];\nfor (let i = 0; i < 4; i++) {\n    const points = input[i].split(' ').map(Number);\n    const x1 = points[0];\n    const y1 = points[1];\n    const x2 = points[2];\n    const y2 = points[3];\n    const x3 = points[4];\n    const y3 = points[5];\n    const a = [x1, y1, x2, y2, x3, y3];\n    const b = [x2, y2, x3, y3, x1, y1];\n    const c = [x3, y3, x1, y1, x2, y2];\n    const d = [x1, y1, x3, y3, x2, y2];\n    const e = [x2, y2, x1, y1, x3, y3];\n    const f = [x3, y3, x2, y2, x1, y1];\n    const g = [x1, y1, x2, y2, x3, y3];\n    const h = [x2, y2, x3, y3, x1, y1];\n    const i = [x3, y3, x1, y1, x2, y2];\n    const j = [x1, y1, x3, y3, x2, y2];\n    const k = [x2, y2, x1, y1, x3, y3];\n    const l = [x3, y3, x2, y2, x1, y1];\n    const m = [x1, y1, x2, y2, x3, y3];\n    const n = [x2, y2, x3, y3, x1, y1];\n    const o = [x3, y3, x1, y1, x2, y2];\n    const p = [x1, y1, x3, y3, x2, y2];\n    const q = [x2, y2, x1, y1, x3, y3];\n    const r = [x3, y3, x2, y2, x1, y1];\n    const s = [x1, y1, x2, y2, x3, y3];\n    const t = [x2, y2, x3, y3, x1, y1];\n    const u = [x3, y3, x1, y1, x2, y2];\n    const v = [x1, y1, x3, y3, x2, y2];\n    const w = [x2, y2, x1, y1, x3, y3];\n    const x = [x3, y3, x2, y2, x1, y1];\n    const y = [x1, y1, x2, y2, x3, y3];\n    const z = [x2, y2, x3, y3, x1, y1];\n    const columns = [a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z];\n    const unique = new Set(columns);\n    output.push(unique.size);\n}\nconsole.log(output.join('\\n'));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val reader = Scanner(System.`in`)\n    val ships = Array(4) {\n        val x = reader.nextInt()\n        val y = reader.nextInt()\n        val x2 = reader.nextInt()\n        val y2 = reader.nextInt()\n        val x3 = reader.nextInt()\n        val y3 = reader.nextInt()\n        arrayOf(x, y, x2, y2, x3, y3)\n    }\n    val points = mutableSetOf<Pair<Int, Int>>()\n    for (ship in ships) {\n        for (i in 0..2) {\n            for (j in i + 1..2) {\n                points.add(Pair(ship[i], ship[j]))\n            }\n        }\n    }\n    println(points.size)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$ships = [];\\n\\nfor ($i = 0; $i < 4; $i++) {\\n    $ships[] = explode(' ', trim(fgets(STDIN)));\\n}\\n\\n$columns = [];\\n\\nfor ($i = 0; $i < 4; $i++) {\\n    for ($j = 0; $j < 4; $j++) {\\n        for ($k = 0; $k < 4; $k++) {\\n            if ($i != $j && $i != $k && $j != $k) {\\n                $columns[] = [$ships[$i][0], $ships[$i][1], $ships[$j][0], $ships[$j][1], $ships[$k][0], $ships[$k][1]];\\n            }\\n        }\\n    }\\n}\\n\\n$min = PHP_INT_MAX;\\n\\nforeach ($columns as $column) {\\n    $count = 0;\\n    foreach ($ships as $ship) {\\n        if (in_array($ship[0], $column) && in_array($ship[1], $column) && in_array($ship[2], $column)) {\\n            $count++;\\n        }\\n    }\\n    $min = min($min, $count);\\n}\\n\\necho $min.PHP_EOL;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nstruct Point {\n    int x;\n    int y;\n\n    Point(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n\n    bool operator==(const Point& other) const {\n        return x == other.x && y == other.y;\n    }\n\n    bool operator<(const Point& other) const {\n        return x < other.x || (x == other.x && y < other.y);\n    }\n}\n\nstruct Triangle {\n    Point a;\n    Point b;\n    Point c;\n\n    Triangle(Point a, Point b, Point c) {\n        this.a = a;\n        this.b = b;\n        this.c = c;\n    }\n\n    bool operator==(const Triangle& other) const {\n        return a == other.a && b == other.b && c == other.c;\n    }\n\n    bool operator<(const Triangle& other) const {\n        return a < other.a || (a == other.a && b < other.b) || (a == other.a && b == other.b && c < other.c);\n    }\n}\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n\n    Triangle[] triangles;\n    for (int i = 0; i < n; i++) {\n        int x1, y1, x2, y2, x3, y3;\n        scanf(\" %d %d %d %d %d %d \", &x1, &y1, &x2, &y2, &x3, &y3);\n        triangles.push(Triangle(Point(x1, y1), Point(x2, y2), Point(x3, y3)));\n    }\n\n    int ans = 0;\n    foreach (triangle in triangles) {\n        int count = 0;\n        foreach (other in triangles) {\n            if (triangle != other && triangle.a == other.a || triangle.a == other.b || triangle.a == other.c) {\n                count++;\n            }\n            if (triangle != other && triangle.b == other.a || triangle.b == other.b || triangle.b == other.c) {\n                count++;\n            }\n            if (triangle != other && triangle.c == other.a || triangle.c == other.b || triangle.c == other.c) {\n                count++;\n            }\n        }\n        ans = max(ans, count);\n    }\n\n    printf(\" %d \", ans);\n\n    return 0;\n}\"]","perl":"","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\n#[allow(unused_imports)]\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut ships = Vec::new();\n    for _ in 0..4 {\n        let mut line = String::new();\n        io::stdin().read_line(&mut line).unwrap();\n        let mut points = Vec::new();\n        for point in line.split_whitespace() {\n            points.push(point.parse::<i32>().unwrap());\n        }\n        ships.push(points);\n    }\n\n    let mut columns = 0;\n    for i in 0..4 {\n        for j in 0..4 {\n            if i != j {\n                let mut count = 0;\n                for k in 0..3 {\n                    if ships[i][k] == ships[j][k] {\n                        count += 1;\n                    }\n                }\n                if count == 3 {\n                    columns -= 1;\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", columns);\n}\n\"\"\"}]"}
{"title":"D. Dot","description":"Anton and Dasha like to play different games during breaks on checkered paper. By the 11th grade they managed to play all the games of this type and asked Vova the programmer to come up with a new game. Vova suggested to them to play a game under the code name \"dot\" with the following rules:  On the checkered paper a coordinate system is drawn. A dot is initially put in the position (x,y).  A move is shifting a dot to one of the pre-selected vectors. Also each player can once per game symmetrically reflect a dot relatively to the line y=x.  Anton and Dasha take turns. Anton goes first.  The player after whose move the distance from the dot to the coordinates' origin exceeds d, loses. Help them to determine the winner.","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input file contains 4 integers x, y, n, d (-200\u2264x,y\u2264200,1\u2264d\u2264200,1\u2264n\u226420) \u2014 the initial coordinates of the dot, the distance d and the number of vectors. It is guaranteed that the initial dot is at the distance less than d from the origin of the coordinates. The following n lines each contain two non-negative numbers xi and yi (0\u2264xi,yi\u2264200) \u2014 the coordinates of the i-th vector. It is guaranteed that all the vectors are nonzero and different.\n","output_spec":"You should print \"Anton\", if the winner is Anton in case of both players play the game optimally, and \"Dasha\" otherwise.\n","notes":"In the first test, Anton goes to the vector (1;2), and Dasha loses. In the second test Dasha with her first move shifts the dot so that its coordinates are (2;3), and Anton loses, as he has the only possible move \u2014 to reflect relatively to the line y=x. Dasha will respond to it with the same move and return the dot in position (2;3).\n","sample_inputs":["0 0 2 3\n1 1\n1 2\n","0 0 2 4\n1 1\n1 2\n"],"sample_outputs":["Anton","Dasha"],"id":"69-D","difficulty":1900,"tags":["dp","games"],"src_uid":"645a6ca9a8dda6946c2cc055a4beb08f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int x, y, n, d;\n    cin >> x >> y >> n >> d;\n    vector<vector<int>> v(n);\n    for (int i = 0; i < n; i++) {\n        int x1, y1;\n        cin >> x1 >> y1;\n        v[i] = {x1, y1};\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        int dx = v[i][0] - x;\n        int dy = v[i][1] - y;\n        int d2 = dx * dx + dy * dy;\n        if (d2 <= d * d) {\n            ans = 1;\n            break;\n        }\n    }\n\n    if (ans == 1) {\n        cout << \"Anton\" << endl;\n    } else {\n        cout << \"Dasha\" << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = reader.readLine().split(\" \");\n        int x = Integer.parseInt(input[0]);\n        int y = Integer.parseInt(input[1]);\n        int n = Integer.parseInt(input[2]);\n        int d = Integer.parseInt(input[3]);\n        List<int[]> vectors = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            input = reader.readLine().split(\" \");\n            int[] vector = new int[]{Integer.parseInt(input[0]), Integer.parseInt(input[1])};\n            vectors.add(vector);\n        }\n        int[] anton = new int[]{x, y};\n        int[] dasha = new int[]{x, y};\n        boolean antonWin = true;\n        for (int i = 0; i < n; i++) {\n            int[] vector = vectors.get(i);\n            int[] newAnton = new int[]{anton[0] + vector[0], anton[1] + vector[1]};\n            int[] newDasha = new int[]{dasha[0] + vector[0], dasha[1] + vector[1]};\n            if (Math.abs(newAnton[0] - newDasha[0]) > d) {\n                antonWin = false;\n                break;\n            }\n            anton = newAnton;\n            dasha = newDasha;\n        }\n        if (antonWin) {\n            System.out.println(\"Anton\");\n        } else {\n            System.out.println(\"Dasha\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nimport sys\n\ndef main():\n    x, y, n, d = map(int, sys.stdin.readline().split())\n    vecs = []\n    for _ in range(n):\n        vecs.append(list(map(int, sys.stdin.readline().split())))\n\n    vecs.sort(key=lambda x: x[0] * x[0] + x[1] * x[1])\n\n    for vec in vecs:\n        if x + vec[0] >= d or y + vec[1] >= d:\n            print('Dasha')\n            return\n\n    print('Anton')\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var x = int.Parse(input[0]);\n        var y = int.Parse(input[1]);\n        var n = int.Parse(input[2]);\n        var d = int.Parse(input[3]);\n        var vectors = new List<(int, int)>();\n        for (int i = 0; i < n; i++)\n        {\n            var vector = Console.ReadLine().Split(' ');\n            vectors.Add((int.Parse(vector[0]), int.Parse(vector[1])));\n        }\n\n        var anton = new List<(int, int)>();\n        var dasha = new List<(int, int)>();\n        anton.Add((x, y));\n        dasha.Add((x, y));\n\n        while (true)\n        {\n            var antonVector = anton.Last();\n            var dashaVector = dasha.Last();\n\n            var antonDistance = Math.Abs(antonVector.Item1) + Math.Abs(antonVector.Item2);\n            var dashaDistance = Math.Abs(dashaVector.Item1) + Math.Abs(dashaVector.Item2);\n\n            if (antonDistance > d)\n            {\n                Console.WriteLine(\"Dasha\");\n                return;\n            }\n\n            if (dashaDistance > d)\n            {\n                Console.WriteLine(\"Anton\");\n                return;\n            }\n\n            var antonNextVector = vectors.FirstOrDefault(v => antonVector.Item1 + v.Item1 == 0 && antonVector.Item2 + v.Item2 == 0);\n            var dashaNextVector = vectors.FirstOrDefault(v => dashaVector.Item1 + v.Item1 == 0 && dashaVector.Item2 + v.Item2 == 0);\n\n            if (antonNextVector == null)\n            {\n                anton.Add((antonVector.Item1, -antonVector.Item2));\n            }\n            else\n            {\n                anton.Add(antonNextVector);\n            }\n\n            if (dashaNextVector == null)\n            {\n                dasha.Add((dashaVector.Item1, -dashaVector.Item2));\n            }\n            else\n            {\n                dasha.Add(dashaNextVector);\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"x, y, n, d = gets.split.map(&:to_i)\nv = []\nn.times do\n  v << gets.split.map(&:to_i)\nend\n\ndef dist(x, y)\n  Math.sqrt(x**2 + y**2)\nend\n\ndef win?(x, y, d)\n  dist(x, y) <= d\nend\n\ndef move(x, y, v)\n  x += v[0]\n  y += v[1]\n  [x, y]\nend\n\ndef reflect(x, y)\n  x, y = y, x\n  [x, y]\nend\n\ndef anton_move(x, y, v)\n  if win?(x, y, d)\n    return [x, y]\n  end\n\n  v.each do |v|\n    x, y = move(x, y, v)\n    if win?(x, y, d)\n      return [x, y]\n    end\n  end\n\n  reflect(x, y)\nend\n\ndef dasha_move(x, y, v)\n  if win?(x, y, d)\n    return [x, y]\n  end\n\n  v.each do |v|\n    x, y = move(x, y, v)\n    if win?(x, y, d)\n      return [x, y]\n    end\n  end\n\n  reflect(x, y)\nend\n\nx, y = anton_move(x, y, v)\nif win?(x, y, d)\n  puts 'Anton'\nelse\n  puts 'Dasha'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram dot;\n\nuses\n  SysUtils;\n\nconst\n  maxn = 20;\n\nvar\n  x, y, d, n: integer;\n  vx, vy: array[0..maxn] of integer;\n  i, j: integer;\n\nfunction dist(x1, y1, x2, y2: integer): integer;\nbegin\n  dist := abs(x1 - x2) + abs(y1 - y2);\nend;\n\nfunction check(x, y: integer): boolean;\nbegin\n  check := dist(x, y, 0, 0) <= d;\nend;\n\nfunction solve(x, y: integer): boolean;\nvar\n  i: integer;\nbegin\n  for i := 0 to n - 1 do\n    if check(x + vx[i], y + vy[i]) then\n      exit(true);\n  exit(false);\nend;\n\nbegin\n  readln(x, y, d, n);\n  for i := 0 to n - 1 do\n    readln(vx[i], vy[i]);\n  if solve(x, y) then\n    writeln('Anton')\n  else\n    writeln('Dasha');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar x, y, n, d int\n\tfmt.Scan(&x, &y, &n, &d)\n\tv := make([][2]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&v[i][0], &v[i][1])\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tif math.Abs(x-v[i][0])+math.Abs(y-v[i][1]) <= d {\n\t\t\tfmt.Println(\"Anton\")\n\t\t\treturn\n\t\t}\n\t}\n\tfmt.Println(\"Dasha\")\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst x = parseInt(stdin[0].split(' ')[0]);\nconst y = parseInt(stdin[0].split(' ')[1]);\nconst n = parseInt(stdin[0].split(' ')[2]);\nconst d = parseInt(stdin[0].split(' ')[3]);\nconst vectors = [];\nfor (let i = 1; i <= n; i++) {\n  const vector = stdin[i].split(' ');\n  vectors.push([parseInt(vector[0]), parseInt(vector[1])]);\n}\nconst anton = [x, y];\nconst dash = [x, y];\nconst antonWin = true;\nfor (let i = 0; i < n; i++) {\n  const vector = vectors[i];\n  const antonNew = [anton[0] + vector[0], anton[1] + vector[1]];\n  const dashNew = [dash[0] + vector[0], dash[1] + vector[1]];\n  if (Math.abs(antonNew[0] - anton[0]) + Math.abs(antonNew[1] - anton[1]) > d) {\n    antonWin = false;\n  }\n  if (Math.abs(dashNew[0] - dash[0]) + Math.abs(dashNew[1] - dash[1]) > d) {\n    antonWin = true;\n  }\n  anton = antonNew;\n  dash = dashNew;\n}\nif (antonWin) {\n  console.log('Anton');\n} else {\n  console.log('Dasha');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.io.BufferedReader\nimport java.io.InputStreamReader\n\nfun main() {\n    val br = BufferedReader(InputStreamReader(System.`in`))\n    val (x, y, n, d) = br.readLine().split(\" \").map { it.toInt() }\n    val vectors = mutableListOf<Pair<Int, Int>>()\n    for (i in 0 until n) {\n        val (xi, yi) = br.readLine().split(\" \").map { it.toInt() }\n        vectors.add(xi to yi)\n    }\n\n    val anton = mutableListOf<Pair<Int, Int>>()\n    val dasha = mutableListOf<Pair<Int, Int>>()\n    anton.add(x to y)\n    dasha.add(x to y)\n\n    var antonWin = false\n    var dashaWin = false\n\n    while (!antonWin && !dashaWin) {\n        val antonVector = anton.last()\n        val dashaVector = dasha.last()\n\n        val antonDistance = Math.sqrt(antonVector.first * antonVector.first + antonVector.second * antonVector.second)\n        val dashaDistance = Math.sqrt(dashaVector.first * dashaVector.first + dashaVector.second * dashaVector.second)\n\n        if (antonDistance > d) {\n            dashaWin = true\n        } else if (dashaDistance > d) {\n            antonWin = true\n        } else {\n            val antonNextVector = vectors.find { it.first * antonVector.second - it.second * antonVector.first == 0 }\n            val dashaNextVector = vectors.find { it.first * dashaVector.second - it.second * dashaVector.first == 0 }\n\n            if (antonNextVector != null) {\n                anton.add(antonNextVector)\n            } else {\n                anton.add(dashaVector)\n            }\n\n            if (dashaNextVector != null) {\n                dasha.add(dashaNextVector)\n            } else {\n                dasha.add(antonVector)\n            }\n        }\n    }\n\n    println(if (antonWin) \"Anton\" else \"Dasha\")\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$x = $input[0];\n$y = $input[1];\n$n = $input[2];\n$d = $input[3];\n$vectors = [];\nfor ($i = 0; $i < $n; $i++) {\n    $vectors[] = explode(' ', trim(fgets(STDIN)));\n}\n$max = 0;\nforeach ($vectors as $vector) {\n    $distance = sqrt(pow($vector[0] - $x, 2) + pow($vector[1] - $y, 2));\n    if ($distance > $max) {\n        $max = $distance;\n    }\n}\nif ($max > $d) {\n    echo 'Dasha';\n} else {\n    echo 'Anton';\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int[4] a = readln.split().map!(x => x.to!int).array;\n    int n = a[2];\n    int d = a[3];\n    int[2][] v = new int[n][];\n    for (int i = 0; i < n; i++) {\n        v[i] = readln.split().map!(x => x.to!int).array;\n    }\n\n    int[2] p = [a[0], a[1]];\n    int[2] p1 = [0, 0];\n    int[2] p2 = [0, 0];\n    int[2] p3 = [0, 0];\n    int[2] p4 = [0, 0];\n\n    bool anton = true;\n    int anton_move = 0;\n    int dasha_move = 0;\n\n    while (true) {\n        if (anton) {\n            if (dasha_move == 0) {\n                p1 = p;\n                p2 = p;\n                p3 = p;\n                p4 = p;\n            }\n\n            int min_dist = d;\n            int min_index = -1;\n            for (int i = 0; i < n; i++) {\n                int dist = abs(p[0] - v[i][0]) + abs(p[1] - v[i][1]);\n                if (dist < min_dist) {\n                    min_dist = dist;\n                    min_index = i;\n                }\n            }\n\n            p = v[min_index];\n            anton_move++;\n        } else {\n            if (anton_move == 0) {\n                p1 = p;\n                p2 = p;\n                p3 = p;\n                p4 = p;\n            }\n\n            int min_dist = d;\n            int min_index = -1;\n            for (int i = 0; i < n; i++) {\n                int dist = abs(p[0] - v[i][0]) + abs(p[1] - v[i][1]);\n                if (dist < min_dist) {\n                    min_dist = dist;\n                    min_index = i;\n                }\n            }\n\n            p = v[min_index];\n            dasha_move++;\n        }\n\n        if (p[0] == p1[0] && p[1] == p1[1]) {\n            break;\n        }\n\n        if (p[0] == p2[0] && p[1] == p2[1]) {\n            break;\n        }\n\n        if (p[0] == p3[0] && p[1] == p3[1]) {\n            break;\n        }\n\n        if (p[0] == p4[0] && p[1] == p4[1]) {\n            break;\n        }\n    }\n\n    if (anton_move == dasha_move) {\n        writeln(\"Anton\");\n    } else {\n        writeln(\"Dasha\");\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy ($x, $y, $n, $d) = split \/ \/, <STDIN>;\nmy @v = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my ($xi, $yi) = split \/ \/, <STDIN>;\n    push @v, [$xi, $yi];\n}\n\nmy $ans = \"Anton\";\nfor (my $i = 0; $i < $n; $i++) {\n    my ($xi, $yi) = @v[$i];\n    my $dx = $xi - $x;\n    my $dy = $yi - $y;\n    my $d2 = $dx * $dx + $dy * $dy;\n    if ($d2 > $d * $d) {\n        $ans = \"Dasha\";\n        last;\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let x = input_vec[0];\n    let y = input_vec[1];\n    let n = input_vec[2];\n    let d = input_vec[3];\n    let mut vec_x: Vec<i32> = Vec::new();\n    let mut vec_y: Vec<i32> = Vec::new();\n    for _ in 0..n {\n        let mut input = String::new();\n        io::stdin().read_line(&mut input).unwrap();\n        let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n        vec_x.push(input_vec[0]);\n        vec_y.push(input_vec[1]);\n    }\n    let mut anton_win = true;\n    for i in 0..n {\n        let mut x_new = x + vec_x[i];\n        let mut y_new = y + vec_y[i];\n        if x_new * x_new + y_new * y_new > d * d {\n            anton_win = false;\n            break;\n        }\n    }\n    if anton_win {\n        println!(\"Anton\");\n    } else {\n        println!(\"Dasha\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Triangle","description":"Johnny has a younger sister Anne, who is very clever and smart. As she came home from the kindergarten, she told his brother about the task that her kindergartener asked her to solve. The task was just to construct a triangle out of four sticks of different colours. Naturally, one of the sticks is extra. It is not allowed to break the sticks or use their partial length. Anne has perfectly solved this task, now she is asking Johnny to do the same.The boy answered that he would cope with it without any difficulty. However, after a while he found out that different tricky things can occur. It can happen that it is impossible to construct a triangle of a positive area, but it is possible to construct a degenerate triangle. It can be so, that it is impossible to construct a degenerate triangle even. As Johnny is very lazy, he does not want to consider such a big amount of cases, he asks you to help him.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"64 megabytes","input_spec":"The first line of the input contains four space-separated positive integer numbers not exceeding 100 \u2014 lengthes of the sticks.\n","output_spec":"Output TRIANGLE if it is possible to construct a non-degenerate triangle. Output SEGMENT if the first case cannot take place and it is possible to construct a degenerate triangle. Output IMPOSSIBLE if it is impossible to construct any triangle. Remember that you are to use three sticks. It is not allowed to break the sticks or use their partial length.\n","notes":null,"sample_inputs":["4 2 1 3\n","7 2 2 4\n","3 5 9 1\n"],"sample_outputs":["TRIANGLE\n","SEGMENT\n","IMPOSSIBLE\n"],"id":"6-A","difficulty":900,"tags":["brute+force","geometry"],"src_uid":"8f5df9a41e6e100aa65b9fc1d26e447a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int a, b, c, d;\n    cin >> a >> b >> c >> d;\n    if (a + b > c && a + c > b && b + c > a)\n        cout << \"TRIANGLE\";\n    else if (a + b == c || a + c == b || b + c == a)\n        cout << \"SEGMENT\";\n    else\n        cout << \"IMPOSSIBLE\";\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int[] sticks = new int[4];\n        for (int i = 0; i < 4; i++) {\n            sticks[i] = scanner.nextInt();\n        }\n\n        if (sticks[0] + sticks[1] > sticks[2] && sticks[0] + sticks[2] > sticks[1] && sticks[1] + sticks[2] > sticks[0]) {\n            System.out.println(\"TRIANGLE\");\n        } else if (sticks[0] == sticks[1] && sticks[1] == sticks[2]) {\n            System.out.println(\"SEGMENT\");\n        } else {\n            System.out.println(\"IMPOSSIBLE\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    l = list(map(int, input().split()))\n    l.sort()\n    if l[0] + l[1] > l[2]:\n        print('TRIANGLE')\n    elif l[0] + l[1] == l[2]:\n        print('SEGMENT')\n    else:\n        print('IMPOSSIBLE')\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a, b, c, d;\n    scanf(\" %d %d %d %d \", &a, &b, &c, &d);\n    if (a + b > c && a + c > b && b + c > a)\n        printf(\" TRIANGLE \");\n    else if (a + b == c || a + c == b || b + c == a)\n        printf(\" SEGMENT \");\n    else\n        printf(\" IMPOSSIBLE \");\n    return 0;\n}\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var line = Console.ReadLine().Split(' ');\n        var a = int.Parse(line[0]);\n        var b = int.Parse(line[1]);\n        var c = int.Parse(line[2]);\n        var d = int.Parse(line[3]);\n\n        if (a + b > c && a + c > b && b + c > a)\n        {\n            Console.WriteLine(\"TRIANGLE\");\n        }\n        else if (a + b == c || a + c == b || b + c == a)\n        {\n            Console.WriteLine(\"SEGMENT\");\n        }\n        else\n        {\n            Console.WriteLine(\"IMPOSSIBLE\");\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main\n    a, b, c, d = gets.split.map(&:to_i)\n    if a + b > c && a + c > b && b + c > a\n        puts 'TRIANGLE'\n    elsif a + b == c || a + c == b || b + c == a\n        puts 'SEGMENT'\n    else\n        puts 'IMPOSSIBLE'\n    end\nend\n\nmain()\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Triangle;\n\nuses\n  SysUtils;\n\nvar\n  a, b, c, d: Integer;\n\nbegin\n  Readln(a, b, c, d);\n  if (a + b > c) and (a + c > b) and (b + c > a) then\n    Writeln('TRIANGLE')\n  else if (a + b = c) or (a + c = b) or (b + c = a) then\n    Writeln('SEGMENT')\n  else\n    Writeln('IMPOSSIBLE');\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    var a, b, c, d int\\n    fmt.Scanf(\\\"%d %d %d %d\\\\n\\\", &a, &b, &c, &d)\\n    if a+b+c < d {\\n        fmt.Println(\\\"IMPOSSIBLE\\\")\\n    } else if a+b+c == d {\\n        fmt.Println(\\\"SEGMENT\\\")\\n    } else {\\n        fmt.Println(\\\"TRIANGLE\\\")\\n    }\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const sticks = line.split(' ').map(Number);\n  const sortedSticks = sticks.sort((a, b) => a - b);\n  const maxStick = sortedSticks[3];\n  const sumOfOtherSticks = sortedSticks.slice(0, 3).reduce((a, b) => a + b);\n\n  if (maxStick < sumOfOtherSticks) {\n    console.log('TRIANGLE');\n  } else if (maxStick == sumOfOtherSticks) {\n    console.log('SEGMENT');\n  } else {\n    console.log('IMPOSSIBLE');\n  }\n\n  rl.close();\n});\n\nrl.on('close', () => process.exit(0));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val scanner = Scanner(System.`in`)\n    val a = scanner.nextInt()\n    val b = scanner.nextInt()\n    val c = scanner.nextInt()\n    val d = scanner.nextInt()\n\n    if (a + b > c && a + c > b && b + c > a) {\n        println(\"TRIANGLE\")\n    } else if (a + b == c || a + c == b || b + c == a) {\n        println(\"SEGMENT\")\n    } else {\n        println(\"IMPOSSIBLE\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$a = explode(' ', trim(fgets(STDIN)));\\n\\nif (count(array_unique($a)) == 3) {\\n    if ($a[0] + $a[1] > $a[2] && $a[0] + $a[2] > $a[1] && $a[1] + $a[2] > $a[0]) {\\n        echo 'TRIANGLE';\\n    } else {\\n        echo 'SEGMENT';\\n    }\\n} else {\\n    echo 'IMPOSSIBLE';\\n}\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[4] a;\n    scanf(\" %d %d %d %d \", &a[0], &a[1], &a[2], &a[3]);\n    int i, j, k;\n    int s = 0;\n    for (i = 0; i < 4; i++) {\n        for (j = 0; j < 4; j++) {\n            for (k = 0; k < 4; k++) {\n                if (i != j && j != k && k != i) {\n                    if (a[i] + a[j] > a[k] && a[i] + a[k] > a[j] && a[j] + a[k] > a[i]) {\n                        s = 1;\n                    }\n                }\n            }\n        }\n    }\n    if (s == 1) {\n        printf(\" TRIANGLE \");\n    } else if (a[0] == a[1] && a[1] == a[2] && a[2] == a[3]) {\n        printf(\" SEGMENT \");\n    } else {\n        printf(\" IMPOSSIBLE \");\n    }\n    printf(\"\\n\");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy @a = split \/ \/, <STDIN>;\nmy $min = min(@a);\nmy $max = max(@a);\n\nif ($min == $max) {\n    print \"IMPOSSIBLE\\n\";\n} elsif ($min + $max > $a[3]) {\n    print \"TRIANGLE\\n\";\n} else {\n    print \"SEGMENT\\n\";\n}\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let input: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let mut a = input[0];\n    let mut b = input[1];\n    let mut c = input[2];\n    let mut d = input[3];\n    if a + b > c && a + c > b && b + c > a {\n        println!(\"TRIANGLE\");\n    } else if a + b == c || a + c == b || b + c == a {\n        println!(\"SEGMENT\");\n    } else {\n        println!(\"IMPOSSIBLE\");\n    }\n}\n\"\"\"}]"}
{"title":"E. Exposition","description":"There are several days left before the fiftieth birthday of a famous Berland's writer Berlbury. In this connection the local library decided to make an exposition of the works of this famous science-fiction writer. It was decided as well that it is necessary to include into the exposition only those books that were published during a particular time period. It is obvious that if the books differ much in size, the visitors will not like it. That was why the organizers came to the opinion, that the difference between the highest and the lowest books in the exposition should be not more than k millimeters.The library has n volumes of books by Berlbury, arranged in chronological order of their appearance. The height of each book in millimeters is know, it is hi. As Berlbury is highly respected in the city, the organizers want to include into the exposition as many books as possible, and to find out what periods of his creative work they will manage to cover. You are asked to help the organizers cope with this hard task.","input_from":"standard input","output_to":"standard output","time_limit":"1.5 seconds","memory_limit":"64 megabytes","input_spec":"The first line of the input data contains two integer numbers separated by a space n (1\u2264n\u226410^5) and k (0\u2264k\u226410^6) \u2014 the amount of books by Berlbury in the library, and the maximum allowed height difference between the lowest and the highest books. The second line contains n integer numbers separated by a space. Each number hi (1\u2264hi\u226410^6) is the height of the i-th book in millimeters.\n","output_spec":"In the first line of the output data print two numbers a and b (separate them by a space), where a is the maximum amount of books the organizers can include into the exposition, and b \u2014 the amount of the time periods, during which Berlbury published a books, and the height difference between the lowest and the highest among these books is not more than k milllimeters.\nIn each of the following b lines print two integer numbers separated by a space \u2014 indexes of the first and the last volumes from each of the required time periods of Berlbury's creative work.\n","notes":null,"sample_inputs":["3 3\n14 12 10\n","2 0\n10 10\n","4 5\n8 19 10 13\n"],"sample_outputs":["2 2\n1 2\n2 3\n","2 1\n1 2\n","2 1\n3 4\n"],"id":"6-E","difficulty":1900,"tags":["binary+search","data+structures","dsu","trees","two+pointers"],"src_uid":"bc8b4b74c2f2d486e2d2f03982ef1013","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    int b = 0;\n    int s = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] - a[s] <= k) {\n            ans++;\n        } else {\n            b++;\n            s = i;\n        }\n    }\n    cout << ans << \" \" << b << endl;\n    for (int i = 0; i < b; i++) {\n        cout << s + 1 << \" \" << i + s + 1 << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        int[] h = new int[n];\n        for (int i = 0; i < n; i++) {\n            h[i] = sc.nextInt();\n        }\n        int max = h[0];\n        int min = h[0];\n        int count = 1;\n        int ans = 1;\n        int start = 0;\n        int end = 0;\n        for (int i = 1; i < n; i++) {\n            if (h[i] > max) {\n                max = h[i];\n                end = i;\n                count++;\n            }\n            if (h[i] < min) {\n                min = h[i];\n                start = i;\n                count++;\n            }\n            if (count > ans) {\n                ans = count;\n            }\n        }\n        System.out.println(ans + \" \" + count);\n        for (int i = 0; i < count; i++) {\n            System.out.println(start + \" \" + end);\n            start = end + 1;\n            end = start;\n            count = 1;\n            max = h[start];\n            min = h[start];\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=1\nans2=0\nfor i in range(n-1):\n    if a[i+1]-a[i]>k:\n        ans+=1\n        ans2+=1\nprint(ans,ans2)\nfor i in range(ans2):\n    print(i+1,i+ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, k, i, j, a, b, t, m, s, p, q;\n    scanf(\" %d %d \", &n, &k);\n    int h[n];\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &h[i]);\n    }\n    a = 0;\n    b = 0;\n    t = 0;\n    m = 0;\n    s = 0;\n    p = 0;\n    q = 0;\n    for (i = 0; i < n; i++) {\n        if (h[i] > t) {\n            t = h[i];\n            p = i;\n        }\n        if (h[i] < s) {\n            s = h[i];\n            q = i;\n        }\n        if (t - s <= k) {\n            a++;\n        } else {\n            b++;\n            printf(\" %d %d\\n\", p + 1, q + 1);\n            t = 0;\n            s = 0;\n            p = 0;\n            q = 0;\n        }\n    }\n    printf(\" %d %d\\n\", a, b);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var k = int.Parse(input[1]);\n        var books = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n\n        var ans = new List<int>();\n        var ans2 = new List<int>();\n        var max = 0;\n        var min = 1000000000;\n        for (int i = 0; i < n; i++)\n        {\n            if (books[i] > max)\n            {\n                max = books[i];\n                ans.Add(i);\n            }\n            if (books[i] < min)\n            {\n                min = books[i];\n                ans.Add(i);\n            }\n        }\n\n        var diff = max - min;\n        if (diff <= k)\n        {\n            Console.WriteLine(n + \" \" + 1);\n            Console.WriteLine(ans[0] + \" \" + ans[ans.Count - 1]);\n        }\n        else\n        {\n            var i = 0;\n            var j = 0;\n            var count = 0;\n            while (i < n && j < n)\n            {\n                if (books[i] - books[j] <= k)\n                {\n                    count++;\n                    i++;\n                    j++;\n                }\n                else\n                {\n                    j++;\n                }\n            }\n            Console.WriteLine(count + \" \" + (ans.Count - 1));\n            for (int i = 0; i < ans.Count - 1; i++)\n            {\n                Console.WriteLine(ans[i] + \" \" + ans[i + 1]);\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nb=0\nc=0\nfor i in range(n-1):\n    if a[i+1]-a[i]<=k:\n        b+=1\n    else:\n        if b>c:\n            c=b\n        b=0\nprint(c,b)\nfor i in range(b):\n    print(i+1,i+b)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 100000;\nvar\n  n, k, i, j, a, b, t, m, h, l, p, q, r, s, t1, t2: integer;\n  a1, a2: array[0..maxn] of integer;\n  h1, h2: array[0..maxn] of integer;\nbegin\n  readln(n, k);\n  for i := 1 to n do\n  begin\n    readln(h[i]);\n    a1[i] := h[i];\n    a2[i] := h[i];\n  end;\n  h1[0] := 0;\n  h2[0] := 0;\n  for i := 1 to n do\n  begin\n    h1[i] := max(h1[i - 1], a1[i]);\n    h2[i] := min(h2[i - 1], a2[i]);\n  end;\n  t := 0;\n  for i := 1 to n do\n  begin\n    for j := i + 1 to n do\n    begin\n      if h1[j] - h2[i] <= k then\n      begin\n        t := t + 1;\n        p := i;\n        q := j;\n      end;\n    end;\n  end;\n  a := t;\n  b := 0;\n  for i := 1 to n do\n  begin\n    for j := i + 1 to n do\n    begin\n      if h1[j] - h2[i] <= k then\n      begin\n        b := b + 1;\n        t1 := i;\n        t2 := j;\n      end;\n    end;\n  end;\n  writeln(a, ' ', b);\n  for i := 1 to b do\n  begin\n    writeln(t1, ' ', t2);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d \", &n, &k)\n\th := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &h[i])\n\t}\n\tsort.Ints(h)\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tif h[i]-h[0] <= k {\n\t\t\tans++\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\tfmt.Printf(\" %d %d\\n \", ans, n-ans)\n\tfor i := 0; i < ans; i++ {\n\t\tfmt.Printf(\" %d %d\\n \", i+1, i+ans-1)\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst k = parseInt(stdin[0].split(' ')[1]);\nconst books = stdin[1].split(' ').map(i => parseInt(i));\nconst books_sorted = books.sort((a, b) => a - b);\nconst max_books = 1;\nconst max_periods = 0;\nconst periods = [];\nfor (let i = 0; i < n; i++) {\n    if (books_sorted[i] - books_sorted[i - 1] <= k) {\n        max_books++;\n    } else {\n        if (max_books > max_periods) {\n            max_periods = max_books;\n            periods = [];\n        }\n        periods.push([i - max_books + 1, i]);\n        max_books = 1;\n    }\n}\nif (max_books > max_periods) {\n    max_periods = max_books;\n    periods = [];\n}\nperiods.push([n - max_books + 1, n]);\nconsole.log(max_books, max_periods);\nfor (let i = 0; i < max_periods; i++) {\n    console.log(periods[i][0], periods[i][1]);\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val books = readLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    var cnt = 0\n    var i = 0\n    var j = 0\n    while (i < n) {\n        while (j < n && books[j] - books[i] <= k) {\n            j++\n        }\n        cnt = j - i\n        if (cnt > ans) {\n            ans = cnt\n        }\n        i = j\n    }\n    println(ans.toString() + \" \" + (n - ans))\n    for (i in 0 until ans) {\n        println((i + 1).toString() + \" \" + (i + ans).toString())\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $k = explode(' ', trim(fgets(STDIN)));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$arr = array_unique($arr);\n$arr = array_values($arr);\n$arr = array_sort($arr);\n$max = 0;\n$ans = [];\n$i = 0;\n$j = 0;\nwhile ($i < $n) {\n    if ($arr[$i] - $arr[$j] <= $k) {\n        $max++;\n        $j++;\n    } else {\n        $ans[] = [$j, $i - 1];\n        $j = $i;\n        $max = 1;\n    }\n    $i++;\n}\n$ans[] = [$j, $i - 1];\necho $max . ' ' . count($ans) . PHP_EOL;\nforeach ($ans as $a) {\n    echo $a[0] + 1 . ' ' . $a[1] + 1 . PHP_EOL;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int max = a[0];\n    int min = a[0];\n    int ans = 1;\n    int ans2 = 0;\n    int ans3[n];\n    for (int i = 1; i < n; i++) {\n        if (a[i] > max) {\n            max = a[i];\n            ans++;\n        }\n        if (a[i] < min) {\n            min = a[i];\n            ans++;\n        }\n        if (max - min <= k) {\n            ans2++;\n            ans3[ans2 - 1] = i;\n        }\n    }\n    printf(\" %d %d\\n \", ans, ans2);\n    for (int i = 0; i < ans2; i++) {\n        printf(\" %d %d\\n \", ans3[i], ans3[i + 1]);\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @h;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@h = split(\/ \/, $line);\n\nmy $max = 0;\nmy $min = 10**6;\nmy $ans = 0;\nmy $ans_cnt = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($h[$i] > $max) {\n        $max = $h[$i];\n    }\n    if ($h[$i] < $min) {\n        $min = $h[$i];\n    }\n}\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($h[$i] - $min <= $k && $max - $h[$i] <= $k) {\n        $ans++;\n    }\n}\n\nprint \"$ans $ans_cnt\\n\";\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($h[$i] - $min <= $k && $max - $h[$i] <= $k) {\n        print \"$i \";\n    }\n}\n\nprint \"\\n\";\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($h[$i] - $min <= $k && $max - $h[$i] <= $k) {\n        print \"$i \";\n    }\n}\n\nprint \"\\n\";\"}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n_k[0];\n    let k = n_k[1];\n\n    let mut books = Vec::new();\n    stdin.read_line(&mut line).unwrap();\n    for book in line.split_whitespace() {\n        books.push(book.parse::<i32>().unwrap());\n    }\n\n    let mut books_by_height = Vec::new();\n    for book in books {\n        books_by_height.push((book, books.iter().position(|&b| b == book).unwrap()));\n    }\n\n    books_by_height.sort_by(|a, b| a.0.cmp(&b.0));\n\n    let mut max_books = 0;\n    let mut current_books = 0;\n    let mut current_height = books_by_height[0].0;\n    let mut current_start = books_by_height[0].1;\n    let mut current_end = books_by_height[0].1;\n    for (book, index) in books_by_height.iter().skip(1) {\n        if book - current_height <= k {\n            current_books += 1;\n            current_end = index;\n        } else {\n            if current_books > max_books {\n                max_books = current_books;\n            }\n            current_books = 1;\n            current_height = book;\n            current_start = index;\n            current_end = index;\n        }\n    }\n\n    if current_books > max_books {\n        max_books = current_books;\n    }\n\n    println!(\"{}\", max_books);\n\n    for i in 0..max_books {\n        println!(\"{}\", current_start + i);\n        println!(\"{}\", current_end + i);\n    }\n}\n\"\"\"}]"}
{"title":"B. Connecting Universities","description":"Treeland is a country in which there are n towns connected by n-1 two-way road such that it's possible to get from any town to any other town. In Treeland there are 2k universities which are located in different towns. Recently, the president signed the decree to connect universities by high-speed network.The Ministry of Education understood the decree in its own way and decided that it was enough to connect each university with another one by using a cable. Formally, the decree will be done! To have the maximum sum in the budget, the Ministry decided to divide universities into pairs so that the total length of the required cable will be maximum. In other words, the total distance between universities in k pairs should be as large as possible. Help the Ministry to find the maximum total distance. Of course, each university should be present in only one pair. Consider that all roads have the same length which is equal to 1. ","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input contains two integers n and k (2\u2264n\u2264200000, 1\u2264k\u2264n\/2)\u00a0\u2014 the number of towns in Treeland and the number of university pairs. Consider that towns are numbered from 1 to n. \nThe second line contains 2k distinct integers u1,u2,...,u2k (1\u2264ui\u2264n)\u00a0\u2014 indices of towns in which universities are located. \nThe next n-1 line contains the description of roads. Each line contains the pair of integers xj and yj (1\u2264xj,yj\u2264n), which means that the j-th road connects towns xj and yj. All of them are two-way roads. You can move from any town to any other using only these roads. \n","output_spec":"Print the maximum possible sum of distances in the division of universities into k pairs.\n","notes":"The figure below shows one of possible division into pairs in the first test. If you connect universities number 1 and 6 (marked in red) and universities number 2 and 5 (marked in blue) by using the cable, the total distance will equal 6 which will be the maximum sum in this example. \n \n","sample_inputs":["7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n","9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n"],"sample_outputs":["6\n","9\n"],"id":"700-B","difficulty":1800,"tags":["dfs+and+similar","dp","graphs","trees"],"src_uid":"ca22cf92727a38fbb3c085b9362602db","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<int> a(2 * k);\n    for (int i = 0; i < 2 * k; i++) {\n        cin >> a[i];\n    }\n    vector<vector<int>> g(n + 1);\n    for (int i = 0; i < n - 1; i++) {\n        int x, y;\n        cin >> x >> y;\n        g[x].push_back(y);\n        g[y].push_back(x);\n    }\n    vector<int> d(n + 1, 1e9);\n    d[1] = 0;\n    vector<bool> used(n + 1, false);\n    vector<int> ans;\n    for (int i = 1; i <= n; i++) {\n        int v = -1;\n        for (int j = 1; j <= n; j++) {\n            if (!used[j] && d[j] < d[v]) {\n                v = j;\n            }\n        }\n        used[v] = true;\n        for (int u : g[v]) {\n            if (!used[u]) {\n                d[u] = min(d[u], d[v] + 1);\n            }\n        }\n    }\n    for (int i = 0; i < 2 * k; i++) {\n        if (d[a[i]] > 0) {\n            ans.push_back(d[a[i]]);\n        }\n    }\n    sort(ans.begin(), ans.end());\n    cout << ans[ans.size() - 1] << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.PriorityQueue;\nimport java.util.Scanner;\n\npublic class Main {\n\n    static int n, k;\n    static int[] u;\n    static List<List<Integer>> adj;\n    static int[] dist;\n    static boolean[] visited;\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        k = sc.nextInt();\n        u = new int[2 * k];\n        for (int i = 0; i < 2 * k; i++) {\n            u[i] = sc.nextInt() - 1;\n        }\n        adj = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            adj.add(new ArrayList<>());\n        }\n        for (int i = 0; i < n - 1; i++) {\n            int x = sc.nextInt() - 1;\n            int y = sc.nextInt() - 1;\n            adj.get(x).add(y);\n            adj.get(y).add(x);\n        }\n        dist = new int[n];\n        Arrays.fill(dist, -1);\n        visited = new boolean[n];\n        dfs(0);\n        int ans = 0;\n        for (int i = 0; i < 2 * k; i += 2) {\n            ans = Math.max(ans, dist[u[i]] + dist[u[i + 1]]);\n        }\n        System.out.println(ans);\n    }\n\n    static void dfs(int v) {\n        visited[v] = true;\n        for (int u : adj.get(v)) {\n            if (!visited[u]) {\n                dist[u] = dist[v] + 1;\n                dfs(u);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\na=list(map(int,input().split()))\ng=[[] for i in range(n+1)]\nfor i in range(n-1):\n    x,y=map(int,input().split())\n    g[x].append(y)\n    g[y].append(x)\n\ndef dfs(s,d):\n    if d==k:\n        return 1\n    for i in g[s]:\n        if i not in used:\n            used.add(i)\n            ans+=dfs(i,d+1)\n            used.remove(i)\n    return ans\n\nused=set()\nans=0\nfor i in a:\n    ans+=dfs(i,1)\nprint(ans)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var u = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var g = new Graph(n);\n        for (int i = 0; i < n - 1; i++)\n        {\n            var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            g.AddEdge(a[0], a[1]);\n        }\n        var ans = 0;\n        for (int i = 0; i < k; i++)\n        {\n            var a = u[2 * i];\n            var b = u[2 * i + 1];\n            ans = Math.Max(ans, g.GetDistance(a, b));\n        }\n        Console.WriteLine(ans);\n    }\n\n    class Graph\n    {\n        private int n;\n        private List<List<int>> adj;\n\n        public Graph(int n)\n        {\n            this.n = n;\n            this.adj = new List<List<int>>(n);\n            for (int i = 0; i < n; i++)\n            {\n                this.adj.Add(new List<int>());\n            }\n        }\n\n        public void AddEdge(int a, int b)\n        {\n            this.adj[a].Add(b);\n            this.adj[b].Add(a);\n        }\n\n        public int GetDistance(int a, int b)\n        {\n            var queue = new Queue<int>();\n            queue.Enqueue(a);\n            var visited = new bool[n];\n            visited[a] = true;\n            int dist = 0;\n            while (queue.Count > 0)\n            {\n                var u = queue.Dequeue();\n                for (int i = 0; i < this.adj[u].Count; i++)\n                {\n                    var v = this.adj[u][i];\n                    if (!visited[v])\n                    {\n                        queue.Enqueue(v);\n                        visited[v] = true;\n                        dist++;\n                    }\n                }\n            }\n            return dist;\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\nu = gets.split.map(&:to_i)\ng = {}\n(n-1).times do\n  x, y = gets.split.map(&:to_i)\n  g[x] ||= []\n  g[x] << y\n  g[y] ||= []\n  g[y] << x\nend\n\nans = 0\n(k-1).times do\n  a, b = u.shift(2)\n  ans += g[a].count(b)\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Treeland;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 200000;\n\ntype\n  TEdge = record\n    u, v: Integer;\n  end;\n\nvar\n  n, k, m: Integer;\n  a: array[0..MAXN] of Integer;\n  e: array[0..MAXN] of TEdge;\n  d: array[0..MAXN] of Integer;\n  q: array[0..MAXN] of Integer;\n\nprocedure dfs(u: Integer);\nvar\n  i: Integer;\nbegin\n  for i := 0 to m - 1 do\n    if e[i].v = u then\n    begin\n      dfs(e[i].u);\n      d[u] := max(d[u], d[e[i].u] + 1);\n    end;\nend;\n\nfunction main(): Integer;\nvar\n  i, j, u, v, ans: Integer;\nbegin\n  readln(n, k);\n  for i := 0 to n - 1 do\n  begin\n    readln(a[i]);\n  end;\n  for i := 0 to m - 1 do\n  begin\n    readln(e[i].u, e[i].v);\n  end;\n  for i := 0 to n - 1 do\n  begin\n    d[i] := 0;\n  end;\n  dfs(a[0]);\n  ans := 0;\n  for i := 1 to k - 1 do\n  begin\n    u := a[i];\n    v := a[i + k - 1];\n    ans := max(ans, d[u] + d[v] - 1);\n  end;\n  writeln(ans);\n  exit(0);\nend;\n\nbegin\n  main();\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, k int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &k)\\n    var a []int\\n    for i := 0; i < 2*k; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    var m map[int]int\\n    for i := 0; i < n-1; i++ {\\n        var x, y int\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &x, &y)\\n        m[x]++\\n        m[y]++\\n    }\\n    var ans int\\n    for i := 0; i < 2*k; i++ {\\n        for j := i + 1; j < 2*k; j++ {\\n            if m[a[i]] == 1 && m[a[j]] == 1 {\\n                ans = max(ans, abs(a[i]-a[j]))\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\\nfunc abs(a int) int {\\n    if a < 0 {\\n        return -a\\n    } else {\\n        return a\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst k = parseInt(stdin[1]);\nconst u = stdin[2].split(' ').map(x => parseInt(x));\nconst g = new Map();\nfor (let i = 0; i < n - 1; i++) {\n    const [a, b] = stdin[i + 3].split(' ').map(x => parseInt(x));\n    if (!g.has(a)) g.set(a, []);\n    if (!g.has(b)) g.set(b, []);\n    g.get(a).push(b);\n    g.get(b).push(a);\n}\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n    for (let j = 0; j < g.get(i).length; j++) {\n        dp[i] = Math.max(dp[i], dp[g.get(i)[j]] + 1);\n    }\n}\nconst ans = 0;\nfor (let i = 0; i < k; i++) {\n    ans = Math.max(ans, dp[u[i]] + dp[u[i + k]]);\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val u = readLine().split(\" \").map { it.toInt() }\n    val g = Array(n + 1) { mutableListOf<Int>() }\n    for (i in 0 until n - 1) {\n        val (a, b) = readLine().split(\" \").map { it.toInt() }\n        g[a].add(b)\n        g[b].add(a)\n    }\n    val dp = Array(n + 1) { IntArray(n + 1) { 0 } }\n    for (i in 1..n) {\n        for (j in 1..n) {\n            if (i == j) continue\n            for (k in g[i]) {\n                dp[i][j] = maxOf(dp[i][j], dp[i][k] + 1)\n            }\n        }\n    }\n    val ans = IntArray(k)\n    for (i in 0 until k) {\n        val a = u[2 * i]\n        val b = u[2 * i + 1]\n        ans[i] = dp[a][b]\n    }\n    println(ans.maxOrNull())\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $k = explode(' ', trim(fgets(STDIN)));\n$u = explode(' ', trim(fgets(STDIN)));\n$g = [];\nfor ($i = 0; $i < $n - 1; $i++) {\n    $a = explode(' ', trim(fgets(STDIN)));\n    $g[$a[0]][$a[1]] = 1;\n    $g[$a[1]][$a[0]] = 1;\n}\n$ans = 0;\nfor ($i = 0; $i < $k; $i++) {\n    for ($j = $i + 1; $j < $k; $j++) {\n        $ans = max($ans, $g[$u[$i]][$u[$j]] + $g[$u[$j]][$u[$i]]);\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[2 * k];\n    for (int i = 0; i < 2 * k; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int m;\n    scanf(\" %d \", &m);\n    int b[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d %d \", &b[i][0], &b[i][1]);\n    }\n    int ans = 0;\n    for (int i = 0; i < 2 * k; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i] == b[j][0] || a[i] == b[j][1]) {\n                ans = max(ans, b[j][0] - a[i] + b[j][1] - a[i]);\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\nuse warnings;\\n\\nmy $n, $k;\\n\\nchomp(my $line = <STDIN>);\\n($n, $k) = split(\/ \/, $line);\\n\\nmy @u = split(\/ \/, <STDIN>);\\n\\nmy @g = ();\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    $g[$i] = [];\\n}\\n\\nfor (my $i = 0; $i < $n - 1; $i++) {\\n    chomp(my $line = <STDIN>);\\n    ($a, $b) = split(\/ \/, $line);\\n    $g[$a - 1][] = $b - 1;\\n    $g[$b - 1][] = $a - 1;\\n}\\n\\nmy $ans = 0;\\n\\nfor (my $i = 0; $i < $k; $i++) {\\n    my $a = $u[$i * 2] - 1;\\n    my $b = $u[$i * 2 + 1] - 1;\\n    $ans = $ans + $g[$a][$b];\\n}\\n\\nprint $ans;\\n\\nexit(0);\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::{BTreeMap, HashMap};\n\nfn main() {\n    \/\/ \u8bfb\u53d6\u8f93\u5165\n    let (n, k) = {\n        let mut s = String::new();\n        std::io::stdin().read_line(&mut s).unwrap();\n        let mut iter = s.split_whitespace();\n        iter.next().unwrap().parse::<usize>().unwrap(),\n        iter.next().unwrap().parse::<usize>().unwrap(),\n    };\n    let mut towns = Vec::new();\n    for _ in 0..k {\n        let mut s = String::new();\n        std::io::stdin().read_line(&mut s).unwrap();\n        let mut iter = s.split_whitespace();\n        towns.push(iter.next().unwrap().parse::<usize>().unwrap());\n    }\n    let mut roads = Vec::new();\n    for _ in 0..n - 1 {\n        let mut s = String::new();\n        std::io::stdin().read_line(&mut s).unwrap();\n        let mut iter = s.split_whitespace();\n        roads.push((iter.next().unwrap().parse::<usize>().unwrap(), iter.next().unwrap().parse::<usize>().unwrap()));\n    }\n\n    \/\/ \u6784\u5efa\u56fe\n    let mut graph = BTreeMap::new();\n    for (u, v) in roads {\n        graph.entry(u).or_insert(Vec::new()).push(v);\n        graph.entry(v).or_insert(Vec::new()).push(u);\n    }\n\n    \/\/ \u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u7684\u5ea6\n    let mut degrees = HashMap::new();\n    for u in 0..n {\n        degrees.insert(u, graph.get(&u).unwrap().len());\n    }\n\n    \/\/ \u8ba1\u7b97\u7b54\u6848\n    let mut ans = 0;\n    for i in 0..k {\n        let u = towns[i];\n        let v = towns[(i + 1) % k];\n        let d = degrees[u] + degrees[v] - 2;\n        ans = std::cmp::max(ans, d);\n    }\n\n    \/\/ \u8f93\u51fa\u7b54\u6848\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Professor's task","description":"Once a walrus professor Plato asked his programming students to perform the following practical task. The students had to implement such a data structure that would support a convex hull on some set of points S. The input to the program had q queries of two types: 1. Add a point with coordinates (x,y) into the set S. Note that in this case the convex hull of S could have changed, and could have remained the same. 2. Say whether a point with coordinates (x,y) belongs to an area limited by the convex hull, including the border. All the students coped with the task. What about you?","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains an integer q (4\u2264q\u226410^5). \nThen follow q lines in the following way: \"t x y\", where t is the query type (1 or 2), and (x,y) are the coordinates of the point (-10^6\u2264x,y\u226410^6, x and y are integers). \nThere is at least one query of type 2.\nIt is guaranteed that the three queries of the first type follow first and the points given in the queries form a non-degenerative triangle. Also all the points added in S are distinct.\n","output_spec":"For each query of the second type print one string containing \"YES\", if the point lies inside the convex hull or on its border. Otherwise, print \"NO\".\n","notes":null,"sample_inputs":["8\n1 0 0\n1 2 0\n1 2 2\n2 1 0\n1 0 2\n2 1 1\n2 2 1\n2 20 -1\n"],"sample_outputs":["YES\nYES\nYES\nNO\n"],"id":"70-D","difficulty":2700,"tags":["data+structures","geometry"],"src_uid":"6220f4058f9325dfb211fb1dd86e9464","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstruct Point {\n    int x, y;\n    Point() {}\n    Point(int x, int y) : x(x), y(y) {}\n    bool operator<(const Point &p) const {\n        if (x != p.x) return x < p.x;\n        return y < p.y;\n    }\n};\n\nint main() {\n    int n;\n    cin >> n;\n    vector<Point> p(n);\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        cin >> x >> y;\n        p[i] = Point(x, y);\n    }\n    sort(p.begin(), p.end());\n    vector<Point> hull;\n    for (int i = 0; i < n; i++) {\n        while (hull.size() >= 2 && ccw(hull[hull.size() - 2], hull.back(), p[i]) <= 0) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n    for (int i = n - 1; i >= 0; i--) {\n        while (hull.size() >= 2 && ccw(hull[hull.size() - 2], hull.back(), p[i]) <= 0) {\n            hull.pop_back();\n        }\n        hull.push_back(p[i]);\n    }\n    int m;\n    cin >> m;\n    for (int i = 0; i < m; i++) {\n        int x, y;\n        cin >> x >> y;\n        Point q(x, y);\n        bool in = false;\n        for (int j = 0; j < hull.size() - 1; j++) {\n            if (ccw(hull[j], hull[j + 1], q) > 0) {\n                in = !in;\n            }\n        }\n        if (ccw(hull[hull.size() - 1], hull[0], q) > 0) {\n            in = !in;\n        }\n        if (in) {\n            cout << \"YES\" << endl;\n        } else {\n            cout << \"NO\" << endl;\n        }\n    }\n    return 0;\n}\n\nint ccw(Point a, Point b, Point c) {\n    return (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    static int n;\n    static int[] x;\n    static int[] y;\n    static int[] s;\n    static int[] t;\n    static int[] c;\n    static int[] d;\n    static int[] p;\n    static int[] q;\n    static int[] r;\n    static int[] ans;\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        n = sc.nextInt();\n        x = new int[n];\n        y = new int[n];\n        s = new int[n];\n        t = new int[n];\n        c = new int[n];\n        d = new int[n];\n        p = new int[n];\n        q = new int[n];\n        r = new int[n];\n        ans = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        for (int i = 0; i < n; i++) {\n            s[i] = i;\n            t[i] = i;\n            c[i] = 0;\n            d[i] = 0;\n            p[i] = 0;\n            q[i] = 0;\n            r[i] = 0;\n        }\n        for (int i = 0; i < n; i++) {\n            int j = 0;\n            while (j < i) {\n                if (x[i] < x[j] || (x[i] == x[j] && y[i] < y[j])) {\n                    int tmp = s[i];\n                    s[i] = s[j];\n                    s[j] = tmp;\n                }\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            int j = 0;\n            while (j < i) {\n                if (y[i] < y[j] || (y[i] == y[j] && x[i] < x[j])) {\n                    int tmp = t[i];\n                    t[i] = t[j];\n                    t[j] = tmp;\n                }\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            c[s[i]]++;\n            d[t[i]]++;\n        }\n        for (int i = 0; i < n; i++) {\n            p[s[i]] = c[s[i]];\n            q[t[i]] = d[t[i]];\n        }\n        for (int i = 0; i < n; i++) {\n            r[i] = p[i] + q[i] - 1;\n        }\n        for (int i = 0; i < n; i++) {\n            ans[i] = 0;\n        }\n        for (int i = 0; i < n; i++) {\n            if (r[i] == 1) {\n                ans[i] = 1;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            System.out.println(ans[i]);\n        }\n    }\n}\n\"\"\"}]","Python":"","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\n#define MAXN 100000\n\nstruct point {\n    int x, y;\n};\n\nstruct line {\n    int a, b, c;\n};\n\nint cmp(const void *a, const void *b) {\n    struct point *p1 = (struct point *)a;\n    struct point *p2 = (struct point *)b;\n    if (p1->x != p2->x)\n        return p1->x - p2->x;\n    return p1->y - p2->y;\n}\n\nint sgn(int x) {\n    if (x < 0)\n        return -1;\n    return 1;\n}\n\nint main() {\n    int n, i, j, k;\n    struct point p[MAXN];\n    struct line l[MAXN];\n    int stk[MAXN];\n    int top = 0;\n\n    scanf(\" %d \", &n);\n    for (i = 0; i < n; i++) {\n        scanf(\" %d %d \", &p[i].x, &p[i].y);\n    }\n\n    qsort(p, n, sizeof(struct point), cmp);\n\n    for (i = 0; i < n; i++) {\n        for (j = 0; j < top; j++) {\n            if (sgn((p[i].y - stk[j].y) * (stk[j + 1].x - stk[j].x) - (p[i].x - stk[j].x) * (stk[j + 1].y - stk[j].y)) < 0) {\n                top = j;\n                break;\n            }\n        }\n        stk[top++] = p[i];\n    }\n\n    for (i = 0; i < top; i++) {\n        l[i].a = stk[i + 1].y - stk[i].y;\n        l[i].b = stk[i].x - stk[i + 1].x;\n        l[i].c = stk[i].x * stk[i + 1].y - stk[i + 1].x * stk[i].y;\n    }\n\n    int m;\n    scanf(\" %d \", &m);\n    for (i = 0; i < m; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        int flag = 0;\n        for (j = 0; j < top; j++) {\n            if (sgn(l[j].a * x + l[j].b * y + l[j].c) < 0) {\n                flag = 1;\n                break;\n            }\n        }\n        if (flag)\n            printf(\" NO \");\n        else\n            printf(\" YES \");\n        printf(\" \n \");\n    }\n\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConvexHull\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            List<Point> points = new List<Point>();\n            for (int i = 0; i < n; i++)\n            {\n                string[] line = Console.ReadLine().Split(' ');\n                int t = int.Parse(line[0]);\n                int x = int.Parse(line[1]);\n                int y = int.Parse(line[2]);\n                if (t == 1)\n                {\n                    points.Add(new Point(x, y));\n                }\n                else\n                {\n                    bool isInside = false;\n                    for (int j = 0; j < points.Count; j++)\n                    {\n                        Point p1 = points[j];\n                        for (int k = j + 1; k < points.Count; k++)\n                        {\n                            Point p2 = points[k];\n                            if (IsPointInTriangle(p1, p2, new Point(x, y)))\n                            {\n                                isInside = true;\n                                break;\n                            }\n                        }\n                    }\n                    Console.WriteLine(isInside ? \"YES\" : \"NO\");\n                }\n            }\n        }\n\n        static bool IsPointInTriangle(Point p1, Point p2, Point p3)\n        {\n            int a1 = p2.y - p1.y;\n            int b1 = p1.x - p2.x;\n            int c1 = a1 * p1.x + b1 * p1.y;\n            int a2 = p3.y - p1.y;\n            int b2 = p1.x - p3.x;\n            int c2 = a2 * p1.x + b2 * p1.y;\n            int a3 = p3.y - p2.y;\n            int b3 = p2.x - p3.x;\n            int c3 = a3 * p2.x + b3 * p2.y;\n            int d = a1 * b2 + b1 * c2 + c1 * a2 - a2 * b1 - b2 * c1 - c2 * a1;\n            int x = a3 * b2 + b3 * c2 + c3 * a2 - a2 * b3 - b2 * c3 - c2 * a3;\n            int y = a1 * b3 + b1 * c3 + c1 * a3 - a3 * b1 - b3 * c1 - c3 * a1;\n            return d != 0 && x * x + y * y <= d * d;\n        }\n\n        class Point\n        {\n            public int x;\n            public int y;\n\n            public Point(int x, int y)\n            {\n                this.x = x;\n                this.y = y;\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nq = gets.to_i\n\ndef ccw(a, b, c)\n  (b[1] - a[1]) * (c[0] - b[0]) - (b[0] - a[0]) * (c[1] - b[1])\nend\n\ndef convex_hull(points)\n  points.sort_by! { |p| [p[1], p[0]] }\n  hull = []\n  i = 0\n  while i < points.size\n    j = i + 1\n    while j < points.size\n      if ccw(points[i], points[j], points[j + 1]) < 0\n        hull.push(points[j])\n      end\n      j += 1\n    end\n    i += 1\n  end\n  hull\nend\n\nhull = convex_hull([\n  [0, 0],\n  [2, 0],\n  [2, 2]\n])\n\nq.times do\n  t, x, y = gets.split\n  if t == \"1\"\n    hull.push([x.to_i, y.to_i])\n  else\n    if hull.include?([x.to_i, y.to_i])\n      puts \"YES\"\n    else\n      puts \"NO\"\n    end\n  end\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram convex_hull;\n\nuses\n  SysUtils;\n\nconst\n  maxn = 100000;\n\ntype\n  point = record\n    x, y: integer;\n  end;\n\nvar\n  n, i, j, k: integer;\n  a: array[0..maxn] of point;\n  s: array[0..maxn] of integer;\n  ans: array[0..maxn] of boolean;\n\nprocedure add(x, y: integer);\nvar\n  i, j: integer;\nbegin\n  i := n;\n  while i > 0 and (a[i - 1].y > y or (a[i - 1].y = y and a[i - 1].x > x)) do\n    i := i - 1;\n  j := i;\n  while j < n and (a[j].y < y or (a[j].y = y and a[j].x < x)) do\n    j := j + 1;\n  if i = j then\n    exit;\n  if i = n then\n  begin\n    inc(n);\n    a[n - 1].x := x;\n    a[n - 1].y := y;\n    exit;\n  end;\n  if j = 0 then\n  begin\n    inc(n);\n    a[n - 1].x := x;\n    a[n - 1].y := y;\n    s[n - 1] := i;\n    exit;\n  end;\n  if a[i].x = a[j].x then\n  begin\n    inc(n);\n    a[n - 1].x := x;\n    a[n - 1].y := y;\n    s[n - 1] := i;\n    exit;\n  end;\n  if a[i].x < a[j].x then\n  begin\n    inc(n);\n    a[n - 1].x := x;\n    a[n - 1].y := y;\n    s[n - 1] := i;\n  end else\n  begin\n    inc(n);\n    a[n - 1].x := x;\n    a[n - 1].y := y;\n    s[n - 1] := j;\n  end;\n  for k := i + 1 to j - 1 do\n    s[k] := n - 1;\nend;\n\nprocedure solve;\nvar\n  i, j, k: integer;\nbegin\n  for i := 0 to n - 1 do\n    ans[i] := false;\n  for i := 0 to n - 1 do\n  begin\n    j := s[i];\n    while j <> i do\n    begin\n      ans[i] := true;\n      ans[j] := true;\n      j := s[j];\n    end;\n  end;\nend;\n\nbegin\n  readln(n);\n  for i := 0 to n - 1 do\n  begin\n    readln(a[i].x, a[i].y);\n    add(a[i].x, a[i].y);\n  end;\n  solve;\n  for i := 0 to n - 1 do\n  begin\n    if ans[i] then\n      write('YES');\n    else\n      write('NO');\n    writeln;\n  end;\nend.\n\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\ntype Point struct {\n\tX, Y int\n}\n\ntype Edge struct {\n\tA, B Point\n}\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\n\tpoints := make([]Point, n)\n\tfor i := 0; i < n; i++ {\n\t\tvar x, y int\n\t\tfmt.Scan(&x, &y)\n\t\tpoints[i] = Point{x, y}\n\t}\n\n\thull := convexHull(points)\n\n\tfor i := 0; i < n; i++ {\n\t\tif isInHull(hull, points[i]) {\n\t\t\tfmt.Println(\"YES\")\n\t\t} else {\n\t\t\tfmt.Println(\"NO\")\n\t\t}\n\t}\n}\n\nfunc convexHull(points []Point) []Edge {\n\tn := len(points)\n\tif n < 3 {\n\t\treturn nil\n\t}\n\n\t\/\/ Sort points by x-coordinate.\n\tsort.Slice(points, func(i, j int) bool {\n\t\treturn points[i].X < points[j].X\n\t})\n\n\t\/\/ Find the lower hull.\n\tlowerHull := make([]Edge, 0, n)\n\tfor i := 0; i < n; i++ {\n\t\tfor len(lowerHull) >= 2 && orientation(lowerHull[len(lowerHull)-2], lowerHull[len(lowerHull)-1], points[i]) <= 0 {\n\t\t\tlowerHull = lowerHull[:len(lowerHull)-1]\n\t\t}\n\t\tlowerHull = append(lowerHull, Edge{points[i], points[(i+1)%n]})\n\t}\n\n\t\/\/ Find the upper hull.\n\tupperHull := make([]Edge, 0, n)\n\tfor i := n - 1; i >= 0; i-- {\n\t\tfor len(upperHull) >= 2 && orientation(upperHull[len(upperHull)-2], upperHull[len(upperHull)-1], points[i]) <= 0 {\n\t\t\tupperHull = upperHull[:len(upperHull)-1]\n\t\t}\n\t\tupperHull = append(upperHull, Edge{points[i], points[(i+1)%n]})\n\t}\n\n\t\/\/ Merge the lower and upper hulls.\n\thull := make([]Edge, 0, len(lowerHull)+len(upperHull))\n\thull = append(hull, lowerHull...)\n\thull = append(hull, upperHull...)\n\n\treturn hull\n}\n\nfunc orientation(a, b, c Point) int {\n\treturn (b.Y-a.Y)*(c.X-b.X) - (b.X-a.X)*(c.Y-b.Y)\n}\n\nfunc isInHull(hull []Edge, p Point) bool {\n\tfor i := 0; i < len(hull); i++ {\n\t\tif orientation(hull[i].A, hull[i].B, p) < 0 {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nq = int(input())\n\ndef ccw(a, b, c):\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0])\n\ndef convex_hull(points):\n    hull = []\n    points.sort()\n    for p in points:\n        while len(hull) >= 2 and ccw(hull[-2], hull[-1], p) <= 0:\n            hull.pop()\n        hull.append(p)\n    return hull\n\ndef in_convex_hull(p, hull):\n    for i in range(len(hull) - 1):\n        if ccw(hull[i], hull[i + 1], p) < 0:\n            return False\n    return True\n\nfor _ in range(q):\n    t, x, y = map(int, input().split())\n    if t == 1:\n        points.append((x, y))\n    else:\n        if in_convex_hull((x, y), convex_hull(points)):\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val points = mutableListOf<Pair<Int, Int>>()\n    val hull = mutableListOf<Pair<Int, Int>>()\n    val pq = PriorityQueue<Pair<Int, Int>>(compareBy { it.second })\n    for (i in 0 until n) {\n        val (t, x, y) = readLine().split(\" \").map { it.toInt() }\n        if (t == 1) {\n            points.add(Pair(x, y))\n            pq.add(Pair(y, x))\n        } else {\n            val ans = if (isInside(points, Pair(x, y))) \"YES\" else \"NO\"\n            println(ans)\n        }\n    }\n}\n\nfun isInside(points: List<Pair<Int, Int>>, p: Pair<Int, Int>): Boolean {\n    val n = points.size\n    val stk = Stack<Pair<Int, Int>>()\n    stk.push(points[0])\n    for (i in 1 until n) {\n        val (x1, y1) = stk.peek()\n        val (x2, y2) = points[i]\n        if (y1 < y2) {\n            while (stk.isNotEmpty() && y1 < stk.peek().second) {\n                stk.pop()\n            }\n        } else if (y1 > y2) {\n            while (stk.isNotEmpty() && y1 > stk.peek().second) {\n                stk.pop()\n            }\n        }\n        if (stk.isNotEmpty() && cross(x1, y1, x2, y2, stk.peek().first, stk.peek().second) < 0) {\n            return false\n        }\n        stk.push(points[i])\n    }\n    for (i in 0 until n - 1) {\n        val (x1, y1) = stk.peek()\n        val (x2, y2) = points[i]\n        if (cross(x1, y1, x2, y2, stk.peek().first, stk.peek().second) < 0) {\n            return false\n        }\n    }\n    return true\n}\n\nfun cross(x1: Int, y1: Int, x2: Int, y2: Int, x3: Int, y3: Int): Int {\n    return (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n = intval(trim(fgets(STDIN)));\n$points = [];\nfor ($i = 0; $i < $n; $i++) {\n    $t = trim(fgets(STDIN));\n    $x = intval(substr($t, 0, strpos($t, ' ')));\n    $y = intval(substr($t, strpos($t, ' ') + 1));\n    if ($t[0] == '1') {\n        $points[] = [$x, $y];\n    } else {\n        $ans = 'NO';\n        for ($j = 0; $j < count($points) - 1; $j++) {\n            $a = $points[$j];\n            $b = $points[$j + 1];\n            if ($a[0] == $x && $a[1] == $y) {\n                $ans = 'YES';\n                break;\n            }\n            if ($a[0] < $x && $b[0] > $x || $a[0] > $x && $b[0] < $x) {\n                if ($a[1] < $y && $b[1] > $y || $a[1] > $y && $b[1] < $y) {\n                    $ans = 'YES';\n                    break;\n                }\n            }\n        }\n        echo $ans . PHP_EOL;\n    }\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\nimport std.math;\n\nstruct Point {\n    int x, y;\n    Point(int x, int y) {\n        this.x = x;\n        this.y = y;\n    }\n}\n\nstruct Line {\n    Point a, b;\n    Line(Point a, Point b) {\n        this.a = a;\n        this.b = b;\n    }\n\n    int cross(Point p) {\n        return (b.x - a.x) * (p.y - a.y) - (b.y - a.y) * (p.x - a.x);\n    }\n\n    bool isLeft(Point p) {\n        return cross(p) > 0;\n    }\n\n    bool isRight(Point p) {\n        return cross(p) < 0;\n    }\n\n    bool onSegment(Point p) {\n        return (a.x <= p.x && p.x <= b.x) && (a.y <= p.y && p.y <= b.y);\n    }\n}\n\nstruct ConvexHull {\n    Point[] points;\n\n    ConvexHull(Point[] points) {\n        this.points = points;\n    }\n\n    bool isInside(Point p) {\n        int n = points.length;\n        for (int i = 0; i < n; i++) {\n            int j = (i + 1) % n;\n            if (points[i].isLeft(p) && points[j].isLeft(p)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    Point[] points = new Point[n];\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        points[i] = new Point(x, y);\n    }\n\n    ConvexHull hull = new ConvexHull(points);\n\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        scanf(\" %d %d \", &x, &y);\n        Point p = new Point(x, y);\n        if (hull.isInside(p)) {\n            printf(\" YES \");\n        } else {\n            printf(\" NO \");\n        }\n        printf(\" \n \");\n    }\n\n    return 0;\n}\n\"\"\"}]","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::{BTreeMap, BTreeSet};\n\nfn main() {\n    let n = read_line::<usize>();\n    let mut points = BTreeMap::new();\n    let mut hull = BTreeSet::new();\n    for _ in 0..n {\n        let line = read_line::<String>();\n        let mut iter = line.split_whitespace();\n        let t = iter.next().unwrap().parse::<usize>().unwrap();\n        let x = iter.next().unwrap().parse::<i64>().unwrap();\n        let y = iter.next().unwrap().parse::<i64>().unwrap();\n        if t == 1 {\n            points.insert((x, y), ());\n        } else {\n            let mut ans = false;\n            for (p1, _) in &points {\n                for (p2, _) in &points {\n                    if p1 != p2 {\n                        let (x1, y1) = p1;\n                        let (x2, y2) = p2;\n                        let (x, y) = (x, y);\n                        if (x1 - x2) * (y - y2) - (y1 - y2) * (x - x2) > 0 {\n                            ans = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            println!(\"{}\", if ans { \"YES\" } else { \"NO\" });\n        }\n    }\n}\n\nfn read_line<T>() -> T {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    s.trim().parse().unwrap()\n}\n\"\"\"}]"}
{"title":"A. Vitya in the Countryside","description":"Every summer Vitya comes to visit his grandmother in the countryside. This summer, he got a huge wart. Every grandma knows that one should treat warts when the moon goes down. Thus, Vitya has to catch the moment when the moon is down.Moon cycle lasts 30 days. The size of the visible part of the moon (in Vitya's units) for each day is 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, and then cycle repeats, thus after the second 1 again goes 0.As there is no internet in the countryside, Vitya has been watching the moon for n consecutive days and for each of these days he wrote down the size of the visible part of the moon. Help him find out whether the moon will be up or down next day, or this cannot be determined by the data he has.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line of the input contains a single integer n (1\u2264n\u226492)\u00a0\u2014 the number of consecutive days Vitya was watching the size of the visible part of the moon. \nThe second line contains n integers ai (0\u2264ai\u226415)\u00a0\u2014 Vitya's records.\nIt's guaranteed that the input data is consistent.\n","output_spec":"If Vitya can be sure that the size of visible part of the moon on day n+1 will be less than the size of the visible part on day n, then print \"DOWN\" at the only line of the output. If he might be sure that the size of the visible part will increase, then print \"UP\". If it's impossible to determine what exactly will happen with the moon, print -1.\n","notes":"In the first sample, the size of the moon on the next day will be equal to 8, thus the answer is \"UP\".\nIn the second sample, the size of the moon on the next day will be 11, thus the answer is \"DOWN\".\nIn the third sample, there is no way to determine whether the size of the moon on the next day will be 7 or 9, thus the answer is -1.\n","sample_inputs":["5\n3 4 5 6 7\n","7\n12 13 14 15 14 13 12\n","1\n8\n"],"sample_outputs":["UP\n","DOWN\n","-1\n"],"id":"719-A","difficulty":1100,"tags":["implementation"],"src_uid":"8330d9fea8d50a79741507b878da0a75","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"n, a = map(int, input().split())\nif n == 1:\n    print(-1)\nelif a[n-1] == 15:\n    print(\"DOWN\")\nelif a[n-1] == 0:\n    print(\"UP\")\nelse:\n    print(\"UP\")\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int i = n - 1;\n        while (i >= 0 && a[i] == a[i - 1]) {\n            i--;\n        }\n        if (i < 0) {\n            System.out.println(\"-1\");\n        } else if (a[i] == 15) {\n            System.out.println(\"DOWN\");\n        } else {\n            System.out.println(\"UP\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nif a[-1] == 15:\n    print(\"DOWN\")\nelif a[-1] == 0:\n    print(\"UP\")\nelse:\n    print(-1)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n = int(input())\na = list(map(int, input().split()))\nif a[n-1] == 15:\n    print(\"DOWN\")\nelif a[n-1] == 0:\n    print(\"UP\")\nelse:\n    print(-1)\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\n\nnamespace Moon\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);\n            int i = n - 1;\n            while (i >= 0 && a[i] == a[i - 1])\n            {\n                i--;\n            }\n            if (i < 0)\n            {\n                Console.WriteLine(\"-1\");\n            }\n            else if (a[i] == 15)\n            {\n                Console.WriteLine(\"DOWN\");\n            }\n            else\n            {\n                Console.WriteLine(\"UP\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\nif a[-1] == 15\n  puts 'DOWN'\nelsif a[-1] == 0\n  puts 'UP'\nelse\n  puts -1\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Moon;\nuses SysUtils;\nvar\n  n, i, a: Integer;\nbegin\n  Readln(n);\n  Readln(a);\n  if (a = 15) and (n = 30) then\n    Writeln('DOWN')\n  else if (a = 0) and (n = 1) then\n    Writeln('UP')\n  else if (a = 15) and (n < 30) then\n    Writeln('UP')\n  else if (a = 0) and (n > 1) then\n    Writeln('DOWN')\n  else if (a = 15) and (n > 30) then\n    Writeln('-1')\n  else if (a = 0) and (n < 1) then\n    Writeln('-1')\n  else if (a = 14) and (n = 30) then\n    Writeln('UP')\n  else if (a = 1) and (n = 1) then\n    Writeln('DOWN')\n  else if (a = 14) and (n < 30) then\n    Writeln('DOWN')\n  else if (a = 1) and (n > 1) then\n    Writeln('UP')\n  else if (a = 14) and (n > 30) then\n    Writeln('-1')\n  else if (a = 1) and (n < 1) then\n    Writeln('-1')\n  else\n    Writeln('-1');\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var n int\n    fmt.Scan(&n)\n    var a []int\n    for i := 0; i < n; i++ {\n        var ai int\n        fmt.Scan(&ai)\n        a = append(a, ai)\n    }\n    if a[n-1] == 15 {\n        fmt.Println(\"DOWN\")\n    } else if a[n-1] == 0 {\n        fmt.Println(\"UP\")\n    } else {\n        fmt.Println(-1)\n    }\n}\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readline().trim());\nconst a = process.stdin.readline().trim().split(' ').map(Number);\nconst m = a.length;\nif (m == 1) {\n    console.log(-1);\n} else {\n    if (a[m - 1] == 15) {\n        console.log('DOWN');\n    } else if (a[m - 1] == 0) {\n        console.log('UP');\n    } else {\n        console.log(a[m - 1] + 1);\n    }\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    val b = a.dropLast(1)\n    val c = a.drop(1)\n    val d = b.zip(c).map { (x, y) -> if (x > y) 1 else -1 }\n    val e = d.sum()\n    if (e == 0) {\n        println(-1)\n    } else if (e > 0) {\n        println(\"UP\")\n    } else {\n        println(\"DOWN\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$i = 0;\n$j = 0;\n$k = 0;\n$l = 0;\n$m = 0;\n$n = 0;\n$o = 0;\n$p = 0;\n$q = 0;\n$r = 0;\n$s = 0;\n$t = 0;\n$u = 0;\n$v = 0;\n$w = 0;\n$x = 0;\n$y = 0;\n$z = 0;\n\nfor ($i = 0; $i < $n; $i++) {\n    if ($a[$i] == 0) {\n        $j++;\n    } elseif ($a[$i] == 1) {\n        $k++;\n    } elseif ($a[$i] == 2) {\n        $l++;\n    } elseif ($a[$i] == 3) {\n        $m++;\n    } elseif ($a[$i] == 4) {\n        $n++;\n    } elseif ($a[$i] == 5) {\n        $o++;\n    } elseif ($a[$i] == 6) {\n        $p++;\n    } elseif ($a[$i] == 7) {\n        $q++;\n    } elseif ($a[$i] == 8) {\n        $r++;\n    } elseif ($a[$i] == 9) {\n        $s++;\n    } elseif ($a[$i] == 10) {\n        $t++;\n    } elseif ($a[$i] == 11) {\n        $u++;\n    } elseif ($a[$i] == 12) {\n        $v++;\n    } elseif ($a[$i] == 13) {\n        $w++;\n    } elseif ($a[$i] == 14) {\n        $x++;\n    } elseif ($a[$i] == 15) {\n        $y++;\n    }\n}\n\nif ($j == $n) {\n    echo 'DOWN';\n} elseif ($k == $n) {\n    echo 'UP';\n} elseif ($l == $n) {\n    echo 'UP';\n} elseif ($m == $n) {\n    echo 'UP';\n} elseif ($n == $n) {\n    echo 'UP';\n} elseif ($o == $n) {\n    echo 'UP';\n} elseif ($p == $n) {\n    echo 'UP';\n} elseif ($q == $n) {\n    echo 'UP';\n} elseif ($r == $n) {\n    echo 'UP';\n} elseif ($s == $n) {\n    echo 'UP';\n} elseif ($t == $n) {\n    echo 'UP';\n} elseif ($u == $n) {\n    echo 'UP';\n} elseif ($v == $n) {\n    echo 'UP';\n} elseif ($w == $n) {\n    echo 'UP';\n} elseif ($x == $n) {\n    echo 'UP';\n} elseif ($y == $n) {\n    echo 'UP';\n} else {\n    echo '-1';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int i = 0;\n    while (i < n - 1) {\n        if (a[i] < a[i + 1]) {\n            printf(\" DOWN \");\n            return;\n        } else if (a[i] > a[i + 1]) {\n            printf(\" UP \");\n            return;\n        }\n        i++;\n    }\n    printf(\" -1 \");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = <STDIN>;\n\nmy $i = 0;\nwhile ($i < $n - 1) {\n    if ($a[$i] == 15 && $a[$i + 1] == 0) {\n        print \"DOWN\\n\";\n        exit;\n    }\n    if ($a[$i] == 0 && $a[$i + 1] == 1) {\n        print \"UP\\n\";\n        exit;\n    }\n    $i++;\n}\n\nprint \"-1\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = Vec::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<usize> = a.trim().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = -1;\n    for i in 0..n - 1 {\n        if a[i] < a[i + 1] {\n            ans = \"DOWN\";\n            break;\n        } else if a[i] > a[i + 1] {\n            ans = \"UP\";\n            break;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"C. Round Table Knights","description":"There are n knights sitting at the Round Table at an equal distance from each other. Each of them is either in a good or in a bad mood.Merlin, the wizard predicted to King Arthur that the next month will turn out to be particularly fortunate if the regular polygon can be found. On all vertices of the polygon knights in a good mood should be located. Otherwise, the next month will bring misfortunes.A convex polygon is regular if all its sides have same length and all his angles are equal. In this problem we consider only regular polygons with at least 3 vertices, i. e. only nondegenerated.On a picture below some examples of such polygons are present. Green points mean knights in a good mood. Red points mean ones in a bad mood. King Arthur knows the knights' moods. Help him find out if the next month will be fortunate or not.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 second","memory_limit":"256 megabytes","input_spec":"The first line contains number n, which is the number of knights at the round table (3\u2264n\u226410^5). The second line contains space-separated moods of all the n knights in the order of passing them around the table. \"1\" means that the knight is in a good mood an \"0\" means that he is in a bad mood.\n","output_spec":"Print \"YES\" without the quotes if the following month will turn out to be lucky. Otherwise, print \"NO\".\n","notes":null,"sample_inputs":["3\n1 1 1\n","6\n1 0 1 1 1 0\n","6\n1 0 0 1 0 1\n"],"sample_outputs":["YES","YES","NO"],"id":"71-C","difficulty":1600,"tags":["dp","math","number+theory"],"src_uid":"d3a0402de1338a1a542a86ac5b484acc","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int count = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            count++;\n        }\n    }\n    if (count == n || count == 0) {\n        cout << \"YES\";\n    } else {\n        cout << \"NO\";\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String[] s = sc.nextLine().split(\" \");\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = Integer.parseInt(s[i]);\n        }\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == 1) {\n                count++;\n            }\n        }\n        if (count == n || count == 0) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nif n % 2 == 0:\n    if a[0] == 1 and a[n - 1] == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    if a[0] == 1 and a[n - 1] == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na=list(map(int,input().split()))\nif n%2==0:\n    if a[0]==1 and a[n-1]==1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    if a[0]==1 and a[n-1]==0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        string[] s = Console.ReadLine().Split(' ');\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++)\n        {\n            a[i] = int.Parse(s[i]);\n        }\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (a[i] == 1)\n            {\n                count++;\n            }\n        }\n        if (count == n || count == 0)\n        {\n            Console.WriteLine(\"YES\");\n        }\n        else\n        {\n            Console.WriteLine(\"NO\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nif n % 2 == 0\n  puts \"NO\"\nelse\n  if a.count(1) == n \/ 2\n    puts \"YES\"\n  else\n    puts \"NO\"\n  end\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram RoundTable;\n\nuses\n  SysUtils;\n\nvar\n  n, i, j, k, m, s: Integer;\n  a: array[0..100000] of Integer;\n\nbegin\n  Readln(n);\n  for i := 0 to n - 1 do\n    Read(a[i]);\n  s := 0;\n  for i := 0 to n - 1 do\n    if a[i] = 1 then\n      s := s + 1;\n  if s = 0 then\n    Writeln('NO')\n  else\n  begin\n    m := s div 2;\n    for i := 0 to n - 1 do\n      if a[i] = 1 then\n        for j := i + 1 to n - 1 do\n          if a[j] = 1 then\n            for k := j + 1 to n - 1 do\n              if a[k] = 1 then\n                for l := k + 1 to n - 1 do\n                  if a[l] = 1 then\n                    Writeln('YES');\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d \\\", &a[i])\\n    }\\n    if n%2 == 0 {\\n        for i := 0; i < n; i++ {\\n            if a[i] != a[n-i-1] {\\n                fmt.Println(\\\"NO\\\")\\n                return\\n            }\\n        }\\n        fmt.Println(\\\"YES\\\")\\n    } else {\\n        for i := 0; i < n; i++ {\\n            if a[i] != a[n-i-1] {\\n                fmt.Println(\\\"NO\\\")\\n                return\\n            }\\n        }\\n        fmt.Println(\\\"YES\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const n = parseInt(process.stdin.readline().trim());\nconst arr = process.stdin.readline().trim().split(' ').map(x => parseInt(x));\nconst arr2 = arr.slice(0, n - 1);\nconst arr3 = arr.slice(1, n);\nconst arr4 = arr2.concat(arr3);\nconst arr5 = arr4.filter((x, i) => i % 2 === 0);\nconst arr6 = arr4.filter((x, i) => i % 2 !== 0);\nif (arr5.every(x => x === 1) && arr6.every(x => x === 0)) {\n  console.log('YES');\n} else {\n  console.log('NO');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\nif n % 2 == 0:\n    if a[0] == 1 and a[n - 1] == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")\nelse:\n    if a[0] == 1 and a[n - 1] == 0:\n        print(\"YES\")\n    else:\n        print(\"NO\")\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$count = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($arr[$i] == '1') {\n        $count++;\n    }\n}\nif ($count == $n || $count == 0) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto a = std.array.map!(s => s.to!int, std.string.split(std.stdin.readln(), \" \"));\n    int i = 0;\n    int j = 1;\n    int k = 2;\n    int count = 0;\n    while (i < n) {\n        if (a[i] == 1) {\n            count++;\n        }\n        i++;\n        j++;\n        k++;\n        if (j == n) {\n            j = 0;\n        }\n        if (k == n) {\n            k = 0;\n        }\n    }\n    if (count == n) {\n        printf(\" YES \");\n    } else {\n        printf(\" NO \");\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = <STDIN>;\nchomp @a;\n\nmy $count = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] == 1) {\n        $count++;\n    }\n}\n\nif ($count == $n || $count == 0) {\n    print \"YES\\n\";\n} else {\n    print \"NO\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut n = String::new();\n    io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n\n    let mut a = String::new();\n    io::stdin().read_line(&mut a).unwrap();\n    let a: Vec<i32> = a.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut count = 0;\n    for i in 0..n {\n        if a[i] == 1 {\n            count += 1;\n        }\n    }\n\n    if count == n || count == 0 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"D. FreeDiv","description":"Vasya plays FreeDiv. In this game he manages a huge state, which has n cities and m two-way roads between them. Unfortunately, not from every city you can reach any other one moving along these roads. Therefore Vasya decided to divide the state into provinces so that in every province, one could reach from every city all the cities of the province, but there are no roads between provinces. Unlike other turn-based strategies, in FreeDiv a player has the opportunity to build tunnels between cities. The tunnels are two-way roads along which one can move armies undetected by the enemy. However, no more than one tunnel can be connected to each city. As for Vasya, he wants to build a network of tunnels so that any pair of cities in his state were reachable by some path consisting of roads and a tunnels. But at that no more than k tunnels are connected to each province (otherwise, the province will be difficult to keep in case other provinces are captured by enemy armies).Vasya discovered that maybe he will not be able to build such a network for the current condition of the state. Maybe he'll have first to build several roads between cities in different provinces to merge the provinces. Your task is to determine the minimum number of roads Vasya needs to build so that it was possible to build the required network of tunnels in the resulting state.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains three integers n, m and k (1\u2264n,k\u226410^6,0\u2264m\u226410^6). Each of the next m lines contains two integers. They are the numbers of cities connected by a corresponding road. No road connects city to itself and there is at most one road between each pair of cities.\n","output_spec":"Print a single number, the minimum number of additional roads.\n","notes":"In the first example only one province exists, so it is not necessary to build any tunnels or roads.\nIn the second example two provinces exist. It is possible to merge the provinces by building a tunnel between cities 1 and 3.\nIn the third example at least one additional road is necessary. For example it is possible to build additional road between cities 1 and 2 and build two tunnels between cities 1 and 3, 2 and 4 after that.\n","sample_inputs":["3 3 2\n1 2\n2 3\n3 1\n","4 2 2\n1 2\n3 4\n","4 0 2\n"],"sample_outputs":["0","0","1"],"id":"73-D","difficulty":2200,"tags":["dfs+and+similar","graphs","greedy"],"src_uid":"560d70425c765c325f412152c8124d2d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    vector<vector<int>> g(n);\n    for (int i = 0; i < m; i++) {\n        int a, b;\n        cin >> a >> b;\n        g[a - 1].push_back(b - 1);\n        g[b - 1].push_back(a - 1);\n    }\n    vector<int> d(n, -1);\n    d[0] = 0;\n    queue<int> q;\n    q.push(0);\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        for (int v : g[u]) {\n            if (d[v] == -1) {\n                d[v] = d[u] + 1;\n                q.push(v);\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (d[i] != d[j]) {\n                ans++;\n            }\n        }\n    }\n    ans = min(ans, n - 1 - k);\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        int k = Integer.parseInt(input[2]);\n        List<int[]> edges = new ArrayList<>();\n        for (int i = 0; i < m; i++) {\n            input = br.readLine().split(\" \");\n            int a = Integer.parseInt(input[0]);\n            int b = Integer.parseInt(input[1]);\n            edges.add(new int[]{a, b});\n        }\n        Map<Integer, List<Integer>> graph = new HashMap<>();\n        for (int i = 1; i <= n; i++) {\n            graph.put(i, new ArrayList<>());\n        }\n        for (int[] edge : edges) {\n            graph.get(edge[0]).add(edge[1]);\n            graph.get(edge[1]).add(edge[0]);\n        }\n        int[] components = new int[n + 1];\n        int componentCount = 0;\n        for (int i = 1; i <= n; i++) {\n            if (components[i] == 0) {\n                dfs(graph, i, components, componentCount);\n                componentCount++;\n            }\n        }\n        int[] tunnels = new int[componentCount];\n        for (int i = 0; i < m; i++) {\n            int[] edge = edges.get(i);\n            int component1 = components[edge[0]];\n            int component2 = components[edge[1]];\n            if (component1 != component2) {\n                tunnels[component1]++;\n                tunnels[component2]++;\n            }\n        }\n        int minTunnels = Integer.MAX_VALUE;\n        for (int i = 0; i < componentCount; i++) {\n            minTunnels = Math.min(minTunnels, tunnels[i] - k);\n        }\n        System.out.println(minTunnels);\n    }\n\n    private static void dfs(Map<Integer, List<Integer>> graph, int node, int[] components, int componentCount) {\n        components[node] = componentCount;\n        for (int neighbor : graph.get(node)) {\n            if (components[neighbor] == 0) {\n                dfs(graph, neighbor, components, componentCount);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,k=map(int,input().split())\na=[[0]*n for i in range(n)]\nfor i in range(m):\n    x,y=map(int,input().split())\n    a[x-1][y-1]=1\n    a[y-1][x-1]=1\n\ndef dfs(i,j,c):\n    if i==j:\n        return c\n    for k in range(n):\n        if a[i][k]==1 and k!=j:\n            c+=1\n            return dfs(k,j,c)\n    return -1\n\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if a[i][j]==0:\n            ans=max(ans,dfs(i,j,0))\nprint(ans-k)\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var nmk = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var g = new Graph(nmk[0]);\n        for (int i = 0; i < nmk[1]; i++)\n        {\n            var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n            g.AddEdge(a[0], a[1]);\n        }\n        var ans = 0;\n        for (int i = 0; i < nmk[0]; i++)\n        {\n            var s = new HashSet<int>();\n            var q = new Queue<int>();\n            q.Enqueue(i);\n            s.Add(i);\n            while (q.Count > 0)\n            {\n                var v = q.Dequeue();\n                for (int j = 0; j < g.adj[v].Count; j++)\n                {\n                    var u = g.adj[v][j];\n                    if (!s.Contains(u))\n                    {\n                        s.Add(u);\n                        q.Enqueue(u);\n                    }\n                }\n            }\n            if (s.Count < nmk[0])\n            {\n                ans++;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n\n    class Graph\n    {\n        public int V;\n        public List<int>[] adj;\n\n        public Graph(int V)\n        {\n            this.V = V;\n            adj = new List<int>[V];\n            for (int i = 0; i < V; i++)\n            {\n                adj[i] = new List<int>();\n            }\n        }\n\n        public void AddEdge(int u, int v)\n        {\n            adj[u].Add(v);\n            adj[v].Add(u);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,k=map(int,input().split())\n\ng={}\nfor i in range(m):\n    a,b=map(int,input().split())\n    if a not in g:\n        g[a]=[b]\n    else:\n        g[a].append(b)\n    if b not in g:\n        g[b]=[a]\n    else:\n        g[b].append(a)\n\nans=0\nfor i in range(n):\n    if len(g[i])>k:\n        ans+=len(g[i])-k\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  n, m, k, i, j, a, b, c, d, ans: Integer;\n  g: array[0..1000000] of array[0..1000000] of Boolean;\n  p: array[0..1000000] of Integer;\n  used: array[0..1000000] of Boolean;\n\nprocedure dfs(v: Integer);\nvar\n  i: Integer;\nbegin\n  used[v] := True;\n  for i := 0 to n - 1 do\n    if g[v][i] and not used[i] then\n      dfs(i);\nend;\n\nbegin\n  readln(n, m, k);\n  for i := 0 to n - 1 do\n    for j := 0 to n - 1 do\n      g[i][j] := False;\n  for i := 0 to m - 1 do\n  begin\n    readln(a, b);\n    g[a - 1][b - 1] := True;\n    g[b - 1][a - 1] := True;\n  end;\n  for i := 0 to n - 1 do\n    p[i] := -1;\n  for i := 0 to n - 1 do\n    if not used[i] then\n    begin\n      dfs(i);\n      ans := ans + 1;\n    end;\n  for i := 0 to n - 1 do\n    for j := 0 to n - 1 do\n      if g[i][j] and not used[i] and not used[j] then\n      begin\n        c := 0;\n        for d := 0 to n - 1 do\n          if used[d] then\n            c := c + 1;\n        if c > k then\n          ans := ans + 1;\n      end;\n  writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, k int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &m, &k)\\n    g := make([][]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var a, b int\\n        fmt.Scanf(\\\"%d%d\\\", &a, &b)\\n        g[a] = append(g[a], b)\\n        g[b] = append(g[b], a)\\n    }\\n    ans := 0\\n    for i := 1; i <= n; i++ {\\n        if len(g[i]) > k {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst k = parseInt(input[0].split(' ')[2]);\nconst graph = new Map();\nfor (let i = 0; i < m; i++) {\n    const [a, b] = input[i + 1].split(' ').map(Number);\n    if (!graph.has(a)) {\n        graph.set(a, []);\n    }\n    graph.get(a).push(b);\n    if (!graph.has(b)) {\n        graph.set(b, []);\n    }\n    graph.get(b).push(a);\n}\nconst ans = 0;\nfor (const [a, bs] of graph.entries()) {\n    if (bs.length > k) {\n        ans += bs.length - k;\n    }\n}\nconsole.log(ans);\"}]}","Kotlin":"","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$graph = [];\nfor ($i = 0; $i < $m; $i++) {\n    $a, $b = explode(' ', trim(fgets(STDIN)));\n    $graph[$a][] = $b;\n    $graph[$b][] = $a;\n}\n$ans = 0;\n$visited = [];\nfunction dfs($v, $p) {\n    global $graph, $visited, $ans;\n    $visited[$v] = true;\n    foreach ($graph[$v] as $u) {\n        if ($u == $p) {\n            continue;\n        }\n        if ($visited[$u]) {\n            $ans++;\n        } else {\n            dfs($u, $v);\n        }\n    }\n}\nfor ($i = 1; $i <= $n; $i++) {\n    if (!isset($visited[$i])) {\n        dfs($i, 0);\n    }\n}\necho $ans;\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\nmy @a;\n\nwhile (<>) {\n    chomp;\n    my @t = split;\n    $n = $t[0];\n    $m = $t[1];\n    $k = $t[2];\n}\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp;\n    my @t = split;\n    $a[$t[0] - 1]++;\n    $a[$t[1] - 1]++;\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] > $k) {\n        $ans++;\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m, k) = read_input();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (a, b) = read_input();\n        graph.entry(a).or_insert(vec![]).push(b);\n        graph.entry(b).or_insert(vec![]).push(a);\n    }\n\n    let mut provinces = vec![];\n    for i in 0..n {\n        if !provinces.contains(&i) {\n            let mut province = vec![i];\n            let mut queue = vec![i];\n            while !queue.is_empty() {\n                let v = queue.pop().unwrap();\n                for &w in &graph[&v] {\n                    if !province.contains(&w) {\n                        province.push(w);\n                        queue.push(w);\n                    }\n                }\n            }\n            provinces.push(province);\n        }\n    }\n\n    let mut tunnels = 0;\n    for province in provinces {\n        let mut tunnels_in_province = 0;\n        for &v in &province {\n            tunnels_in_province += graph[&v].len();\n        }\n        if tunnels_in_province > k {\n            tunnels += tunnels_in_province - k;\n        }\n    }\n\n    println!(\"{}\", tunnels);\n}\n\nfn read_input() -> (usize, usize, usize) {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut tokens = input.split_whitespace();\n    let n = tokens.next().unwrap().parse().unwrap();\n    let m = tokens.next().unwrap().parse().unwrap();\n    let k = tokens.next().unwrap().parse().unwrap();\n    (n, m, k)\n}\n\"\"\"}]"}
{"title":"E. Morrowindows","description":"Vasya plays The Elder Trolls III: Morrowindows. He has a huge list of items in the inventory, however, there is no limits on the size of things. Vasya does not know the total amount of items but he is sure that are not more than x and not less than 2 items in his inventory. A new patch for the game appeared to view inventory in n different modes. Displaying in mode i is a partition of all inventory items on pages, each of which (except for maybe the last one) shows exactly ai items. In addition, each mode shows how many pages bi is in a complete list. Great! Perhaps this information will be enough for Vasya to find the required number. Moreover, it is very interesting, what is the fewest number of modes in which Vasya can see inventory to determine the number of items in it?Vasya cannot use the information that was received while looking on inventory in some mode for selection of next actions. I. e. Vasya chooses some set of modes first, and then sees all the results and determines the size.Knowing the number of ai, x and assuming that Vasya is very smart, check whether he can uniquely determine the number of items in his inventory, and how many modes he will need to do that if he knows numbers ai, x and he is able to know number bi after viewing items in mode i.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and x (0\u2264n\u226410^5,2\u2264x\u226410^9). The second line contains integers ai (1\u2264ai\u226410^9). Some numbers among all ai may be equal.\n","output_spec":"Output the fewest amount of modes required to uniquely determine amount of items in the inventory. If there is no solution output -1.\n","notes":"In the second example Vasya is not able to determine items count uniquely because 3 items, as well as 4 items, can be displayed on two pages.\n","sample_inputs":["2 4\n2 3\n","1 4\n2\n"],"sample_outputs":["2\n","-1\n"],"id":"73-E","difficulty":2400,"tags":["math","number+theory"],"src_uid":"0f49b4a5696ee71ebbc8f83d1ec3b901","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, x;\n    cin >> n >> x;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i != j && a[i] == a[j]) {\n                ans = -1;\n                break;\n            }\n        }\n        if (ans == -1) {\n            break;\n        }\n    }\n    if (ans == -1) {\n        cout << -1 << endl;\n    } else {\n        int m = 0;\n        for (int i = 0; i < n; i++) {\n            m = max(m, a[i]);\n        }\n        int k = 0;\n        for (int i = 0; i < n; i++) {\n            if (a[i] == m) {\n                k++;\n            }\n        }\n        cout << k << endl;\n    }\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int x = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if (i != j && a[i] == a[j]) {\n                    ans = -1;\n                    break;\n                }\n            }\n            if (ans == -1) {\n                break;\n            }\n        }\n        if (ans == -1) {\n            System.out.println(-1);\n        } else {\n            int max = 0;\n            for (int i = 0; i < n; i++) {\n                max = Math.max(max, a[i]);\n            }\n            int min = 2;\n            for (int i = 0; i < n; i++) {\n                min = Math.min(min, a[i]);\n            }\n            int mid = (max + min) \/ 2;\n            int cnt = 0;\n            for (int i = 0; i < n; i++) {\n                if (a[i] > mid) {\n                    cnt++;\n                }\n            }\n            System.out.println(cnt);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,x=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nans=0\nfor i in range(n):\n    if a[i]==1:\n        ans+=1\n        continue\n    if a[i]==2:\n        ans+=1\n        continue\n    if a[i]==x:\n        ans+=1\n        continue\n    if a[i]<x:\n        ans+=2\n        continue\n    if a[i]>x:\n        ans=-1\n        break\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int n, x, i, j, k, m, a[100000], b[100000], c[100000], d[100000], e[100000], f[100000], g[100000], h[100000], p[100000], q[100000], r[100000], s[100000], t[100000], u[100000], v[100000], w[100000], y[100000], z[100000];\n    scanf(\" %d %d \", &n, &x);\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    for (i = 0; i < n; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    for (i = 0; i < n; i++) {\n        c[i] = a[i] * b[i];\n    }\n    for (i = 0; i < n; i++) {\n        d[i] = c[i] - 1;\n    }\n    for (i = 0; i < n; i++) {\n        e[i] = d[i] \/ x;\n    }\n    for (i = 0; i < n; i++) {\n        f[i] = d[i] % x;\n    }\n    for (i = 0; i < n; i++) {\n        g[i] = e[i] + 1;\n    }\n    for (i = 0; i < n; i++) {\n        h[i] = f[i] + 1;\n    }\n    for (i = 0; i < n; i++) {\n        p[i] = g[i] * x;\n    }\n    for (i = 0; i < n; i++) {\n        q[i] = h[i] * x;\n    }\n    for (i = 0; i < n; i++) {\n        r[i] = p[i] - c[i];\n    }\n    for (i = 0; i < n; i++) {\n        s[i] = q[i] - c[i];\n    }\n    for (i = 0; i < n; i++) {\n        t[i] = r[i] \/ x;\n    }\n    for (i = 0; i < n; i++) {\n        u[i] = s[i] \/ x;\n    }\n    for (i = 0; i < n; i++) {\n        v[i] = t[i] + 1;\n    }\n    for (i = 0; i < n; i++) {\n        w[i] = u[i] + 1;\n    }\n    for (i = 0; i < n; i++) {\n        y[i] = v[i] * x;\n    }\n    for (i = 0; i < n; i++) {\n        z[i] = w[i] * x;\n    }\n    int min = 1000000000;\n    for (i = 0; i < n; i++) {\n        if (min > y[i]) {\n            min = y[i];\n        }\n    }\n    for (i = 0; i < n; i++) {\n        if (min > z[i]) {\n            min = z[i];\n        }\n    }\n    printf(\" %d \", min);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var x = int.Parse(input[1]);\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n        var b = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            b.Add(a[i] * (a[i] - 1) \/ 2);\n        }\n        var s = b.Sum();\n        var ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            if (s - b[i] >= x)\n            {\n                ans++;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,x=gets.split.map(&:to_i)\na=gets.split.map(&:to_i)\n\ndef check(a,x)\n    for i in 0..(x-1)\n        if a.count(i)>1\n            return false\n        end\n    end\n    return true\nend\n\nif check(a,x)\n    print(1)\nelse\n    print(-1)\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t;\nconst\n  maxn = 100000;\nvar\n  n, x, i, j, k, m, a, b, ans: integer;\n  f: array[0..maxn] of boolean;\nbegin\n  readln(n, x);\n  for i := 1 to n do\n  begin\n    readln(a);\n    f[a] := true;\n  end;\n  for i := 1 to x do\n  begin\n    if not f[i] then\n    begin\n      ans := -1;\n      break;\n    end;\n  end;\n  if ans = -1 then\n    writeln(-1)\n  else\n  begin\n    m := 0;\n    for i := 1 to x do\n    begin\n      if f[i] then\n      begin\n        m := m + 1;\n      end;\n    end;\n    writeln(m);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"sort\"\n)\n\nfunc main() {\n\tvar n, x int\n\tfmt.Scanf(\" %d %d \", &n, &x)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &a[i])\n\t}\n\tsort.Ints(a)\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tif a[i] == 1 {\n\t\t\tans++\n\t\t} else {\n\t\t\tif a[i] > x {\n\t\t\t\tfmt.Println(-1)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tif a[i] == x {\n\t\t\t\tans++\n\t\t\t} else {\n\t\t\t\tans += 2\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst b = new Array(n).fill(0);\nfor (let i = 0; i < n; i++) {\n    b[i] = parseInt(stdin[i + 2]);\n}\nconst dp = new Array(x + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= x; i++) {\n    for (let j = 0; j < n; j++) {\n        if (i >= a[j] && b[j] > 0) {\n            dp[i] = Math.max(dp[i], dp[i - a[j]] + b[j]);\n        }\n    }\n}\nconsole.log(dp[x] > 1 ? -1 : dp[x]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, x) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    val b = IntArray(n)\n    for (i in 0 until n) {\n        b[i] = a[i] * (i + 1)\n    }\n    val dp = Array(x + 1) { IntArray(n + 1) { -1 } }\n    dp[0][0] = 0\n    for (i in 1..x) {\n        for (j in 0..n) {\n            for (k in 0..j) {\n                if (dp[i - a[k]][j - k] != -1) {\n                    dp[i][j] = Math.max(dp[i][j], dp[i - a[k]][j - k] + 1)\n                }\n            }\n        }\n    }\n    val ans = dp[x][n]\n    if (ans == -1) {\n        println(-1)\n    } else {\n        println(ans)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = intval($input[0]);\n$x = intval($input[1]);\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$b = array_fill(0, $n, 0);\nfor ($i = 0; $i < $n; $i++) {\n    $b[$i] = intval(fgets(STDIN));\n}\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n        if ($i != $j && $a[$i] == $a[$j] && $b[$i] != $b[$j]) {\n            $ans = -1;\n            break;\n        }\n    }\n    if ($ans == -1) {\n        break;\n    }\n}\nif ($ans == -1) {\n    echo -1;\n} else {\n    echo $ans;\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, x;\n    scanf(\" %d %d \", &n, &x);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    int m = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == 1) {\n            m++;\n        } else {\n            ans = max(ans, m + 1);\n            m = 0;\n        }\n    }\n    ans = max(ans, m + 1);\n    if (ans > x) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %d \", ans);\n    }\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $x;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $x) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $ans = 0;\nmy $i = 0;\nmy $j = 0;\nmy $k = 0;\n\nwhile ($i < $n) {\n    while ($j < $n) {\n        if ($a[$j] > $x) {\n            $j++;\n            next;\n        }\n        if ($a[$j] < $a[$i]) {\n            $j++;\n            next;\n        }\n        if ($a[$j] == $a[$i]) {\n            $j++;\n            next;\n        }\n        if ($a[$j] + $a[$i] == $x) {\n            $ans++;\n            $i++;\n            $j++;\n        } else {\n            $j++;\n        }\n    }\n}\n\nif ($ans == 0) {\n    print \"-1\\n\";\n} else {\n    print \"$ans\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut nx = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    let n = nx[0];\n    let x = nx[1];\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    let mut ai = line.split_whitespace().map(|x| x.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n    let mut ans = 0;\n    for i in 0..n {\n        let mut j = 0;\n        while j < x {\n            if ai[i] <= j {\n                break;\n            }\n            j += ai[i];\n        }\n        if j == x {\n            ans += 1;\n        }\n    }\n    if ans == 0 {\n        println!(\"-1\");\n    } else {\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"A. Room Leader","description":"Let us remind you part of the rules of Codeforces. The given rules slightly simplified, use the problem statement as a formal document.In the beginning of the round the contestants are divided into rooms. Each room contains exactly n participants. During the contest the participants are suggested to solve five problems, A, B, C, D and E. For each of these problem, depending on when the given problem was solved and whether it was solved at all, the participants receive some points. Besides, a contestant can perform hacks on other contestants. For each successful hack a contestant earns 100 points, for each unsuccessful hack a contestant loses 50 points. The number of points for every contestant is represented by the sum of points he has received from all his problems, including hacks.You are suggested to determine the leader for some room; the leader is a participant who has maximum points.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n, which is the number of contestants in the room (1\u2264n\u226450). The next n lines contain the participants of a given room. The i-th line has the format of \"handlei plusi minusi ai bi ci di ei\" \u2014 it is the handle of a contestant, the number of successful hacks, the number of unsuccessful hacks and the number of points he has received from problems A, B, C, D, E correspondingly. The handle of each participant consists of Latin letters, digits and underscores and has the length from 1 to 20 characters. There are the following limitations imposed upon the numbers: \n  0\u2264plusi,minusi\u226450;  150\u2264ai\u2264500 or ai=0, if problem A is not solved;  300\u2264bi\u22641000 or bi=0, if problem B is not solved;  450\u2264ci\u22641500 or ci=0, if problem C is not solved;  600\u2264di\u22642000 or di=0, if problem D is not solved;  750\u2264ei\u22642500 or ei=0, if problem E is not solved. All the numbers are integer. All the participants have different handles. It is guaranteed that there is exactly one leader in the room (i.e. there are no two participants with the maximal number of points).\n","output_spec":"Print on the single line the handle of the room leader.\n","notes":"The number of points that each participant from the example earns, are as follows: \n  Petr \u2014 3860  tourist \u2014 4140  Egor \u2014 4030  c00lH4x0R \u2014 -350  some_participant \u2014 2220 Thus, the leader of the room is tourist.\n","sample_inputs":["5\nPetr 3 1 490 920 1000 1200 0\ntourist 2 0 490 950 1100 1400 0\nEgor 7 0 480 900 950 0 1000\nc00lH4x0R 0 10 150 0 0 0 0\nsome_participant 2 1 450 720 900 0 0\n"],"sample_outputs":["tourist"],"id":"74-A","difficulty":1000,"tags":["implementation"],"src_uid":"b9dacff0cab78595296d697d22dce5d9","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int max_points = 0;\n    string max_handle;\n    for (int i = 0; i < n; i++) {\n        string handle;\n        int plus, minus;\n        int a, b, c, d, e;\n        cin >> handle >> plus >> minus >> a >> b >> c >> d >> e;\n        int points = plus * 100 - minus * 50 + a + b + c + d + e;\n        if (points > max_points) {\n            max_points = points;\n            max_handle = handle;\n        }\n    }\n    cout << max_handle << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int max = 0;\n        String leader = \"\";\n        for (int i = 0; i < n; i++) {\n            String handle = sc.next();\n            int plus = sc.nextInt();\n            int minus = sc.nextInt();\n            int a = sc.nextInt();\n            int b = sc.nextInt();\n            int c = sc.nextInt();\n            int d = sc.nextInt();\n            int e = sc.nextInt();\n            int points = plus * 100 - minus * 50 + a + b + c + d + e;\n            if (points > max) {\n                max = points;\n                leader = handle;\n            }\n        }\n        System.out.println(leader);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\nans = 0\nans_name = \"\"\n\nfor i in range(n):\n    name, plus, minus, a, b, c, d, e = input().split()\n    points = int(a) + int(b) + int(c) + int(d) + int(e) + int(plus) - int(minus)\n    if points > ans:\n        ans = points\n        ans_name = name\n\nprint(ans_name)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, i, j, max = 0, max_id = 0;\n    scanf(\" %d \", &n);\n    int a[n][6];\n    for (i = 0; i < n; i++) {\n        scanf(\" %s %d %d %d %d %d %d \", a[i], &a[i][1], &a[i][2], &a[i][3], &a[i][4], &a[i][5], &a[i][6]);\n    }\n    for (i = 0; i < n; i++) {\n        int sum = 0;\n        for (j = 0; j < 6; j++) {\n            sum += a[i][j];\n        }\n        if (sum > max) {\n            max = sum;\n            max_id = i;\n        }\n    }\n    printf(\" %s \", a[max_id]);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        List<string>[] participants = new List<string>[5];\n        for (int i = 0; i < n; i++)\n        {\n            string[] line = Console.ReadLine().Split(' ');\n            string handle = line[0];\n            int plus = int.Parse(line[1]);\n            int minus = int.Parse(line[2]);\n            participants[0].Add(handle);\n            participants[1].Add(plus.ToString());\n            participants[2].Add(minus.ToString());\n            participants[3].Add(line[3]);\n            participants[4].Add(line[4]);\n        }\n        int max = 0;\n        string leader = \"\";\n        for (int i = 0; i < n; i++)\n        {\n            int points = int.Parse(participants[3][i]) + int.Parse(participants[4][i]) + int.Parse(participants[1][i]) - int.Parse(participants[2][i]);\n            if (points > max)\n            {\n                max = points;\n                leader = participants[0][i];\n            }\n        }\n        Console.WriteLine(leader);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nans = \"\"\n\nfor i in 1..n do\n    a = gets.split(\" \")\n    h = a[0]\n    p = a[1].to_i\n    m = a[2].to_i\n    s = a[3].to_i\n    t = a[4].to_i\n    u = a[5].to_i\n    v = a[6].to_i\n\n    sum = p + m + s + t + u + v\n\n    if sum > ans.to_i\n        ans = h\n    end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Codeforces;\n\nuses\n  SysUtils;\n\nconst\n  N = 50;\n\nvar\n  n, i, j: Integer;\n  a, b, c, d, e: Array[1..N] of Integer;\n  plus, minus: Array[1..N] of Integer;\n  handle: Array[1..N] of String;\n  max: Integer;\n  leader: String;\n\nbegin\n  Readln(n);\n  for i := 1 to n do\n  begin\n    Readln(handle[i], plus[i], minus[i], a[i], b[i], c[i], d[i], e[i]);\n  end;\n\n  max := 0;\n  for i := 1 to n do\n  begin\n    s := a[i] + b[i] + c[i] + d[i] + e[i] + 100 * plus[i] - 50 * minus[i];\n    if s > max then\n    begin\n      max := s;\n      leader := handle[i];\n    end;\n  end;\n\n  Writeln(leader);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var m map[string]int\\n    for i := 0; i < n; i++ {\\n        var name, plus, minus, a, b, c, d, e string\\n        fmt.Scanf(\\\"%s %d %d %d %d %d %d %d\\\\n\\\", &name, &plus, &minus, &a, &b, &c, &d, &e)\\n        m[name] = plus*100 - minus*50 + a + b + c + d + e\\n    }\\n    max := 0\\n    ans := \\\"\\\"\\n    for k, v := range m {\\n        if v > max {\\n            max = v\\n            ans = k\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst participants = [];\nfor (let i = 1; i <= n; i++) {\n  const participant = stdin[i].split(' ');\n  participants.push({\n    handle: participant[0],\n    plus: parseInt(participant[1]),\n    minus: parseInt(participant[2]),\n    a: parseInt(participant[3]),\n    b: parseInt(participant[4]),\n    c: parseInt(participant[5]),\n    d: parseInt(participant[6]),\n    e: parseInt(participant[7]),\n  });\n}\n\nconst maxPoints = participants.reduce((acc, participant) => {\n  const points = participant.a + participant.b + participant.c + participant.d + participant.e;\n  return Math.max(acc, points + participant.plus - participant.minus);\n}, 0);\n\nconst leader = participants.find(participant => participant.points === maxPoints);\nconsole.log(leader.handle);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine().toInt()\n    val participants = mutableListOf<Participant>()\n    for (i in 0 until n) {\n        val line = readLine().split(\" \")\n        val handle = line[0]\n        val plus = line[1].toInt()\n        val minus = line[2].toInt()\n        val a = line[3].toInt()\n        val b = line[4].toInt()\n        val c = line[5].toInt()\n        val d = line[6].toInt()\n        val e = line[7].toInt()\n        participants.add(Participant(handle, plus, minus, a, b, c, d, e))\n    }\n    val max = participants.maxBy { it.points }\n    println(max.handle)\n}\n\ndata class Participant(\n    val handle: String,\n    val plus: Int,\n    val minus: Int,\n    val a: Int,\n    val b: Int,\n    val c: Int,\n    val d: Int,\n    val e: Int\n) {\n    val points: Int\n        get() = plus * 100 - minus * 50 + a + b + c + d + e\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $arr[] = explode(\" \", trim(fgets(STDIN)));\n}\n$max = 0;\n$max_handle = \"\";\nfor ($i = 0; $i < $n; $i++) {\n    $points = 0;\n    $points += $arr[$i][3];\n    $points += $arr[$i][4];\n    $points += $arr[$i][5];\n    $points += $arr[$i][6];\n    $points += $arr[$i][7];\n    $points += $arr[$i][1] * 100;\n    $points -= $arr[$i][2] * 50;\n    if ($points > $max) {\n        $max = $points;\n        $max_handle = $arr[$i][0];\n    }\n}\necho $max_handle;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int[n] a;\n    int[n] b;\n    int[n] c;\n    int[n] d;\n    int[n] e;\n    int[n] p;\n    int[n] m;\n    int[n] h;\n    int[n] s;\n    int[n] t;\n    int[n] u;\n    int[n] v;\n    int[n] w;\n    int[n] x;\n    int[n] y;\n    int[n] z;\n    int[n] max = 0;\n    int[n] max_index = 0;\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s %d %d %d %d %d %d \", a[i], b[i], c[i], d[i], e[i], p[i], m[i]);\n        h[i] = a[i] + b[i] + c[i] + d[i] + e[i];\n        s[i] = p[i] + m[i];\n        t[i] = h[i] + s[i];\n        u[i] = t[i] - 50 * m[i];\n        v[i] = u[i] - 100 * p[i];\n        w[i] = v[i] - 150 * b[i];\n        x[i] = w[i] - 300 * c[i];\n        y[i] = x[i] - 450 * d[i];\n        z[i] = y[i] - 750 * e[i];\n        if (z[i] > max) {\n            max = z[i];\n            max_index = i;\n        }\n    }\n    printf(\" %s \", a[max_index]);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <STDIN>;\\nmy @arr = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my @line = split(\/ \/, <STDIN>);\\n    push(@arr, [@line]);\\n}\\n\\nmy $max = 0;\\nmy $max_handle = \\\"\\\";\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $points = 0;\\n    $points += $arr[$i][3] + $arr[$i][4] + $arr[$i][5] + $arr[$i][6] + $arr[$i][7];\\n    $points += 100 * $arr[$i][0] - 50 * $arr[$i][1];\\n    if ($points > $max) {\\n        $max = $points;\\n        $max_handle = $arr[$i][0];\\n    }\\n}\\n\\nprint $max_handle;\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n = read!();\n    let mut max_points = 0;\n    let mut max_handle = String::new();\n    for _ in 0..n {\n        let mut line = read!();\n        let mut handle = line.split_whitespace().next().unwrap();\n        let mut plus = line.split_whitespace().nth(1).unwrap().parse::<i32>().unwrap();\n        let mut minus = line.split_whitespace().nth(2).unwrap().parse::<i32>().unwrap();\n        let mut a = line.split_whitespace().nth(3).unwrap().parse::<i32>().unwrap();\n        let mut b = line.split_whitespace().nth(4).unwrap().parse::<i32>().unwrap();\n        let mut c = line.split_whitespace().nth(5).unwrap().parse::<i32>().unwrap();\n        let mut d = line.split_whitespace().nth(6).unwrap().parse::<i32>().unwrap();\n        let mut e = line.split_whitespace().nth(7).unwrap().parse::<i32>().unwrap();\n        let points = a + b + c + d + e + plus - minus;\n        if points > max_points {\n            max_points = points;\n            max_handle = handle;\n        }\n    }\n    println!(\"{}\", max_handle);\n}\n\"\"\"}]"}
{"title":"C. Chessboard Billiard","description":"Let's imagine: there is a chess piece billiard ball. Its movements resemble the ones of a bishop chess piece. The only difference is that when a billiard ball hits the board's border, it can reflect from it and continue moving.More formally, first one of four diagonal directions is chosen and the billiard ball moves in that direction. When it reaches the square located on the board's edge, the billiard ball reflects from it; it changes the direction of its movement by 90 degrees and continues moving. Specifically, having reached a corner square, the billiard ball is reflected twice and starts to move the opposite way. While it moves, the billiard ball can make an infinite number of reflections. At any square of its trajectory the billiard ball can stop and on that the move is considered completed. It is considered that one billiard ball a beats another billiard ball b if a can reach a point where b is located.You are suggested to find the maximal number of billiard balls, that pairwise do not beat each other and that can be positioned on a chessboard n\u00d7m in size.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (2\u2264n,m\u226410^6).\n","output_spec":"Print a single number, the maximum possible number of billiard balls that do not pairwise beat each other.\nPlease do not use the %lld specificator to read or write 64-bit numbers in C++. It is preferred to use cin (also you may use the %I64d specificator).\n","notes":null,"sample_inputs":["3 4\n","3 3\n"],"sample_outputs":["2","3"],"id":"74-C","difficulty":2100,"tags":["dfs+and+similar","dsu","graphs","number+theory"],"src_uid":"05f251de93536024c05fbd77ed01b70b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, m;\n    cin >> n >> m;\n    int ans = 0;\n    if (n == 1) {\n        ans = m;\n    } else if (m == 1) {\n        ans = n;\n    } else {\n        ans = min(n, m);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                if (i % 2 == 1 && j % 2 == 1) {\n                    ans++;\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\ndef check(x, y):\n    if x < 0 or x >= n or y < 0 or y >= m:\n        return False\n    return True\n\ndef dfs(x, y, cnt):\n    if cnt > 2:\n        return\n    for i in range(4):\n        nx = x + dx[i]\n        ny = y + dy[i]\n        if check(nx, ny):\n            dfs(nx, ny, cnt + 1)\n\ndx = [1, 1, -1, -1]\ndy = [1, -1, 1, -1]\n\nans = 0\nfor i in range(n):\n    for j in range(m):\n        dfs(i, j, 1)\n        ans = max(ans, 2)\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 1; j <= m; j++) {\n            if (i % 2 == 1 && j % 2 == 1) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n\n        var ans = 0;\n        for (var i = 0; i < n; i++)\n        {\n            for (var j = 0; j < m; j++)\n            {\n                var count = 0;\n                for (var k = 0; k < 4; k++)\n                {\n                    var x = i + dx[k];\n                    var y = j + dy[k];\n                    if (x >= 0 && x < n && y >= 0 && y < m)\n                    {\n                        count++;\n                    }\n                }\n                ans = Math.Max(ans, count);\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n\n    private static readonly int[] dx = { 1, 1, -1, -1 };\n    private static readonly int[] dy = { 1, -1, 1, -1 };\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\nans = 0\n\nfor i in 1..n\n  for j in 1..m\n    if i % 2 == 1 && j % 2 == 1\n      ans += 1\n    end\n  end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"math\"\r\n)\r\n\r\nfunc main() {\r\n\tvar n, m int\r\n\tfmt.Scan(&n, &m)\r\n\tfmt.Println(int(math.Min(float64(n), float64(m))))\r\n}\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst m = parseInt(stdin[1]);\nconst ans = Math.min(n, m);\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.max\n\nfun main() {\n    val (n, m) = readLine()!!.split(\" \").map { it.toInt() }\n    val ans = max(n, m) - 1\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n$m = (int)trim(fgets(STDIN));\\n\\n$ans = 0;\\n\\nfor ($i = 1; $i <= $n; $i++) {\\n    for ($j = 1; $j <= $m; $j++) {\\n        $x = $i + $j - 1;\\n        $y = $i - $j + 1;\\n        if ($x <= $n && $y <= $m) {\\n            $ans++;\\n        }\\n    }\\n}\\n\\necho $ans;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [n, m] = readln.split().map!(to!int).array;\n    auto ans = 0;\n    for (auto i = 0; i < n; i++) {\n        for (auto j = 0; j < m; j++) {\n            auto s = 0;\n            for (auto k = 0; k < 4; k++) {\n                auto x = i + (k % 2) * 2 - 1;\n                auto y = j + (k \/ 2) * 2 - 1;\n                if (x >= 0 && x < n && y >= 0 && y < m) {\n                    s++;\n                }\n            }\n            ans = max(ans, s);\n        }\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(\/ \/, $line);\n\nmy $ans = 0;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 1; $j <= $m; $j++) {\n        my $cnt = 0;\n        for (my $k = 1; $k <= $n; $k++) {\n            for (my $l = 1; $l <= $m; $l++) {\n                if ($i != $k && $j != $l && abs($i - $k) == abs($j - $l)) {\n                    $cnt++;\n                }\n            }\n        }\n        $ans = max($ans, $cnt);\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut n = 0;\n    let mut m = 0;\n    for c in input.chars() {\n        if c == ' ' {\n            n = n * 10 + c.to_digit(10).unwrap();\n        } else {\n            m = m * 10 + c.to_digit(10).unwrap();\n        }\n    }\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..m {\n            if i % 2 == 0 && j % 2 == 0 {\n                ans += 1;\n            } else if i % 2 == 1 && j % 2 == 1 {\n                ans += 1;\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. New Year and Hurry","description":"Limak is going to participate in a contest on the last day of the 2016. The contest will start at 20:00 and will last four hours, exactly until midnight. There will be n problems, sorted by difficulty, i.e. problem 1 is the easiest and problem n is the hardest. Limak knows it will take him 5\u00b7i minutes to solve the i-th problem.Limak's friends organize a New Year's Eve party and Limak wants to be there at midnight or earlier. He needs k minutes to get there from his house, where he will participate in the contest first.How many problems can Limak solve if he wants to make it to the party?","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The only line of the input contains two integers n and k (1\u2264n\u226410, 1\u2264k\u2264240)\u00a0\u2014 the number of the problems in the contest and the number of minutes Limak needs to get to the party from his house.\n","output_spec":"Print one integer, denoting the maximum possible number of problems Limak can solve so that he could get to the party at midnight or earlier.\n","notes":"In the first sample, there are 3 problems and Limak needs 222 minutes to get to the party. The three problems require 5, 10 and 15 minutes respectively. Limak can spend 5+10=15 minutes to solve first two problems. Then, at 20:15 he can leave his house to get to the party at 23:57 (after 222 minutes). In this scenario Limak would solve 2 problems. He doesn't have enough time to solve 3 problems so the answer is 2.\nIn the second sample, Limak can solve all 4 problems in 5+10+15+20=50 minutes. At 20:50 he will leave the house and go to the party. He will get there exactly at midnight.\nIn the third sample, Limak needs only 1 minute to get to the party. He has enough time to solve all 7 problems.\n","sample_inputs":["3 222\n","4 190\n","7 1\n"],"sample_outputs":["2\n","4\n","7\n"],"id":"750-A","difficulty":800,"tags":["binary+search","brute+force","implementation","math"],"src_uid":"41e554bc323857be7b8483ee358a35e2","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n\n    int t = 240 - k;\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        t -= 5 * i;\n        if (t >= 0) {\n            ans++;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Limak {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int k = scanner.nextInt();\n        int time = 240 - k;\n        int max = 0;\n        for (int i = 1; i <= n; i++) {\n            int problemTime = 5 * i;\n            if (problemTime <= time) {\n                max = i;\n            }\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\n\nif n * 5 + k >= 240:\n    print(n - 1)\nelse:\n    print(n)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, k; scanf(\" %d %d \", &n, &k); if (n * 5 + k <= 240) printf(\" %d \", n); else printf(\" %d \", 240 - k \/ 5);\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace Limak\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int k = int.Parse(input[1]);\n            int time = 240 - k;\n            int max = 0;\n            for (int i = 1; i <= n; i++)\n            {\n                int problemTime = 5 * i;\n                if (problemTime <= time)\n                {\n                    max = i;\n                }\n            }\n            Console.WriteLine(max);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\n\nif n * 5 + k > 240\n  puts n - 1\nelse\n  puts n\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Limak;\nuses SysUtils;\nvar\n  n, k, i, j, t: Integer;\nbegin\n  Readln(n, k);\n  t := 20 * 60;\n  for i := 1 to n do\n  begin\n    t := t - 5 * i;\n    if t < k then\n      break;\n  end;\n  Writeln(i);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    var n, k int\n    fmt.Scanf(\" %d %d \", &n, &k)\n    t := 240 - k\n    ans := 0\n    for i := 1; i <= n; i++ {\n        if t >= 5*i {\n            t -= 5*i\n            ans++\n        }\n    }\n    fmt.Println(ans)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [n, k] = line.split(' ').map(Number);\n  const t = 240 - k;\n  const m = Math.floor(t \/ 5);\n  console.log(Math.min(n, m));\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val k = sc.nextInt()\n    val t = 240 - k\n    val m = 5 * n\n    println(if (t >= m) n else n - (t \/ 5))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$k = (int)$input[1];\n$time = 20 * 60;\n$time -= $k;\n$max = 0;\nfor ($i = 1; $i <= $n; $i++) {\n    $time -= 5 * $i;\n    if ($time >= 0) {\n        $max = $i;\n    }\n}\necho $max;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int t = 20 * 60;\n    int s = 5 * n;\n    int ans = 0;\n    if (s + k <= t) {\n        ans = n;\n    } else {\n        ans = (t - k) \/ 5;\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\n\nchomp(my $input = <STDIN>);\n\n($n, $k) = split(' ', $input);\n\nmy $time = 20 * 60 + 4 * 60;\n\nmy $max = $n - ($time - $k) \/ 5;\n\nprint $max;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = input_vec[0];\n    let k = input_vec[1];\n    let mut time = 20 * 60;\n    let mut count = 0;\n    for i in 1..n + 1 {\n        time -= 5 * i;\n        if time >= 0 {\n            count += 1;\n        }\n    }\n    if time >= k {\n        count += 1;\n    }\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"C. Unfair Poll","description":"On the Literature lesson Sergei noticed an awful injustice, it seems that some students are asked more often than others.Seating in the class looks like a rectangle, where n rows with m pupils in each. The teacher asks pupils in the following order: at first, she asks all pupils from the first row in the order of their seating, then she continues to ask pupils from the next row. If the teacher asked the last row, then the direction of the poll changes, it means that she asks the previous row. The order of asking the rows looks as follows: the 1-st row, the 2-nd row, ..., the n-1-st row, the n-th row, the n-1-st row, ..., the 2-nd row, the 1-st row, the 2-nd row, ...The order of asking of pupils on the same row is always the same: the 1-st pupil, the 2-nd pupil, ..., the m-th pupil.During the lesson the teacher managed to ask exactly k questions from pupils in order described above. Sergei seats on the x-th row, on the y-th place in the row. Sergei decided to prove to the teacher that pupils are asked irregularly, help him count three values:  the maximum number of questions a particular pupil is asked,  the minimum number of questions a particular pupil is asked,  how many times the teacher asked Sergei. If there is only one row in the class, then the teacher always asks children from this row.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first and the only line contains five integers n, m, k, x and y (1\u2264n,m\u2264100,1\u2264k\u226410^18,1\u2264x\u2264n,1\u2264y\u2264m).\n","output_spec":"Print three integers:\n  the maximum number of questions a particular pupil is asked,  the minimum number of questions a particular pupil is asked,  how many times the teacher asked Sergei. ","notes":"The order of asking pupils in the first test: \n  the pupil from the first row who seats at the first table, it means it is Sergei;  the pupil from the first row who seats at the second table;  the pupil from the first row who seats at the third table;  the pupil from the first row who seats at the first table, it means it is Sergei;  the pupil from the first row who seats at the second table;  the pupil from the first row who seats at the third table;  the pupil from the first row who seats at the first table, it means it is Sergei;  the pupil from the first row who seats at the second table; The order of asking pupils in the second test: \n  the pupil from the first row who seats at the first table;  the pupil from the first row who seats at the second table;  the pupil from the second row who seats at the first table;  the pupil from the second row who seats at the second table;  the pupil from the third row who seats at the first table;  the pupil from the third row who seats at the second table;  the pupil from the fourth row who seats at the first table;  the pupil from the fourth row who seats at the second table, it means it is Sergei;  the pupil from the third row who seats at the first table; ","sample_inputs":["1 3 8 1 1\n","4 2 9 4 2\n","5 5 25 4 3\n","100 100 1000000000000000000 100 100\n"],"sample_outputs":["3 2 3","2 1 1","1 1 1","101010101010101 50505050505051 50505050505051"],"id":"758-C","difficulty":1700,"tags":["binary+search","constructive+algorithms","implementation","math"],"src_uid":"e61debcad37eaa9a6e21d7a2122b8b21","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\nn,m,k,x,y=map(int,input().split())\nif n==1:\n    print(k,1,1)\nelse:\n    print(k\/\/(n*m)+1,k%(n*m),k\/\/(n*m)+1)\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int k = sc.nextInt();\n        int x = sc.nextInt();\n        int y = sc.nextInt();\n        int max = 0;\n        int min = k;\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                int temp = 0;\n                if (i == x && j == y) {\n                    count++;\n                }\n                if (i % 2 == 0) {\n                    if (j <= m - 1 - y) {\n                        temp = j + y + 1;\n                    } else {\n                        temp = m - j + y + 1;\n                    }\n                } else {\n                    if (j <= y) {\n                        temp = j + y + 1;\n                    } else {\n                        temp = m - j + y + 1;\n                    }\n                }\n                max = Math.max(max, temp);\n                min = Math.min(min, temp);\n            }\n        }\n        System.out.println(max);\n        System.out.println(min);\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m,k,x,y=map(int,input().split())\nif n==1:\n    print(k,1,1)\nelse:\n    print(k,1,k\/\/(n*m)+(k%(n*m)>=x*m+y))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\nint main() {\n    int n, m, k, x, y, i, j, t, t1, t2, t3, t4;\n    scanf(\" %d %d %d %d %d \", &n, &m, &k, &x, &y);\n    t1 = m * (n + 1);\n    t2 = m * (n - 1);\n    t3 = m * (n - 1);\n    t4 = m * (n + 1);\n    if (x == 1) {\n        t1 = t1 - y;\n    } else if (x == n) {\n        t2 = t2 - y;\n    } else if (y == 1) {\n        t3 = t3 - x;\n    } else if (y == m) {\n        t4 = t4 - x;\n    }\n    printf(\" %d %d %d \", t1, t2, t3 + t4);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        int n = int.Parse(input[0]);\n        int m = int.Parse(input[1]);\n        int k = int.Parse(input[2]);\n        int x = int.Parse(input[3]);\n        int y = int.Parse(input[4]);\n        int max = 0;\n        int min = k;\n        int count = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = 0; j < m; j++)\n            {\n                if (i == x && j == y)\n                {\n                    count++;\n                }\n                max = Math.Max(max, count);\n                min = Math.Min(min, count);\n            }\n        }\n        Console.WriteLine(max);\n        Console.WriteLine(min);\n        Console.WriteLine(count);\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m,k,x,y=map(int,input().split())\n\nif n==1:\n    print(k,1,1)\nelse:\n    print(k\/\/(n*m),k%(n*m),k\/\/(n*m)+(k%(n*m)>=m*(x-1))+(k%(n*m)<m*(x+1)))\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, k, x, y int\\n    fmt.Scanf(\\\"%d%d%d%d%d\\\", &n, &m, &k, &x, &y)\\n    var max, min, count int\\n    max = k \/ (n * m)\\n    min = k % (n * m)\\n    if x == 1 && y == 1 {\\n        count = max + min\\n    } else if x == n && y == m {\\n        count = max + min - 1\\n    } else if x == 1 && y == m {\\n        count = max + min - 1\\n    } else if x == n && y == 1 {\\n        count = max + min - 1\\n    } else if x == 1 {\\n        count = max + min - 2\\n    } else if x == n {\\n        count = max + min - 2\\n    } else if y == 1 {\\n        count = max + min - 2\\n    } else if y == m {\\n        count = max + min - 2\\n    } else {\\n        count = max + min - 3\\n    }\\n    fmt.Println(max, min, count)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst k = parseInt(stdin[0].split(' ')[2]);\nconst x = parseInt(stdin[0].split(' ')[3]);\nconst y = parseInt(stdin[0].split(' ')[4]);\nconst max = Math.ceil(k \/ n);\nconst min = Math.ceil(k \/ (n * m));\nconst ans = 0;\nfor (let i = 0; i < n; i++) {\n  for (let j = 0; j < m; j++) {\n    if (i == x && j == y) {\n      ans = max;\n    } else if (i % 2 == 0) {\n      ans = Math.max(ans, j + 1);\n    } else {\n      ans = Math.max(ans, m - j);\n    }\n  }\n}\nconsole.log(max, min, ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.max\nimport kotlin.math.min\n\nfun main() {\n    val (n, m, k, x, y) = readLine().split(\" \").map { it.toInt() }\n    val max = max(n, m)\n    val min = min(n, m)\n    val s = (k \/ max) * min\n    val r = k % max\n    val t = if (r == 0) s else s + 1\n    val ans = arrayOf(t, 1, 0)\n    if (x == 1 && y == 1) {\n        ans[2] = t\n    } else if (x == n && y == m) {\n        ans[2] = t\n    } else if (x == 1) {\n        ans[2] = t - (y - 1)\n    } else if (x == n) {\n        ans[2] = t - (m - y)\n    } else if (y == 1) {\n        ans[2] = t - (x - 1)\n    } else if (y == m) {\n        ans[2] = t - (n - x)\n    }\n    println(ans[0])\n    println(ans[1])\n    println(ans[2])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k, $x, $y = explode(' ', trim(fgets(STDIN)));\n$max = $min = $count = 0;\nfor ($i = 0; $i < $k; $i++) {\n    $count++;\n    if ($i % ($n * 2) < $n) {\n        $max = max($max, $count);\n        $min = min($min, $count);\n    } else {\n        $count = 0;\n    }\n}\necho $max . ' ' . $min . ' ' . $count;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, m, k, x, y;\n    scanf(\" %d %d %d %d %d \", &n, &m, &k, &x, &y);\n    int max = 0, min = k, count = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            int temp = 0;\n            for (int l = 0; l < k; l++) {\n                if (i == x && j == y) {\n                    count++;\n                }\n                if (i % 2 == 0) {\n                    temp += j + 1;\n                } else {\n                    temp += m - j;\n                }\n            }\n            max = max(max, temp);\n            min = min(min, temp);\n        }\n    }\n    printf(\" %d %d %d \", max, min, count);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $k, $x, $y;\n\nchomp(my $input = <STDIN>);\n\nmy @arr = split(' ', $input);\n\n$n = $arr[0];\n$m = $arr[1];\n$k = $arr[2];\n$x = $arr[3];\n$y = $arr[4];\n\nmy $max = 0;\nmy $min = 0;\nmy $count = 0;\n\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($i == $x && $j == $y) {\n            $count++;\n        }\n        if ($count > $max) {\n            $max = $count;\n        }\n        if ($count < $min) {\n            $min = $count;\n        }\n    }\n}\n\nprint \"$max $min $count\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n\n    let mut n = 0;\n    let mut m = 0;\n    let mut k = 0;\n    let mut x = 0;\n    let mut y = 0;\n\n    for i in 0..5 {\n        let c = line.chars().nth(i).unwrap();\n        match c {\n            'n' => n = line.chars().nth(i + 1).unwrap().to_digit(10).unwrap(),\n            'm' => m = line.chars().nth(i + 1).unwrap().to_digit(10).unwrap(),\n            'k' => k = line.chars().nth(i + 1).unwrap().to_digit(10).unwrap(),\n            'x' => x = line.chars().nth(i + 1).unwrap().to_digit(10).unwrap(),\n            'y' => y = line.chars().nth(i + 1).unwrap().to_digit(10).unwrap(),\n            _ => {}\n        }\n    }\n\n    let mut max = 0;\n    let mut min = k;\n    let mut count = 0;\n\n    for i in 0..n {\n        for j in 0..m {\n            let mut temp = 0;\n            for l in 0..n {\n                for t in 0..m {\n                    if (i + l) % n == 0 && (j + t) % m == 0 {\n                        temp += 1;\n                    }\n                }\n            }\n            if temp > max {\n                max = temp;\n            }\n            if temp < min {\n                min = temp;\n            }\n            if i == x && j == y {\n                count = temp;\n            }\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\", max).as_bytes()).unwrap();\n    stdout.write(format!(\"{}\\n\", min).as_bytes()).unwrap();\n    stdout.write(format!(\"{}\\n\", count).as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"D. Big Maximum Sum","description":"Ahmed and Mostafa used to compete together in many programming contests for several years. Their coach Fegla asked them to solve one challenging problem, of course Ahmed was able to solve it but Mostafa couldn't.This problem is similar to a standard problem but it has a different format and constraints.In the standard problem you are given an array of integers, and you have to find one or more consecutive elements in this array where their sum is the maximum possible sum.But in this problem you are given n small arrays, and you will create one big array from the concatenation of one or more instances of the small arrays (each small array could occur more than once). The big array will be given as an array of indexes (1-based) of the small arrays, and the concatenation should be done in the same order as in this array. Then you should apply the standard problem mentioned above on the resulting big array.For example let's suppose that the small arrays are {1, 6, -2}, {3, 3} and {-5, 1}. And the indexes in the big array are {2, 3, 1, 3}. So the actual values in the big array after formatting it as concatenation of the small arrays will be {3, 3, -5, 1, 1, 6, -2, -5, 1}. In this example the maximum sum is 9.Can you help Mostafa solve this problem?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m, n is the number of the small arrays (1\u2264n\u226450), and m is the number of indexes in the big array (1\u2264m\u2264250000). Then follow n lines, the i-th line starts with one integer l which is the size of the i-th array (1\u2264l\u22645000), followed by l integers each one will be greater than or equal -1000 and less than or equal 1000. The last line contains m integers which are the indexes in the big array, and you should concatenate the small arrays in the same order, and each index will be greater than or equal to 1 and less than or equal to n.\nThe small arrays are numbered from 1 to n in the same order as given in the input. Some of the given small arrays may not be used in big array.\nNote, that the array is very big. So if you try to build it straightforwardly, you will probably get time or\/and memory limit exceeded.\n","output_spec":"Print one line containing the maximum sum in the big array after formatting it as described above. You must choose at least one element for the sum, i. e. it cannot be empty.\nPlease, do not use %lld specificator to write 64-bit integers in C++. It is preferred to use cout (also you may use %I64d).\n","notes":null,"sample_inputs":["3 4\n3 1 6 -2\n2 3 3\n2 -5 1\n2 3 1 3\n","6 1\n4 0 8 -3 -10\n8 3 -2 -5 10 8 -9 -5 -4\n1 0\n1 -3\n3 -8 5 6\n2 9 6\n1\n"],"sample_outputs":["9\n","8\n"],"id":"75-D","difficulty":2000,"tags":["data+structures","dp","greedy","implementation","math","trees"],"src_uid":"13fa378c913bb7a15612327099b59f83","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> a(n);\n    for (int i = 0; i < n; i++) {\n        int l;\n        cin >> l;\n        a[i].resize(l);\n        for (int j = 0; j < l; j++) {\n            cin >> a[i][j];\n        }\n    }\n    vector<int> b(m);\n    for (int i = 0; i < m; i++) {\n        cin >> b[i];\n    }\n    vector<int> dp(m + 1, 0);\n    for (int i = 0; i < m; i++) {\n        dp[i + 1] = max(dp[i], dp[i - 1] + a[b[i] - 1][0]);\n    }\n    int ans = 0;\n    for (int i = 1; i <= m; i++) {\n        ans = max(ans, dp[i]);\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] arr = new int[n];\n        int[] sum = new int[n];\n        for (int i = 0; i < n; i++) {\n            int l = sc.nextInt();\n            int[] a = new int[l];\n            for (int j = 0; j < l; j++) {\n                a[j] = sc.nextInt();\n            }\n            sum[i] = Arrays.stream(a).sum();\n        }\n        int[] idx = new int[m];\n        for (int i = 0; i < m; i++) {\n            idx[i] = sc.nextInt();\n        }\n        int max = Integer.MIN_VALUE;\n        int cur = 0;\n        for (int i = 0; i < m; i++) {\n            cur += sum[idx[i] - 1];\n            max = Math.max(max, cur);\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\n\narr = []\nfor _ in range(n):\n    l = int(input())\n    arr.append(list(map(int, input().split())))\n\nidx = list(map(int, input().split()))\n\ndp = [[0] * 5001 for _ in range(n + 1)]\n\nfor i in range(n):\n    for j in range(len(arr[i])):\n        dp[i + 1][j + 1] = max(dp[i][j + 1], dp[i][j] + arr[i][j])\n\nans = 0\nfor i in idx:\n    ans = max(ans, dp[i][-1])\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    int a[n][5000], b[m];\n    for (int i = 0; i < n; i++) {\n        int l;\n        scanf(\" %d \", &l);\n        for (int j = 0; j < l; j++) {\n            scanf(\" %d \", &a[i][j]);\n        }\n    }\n    for (int i = 0; i < m; i++) {\n        scanf(\" %d \", &b[i]);\n    }\n    int max = -1000000000;\n    int sum = 0;\n    for (int i = 0; i < m; i++) {\n        sum = 0;\n        for (int j = 0; j < a[b[i] - 1][0]; j++) {\n            sum += a[b[i] - 1][j];\n        }\n        if (sum > max) {\n            max = sum;\n        }\n    }\n    printf(\" %d \", max);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n, m;\n            string[] strs;\n            int[] nums;\n            int[] arr;\n            int[] dp;\n            int max = 0;\n            int i, j, k;\n\n            \/\/ \u8bfb\u5165\u6570\u636e\n            strs = Console.ReadLine().Split(' ');\n            n = int.Parse(strs[0]);\n            m = int.Parse(strs[1]);\n            arr = new int[m];\n            dp = new int[m];\n\n            \/\/ \u8bfb\u5165\u5c0f\u6570\u7ec4\n            for (i = 0; i < n; i++)\n            {\n                strs = Console.ReadLine().Split(' ');\n                nums = new int[int.Parse(strs[0])];\n                for (j = 0; j < nums.Length; j++)\n                {\n                    nums[j] = int.Parse(strs[j + 1]);\n                }\n\n                \/\/ \u6c42\u6700\u5927\u5b50\u6570\u7ec4\u548c\n                dp[0] = nums[0];\n                for (j = 1; j < nums.Length; j++)\n                {\n                    dp[j] = Math.Max(dp[j - 1] + nums[j], nums[j]);\n                }\n\n                \/\/ \u6c42\u6700\u5927\u548c\n                for (j = 0; j < nums.Length; j++)\n                {\n                    max = Math.Max(max, dp[j]);\n                }\n            }\n\n            \/\/ \u8bfb\u5165\u5927\u6570\u7ec4\n            for (i = 0; i < m; i++)\n            {\n                arr[i] = int.Parse(Console.ReadLine());\n            }\n\n            \/\/ \u6c42\u6700\u5927\u548c\n            for (i = 0; i < m; i++)\n            {\n                dp[i] = dp[i - 1] + arr[i];\n                max = Math.Max(max, dp[i]);\n            }\n\n            \/\/ \u8f93\u51fa\u7ed3\u679c\n            Console.WriteLine(max);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\na = []\n(1..n).each do |i|\n  l = gets.to_i\n  a[i] = gets.split.map(&:to_i)\nend\nb = gets.split.map(&:to_i)\n\nans = 0\n(0..m-1).each do |i|\n  s = 0\n  (i..m-1).each do |j|\n    s += a[b[j]-1][0]\n    ans = [ans, s].max\n  end\nend\n\nputs ans\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scanf(\" %d %d \", &n, &m)\n\tarr := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tvar l int\n\t\tfmt.Scanf(\" %d \", &l)\n\t\tfor j := 0; j < l; j++ {\n\t\t\tvar x int\n\t\t\tfmt.Scanf(\" %d \", &x)\n\t\t\tarr[i] += x\n\t\t}\n\t}\n\tidx := make([]int, m)\n\tfor i := 0; i < m; i++ {\n\t\tvar x int\n\t\tfmt.Scanf(\" %d \", &x)\n\t\tidx[i] = x - 1\n\t}\n\tdp := make([]int, n+1)\n\tfor i := 0; i < n+1; i++ {\n\t\tdp[i] = math.MinInt64\n\t}\n\tdp[0] = 0\n\tfor i := 0; i < m; i++ {\n\t\tdp[idx[i]+1] = max(dp[idx[i]+1], dp[idx[i]]+arr[idx[i]])\n\t}\n\tfmt.Println(dp[n])\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nn, m = map(int, input().split())\narr = []\nfor i in range(n):\n    l = int(input())\n    arr.append(list(map(int, input().split())))\n\nidx = list(map(int, input().split()))\n\ndp = [[0 for i in range(5001)] for j in range(n+1)]\n\nfor i in range(n):\n    for j in range(len(arr[i])):\n        dp[i+1][arr[i][j]+2000] = max(dp[i+1][arr[i][j]+2000], dp[i][arr[i][j]+2000]+arr[i][j])\n\nans = 0\nfor i in idx:\n    ans = max(ans, dp[i][2000])\n\nprint(ans)\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val arr = Array(n) { ArrayList<Int>() }\n    val dp = Array(n) { IntArray(10001) }\n    for (i in 0 until n) {\n        val (l) = readLine().split(\" \").map { it.toInt() }\n        for (j in 0 until l) {\n            val (x) = readLine().split(\" \").map { it.toInt() }\n            arr[i].add(x)\n        }\n    }\n    val idx = readLine().split(\" \").map { it.toInt() }\n    var ans = Int.MIN_VALUE\n    for (i in 0 until m) {\n        var sum = 0\n        for (j in 0 until arr[idx[i] - 1].size) {\n            sum += arr[idx[i] - 1][j]\n            dp[idx[i] - 1][sum] = Math.max(dp[idx[i] - 1][sum], sum)\n        }\n    }\n    for (i in 0 until n) {\n        for (j in 0 until 10001) {\n            ans = Math.max(ans, dp[i][j])\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$arr = [];\nfor ($i = 0; $i < $n; $i++) {\n    $l = intval(trim(fgets(STDIN)));\n    $arr[$i] = array_map('intval', explode(' ', trim(fgets(STDIN))));\n}\n$arr2 = array_map('intval', explode(' ', trim(fgets(STDIN))));\n$max = 0;\n$cur = 0;\nfor ($i = 0; $i < $m; $i++) {\n    $cur += $arr[$arr2[$i] - 1][0];\n    $max = max($max, $cur);\n}\necho $max;\n\"\"\"}]","d":"","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let (n, m) = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n\n    let mut arrays = Vec::new();\n    for _ in 0..n {\n        let l = lines.next().unwrap().unwrap().parse().unwrap();\n        let mut a = Vec::new();\n        for _ in 0..l {\n            a.push(lines.next().unwrap().unwrap().parse().unwrap());\n        }\n        arrays.push(a);\n    }\n\n    let indexes = lines.next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n\n    let mut dp = vec![0; m + 1];\n    for i in 0..m {\n        let index = indexes[i];\n        let a = arrays[index - 1];\n        for j in 0..a.len() {\n            dp[i + j + 1] = std::cmp::max(dp[i + j + 1], dp[i] + a[j]);\n        }\n    }\n\n    println!(\"{}\", dp[m]);\n}\n\"\"\"}]"}
{"title":"L. Bars","description":"Polycarp's workday lasts exactly $$$n$$$ minutes. He loves chocolate bars and can eat one bar in one minute. Today Polycarp has $$$k$$$ bars at the beginning of the workday.In some minutes of the workday Polycarp has important things to do and in such minutes he is not able to eat a chocolate bar. In other minutes he can either eat or not eat one chocolate bar. It is guaranteed, that in the first and in the last minutes of the workday Polycarp has no important things to do and he will always eat bars in this minutes to gladden himself at the begining and at the end of the workday. Also it is guaranteed, that $$$k$$$ is strictly greater than $$$1$$$.Your task is to determine such an order of eating chocolate bars that the maximum break time between eating bars is as minimum as possible.Consider that Polycarp eats a bar in the minute $$$x$$$ and the next bar in the minute $$$y$$$ ($$$x < y$$$). Then the break time is equal to $$$y - x - 1$$$ minutes. It is not necessary for Polycarp to eat all bars he has.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers $$$n$$$ and $$$k$$$ ($$$2 \\\\le n \\\\le 200\\\\,000$$$, $$$2 \\\\le k \\\\le n$$$) \u2014 the length of the workday in minutes and the number of chocolate bars, which Polycarp has in the beginning of the workday.\nThe second line contains the string with length $$$n$$$ consisting of zeros and ones. If the $$$i$$$-th symbol in the string equals to zero, Polycarp has no important things to do in the minute $$$i$$$ and he can eat a chocolate bar. In the other case, Polycarp is busy in the minute $$$i$$$ and can not eat a chocolate bar. It is guaranteed, that the first and the last characters of the string are equal to zero, and Polycarp always eats chocolate bars in these minutes.\n","output_spec":"Print the minimum possible break in minutes between eating chocolate bars.\n","notes":"In the first example Polycarp can not eat the chocolate bar in the second minute, so the time of the break equals to one minute.\nIn the second example Polycarp will eat bars in the minutes $$$1$$$ and $$$8$$$ anyway, also he needs to eat the chocolate bar in the minute $$$5$$$, so that the time of the maximum break will be equal to $$$3$$$ minutes.\n","sample_inputs":["3 3\n010\n","8 3\n01010110\n"],"sample_outputs":["1\n","3\n"],"id":"774-L","difficulty":2000,"tags":["*special","binary+search"],"src_uid":"e33b0a752dc1aba25da21e20435e3fe2","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, k;\n    cin >> n >> k;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    int i = 1;\n    while (i < n - 1) {\n        if (a[i] == 1) {\n            i++;\n            continue;\n        }\n        while (i < n - 1 && a[i + 1] == 1) {\n            i++;\n        }\n        ans = max(ans, i - 1);\n        i++;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = reader.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int k = Integer.parseInt(input[1]);\n        String[] s = reader.readLine().split(\"\");\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            if (s[i].equals(\"0\")) {\n                a[i] = 1;\n            }\n        }\n        int[] dp = new int[n];\n        dp[0] = 0;\n        for (int i = 1; i < n; i++) {\n            dp[i] = Math.max(dp[i - 1], a[i]);\n        }\n        int ans = 0;\n        for (int i = 1; i < n; i++) {\n            if (a[i] == 0) {\n                ans = Math.max(ans, dp[i - 1]);\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\ns = input()\n\nans = 0\nfor i in range(1, n - 1):\n    if s[i] == '1':\n        ans = max(ans, i - s.rfind('0', 0, i) - 1)\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n\nint main() {\n    int n, k, i, j, t, m = 0, s = 0;\n    scanf(\" %d %d \", &n, &k);\n    char a[n];\n    scanf(\" %s \", a);\n    for (i = 1; i < n - 1; i++) {\n        if (a[i] == '0') {\n            t = i;\n            for (j = i + 1; j < n; j++) {\n                if (a[j] == '0') {\n                    t = j;\n                } else {\n                    break;\n                }\n            }\n            m = t - i;\n            if (m > s) {\n                s = m;\n            }\n        }\n    }\n    printf(\" %d \", s);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var k = int.Parse(input[1]);\n        var s = Console.ReadLine();\n        var dp = new int[n + 1];\n        dp[0] = 0;\n        dp[1] = 0;\n        for (int i = 2; i <= n; i++)\n        {\n            if (s[i - 1] == '0')\n            {\n                dp[i] = Math.Min(dp[i - 1] + 1, dp[i - 2] + 1);\n            }\n            else\n            {\n                dp[i] = dp[i - 1];\n            }\n        }\n        Console.WriteLine(dp[n] - 1);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\ns = gets.chomp\n\nans = 0\n\nfor i in 1..n-1\n  if s[i] == '0'\n    ans = [ans, i-1].max\n  end\nend\n\nputs ans\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Polycarp;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j, m, t, p, s: Integer;\n  a: array[0..200000] of Boolean;\n\nbegin\n  Readln(n, k);\n  Readln(a);\n  m := 0;\n  t := 0;\n  p := 0;\n  s := 0;\n  for i := 1 to n - 1 do\n  begin\n    if a[i] = 0 then\n    begin\n      m := m + 1;\n      if m = k then\n      begin\n        t := t + 1;\n        p := i - s;\n        s := i;\n        m := 0;\n      end;\n    end;\n  end;\n  t := t + 1;\n  p := p + n - s;\n  Writeln(p);\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.5\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    var n, k int\n    fmt.Scanf(\" %d %d \", &n, &k)\n    s := strings.Split(strings.TrimSpace(strings.Scanln()), \"\")\n    var dp = make([]int, n+1)\n    dp[0] = 0\n    dp[1] = 0\n    for i := 2; i <= n; i++ {\n        if s[i-1] == \"0\" {\n            dp[i] = dp[i-1] + 1\n        } else {\n            dp[i] = dp[i-1]\n        }\n    }\n    var ans = dp[n]\n    for i := 1; i <= n-k+1; i++ {\n        ans = min(ans, dp[i+k-1]-dp[i-1])\n    }\n    fmt.Println(ans)\n}\n\nfunc min(a, b int) int {\n    if a < b {\n        return a\n    }\n    return b\n}\n\"}}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst [n, k] = rl.question().split(' ').map(Number);\nconst a = rl.question().split('');\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 0;\ndp[1] = 1;\n\nfor (let i = 2; i <= n; i++) {\n  if (a[i - 1] == '0') {\n    dp[i] = Math.min(dp[i - 1] + 1, dp[i - 2] + 1);\n  } else {\n    dp[i] = dp[i - 1];\n  }\n}\n\nconsole.log(dp[n] - 1);\nrl.close();\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val s = readLine()\n    val dp = Array(n + 1) { IntArray(k + 1) }\n    dp[0][0] = 0\n    for (i in 1..n) {\n        for (j in 0..k) {\n            if (s[i - 1] == '0') {\n                dp[i][j] = maxOf(dp[i - 1][j], dp[i - 1][j - 1] + 1)\n            } else {\n                dp[i][j] = dp[i - 1][j]\n            }\n        }\n    }\n    println(dp[n][k] - 1)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = intval(fgets(STDIN));\n$k = intval(fgets(STDIN));\n$a = explode(' ', fgets(STDIN));\n$b = array_fill(0, $n, 0);\n$b[0] = 1;\n$b[$n - 1] = 1;\nfor ($i = 1; $i < $n - 1; $i++) {\n    if ($a[$i] == '0') {\n        $b[$i] = 1;\n    }\n}\n$max = 0;\n$i = 0;\n$j = 0;\nwhile ($i < $n) {\n    if ($b[$i] == 1) {\n        $j = $i;\n        while ($j < $n && $b[$j] == 1) {\n            $j++;\n        }\n        $max = max($max, $j - $i - 1);\n        $i = $j;\n    } else {\n        $i++;\n    }\n}\necho $max;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    string s;\n    scanf(\" %s \", s);\n    int i = 0;\n    int j = 0;\n    int max = 0;\n    while (i < n) {\n        if (s[i] == '0') {\n            j++;\n        }\n        if (j == k) {\n            max = max(max, i - j + 1);\n            j = 0;\n        }\n        i++;\n    }\n    printf(\" %d \", max);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/\/, $line);\n\nmy $i = 1;\nmy $j = $n - 1;\nmy $ans = 0;\n\nwhile ($i < $j) {\n    if ($a[$i] == 1) {\n        $i++;\n    } else {\n        $ans = $ans + 1;\n        $i++;\n    }\n\n    if ($a[$j] == 1) {\n        $j--;\n    } else {\n        $ans = $ans + 1;\n        $j--;\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n = line.split_whitespace().map(|x| x.parse::<i32>().unwrap()).collect::<Vec<i32>>();\n    let n = n[0];\n    let k = n[1];\n\n    line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut s = line.chars().collect::<Vec<char>>();\n\n    let mut ans = 0;\n    let mut i = 0;\n    while i < n - 1 {\n        if s[i] == '1' {\n            i += 1;\n            continue;\n        }\n        while i < n - 1 && s[i + 1] == '1' {\n            i += 1;\n        }\n        ans = ans.max(i + 1);\n        i += 1;\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Haiku","description":"Haiku is a genre of Japanese traditional poetry.A haiku poem consists of 17 syllables split into three phrases, containing 5, 7 and 5 syllables correspondingly (the first phrase should contain exactly 5 syllables, the second phrase should contain exactly 7 syllables, and the third phrase should contain exactly 5 syllables). A haiku masterpiece contains a description of a moment in those three phrases. Every word is important in a small poem, which is why haiku are rich with symbols. Each word has a special meaning, a special role. The main principle of haiku is to say much using a few words.To simplify the matter, in the given problem we will consider that the number of syllable in the phrase is equal to the number of vowel letters there. Only the following letters are regarded as vowel letters: \"a\", \"e\", \"i\", \"o\" and \"u\".Three phases from a certain poem are given. Determine whether it is haiku or not.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The input data consists of three lines. The length of each line is between 1 and 100, inclusive. The i-th line contains the i-th phrase of the poem. Each phrase consists of one or more words, which are separated by one or more spaces. A word is a non-empty sequence of lowercase Latin letters. Leading and\/or trailing spaces in phrases are allowed. Every phrase has at least one non-space character. See the example for clarification.\n","output_spec":"Print \"YES\" (without the quotes) if the poem is a haiku. Otherwise, print \"NO\" (also without the quotes).\n","notes":null,"sample_inputs":["on  codeforces \nbeta round is running\n   a rustling of keys \n","how many gallons\nof edo s rain did you drink\n                                cuckoo\n"],"sample_outputs":["YES","NO"],"id":"78-A","difficulty":800,"tags":["implementation","strings"],"src_uid":"46d734178b3acaddf2ee3706f04d603d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s1, s2, s3;\n    cin >> s1 >> s2 >> s3;\n    int a = 0, b = 0, c = 0;\n    for (int i = 0; i < s1.length(); i++) {\n        if (s1[i] == 'a' || s1[i] == 'e' || s1[i] == 'i' || s1[i] == 'o' || s1[i] == 'u')\n            a++;\n    }\n    for (int i = 0; i < s2.length(); i++) {\n        if (s2[i] == 'a' || s2[i] == 'e' || s2[i] == 'i' || s2[i] == 'o' || s2[i] == 'u')\n            b++;\n    }\n    for (int i = 0; i < s3.length(); i++) {\n        if (s3[i] == 'a' || s3[i] == 'e' || s3[i] == 'i' || s3[i] == 'o' || s3[i] == 'u')\n            c++;\n    }\n    if (a == 5 && b == 7 && c == 5)\n        cout << \"YES\";\n    else\n        cout << \"NO\";\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        String s1 = sc.nextLine();\n        String s2 = sc.nextLine();\n        String s3 = sc.nextLine();\n        int count1 = 0;\n        int count2 = 0;\n        int count3 = 0;\n        for (int i = 0; i < s1.length(); i++) {\n            if (s1.charAt(i) == 'a' || s1.charAt(i) == 'e' || s1.charAt(i) == 'i' || s1.charAt(i) == 'o' || s1.charAt(i) == 'u') {\n                count1++;\n            }\n        }\n        for (int i = 0; i < s2.length(); i++) {\n            if (s2.charAt(i) == 'a' || s2.charAt(i) == 'e' || s2.charAt(i) == 'i' || s2.charAt(i) == 'o' || s2.charAt(i) == 'u') {\n                count2++;\n            }\n        }\n        for (int i = 0; i < s3.length(); i++) {\n            if (s3.charAt(i) == 'a' || s3.charAt(i) == 'e' || s3.charAt(i) == 'i' || s3.charAt(i) == 'o' || s3.charAt(i) == 'u') {\n                count3++;\n            }\n        }\n        if (count1 == 5 && count2 == 7 && count3 == 5) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef count_vowels(s):\n    count = 0\n    for c in s:\n        if c in \"aeiou\":\n            count += 1\n    return count\n\n\ndef main():\n    for _ in range(3):\n        s = input()\n        if count_vowels(s) == 5:\n            print(\"YES\")\n            break\n    else:\n        print(\"NO\")\n\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <string.h>\n\nint main() {\n    char s1[100], s2[100], s3[100];\n    int a1, a2, a3;\n    scanf(\" %s\\n \", s1);\n    scanf(\" %s\\n \", s2);\n    scanf(\" %s\\n \", s3);\n    a1 = count_vowels(s1);\n    a2 = count_vowels(s2);\n    a3 = count_vowels(s3);\n    if (a1 == 5 && a2 == 7 && a3 == 5)\n        printf(\" YES \");\n    else\n        printf(\" NO \");\n    return 0;\n}\n\nint count_vowels(char s[]) {\n    int i, count = 0;\n    for (i = 0; i < strlen(s); i++) {\n        if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u')\n            count++;\n    }\n    return count;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Haiku\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] lines = new string[3];\n            for (int i = 0; i < 3; i++)\n            {\n                lines[i] = Console.ReadLine();\n            }\n            int[] count = new int[3];\n            for (int i = 0; i < 3; i++)\n            {\n                for (int j = 0; j < lines[i].Length; j++)\n                {\n                    if (lines[i][j] == 'a' || lines[i][j] == 'e' || lines[i][j] == 'i' || lines[i][j] == 'o' || lines[i][j] == 'u')\n                    {\n                        count[i]++;\n                    }\n                }\n            }\n            if (count[0] == 5 && count[1] == 7 && count[2] == 5)\n            {\n                Console.WriteLine(\"YES\");\n            }\n            else\n            {\n                Console.WriteLine(\"NO\");\n            }\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def count_vowels(str)\n  vowels = 'aeiou'\n  count = 0\n  for char in str:\n    if char in vowels:\n      count += 1\n  return count\n\ndef is_haiku(phrase1, phrase2, phrase3):\n  if count_vowels(phrase1) == 5 and count_vowels(phrase2) == 7 and count_vowels(phrase3) == 5:\n    return 'YES'\n  else:\n    return 'NO'\n\nphrase1 = input()\nphrase2 = input()\nphrase3 = input()\n\nprint(is_haiku(phrase1, phrase2, phrase3))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Haiku;\n\nuses\n  SysUtils;\n\nvar\n  s1, s2, s3: string;\n  i, j, k: integer;\n\nbegin\n  readln(s1);\n  readln(s2);\n  readln(s3);\n  i := 0;\n  j := 0;\n  k := 0;\n  for i := 1 to length(s1) do\n    if (s1[i] = 'a') or (s1[i] = 'e') or (s1[i] = 'i') or (s1[i] = 'o') or (s1[i] = 'u') then\n      inc(i);\n  for j := 1 to length(s2) do\n    if (s2[j] = 'a') or (s2[j] = 'e') or (s2[j] = 'i') or (s2[j] = 'o') or (s2[j] = 'u') then\n      inc(j);\n  for k := 1 to length(s3) do\n    if (s3[k] = 'a') or (s3[k] = 'e') or (s3[k] = 'i') or (s3[k] = 'o') or (s3[k] = 'u') then\n      inc(k);\n  if (i = 5) and (j = 7) and (k = 5) then\n    writeln('YES')\n  else\n    writeln('NO');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar s1, s2, s3 string\n\tfmt.Scanf(\"%s\\n%s\\n%s\\n\", &s1, &s2, &s3)\n\ts1 = strings.ToLower(s1)\n\ts2 = strings.ToLower(s2)\n\ts3 = strings.ToLower(s3)\n\tif len(s1) == 5 && len(s2) == 7 && len(s3) == 5 {\n\t\tfmt.Println(\"YES\")\n\t} else {\n\t\tfmt.Println(\"NO\")\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst a = input[0].split(' ').filter(x => x.length > 0).reduce((a, b) => a + b.match(\/[aeiou]\/g).length, 0);\nconst b = input[1].split(' ').filter(x => x.length > 0).reduce((a, b) => a + b.match(\/[aeiou]\/g).length, 0);\nconst c = input[2].split(' ').filter(x => x.length > 0).reduce((a, b) => a + b.match(\/[aeiou]\/g).length, 0);\nconsole.log(a === 5 && b === 7 && c === 5 ? 'YES' : 'NO');\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s1 = readLine()\n    val s2 = readLine()\n    val s3 = readLine()\n    val v1 = s1.count { it in \"aeiou\" }\n    val v2 = s2.count { it in \"aeiou\" }\n    val v3 = s3.count { it in \"aeiou\" }\n    if (v1 == 5 && v2 == 7 && v3 == 5) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n$a = trim(fgets(STDIN));\n$b = trim(fgets(STDIN));\n$c = trim(fgets(STDIN));\n$a = str_replace(\" \", \"\", $a);\n$b = str_replace(\" \", \"\", $b);\n$c = str_replace(\" \", \"\", $c);\n$a = count_chars($a, 1);\n$b = count_chars($b, 1);\n$c = count_chars($c, 1);\nif ($a == 5 && $b == 7 && $c == 5) {\n    echo \"YES\";\n} else {\n    echo \"NO\";\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.string;\n\nvoid main() {\n    string[] lines = [readln(),readln(),readln()];\n    int[] counts = [0,0,0];\n    for (int i = 0; i < 3; i++) {\n        for (int j = 0; j < lines[i].length; j++) {\n            if (lines[i][j] == 'a' || lines[i][j] == 'e' || lines[i][j] == 'i' || lines[i][j] == 'o' || lines[i][j] == 'u') {\n                counts[i]++;\n            }\n        }\n    }\n    if (counts[0] == 5 && counts[1] == 7 && counts[2] == 5) {\n        writeln(\"YES\");\n    } else {\n        writeln(\"NO\");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\n\nmy $line1 = <STDIN>;\nmy $line2 = <STDIN>;\nmy $line3 = <STDIN>;\n\nmy $count1 = count_vowels($line1);\nmy $count2 = count_vowels($line2);\nmy $count3 = count_vowels($line3);\n\nif ($count1 == 5 && $count2 == 7 && $count3 == 5) {\n    print \"YES\";\n} else {\n    print \"NO\";\n}\n\nsub count_vowels {\n    my $line = shift;\n    my $count = 0;\n\n    for (my $i = 0; $i < length($line); $i++) {\n        if ($line[$i] eq 'a' || $line[$i] eq 'e' || $line[$i] eq 'i' || $line[$i] eq 'o' || $line[$i] eq 'u') {\n            $count++;\n        }\n    }\n\n    return $count;\n}\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let mut count = 0;\n    for line in lines {\n        let line = line.unwrap();\n        let mut vowels = 0;\n        for c in line.chars() {\n            if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                vowels += 1;\n            }\n        }\n        if vowels == 5 {\n            count += 1;\n        } else if vowels == 7 {\n            count += 1;\n        } else if vowels == 5 {\n            count += 1;\n        } else {\n            println!(\"NO\");\n            return;\n        }\n    }\n    if count == 3 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"D. Password","description":"Finally Fox Ciel arrived in front of her castle!She have to type a password to enter her castle. An input device attached to her castle is a bit unusual.The input device is a 1\u00d7n rectangle divided into n square panels. They are numbered 1 to n from left to right. Each panel has a state either ON or OFF. Initially all panels are in the OFF state. She can enter her castle if and only if x1-th, x2-th, ..., xk-th panels are in the ON state and other panels are in the OFF state.She is given an array a1, ..., al. In each move, she can perform the following operation: choose an index i (1\u2264i\u2264l), choose consecutive ai panels, and flip the states of those panels (i.e. ON\u2192OFF, OFF\u2192ON).Unfortunately she forgets how to type the password with only above operations. Determine the minimal number of operations required to enter her castle.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains three integers n, k and l (1\u2264n\u226410000,1\u2264k\u226410,1\u2264l\u2264100), separated by single spaces.\nThe second line contains k integers x1, ..., xk (1\u2264x1<x2<...<xk\u2264n), separated by single spaces.\nThe third line contains l integers a1, ..., al (1\u2264ai\u2264n), separated by single spaces. It is possible that some elements of the array ai are equal value.\n","output_spec":"Print the minimal number of moves required to type the password. If it's impossible, print -1.\n","notes":"One possible way to type the password in the first example is following: In the first move, choose 1st, 2nd, 3rd panels and flip those panels. In the second move, choose 5th, 6th, 7th, 8th, 9th panels and flip those panels.\n","sample_inputs":["10 8 2\n1 2 3 5 6 7 8 9\n3 5\n","3 2 1\n1 2\n3\n"],"sample_outputs":["2\n","-1\n"],"id":"79-D","difficulty":2800,"tags":["bitmasks","dp","shortest+paths"],"src_uid":"3facb13a79e712ab0a545eb1ffcd6d5b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, k, l;\n    cin >> n >> k >> l;\n    int a[l];\n    for (int i = 0; i < l; i++) {\n        cin >> a[i];\n    }\n    int x[k];\n    for (int i = 0; i < k; i++) {\n        cin >> x[i];\n    }\n    int ans = 0;\n    sort(x, x + k);\n    sort(a, a + l);\n    for (int i = 0; i < k; i++) {\n        if (x[i] != a[i]) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, k, l;\n        n = sc.nextInt();\n        k = sc.nextInt();\n        l = sc.nextInt();\n        int[] x = new int[k];\n        int[] a = new int[l];\n        for (int i = 0; i < k; i++) {\n            x[i] = sc.nextInt();\n        }\n        for (int i = 0; i < l; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        int i = 0;\n        int j = 0;\n        while (i < k && j < l) {\n            if (x[i] < a[j]) {\n                i++;\n            } else if (x[i] > a[j]) {\n                j++;\n            } else {\n                ans++;\n                i++;\n                j++;\n            }\n        }\n        if (i < k) {\n            ans += k - i;\n        }\n        if (j < l) {\n            ans += l - j;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k,l=map(int,input().split())\nx=list(map(int,input().split()))\na=list(map(int,input().split()))\n\ndef f(x,a):\n    ans=0\n    for i in range(k):\n        ans+=abs(x[i]-a[i])\n    return ans\n\nans=10**18\nfor i in range(l):\n    for j in range(i+1,l):\n        ans=min(ans,f(x,a[i:j+1]))\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,k,l;\nscanf(\" %d%d%d \",&n,&k,&l);\nint a[n+1],b[n+1];\nfor(int i=1;i<=n;i++)\nscanf(\" %d \",&a[i]);\nfor(int i=1;i<=l;i++)\nscanf(\" %d \",&b[i]);\nint ans=0;\nfor(int i=1;i<=k;i++)\n{\nint j=a[i];\nwhile(j<=n)\n{\nif(b[j]==a[i])\n{\nj+=a[i];\n}\nelse\n{\nans++;\nj+=a[i]-b[j];\n}\n}\n}\nprintf(\" %d \",ans);\nreturn 0;\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n, k, l = int.Parse(Console.ReadLine().Split(' ')[0]), int.Parse(Console.ReadLine().Split(' ')[0]), int.Parse(Console.ReadLine().Split(' ')[0]);\n        var x = new List<int>();\n        var a = new List<int>();\n        for (int i = 0; i < k; i++)\n        {\n            x.Add(int.Parse(Console.ReadLine()));\n        }\n        for (int i = 0; i < l; i++)\n        {\n            a.Add(int.Parse(Console.ReadLine()));\n        }\n        var ans = 0;\n        var s = 0;\n        for (int i = 0; i < k; i++)\n        {\n            s = 0;\n            for (int j = 0; j < l; j++)\n            {\n                if (a[j] >= x[i] && a[j] <= x[i + 1])\n                {\n                    s++;\n                }\n            }\n            if (s % 2 == 1)\n            {\n                ans++;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k,l=map(int,input().split())\nx=list(map(int,input().split()))\na=list(map(int,input().split()))\nx.sort()\na.sort()\nans=0\nfor i in range(l):\n    if a[i]<x[0]:\n        ans+=1\n    elif a[i]>x[-1]:\n        ans+=1\n    else:\n        for j in range(k):\n            if a[i]>=x[j] and a[i]<=x[j+1]:\n                ans+=1\n                break\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram FoxCiel;\n\nuses\n  SysUtils;\n\nconst\n  MAXN = 10000;\n\nvar\n  n, k, l, i, j, a, b, c, d, ans: Integer;\n  x, y: array[0..MAXN] of Integer;\n\nbegin\n  Readln(n, k, l);\n  for i := 1 to k do\n    Read(x[i]);\n  for i := 1 to l do\n    Read(a[i]);\n  for i := 1 to k do\n    for j := 1 to k do\n      if x[i] < x[j] then\n        begin\n          b := x[i];\n          x[i] := x[j];\n          x[j] := b;\n        end;\n  for i := 1 to l do\n    for j := 1 to l do\n      if a[i] < a[j] then\n        begin\n          c := a[i];\n          a[i] := a[j];\n          a[j] := c;\n        end;\n  for i := 1 to k do\n    for j := 1 to l do\n      if x[i] = a[j] then\n        begin\n          d := j;\n          break;\n        end;\n  if d = 0 then\n    Writeln(-1)\n  else\n  begin\n    ans := 0;\n    for i := 1 to k do\n      if x[i] < a[d] then\n        ans := ans + 1;\n    for i := d + 1 to l do\n      if a[i] < x[k] then\n        ans := ans + 1;\n    Writeln(ans);\n  end;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, k, l int\\n    fmt.Scanf(\\\"%d %d %d\\\", &n, &k, &l)\\n    x := make([]int, k)\\n    a := make([]int, l)\\n    for i := 0; i < k; i++ {\\n        fmt.Scanf(\\\"%d\\\", &x[i])\\n    }\\n    for i := 0; i < l; i++ {\\n        fmt.Scanf(\\\"%d\\\", &a[i])\\n    }\\n    ans := 0\\n    for i := 0; i < k; i++ {\\n        for j := 0; j < l; j++ {\\n            if x[i] >= a[j] {\\n                ans++\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n, k, l = stdin[0].split(' ').map(Number);\nconst x = stdin[1].split(' ').map(Number);\nconst a = stdin[2].split(' ').map(Number);\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 0; i < k; i++) {\n  dp[x[i]] = 1;\n}\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= l; j++) {\n    if (a[j - 1] >= i) {\n      dp[i] = Math.min(dp[i], dp[i - a[j - 1]] + 1);\n    }\n  }\n}\nconsole.log(dp[n]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val br = System.`in`.bufferedReader()\n    val bw = System.out.bufferedWriter()\n\n    val (n, k, l) = br.readLine().split(\" \").map { it.toInt() }\n    val xs = br.readLine().split(\" \").map { it.toInt() }.sorted()\n    val as = br.readLine().split(\" \").map { it.toInt() }.sorted()\n\n    var ans = 0\n    var i = 0\n    var j = 0\n    while (i < k && j < l) {\n        if (xs[i] < as[j]) {\n            ans++\n            i++\n        } else {\n            j++\n        }\n    }\n\n    if (i < k) {\n        bw.write(\"-1\\n\")\n    } else {\n        bw.write(\"$ans\\n\")\n    }\n\n    bw.flush()\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$k = (int)$input[1];\n$l = (int)$input[2];\n$x = explode(' ', trim(fgets(STDIN)));\n$a = explode(' ', trim(fgets(STDIN)));\n$ans = 0;\n$i = 0;\n$j = 0;\nwhile ($i < $k) {\n    while ($j < $l && $a[$j] < $x[$i]) {\n        $j++;\n    }\n    if ($j == $l) {\n        $ans = -1;\n        break;\n    }\n    $ans += $j - $i;\n    $i = $j;\n}\necho $ans;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k, l;\n    scanf(\" %d %d %d \", &n, &k, &l);\n    int x[k];\n    int a[l];\n    for (int i = 0; i < k; i++) {\n        scanf(\" %d \", &x[i]);\n    }\n    for (int i = 0; i < l; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    int s = 0;\n    int t = 0;\n    for (int i = 0; i < k; i++) {\n        s = s + x[i];\n    }\n    for (int i = 0; i < l; i++) {\n        t = t + a[i];\n    }\n    if (s != t) {\n        printf(\" -1 \");\n    } else {\n        for (int i = 0; i < k; i++) {\n            int m = 0;\n            for (int j = 0; j < l; j++) {\n                if (x[i] >= a[j]) {\n                    m = m + 1;\n                }\n            }\n            ans = ans + m;\n        }\n        printf(\" %d \", ans);\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $k, $l;\nmy @x;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k, $l) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@x = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@a = split(' ', $line);\n\nmy $ans = 0;\nmy $i = 0;\nmy $j = 0;\n\nwhile ($i < $k) {\n    while ($j < $l && $a[$j] < $x[$i]) {\n        $j++;\n    }\n    if ($j == $l) {\n        print \"-1\\n\";\n        exit;\n    }\n    $ans += $j - $i;\n    $i = $j + $x[$i] - $a[$j];\n}\n\nprint $ans;\nprint \"\\n\";\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k_l: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let n = n_k_l[0];\n    let k = n_k_l[1];\n    let l = n_k_l[2];\n\n    let mut xs: Vec<usize> = Vec::new();\n    line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    xs = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut as: Vec<usize> = Vec::new();\n    line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    as = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut ans = 0;\n    for i in 0..l {\n        let mut cnt = 0;\n        for j in 0..k {\n            if as[i] >= xs[j] && as[i] <= xs[j + 1] {\n                cnt += 1;\n            }\n        }\n        if cnt % 2 == 1 {\n            ans += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"A. Kalevitch and Chess","description":"A famous Berland's painter Kalevitch likes to shock the public. One of his last obsessions is chess. For more than a thousand years people have been playing this old game on uninteresting, monotonous boards. Kalevitch decided to put an end to this tradition and to introduce a new attitude to chessboards.As before, the chessboard is a square-checkered board with the squares arranged in a 8\u00d78 grid, each square is painted black or white. Kalevitch suggests that chessboards should be painted in the following manner: there should be chosen a horizontal or a vertical line of 8 squares (i.e. a row or a column), and painted black. Initially the whole chessboard is white, and it can be painted in the above described way one or more times. It is allowed to paint a square many times, but after the first time it does not change its colour any more and remains black. Kalevitch paints chessboards neatly, and it is impossible to judge by an individual square if it was painted with a vertical or a horizontal stroke.Kalevitch hopes that such chessboards will gain popularity, and he will be commissioned to paint chessboards, which will help him ensure a comfortable old age. The clients will inform him what chessboard they want to have, and the painter will paint a white chessboard meeting the client's requirements.It goes without saying that in such business one should economize on everything \u2014 for each commission he wants to know the minimum amount of strokes that he has to paint to fulfill the client's needs. You are asked to help Kalevitch with this task.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"64 megabytes","input_spec":"The input file contains 8 lines, each of the lines contains 8 characters. The given matrix describes the client's requirements, W character stands for a white square, and B character \u2014 for a square painted black.\nIt is guaranteed that client's requirments can be fulfilled with a sequence of allowed strokes (vertical\/column or horizontal\/row).\n","output_spec":"Output the only number \u2014 the minimum amount of rows and columns that Kalevitch has to paint on the white chessboard to meet the client's requirements.\n","notes":null,"sample_inputs":["WWWBWWBW\nBBBBBBBB\nWWWBWWBW\nWWWBWWBW\nWWWBWWBW\nWWWBWWBW\nWWWBWWBW\nWWWBWWBW\n","WWWWWWWW\nBBBBBBBB\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\nWWWWWWWW\n"],"sample_outputs":["3\n","1\n"],"id":"7-A","difficulty":1100,"tags":["brute+force","constructive+algorithms"],"src_uid":"8b6ae2190413b23f47e2958a7d4e7bc0","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s[8];\n    for (int i = 0; i < 8; i++) {\n        cin >> s[i];\n    }\n    int count = 0;\n    for (int i = 0; i < 8; i++) {\n        if (s[i][0] == 'B') {\n            count++;\n        }\n        if (s[i][7] == 'B') {\n            count++;\n        }\n    }\n    for (int i = 0; i < 8; i++) {\n        if (s[0][i] == 'B') {\n            count++;\n        }\n        if (s[7][i] == 'B') {\n            count++;\n        }\n    }\n    cout << count << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int[][] board = new int[8][8];\n        for (int i = 0; i < 8; i++) {\n            String line = sc.nextLine();\n            for (int j = 0; j < 8; j++) {\n                board[i][j] = line.charAt(j) == 'B' ? 1 : 0;\n            }\n        }\n\n        int min = 8;\n        for (int i = 0; i < 8; i++) {\n            int count = 0;\n            for (int j = 0; j < 8; j++) {\n                count += board[i][j];\n            }\n            if (count < min) {\n                min = count;\n            }\n        }\n        for (int i = 0; i < 8; i++) {\n            int count = 0;\n            for (int j = 0; j < 8; j++) {\n                count += board[j][i];\n            }\n            if (count < min) {\n                min = count;\n            }\n        }\n\n        System.out.println(min);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    board = []\n    for i in range(8):\n        board.append(input())\n    \n    count = 0\n    for i in range(8):\n        if board[i][0] == 'B':\n            count += 1\n        if board[i][7] == 'B':\n            count += 1\n    \n    for i in range(8):\n        if board[0][i] == 'B':\n            count += 1\n        if board[7][i] == 'B':\n            count += 1\n    \n    print(count)\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\\nint main() {\\n    int a[8][8], i, j, k, l, m, n, s = 0, t = 0;\\n    for (i = 0; i < 8; i++) {\\n        for (j = 0; j < 8; j++) {\\n            scanf(\" %c \", &a[i][j]);\\n        }\\n    }\\n    for (i = 0; i < 8; i++) {\\n        for (j = 0; j < 8; j++) {\\n            if (a[i][j] == 'B') {\\n                s++;\\n            }\\n        }\\n        if (s == 8) {\\n            t++;\\n        }\\n        s = 0;\\n    }\\n    for (i = 0; i < 8; i++) {\\n        for (j = 0; j < 8; j++) {\\n            if (a[j][i] == 'B') {\\n                s++;\\n            }\\n        }\\n        if (s == 8) {\\n            t++;\\n        }\\n        s = 0;\\n    }\\n    printf(\" %d \", t);\\n    return 0;\\n}\\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = new List<string>();\n        for (int i = 0; i < 8; i++)\n        {\n            input.Add(Console.ReadLine());\n        }\n\n        var black = 0;\n        for (int i = 0; i < 8; i++)\n        {\n            for (int j = 0; j < 8; j++)\n            {\n                if (input[i][j] == 'B')\n                {\n                    black++;\n                }\n            }\n        }\n\n        Console.WriteLine(black \/ 8);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"def main\n    chessboard = []\n    for i in 0..7\n        chessboard.append(input())\n    # print(chessboard)\n    count = 0\n    for i in 0..7\n        if chessboard[i][0] == 'B' and chessboard[i][1] == 'B' and chessboard[i][2] == 'B' and chessboard[i][3] == 'B' and chessboard[i][4] == 'B' and chessboard[i][5] == 'B' and chessboard[i][6] == 'B' and chessboard[i][7] == 'B':\n            count += 1\n        if chessboard[0][i] == 'B' and chessboard[1][i] == 'B' and chessboard[2][i] == 'B' and chessboard[3][i] == 'B' and chessboard[4][i] == 'B' and chessboard[5][i] == 'B' and chessboard[6][i] == 'B' and chessboard[7][i] == 'B':\n            count += 1\n    print(count)\n\nif __name__ == '__main__':\n    main()\\n\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nvar\n  a, b, c, d, e, f, g, h: integer;\n  i, j, k, l, m, n, o, p: integer;\n  s: string;\nbegin\n  for i := 1 to 8 do\n  begin\n    readln(s);\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          a := a + 1;\n          b := b + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          c := c + 1;\n          d := d + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          e := e + 1;\n          f := f + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          g := g + 1;\n          h := h + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          i := i + 1;\n          j := j + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          k := k + 1;\n          l := l + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          m := m + 1;\n          n := n + 1;\n        end;\n  end;\n  for i := 1 to 8 do\n  begin\n    for j := 1 to 8 do\n      if s[j] = 'B' then\n        begin\n          o := o + 1;\n          p := p + 1;\n        end;\n  end;\n  writeln(min(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p));\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var m [8][8]byte\\n    for i := 0; i < 8; i++ {\\n        var s string\\n        fmt.Scan(&s)\\n        for j := 0; j < 8; j++ {\\n            m[i][j] = s[j]\\n        }\\n    }\\n    var r, c int\\n    for i := 0; i < 8; i++ {\\n        for j := 0; j < 8; j++ {\\n            if m[i][j] == 'B' {\\n                r++\\n            }\\n            if m[j][i] == 'B' {\\n                c++\\n            }\\n        }\\n    }\\n    fmt.Println(min(r, c))\\n}\\n\\nfunc min(a, b int) int {\\n    if a < b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst lines = input.split('\\n');\nconst chessboard = [];\nfor (let i = 0; i < 8; i++) {\n  chessboard.push(lines[i].split(''));\n}\nconst rows = [];\nconst columns = [];\nfor (let i = 0; i < 8; i++) {\n  let row = 0;\n  let column = 0;\n  for (let j = 0; j < 8; j++) {\n    if (chessboard[i][j] === 'B') {\n      row++;\n    }\n    if (chessboard[j][i] === 'B') {\n      column++;\n    }\n  }\n  rows.push(row);\n  columns.push(column);\n}\nconsole.log(Math.min(...rows) + Math.min(...columns));\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val input = readLine()!!.split(\"\\n\")\n    val rows = input.map { it.count { it == 'B' } }\n    val cols = input.map { it.toCharArray().map { it == 'B' }.count { it } }\n    println(Math.min(rows.maxOrNull()!!, cols.maxOrNull()!!))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n$input = file_get_contents('input.txt');\\n$input = explode(\"\\n\", $input);\\n$count = 0;\\nfor ($i = 0; $i < 8; $i++) {\\n    for ($j = 0; $j < 8; $j++) {\\n        if ($input[$i][$j] == 'B') {\\n            $count++;\\n        }\\n    }\\n}\\necho $count \/ 2;\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int[8] a;\n    int n = 0;\n    for (int i = 0; i < 8; i++) {\n        a[i] = 0;\n        for (int j = 0; j < 8; j++) {\n            char c = std.stdin.readln().strip().charAt(0);\n            if (c == 'B') {\n                a[i]++;\n            }\n        }\n    }\n    int m = 0;\n    for (int i = 0; i < 8; i++) {\n        if (a[i] == 8) {\n            m++;\n        }\n    }\n    int k = 0;\n    for (int i = 0; i < 8; i++) {\n        int s = 0;\n        for (int j = 0; j < 8; j++) {\n            if (a[j] == 8) {\n                s++;\n            }\n        }\n        if (s == 8) {\n            k++;\n        }\n    }\n    writeln(min(m, k));\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\n# 2019-01-10\\n# 2019-01-10\\n\\nuse strict;\\nuse warnings;\\n\\n# 8x8 chessboard\\n\\nsub get_row_count {\\n    my $row = shift;\\n    my $count = 0;\\n    for (my $i = 0; $i < 8; $i++) {\\n        if ($row[$i] eq 'B') {\\n            $count++;\\n        }\\n    }\\n    return $count;\\n}\\n\\nsub get_col_count {\\n    my $col = shift;\\n    my $count = 0;\\n    for (my $i = 0; $i < 8; $i++) {\\n        if ($col[$i] eq 'B') {\\n            $count++;\\n        }\\n    }\\n    return $count;\\n}\\n\\n# get input\\n\\nmy @rows = ();\\nfor (my $i = 0; $i < 8; $i++) {\\n    chomp(my $row = <STDIN>);\\n    push(@rows, $row);\\n}\\n\\n# count rows and columns\\n\\nmy $row_count = get_row_count(@rows);\\nmy $col_count = get_col_count(@rows);\\n\\n# print output\\n\\nprint $row_count + $col_count;\\n\\nexit 0;\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut board: Vec<Vec<char>> = Vec::new();\n    for _ in 0..8 {\n        let mut line = String::new();\n        io::stdin().read_line(&mut line).unwrap();\n        board.push(line.chars().collect());\n    }\n\n    let mut count = 0;\n    for i in 0..8 {\n        let mut black_count = 0;\n        for j in 0..8 {\n            if board[i][j] == 'B' {\n                black_count += 1;\n            }\n        }\n        if black_count == 8 {\n            count += 1;\n        }\n    }\n\n    for i in 0..8 {\n        let mut black_count = 0;\n        for j in 0..8 {\n            if board[j][i] == 'B' {\n                black_count += 1;\n            }\n        }\n        if black_count == 8 {\n            count += 1;\n        }\n    }\n\n    println!(\"{}\", count);\n}\n\"\"\"}]"}
{"title":"B. Memory Manager","description":"There is little time left before the release of the first national operating system BerlOS. Some of its components are not finished yet \u2014 the memory manager is among them. According to the developers' plan, in the first release the memory manager will be very simple and rectilinear. It will support three operations:   alloc n \u2014 to allocate n bytes of the memory and return the allocated block's identifier x;  erase x \u2014 to erase the block with the identifier x;  defragment \u2014 to defragment the free memory, bringing all the blocks as close to the beginning of the memory as possible and preserving their respective order; The memory model in this case is very simple. It is a sequence of m bytes, numbered for convenience from the first to the m-th.The first operation alloc n takes as the only parameter the size of the memory block that is to be allocated. While processing this operation, a free block of n successive bytes is being allocated in the memory. If the amount of such blocks is more than one, the block closest to the beginning of the memory (i.e. to the first byte) is prefered. All these bytes are marked as not free, and the memory manager returns a 32-bit integer numerical token that is the identifier of this block. If it is impossible to allocate a free block of this size, the function returns NULL.The second operation erase x takes as its parameter the identifier of some block. This operation frees the system memory, marking the bytes of this block as free for further use. In the case when this identifier does not point to the previously allocated block, which has not been erased yet, the function returns ILLEGAL_ERASE_ARGUMENT.The last operation defragment does not have any arguments and simply brings the occupied memory sections closer to the beginning of the memory without changing their respective order.In the current implementation you are to use successive integers, starting with 1, as identifiers. Each successful alloc operation procession should return following number. Unsuccessful alloc operations do not affect numeration.You are to write the implementation of the memory manager. You should output the returned value for each alloc command. You should also output ILLEGAL_ERASE_ARGUMENT for all the failed erase commands.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The first line of the input data contains two positive integers t and m (1\u2264t\u2264100;1\u2264m\u2264100), where t \u2014 the amount of operations given to the memory manager for processing, and m \u2014 the available memory size in bytes. Then there follow t lines where the operations themselves are given. The first operation is alloc n (1\u2264n\u2264100), where n is an integer. The second one is erase x, where x is an arbitrary 32-bit integer numerical token. The third operation is defragment. \n","output_spec":"Output the sequence of lines. Each line should contain either the result of alloc operation procession , or ILLEGAL_ERASE_ARGUMENT as a result of failed erase operation procession. Output lines should go in the same order in which the operations are processed. Successful procession of alloc operation should return integers, starting with 1, as the identifiers of the allocated blocks.\n","notes":null,"sample_inputs":["6 10\nalloc 5\nalloc 3\nerase 1\nalloc 6\ndefragment\nalloc 6\n"],"sample_outputs":["1\n2\nNULL\n3\n"],"id":"7-B","difficulty":1600,"tags":["implementation"],"src_uid":"a6cba17c5ddb93f6741e00280fb6c54c","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\nusing namespace std;\n\nint main() {\n    int t, m;\n    cin >> t >> m;\n    vector<int> a(m);\n    for (int i = 0; i < t; i++) {\n        string s;\n        cin >> s;\n        if (s == \"alloc\") {\n            int n;\n            cin >> n;\n            for (int j = 0; j < m; j++) {\n                if (a[j] == 0 && j + n <= m) {\n                    for (int k = j; k < j + n; k++) {\n                        a[k] = 1;\n                    }\n                    cout << j + 1 << endl;\n                    break;\n                }\n            }\n        } else if (s == \"erase\") {\n            int x;\n            cin >> x;\n            for (int j = 0; j < m; j++) {\n                if (a[j] == 1 && j == x - 1) {\n                    a[j] = 0;\n                    break;\n                }\n            }\n        } else if (s == \"defragment\") {\n            for (int i = 0; i < m; i++) {\n                if (a[i] == 0) {\n                    for (int j = i + 1; j < m; j++) {\n                        if (a[j] == 1) {\n                            a[i] = 1;\n                            a[j] = 0;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int t = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[m];\n        for (int i = 0; i < t; i++) {\n            String s = sc.next();\n            if (s.equals(\"alloc\")) {\n                int n = sc.nextInt();\n                if (n <= m) {\n                    for (int j = 0; j < m; j++) {\n                        if (a[j] == 0) {\n                            a[j] = n;\n                            System.out.println(j + 1);\n                            break;\n                        }\n                    }\n                } else {\n                    System.out.println(\"NULL\");\n                }\n            } else if (s.equals(\"erase\")) {\n                int x = sc.nextInt();\n                if (a[x - 1] != 0) {\n                    a[x - 1] = 0;\n                } else {\n                    System.out.println(\"ILLEGAL_ERASE_ARGUMENT\");\n                }\n            } else if (s.equals(\"defragment\")) {\n                for (int i = 0; i < m; i++) {\n                    if (a[i] != 0) {\n                        System.out.println(i + 1);\n                    }\n                }\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nt, m = map(int, input().split())\n\nfree = [i for i in range(m)]\n\ndef alloc(n):\n    if n > m:\n        return None\n    for i in range(m - n + 1):\n        if free[i] == 0:\n            for j in range(i, i + n):\n                free[j] = 1\n            return i + 1\n    return None\n\ndef erase(x):\n    if x < 1 or x > m or free[x - 1] == 1:\n        return \"ILLEGAL_ERASE_ARGUMENT\"\n    for i in range(x - 1, m):\n        free[i] = 0\n\nfor _ in range(t):\n    op = input()\n    if op == \"alloc\":\n        n = int(input())\n        print(alloc(n))\n    elif op == \"erase\":\n        x = int(input())\n        print(erase(x))\n    elif op == \"defragment\":\n        free.sort()\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int t, m, n, i, j, k, l, x, y, z, a[100], b[100], c[100], d[100], e[100], f[100], g[100], h[100], i[100], j[100], k[100], l[100], m[100], n[100], o[100], p[100], q[100], r[100], s[100], t[100], u[100], v[100], w[100], x[100], y[100], z[100];\n    scanf(\" %d %d \", &t, &m);\n    for (i = 0; i < t; i++) {\n        scanf(\" %s \", &n);\n        if (n == \"alloc\") {\n            scanf(\" %d \", &x);\n            if (x <= m) {\n                for (j = 0; j < x; j++) {\n                    b[j] = 1;\n                }\n                for (j = x; j < m; j++) {\n                    b[j] = 0;\n                }\n                for (j = 0; j < m; j++) {\n                    if (b[j] == 1) {\n                        printf(\" %d \", j + 1);\n                        break;\n                    }\n                }\n            } else {\n                printf(\" NULL \");\n            }\n        } else if (n == \"erase\") {\n            scanf(\" %d \", &x);\n            if (x <= m) {\n                for (j = 0; j < m; j++) {\n                    b[j] = 0;\n                }\n                for (j = 0; j < x; j++) {\n                    b[j] = 1;\n                }\n                for (j = x; j < m; j++) {\n                    b[j] = 0;\n                }\n            } else {\n                printf(\" ILLEGAL_ERASE_ARGUMENT \");\n            }\n        } else if (n == \"defragment\") {\n            for (j = 0; j < m; j++) {\n                b[j] = 0;\n            }\n            for (j = 0; j < t; j++) {\n                scanf(\" %s \", &n);\n                if (n == \"alloc\") {\n                    scanf(\" %d \", &x);\n                    if (x <= m) {\n                        for (k = 0; k < x; k++) {\n                            b[k] = 1;\n                        }\n                        for (k = x; k < m; k++) {\n                            b[k] = 0;\n                        }\n                        for (k = 0; k < m; k++) {\n                            if (b[k] == 1) {\n                                printf(\" %d \", k + 1);\n                                break;\n                            }\n                        }\n                    } else {\n                        printf(\" NULL \");\n                    }\n                } else if (n == \"erase\") {\n                    scanf(\" %d \", &x);\n                    if (x <= m) {\n                        for (k = 0; k < m; k++) {\n                            b[k] = 0;\n                        }\n                        for (k = 0; k < x; k++) {\n                            b[k] = 1;\n                        }\n                        for (k = x; k < m; k++) {\n                            b[k] = 0;\n                        }\n                    } else {\n                        printf(\" ILLEGAL_ERASE_ARGUMENT \");\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace BerlOSMemoryManager\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int t, m;\n            string[] input;\n            int[] memory;\n            int[] free;\n            int[] erase;\n            int i, j, k, n, x;\n\n            \/\/ Read input\n            input = Console.ReadLine().Split(' ');\n            t = int.Parse(input[0]);\n            m = int.Parse(input[1]);\n            memory = new int[m];\n            free = new int[m];\n            erase = new int[m];\n\n            \/\/ Initialize memory\n            for (i = 0; i < m; i++)\n            {\n                memory[i] = 0;\n                free[i] = 1;\n            }\n\n            \/\/ Process operations\n            for (i = 0; i < t; i++)\n            {\n                input = Console.ReadLine().Split(' ');\n                n = int.Parse(input[0]);\n                x = int.Parse(input[1]);\n\n                \/\/ Process alloc operation\n                if (n > 0 && n <= m)\n                {\n                    \/\/ Find first free block of size n\n                    j = 0;\n                    while (j < m && free[j] != 1)\n                    {\n                        j++;\n                    }\n\n                    \/\/ If such block exists, allocate it\n                    if (j < m)\n                    {\n                        \/\/ Mark block as allocated\n                        for (k = j; k < j + n; k++)\n                        {\n                            memory[k] = 1;\n                        }\n\n                        \/\/ Update free list\n                        for (k = j + n; k < m; k++)\n                        {\n                            free[k - n] = free[k];\n                        }\n\n                        \/\/ Print block identifier\n                        Console.WriteLine(j + 1);\n                    }\n                    \/\/ Otherwise, print NULL\n                    else\n                    {\n                        Console.WriteLine(\"NULL\");\n                    }\n                }\n\n                \/\/ Process erase operation\n                else if (x > 0 && x <= m)\n                {\n                    \/\/ Find block with given identifier\n                    j = 0;\n                    while (j < m && memory[j] != x)\n                    {\n                        j++;\n                    }\n\n                    \/\/ If such block exists, erase it\n                    if (j < m)\n                    {\n                        \/\/ Mark block as free\n                        for (k = j; k < j + n; k++)\n                        {\n                            memory[k] = 0;\n                        }\n\n                        \/\/ Update free list\n                        for (k = j; k < m; k++)\n                        {\n                            free[k] = free[k + n];\n                        }\n\n                        \/\/ Print ILLEGAL_ERASE_ARGUMENT\n                        Console.WriteLine(\"ILLEGAL_ERASE_ARGUMENT\");\n                    }\n                }\n\n                \/\/ Process defragment operation\n                else\n                {\n                    \/\/ Defragment memory\n                    for (j = 0; j < m; j++)\n                    {\n                        if (memory[j] == 1)\n                        {\n                            erase[j] = j;\n                        }\n                    }\n\n                    \/\/ Sort erase array\n                    Array.Sort(erase);\n\n                    \/\/ Reallocate memory\n                    for (j = 0; j < m; j++)\n                    {\n                        memory[j] = erase[j];\n                    }\n\n                    \/\/ Update free list\n                    for (j = 0; j < m; j++)\n                    {\n                        free[j] = 1;\n                    }\n                }\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nt, m = gets.split.map(&:to_i)\n\nblocks = []\n\ndef alloc(n)\n  if blocks.empty? || blocks[-1][0] + n > m\n    return nil\n  end\n\n  blocks.push([blocks[-1][0] + n, blocks[-1][1] + 1])\n  blocks[-1][0]\nend\n\ndef erase(i)\n  if blocks.any? { |b| b[0] == i }\n    blocks.delete_at(blocks.index { |b| b[0] == i })\n  else\n    'ILLEGAL_ERASE_ARGUMENT'\n  end\nend\n\ndef defragment\n  blocks.sort! { |a, b| a[0] <=> b[0] }\nend\n\nt.times do\n  op, n = gets.split\n  n = n.to_i\n\n  if op == 'alloc'\n    puts alloc(n)\n  elsif op == 'erase'\n    puts erase(n)\n  elsif op == 'defragment'\n    defragment\n  end\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  m, n, i, j, k, l, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z: integer;\n  a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99, a100: array[0..100] of integer;\n\nbegin\n  readln(m, n);\n  for i := 1 to m do\n    a[i] := 0;\n  for i := 1 to t do\n  begin\n    readln(k);\n    if k = 1 then\n    begin\n      readln(n);\n      for i := 1 to n do\n      begin\n        readln(a[i]);\n      end;\n      for i := 1 to n do\n      begin\n        if a[i] = 0 then\n        begin\n          for j := i to n do\n          begin\n            if a[j] = 0 then\n            begin\n              a[j] := 1;\n              break;\n            end;\n          end;\n          break;\n        end;\n      end;\n      if i = n + 1 then\n        writeln('NULL');\n      else\n        writeln(i);\n    end;\n    if k = 2 then\n    begin\n      readln(a1);\n      for i := 1 to m do\n      begin\n        if a[i] = a1 then\n        begin\n          a[i] := 0;\n          break;\n        end;\n      end;\n      if i = m + 1 then\n        writeln('ILLEGAL_ERASE_ARGUMENT');\n    end;\n    if k = 3 then\n    begin\n      for i := 1 to m do\n      begin\n        if a[i] = 0 then\n        begin\n          a[i] := 1;\n          break;\n        end;\n      end;\n    end;\n  end;\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nt, m = map(int, input().split())\n\nfree = [i for i in range(m)]\n\ndef alloc(n):\n    if n > m:\n        return None\n    for i in range(m - n + 1):\n        if free[i] == 0:\n            for j in range(n):\n                free[i + j] = 1\n            return i + 1\n    return None\n\ndef erase(x):\n    if x < 1 or x > m or free[x - 1] == 1:\n        return \"ILLEGAL_ERASE_ARGUMENT\"\n    for i in range(x - 1, m - 1):\n        free[i] = free[i + 1]\n    free[m - 1] = 0\n\nfor _ in range(t):\n    op = input()\n    if op == \"alloc\":\n        n = int(input())\n        print(alloc(n))\n    elif op == \"erase\":\n        x = int(input())\n        print(erase(x))\n    elif op == \"defragment\":\n        free.sort()\n\"\"\"}]","Kotlin":"","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$t = explode(\" \", trim(fgets(STDIN)));\n$m = $t[1];\n$arr = array_fill(0, $m, 0);\n$i = 1;\n$j = 0;\nfor ($k = 0; $k < $t[0]; $k++) {\n    $op = trim(fgets(STDIN));\n    $op = explode(\" \", $op);\n    if ($op[0] == \"alloc\") {\n        if ($op[1] <= $m - $j) {\n            for ($l = $j; $l < $j + $op[1]; $l++) {\n                $arr[$l] = $i;\n            }\n            $i++;\n            $j += $op[1];\n            echo $i - 1 . \"\\n\";\n        } else {\n            echo \"NULL\\n\";\n        }\n    } else if ($op[0] == \"erase\") {\n        if ($arr[$op[1] - 1] != 0) {\n            for ($l = $op[1] - 1; $l < $j; $l++) {\n                $arr[$l] = 0;\n            }\n            $j -= $op[1];\n        } else {\n            echo \"ILLEGAL_ERASE_ARGUMENT\\n\";\n        }\n    } else if ($op[0] == \"defragment\") {\n        for ($l = 0; $l < $m; $l++) {\n            if ($arr[$l] != 0) {\n                echo $arr[$l] . \"\\n\";\n            }\n        }\n    }\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nint main() {\n    int t, m;\n    scanf(\" %d %d \", &t, &m);\n    int a[m];\n    int i, j, k, l, n, x;\n    for (i = 0; i < m; i++) {\n        a[i] = 0;\n    }\n    for (i = 0; i < t; i++) {\n        scanf(\" %s \", &n);\n        if (n == \"alloc\") {\n            scanf(\" %d \", &x);\n            for (j = 0; j < m; j++) {\n                if (a[j] == 0) {\n                    if (j + x <= m) {\n                        for (k = j; k < j + x; k++) {\n                            a[k] = 1;\n                        }\n                        printf(\" %d \", j + 1);\n                        break;\n                    }\n                }\n            }\n        } else if (n == \"erase\") {\n            scanf(\" %d \", &x);\n            for (j = 0; j < m; j++) {\n                if (a[j] == 1) {\n                    if (j == x - 1) {\n                        a[j] = 0;\n                        break;\n                    }\n                }\n            }\n        } else if (n == \"defragment\") {\n            for (j = 0; j < m; j++) {\n                if (a[j] == 1) {\n                    for (k = j + 1; k < m; k++) {\n                        if (a[k] == 0) {\n                            a[j] = 0;\n                            a[k] = 1;\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $t, $m;\\n\\nchomp(my $line = <STDIN>);\\n($t, $m) = split(\/ \/, $line);\\n\\nmy @free = (1..$m);\\nmy @used = ();\\n\\nfor (my $i = 0; $i < $t; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    my @args = split(\/ \/, $line);\\n    my $op = $args[0];\\n    my $arg = $args[1];\\n    if ($op eq 'alloc') {\\n        if ($arg > $m) {\\n            print 'NULL';\\n        } else {\\n            my $id = shift(@free);\\n            push(@used, $id);\\n            print $id;\\n        }\\n    } elsif ($op eq 'erase') {\\n        if (grep { $_ eq $arg } @used) {\\n            delete $used[grep { $_ eq $arg } @used];\\n            push(@free, $arg);\\n        } else {\\n            print 'ILLEGAL_ERASE_ARGUMENT';\\n        }\\n    } elsif ($op eq 'defragment') {\\n        @free = sort(@free);\\n        @used = sort(@used);\\n    }\\n}\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (t, m) = read_input();\n    let mut free_blocks = HashMap::new();\n    for _ in 0..t {\n        let op = read_op();\n        match op {\n            Op::Alloc(n) => {\n                let block_id = alloc_block(n, &mut free_blocks);\n                println!(\"{}\", block_id);\n            }\n            Op::Erase(id) => {\n                if !free_blocks.contains_key(&id) {\n                    println!(\"ILLEGAL_ERASE_ARGUMENT\");\n                } else {\n                    free_blocks.remove(&id);\n                }\n            }\n            Op::Defragment => {\n                defragment(&mut free_blocks);\n            }\n        }\n    }\n}\n\nfn read_input() -> (usize, usize) {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let mut tokens = input.split_whitespace();\n    let t = tokens.next().unwrap().parse().unwrap();\n    let m = tokens.next().unwrap().parse().unwrap();\n    (t, m)\n}\n\nfn read_op() -> Op {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let op = input.trim().to_lowercase();\n    match op {\n        \"alloc\" => Op::Alloc(read_num()),\n        \"erase\" => Op::Erase(read_num()),\n        \"defragment\" => Op::Defragment,\n        _ => panic!(\"Unknown operation\"),\n    }\n}\n\nfn read_num() -> usize {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    input.trim().parse().unwrap()\n}\n\nfn alloc_block(n: usize, free_blocks: &mut HashMap<usize, usize>) -> usize {\n    let mut free_block_id = 1;\n    while free_block_id <= m {\n        if !free_blocks.contains_key(&free_block_id) {\n            break;\n        }\n        free_block_id += 1;\n    }\n    if free_block_id > m {\n        return 0;\n    }\n    free_blocks.insert(free_block_id, n);\n    free_block_id\n}\n\nfn defragment(free_blocks: &mut HashMap<usize, usize>) {\n    let mut free_blocks_vec: Vec<(usize, usize)> = free_blocks.iter().collect();\n    free_blocks_vec.sort_by(|a, b| a.1.cmp(&b.1));\n    free_blocks.clear();\n    for (block_id, block_size) in free_blocks_vec {\n        free_blocks.insert(block_id, block_size);\n    }\n}\n\nenum Op {\n    Alloc(usize),\n    Erase(usize),\n    Defragment,\n}\n\"\"\"}]"}
{"title":"E. Defining Macros","description":"Most C\/C++ programmers know about excellent opportunities that preprocessor #define directives give; but many know as well about the problems that can arise because of their careless use.In this problem we consider the following model of #define constructions (also called macros). Each macro has its name and value. The generic syntax for declaring a macro is the following:#define macro_name macro_valueAfter the macro has been declared, \"macro_name\" is replaced with \"macro_value\" each time it is met in the program (only the whole tokens can be replaced; i.e. \"macro_name\" is replaced only when it is surrounded by spaces or other non-alphabetic symbol). A \"macro_value\" within our model can only be an arithmetic expression consisting of variables, four arithmetic operations, brackets, and also the names of previously declared macros (in this case replacement is performed sequentially). The process of replacing macros with their values is called substitution.One of the main problems arising while using macros \u2014 the situation when as a result of substitution we get an arithmetic expression with the changed order of calculation because of different priorities of the operations.Let's consider the following example. Say, we declared such a #define construction:#define sum x + yand further in the program the expression \"2 * sum\" is calculated. After macro substitution is performed we get \"2 * x + y\", instead of intuitively expected \"2 * (x + y)\".Let's call the situation \"suspicious\", if after the macro substitution the order of calculation changes, falling outside the bounds of some macro. Thus, your task is to find out by the given set of #define definitions and the given expression if this expression is suspicious or not.Let's speak more formally. We should perform an ordinary macros substitution in the given expression. Moreover, we should perform a \"safe\" macros substitution in the expression, putting in brackets each macro value; after this, guided by arithmetic rules of brackets expansion, we can omit some of the brackets. If there exist a way to get an expression, absolutely coinciding with the expression that is the result of an ordinary substitution (character-by-character, but ignoring spaces), then this expression and the macros system are called correct, otherwise \u2014 suspicious.Note that we consider the \"\/\" operation as the usual mathematical division, not the integer division like in C\/C++. That's why, for example, in the expression \"a*(b\/c)\" we can omit brackets to get the expression \"a*b\/c\".","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains the only number n (0\u2264n\u2264100) \u2014 the amount of #define constructions in the given program.\nThen there follow n lines, each of them contains just one #define construction. Each construction has the following syntax:\n#define name expression\nwhere\n  name \u2014 the macro name,  expression \u2014 the expression with which the given macro will be replaced. An expression is a non-empty string, containing digits,names of variables, names of previously declared macros, round brackets and operational signs +-*\/. It is guaranteed that the expression (before and after macros substitution) is a correct arithmetic expression, having no unary operations. The expression contains only non-negative integers, not exceeding 10^9. All the names (#define constructions' names and names of their arguments) are strings of case-sensitive Latin characters. It is guaranteed that the name of any variable is different from any #define construction.\nThen, the last line contains an expression that you are to check. This expression is non-empty and satisfies the same limitations as the expressions in #define constructions.\nThe input lines may contain any number of spaces anywhere, providing these spaces do not break the word \"define\" or the names of constructions and variables. In particular, there can be any number of spaces before and after the \"#\" symbol.\nThe length of any line from the input file does not exceed 100 characters.\n","output_spec":"Output \"OK\", if the expression is correct according to the above given criterion, otherwise output \"Suspicious\".\n","notes":null,"sample_inputs":["1\n#define sum x + y\n1 * sum\n","1\n#define sum  (x + y)\nsum - sum\n","4\n#define sum  x + y\n#define mul  a * b\n#define div  a \/ b\n#define expr sum + mul * div * mul\nexpr\n","3\n#define SumSafe   (a+b)\n#define DivUnsafe  a\/b\n#define DenominatorUnsafe  a*b\n((SumSafe) + DivUnsafe\/DivUnsafe + x\/DenominatorUnsafe)\n"],"sample_outputs":["Suspicious\n","OK\n","OK\n","Suspicious\n"],"id":"7-E","difficulty":2600,"tags":["dp","expression+parsing","implementation"],"src_uid":"c23d3ec2b9fb4b4d169bc8053bfd000e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\nn = int(input())\ndef dfs(s, t):\n    if s == t:\n        return s\n    for i in range(n):\n        if s in d[i]:\n            return dfs(d[i][s], t)\n    return None\n\nd = {}\nfor i in range(n):\n    s = input()\n    d[i] = {}\n    for j in range(len(s)):\n        if s[j] == '(':\n            d[i][s[j+1:s.find(')')]] = s[:j]\n\ns = input()\nt = s\nfor i in range(len(s)):\n    if s[i] == '(':\n        t = t[:i] + dfs(s[i+1:s.find(')')], s[i+1:s.find(')')]) + t[s.find(')')+1:]\n\nif t == s:\n    print('OK')\nelse:\n    print('Suspicious')\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        String[] macros = new String[n];\n        for (int i = 0; i < n; i++) {\n            macros[i] = sc.nextLine();\n        }\n        String expr = sc.nextLine();\n        String safeExpr = expr;\n        for (int i = 0; i < n; i++) {\n            safeExpr = safeExpr.replaceAll(macros[i].split(\" \")[0], \"(\" + macros[i].split(\" \")[1] + \")\");\n        }\n        boolean isSuspicious = false;\n        for (int i = 0; i < n; i++) {\n            String[] macro = macros[i].split(\" \");\n            String macroExpr = macro[1];\n            int left = 0;\n            int right = 0;\n            for (int j = 0; j < macroExpr.length(); j++) {\n                if (macroExpr.charAt(j) == '(') {\n                    left++;\n                } else if (macroExpr.charAt(j) == ')') {\n                    right++;\n                }\n            }\n            if (left != right) {\n                isSuspicious = true;\n            }\n        }\n        if (isSuspicious) {\n            System.out.println(\"Suspicious\");\n        } else {\n            System.out.println(\"OK\");\n        }\n    }\n}\n\"\"\"}]","Python":"","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Preprocessor\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            Dictionary<string, string> macros = new Dictionary<string, string>();\n            for (int i = 0; i < n; i++)\n            {\n                string[] line = Console.ReadLine().Split(' ');\n                macros.Add(line[0], line[1]);\n            }\n            string expr = Console.ReadLine();\n            string safeExpr = expr;\n            foreach (var kv in macros)\n            {\n                safeExpr = safeExpr.Replace(kv.Key, \"(\" + kv.Value + \")\");\n            }\n            string safeExpr2 = safeExpr;\n            int count = 0;\n            for (int i = 0; i < safeExpr.Length; i++)\n            {\n                if (safeExpr[i] == '(')\n                {\n                    count++;\n                }\n                else if (safeExpr[i] == ')')\n                {\n                    count--;\n                }\n                if (count == 0)\n                {\n                    safeExpr2 = safeExpr2.Substring(i + 1);\n                    break;\n                }\n            }\n            if (expr == safeExpr2)\n            {\n                Console.WriteLine(\"OK\");\n            }\n            else\n            {\n                Console.WriteLine(\"Suspicious\");\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scan(&n)\n\tvar m map[string]string\n\tfor i := 0; i < n; i++ {\n\t\tvar s, v string\n\t\tfmt.Scan(&s, &v)\n\t\tm[s] = v\n\t}\n\tvar e string\n\tfmt.Scan(&e)\n\tvar s1, s2 string\n\tfor i := 0; i < len(e); i++ {\n\t\tif e[i] == '(' {\n\t\t\ts1 = e[i:]\n\t\t\tbreak\n\t\t}\n\t}\n\tfor i := len(e) - 1; i >= 0; i-- {\n\t\tif e[i] == ')' {\n\t\t\ts2 = e[:i+1]\n\t\t\tbreak\n\t\t}\n\t}\n\tvar s3 string\n\tfor i := 0; i < len(s1); i++ {\n\t\tif s1[i] == '(' || s1[i] == ')' {\n\t\t\tcontinue\n\t\t}\n\t\tif s1[i] == '+' || s1[i] == '-' || s1[i] == '*' || s1[i] == '\/' {\n\t\t\ts3 += \"(\" + s1[i:] + \")\"\n\t\t\tbreak\n\t\t}\n\t\ts3 += string(s1[i])\n\t}\n\tfor i := 0; i < len(s2); i++ {\n\t\tif s2[i] == '(' || s2[i] == ')' {\n\t\t\tcontinue\n\t\t}\n\t\tif s2[i] == '+' || s2[i] == '-' || s2[i] == '*' || s2[i] == '\/' {\n\t\t\ts3 += \"(\" + s2[i:] + \")\"\n\t\t\tbreak\n\t\t}\n\t\ts3 += string(s2[i])\n\t}\n\tif s3 == e {\n\t\tfmt.Println(\"OK\")\n\t} else {\n\t\tfmt.Println(\"Suspicious\")\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"\"\"\nn = int(input())\ndef dfs(s, m):\n    if s == '(':\n        return dfs(m[s], m)\n    elif s == ')':\n        return m[s]\n    elif s.isdigit():\n        return int(s)\n    elif s in m:\n        return m[s]\n    else:\n        return s\n\ndef solve(s):\n    m = {}\n    for i in range(n):\n        s1, s2 = input().split()\n        m[s1] = dfs(s2, m)\n    return solve_safe(s, m) == solve_unsafe(s, m)\n\ndef solve_safe(s, m):\n    s = '(' + s + ')'\n    stack = []\n    for c in s:\n        if c == '(':\n            stack.append(c)\n        elif c == ')':\n            stack.pop()\n        else:\n            stack.append(c)\n    return ''.join(stack)\n\ndef solve_unsafe(s, m):\n    s = s.replace('(', ' ( ').replace(')', ' ) ')\n    return s\n\nprint('Suspicious' if solve('1 * sum') else 'OK')\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine().toInt()\n    val macros = mutableMapOf<String, String>()\n    for (i in 0 until n) {\n        val line = readLine()\n        val (name, value) = line.split(\" \")\n        macros[name] = value\n    }\n    val expr = readLine()\n    val expr1 = expr.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\)\"), \"($1)\")\n    val expr2 = expr1.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\"), \"($1($2))\")\n    val expr3 = expr2.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\"), \"($1($2($3)))\")\n    val expr4 = expr3.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4)))\")\n    val expr5 = expr4.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4($5)))\")\n    val expr6 = expr5.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4($5($6)))\")\n    val expr7 = expr6.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4($5($6($7)))\")\n    val expr8 = expr7.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4($5($6($7($8)))\")\n    val expr9 = expr8.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4($5($6($7($8($9)))\")\n    val expr10 = expr9.replace(Regex(\"(\\\\w+)\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\s*\\\\(\\\\w+\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\\\\)\"), \"($1($2($3($4($5($6($7($8($9($10)))\")\n    if (expr == expr10) {\n        println(\"OK\")\n    } else {\n        println(\"Suspicious\")\n    }\n}\n\"\"\"}]","PHP":"","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"\"\"\nimport std.stdio;\nimport std.algorithm;\nimport std.array;\nimport std.conv;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto macros = new array(n);\n    for (int i = 0; i < n; i++) {\n        string s;\n        scanf(\" #define %s \", s);\n        macros[i] = s;\n    }\n    string expr;\n    scanf(\" %s \", expr);\n    auto expr_safe = expr;\n    foreach (macro in macros) {\n        expr_safe = expr_safe.replaceAll(macro, \"(\" ~ macro ~ \")\");\n    }\n    expr_safe = expr_safe.replaceAll(\"(\", \"\");\n    expr_safe = expr_safe.replaceAll(\")\", \"\");\n    expr_safe = expr_safe.replaceAll(\" \", \"\");\n    expr = expr.replaceAll(\"(\", \"\");\n    expr = expr.replaceAll(\")\", \"\");\n    expr = expr.replaceAll(\" \", \"\");\n    if (expr == expr_safe) {\n        printf(\" OK\\n\");\n    } else {\n        printf(\" Suspicious\\n\");\n    }\n}\n\"\"\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n = <>;\\nmy @defines = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $line = <>;\\n    my ($name, $value) = split(\/\\s+\/, $line);\\n    push(@defines, [$name, $value]);\\n}\\n\\nmy $expr = <>;\\n\\nmy $safe_expr = $expr;\\nfor (my $i = 0; $i < $n; $i++) {\\n    $safe_expr =~ s\/\\b$defines[$i][0]\\b\/$defines[$i][1]\/g;\\n}\\n\\nmy $safe_expr_without_brackets = $safe_expr;\\n$safe_expr_without_brackets =~ s\/\\(([^()]*)\\)\/$1\/g;\\n\\nif ($expr eq $safe_expr_without_brackets) {\\n    print \\\"OK\\\\n\\\";\\n} else {\\n    print \\\"Suspicious\\\\n\\\";\\n}\\n\"}]}","Rust":""}
{"title":"C. Average Score","description":"After the educational reform Polycarp studies only two subjects at school, Safety Studies and PE (Physical Education). During the long months of the fourth term, he received n marks in them. When teachers wrote a mark in the journal, they didn't write in what subject the mark was for, they just wrote the mark.Now it's time to show the journal to his strict parents. Polycarp knows that recently at the Parent Meeting the parents were told that he received a Safety Studies marks and b PE marks (a+b=n). Now Polycarp wants to write a subject's name in front of each mark so that:   there are exactly a Safety Studies marks,  there are exactly b PE marks,  the total average score in both subjects is maximum. An average subject grade is the sum of all marks in it, divided by the number of them. Of course, the division is performed in real numbers without rounding up or down. Polycarp aims to maximize the x1+x2, where x1 is the average score in the first subject (Safety Studies), and x2 is the average score in the second one (Physical Education).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (2\u2264n\u226410^5), n is the number of marks in Polycarp's Journal. The second line contains two positive integers a,b (1\u2264a,b\u2264n-1,a+b=n). The third line contains a sequence of integers t1,t2,...,tn (1\u2264ti\u22645), they are Polycarp's marks.\n","output_spec":"Print the sequence of integers f1,f2,...,fn, where fi (1\u2264fi\u22642) is the number of a subject to which the i-th mark should be attributed. If there are several possible solutions, then print such that the sequence f1,f2,...,fn is the smallest lexicographically.\nThe sequence p1,p2,...,pn is lexicographically less than q1,q2,...,qn if there exists such j (1\u2264j\u2264n) that pi=qi for all 1\u2264i<j, \u0430nd pj<qj.\n","notes":"In the first sample the average score in the first subject is equal to 4, and in the second one \u2014 to 4.5. The total average score is 8.5.\n","sample_inputs":["5\n3 2\n4 4 5 4 4\n","4\n2 2\n3 5 4 5\n","6\n1 5\n4 4 4 5 4 4\n"],"sample_outputs":["1 1 2 1 2 ","1 1 2 2 ","2 2 2 1 2 2 "],"id":"81-C","difficulty":1700,"tags":["greedy","math","sortings"],"src_uid":"867facaa8bcdfcb53ec3647387f7d23f","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, a, b;\n    cin >> n >> a >> b;\n    int t[n];\n    for (int i = 0; i < n; i++) {\n        cin >> t[i];\n    }\n    sort(t, t + n);\n    int i = 0, j = n - 1;\n    int ans[n];\n    for (int k = 0; k < n; k++) {\n        if (k < a) {\n            ans[k] = 1;\n        } else {\n            ans[k] = 2;\n        }\n    }\n    for (int k = 0; k < n; k++) {\n        cout << ans[k] << \" \";\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int a = sc.nextInt();\n        int b = sc.nextInt();\n        int[] t = new int[n];\n        for (int i = 0; i < n; i++) {\n            t[i] = sc.nextInt();\n        }\n        int[] f = new int[n];\n        int[] s = new int[n];\n        int[] p = new int[n];\n        int[] q = new int[n];\n        for (int i = 0; i < n; i++) {\n            f[i] = 0;\n            s[i] = 0;\n            p[i] = 0;\n            q[i] = 0;\n        }\n        for (int i = 0; i < n; i++) {\n            if (t[i] >= 4) {\n                f[i] = 1;\n            } else {\n                s[i] = 1;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (f[i] == 1) {\n                p[i] = 1;\n            } else {\n                q[i] = 1;\n            }\n        }\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            if (f[i] == 1) {\n                max = Math.max(max, p[i]);\n            } else {\n                max = Math.max(max, q[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (f[i] == 1) {\n                System.out.print(1);\n            } else {\n                System.out.print(2);\n            }\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na, b = map(int, input().split())\nt = list(map(int, input().split()))\nt.sort()\n\nans = [0] * n\nfor i in range(n):\n    if i < a:\n        ans[i] = 1\n    else:\n        ans[i] = 2\n\nprint(*ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n=int(input())\na,b=map(int,input().split())\nt=list(map(int,input().split()))\nt.sort()\nt1=t[:a]\nt2=t[a:]\nt1.sort(reverse=True)\nt2.sort(reverse=True)\nprint(*t1,*t2)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        var a = int.Parse(Console.ReadLine().Split(' ')[0]);\n        var b = int.Parse(Console.ReadLine().Split(' ')[1]);\n        var t = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n        var t1 = new List<int>();\n        var t2 = new List<int>();\n        for (int i = 0; i < n; i++)\n        {\n            if (i < a)\n            {\n                t1.Add(t[i]);\n            }\n            else\n            {\n                t2.Add(t[i]);\n            }\n        }\n        t1.Sort();\n        t2.Sort();\n        var ans = new List<int>();\n        for (int i = 0; i < a; i++)\n        {\n            ans.Add(1);\n        }\n        for (int i = 0; i < b; i++)\n        {\n            ans.Add(2);\n        }\n        Console.WriteLine(string.Join(\" \", ans));\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na, b = gets.split.map(&:to_i)\nt = gets.split.map(&:to_i)\n\nt.sort!\n\nans = []\n\ni = 0\nwhile i < a\n  ans << 1\n  i += 1\nend\n\ni = 0\nwhile i < b\n  ans << 2\n  i += 1\nend\n\nputs ans.join(' ')\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, a, b int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &a, &b)\\n    var ts, tp []int\\n    for i := 0; i < n; i++ {\\n        var t int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &t)\\n        if i < a {\\n            ts = append(ts, t)\\n        } else {\\n            tp = append(tp, t)\\n        }\\n    }\\n    fmt.Println(ts)\\n    fmt.Println(tp)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const n = parseInt(line);\n  const [a, b] = line.split(' ').map(x => parseInt(x));\n  const t = line.split(' ').map(x => parseInt(x));\n  const t1 = t.slice(0, a);\n  const t2 = t.slice(a, a + b);\n  const t3 = t.slice(a + b);\n  const t1_sum = t1.reduce((a, b) => a + b);\n  const t2_sum = t2.reduce((a, b) => a + b);\n  const t3_sum = t3.reduce((a, b) => a + b);\n  const t1_avg = t1_sum \/ a;\n  const t2_avg = t2_sum \/ b;\n  const t3_avg = t3_sum \/ (n - a - b);\n  const max_sum = Math.max(t1_avg + t2_avg, t1_avg + t3_avg, t2_avg + t3_avg);\n  if (max_sum === t1_avg + t2_avg) {\n    console.log(t1.join(' ') + ' ' + t2.join(' ') + ' ' + t3.join(' '));\n  } else if (max_sum === t1_avg + t3_avg) {\n    console.log(t1.join(' ') + ' ' + t3.join(' ') + ' ' + t2.join(' '));\n  } else {\n    console.log(t2.join(' ') + ' ' + t3.join(' ') + ' ' + t1.join(' '));\n  }\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine().toInt()\n    val (a, b) = readLine().split(\" \").map { it.toInt() }\n    val t = readLine().split(\" \").map { it.toInt() }.sorted()\n    val s = t.take(a)\n    val p = t.drop(a).take(b)\n    println(s.joinToString(\" \") + p.joinToString(\" \"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\nlist($a, $b) = explode(' ', trim(fgets(STDIN)));\n$t = explode(' ', trim(fgets(STDIN)));\n$t = array_map('intval', $t);\n$t = array_reverse($t);\n$ans = [];\n$i = 0;\nwhile ($i < $n) {\n    if ($a > 0) {\n        $ans[] = '1';\n        $a--;\n    } else {\n        $ans[] = '2';\n        $b--;\n    }\n    $i++;\n}\necho implode(' ', $ans);\n?>\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nchomp $n;\nmy @a = split(' ', <STDIN>);\nchomp @a;\nmy $a = $a[0];\nmy $b = $a[1];\nmy @t = split(' ', <STDIN>);\nchomp @t;\n\nmy @f = ();\nmy $i = 0;\nwhile ($i < $n) {\n    if ($i < $a) {\n        push @f, 1;\n    } else {\n        push @f, 2;\n    }\n    $i++;\n}\n\nmy $s1 = 0;\nmy $s2 = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($f[$i] == 1) {\n        $s1 += $t[$i];\n    } else {\n        $s2 += $t[$i];\n    }\n}\n\nmy $s = $s1 + $s2;\nmy $m = $s \/ $n;\n\nmy $i = 0;\nwhile ($i < $n) {\n    if ($t[$i] > $m) {\n        push @f, 1;\n    } else {\n        push @f, 2;\n    }\n    $i++;\n}\n\nprint join(' ', @f);\nprint \"\\n\";\"}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n\n    let n: usize = stdin.lines().next().unwrap().unwrap().parse().unwrap();\n    let (a, b): (usize, usize) = stdin.lines().next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect_tuple().unwrap();\n    let t: Vec<usize> = stdin.lines().next().unwrap().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect();\n\n    let mut s1: Vec<usize> = vec![0; n];\n    let mut s2: Vec<usize> = vec![0; n];\n    for i in 0..n {\n        if i < a {\n            s1[i] = t[i];\n        } else {\n            s2[i - a] = t[i];\n        }\n    }\n\n    let mut s1_sum: f64 = 0.0;\n    let mut s2_sum: f64 = 0.0;\n    for i in 0..n {\n        s1_sum += s1[i] as f64;\n        s2_sum += s2[i] as f64;\n    }\n\n    let mut ans: Vec<usize> = vec![0; n];\n    for i in 0..n {\n        if s1_sum \/ a > s2_sum \/ b {\n            ans[i] = 1;\n            s1_sum -= s1[i] as f64;\n            a -= 1;\n        } else {\n            ans[i] = 2;\n            s2_sum -= s2[i] as f64;\n            b -= 1;\n        }\n    }\n\n    for i in 0..n {\n        print!(\"{}\", ans[i]);\n    }\n    println!();\n}\n\"\"\"}]"}
{"title":"A. Double Cola","description":"Sheldon, Leonard, Penny, Rajesh and Howard are in the queue for a \"Double Cola\" drink vending machine; there are no other people in the queue. The first one in the queue (Sheldon) buys a can, drinks it and doubles! The resulting two Sheldons go to the end of the queue. Then the next in the queue (Leonard) buys a can, drinks it and gets to the end of the queue as two Leonards, and so on. This process continues ad infinitum.For example, Penny drinks the third can of cola and the queue will look like this: Rajesh, Howard, Sheldon, Sheldon, Leonard, Leonard, Penny, Penny.Write a program that will print the name of a man who will drink the n-th can.Note that in the very beginning the queue looks like that: Sheldon, Leonard, Penny, Rajesh, Howard. The first person is Sheldon.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The input data consist of a single integer n (1\u2264n\u226410^9).\nIt is guaranteed that the pretests check the spelling of all the five names, that is, that they contain all the five possible answers.\n","output_spec":"Print the single line \u2014 the name of the person who drinks the n-th can of cola. The cans are numbered starting from 1. Please note that you should spell the names like this: \"Sheldon\", \"Leonard\", \"Penny\", \"Rajesh\", \"Howard\" (without the quotes). In that order precisely the friends are in the queue initially.\n","notes":null,"sample_inputs":["1\n","6\n","1802\n"],"sample_outputs":["Sheldon\n","Sheldon\n","Penny\n"],"id":"82-A","difficulty":1100,"tags":["implementation","math"],"src_uid":"023b169765e81d896cdc1184e5a82b22","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int n;\\n    cin >> n;\\n    int i = 0;\\n    int j = 0;\\n    int k = 0;\\n    int l = 0;\\n    int m = 0;\\n    while (n > 0) {\\n        if (n % 2 == 0) {\\n            n \/= 2;\\n            i++;\\n        } else {\\n            n -= 1;\\n            j++;\\n        }\\n    }\\n    if (i > j && i > k && i > l && i > m) {\\n        cout << \\\"Sheldon\\\" << endl;\\n    } else if (j > i && j > k && j > l && j > m) {\\n        cout << \\\"Leonard\\\" << endl;\\n    } else if (k > i && k > j && k > l && k > m) {\\n        cout << \\\"Penny\\\" << endl;\\n    } else if (l > i && l > j && l > k && l > m) {\\n        cout << \\\"Rajesh\\\" << endl;\\n    } else {\\n        cout << \\\"Howard\\\" << endl;\\n    }\\n    return 0;\\n}\\n\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] people = new int[]{0, 0, 0, 0, 0};\n        for (int i = 0; i < n; i++) {\n            int index = (i + 1) % 5;\n            people[index]++;\n        }\n        int max = 0;\n        int maxIndex = 0;\n        for (int i = 0; i < 5; i++) {\n            if (people[i] > max) {\n                max = people[i];\n                maxIndex = i;\n            }\n        }\n        System.out.println(names[maxIndex]);\n    }\n\n    private static final String[] names = {\"Sheldon\", \"Leonard\", \"Penny\", \"Rajesh\", \"Howard\"};\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef get_name(n):\n    if n % 5 == 0:\n        return \"Sheldon\"\n    elif n % 5 == 1:\n        return \"Leonard\"\n    elif n % 5 == 2:\n        return \"Penny\"\n    elif n % 5 == 3:\n        return \"Rajesh\"\n    else:\n        return \"Howard\"\n\nprint(get_name(n))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, i, j, k, l, m, a[5] = {0, 0, 0, 0, 0};\n    scanf(\" %d \", &n);\n    for (i = 1; i <= n; i++) {\n        if (i % 2 == 0) {\n            a[0]++;\n        } else {\n            a[1]++;\n        }\n    }\n    for (j = 2; j <= 4; j++) {\n        for (k = 1; k <= a[j - 1]; k++) {\n            a[j]++;\n        }\n    }\n    for (l = 0; l <= 4; l++) {\n        if (a[l] == n) {\n            printf(\" %s \", (l == 0) ? \"Sheldon\" : (l == 1) ? \"Leonard\" : (l == 2) ? \"Penny\" : (l == 3) ? \"Rajesh\" : \"Howard\");\n        }\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace DoubleCola\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] people = new int[5] { 1, 2, 3, 4, 5 };\n            int i = 0;\n            while (n > 0)\n            {\n                if (n % 2 == 0)\n                {\n                    n = n \/ 2;\n                }\n                else\n                {\n                    n = (n - 1) \/ 2;\n                    i++;\n                }\n            }\n            Console.WriteLine(people[i]);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nnames = [\"Sheldon\", \"Leonard\", \"Penny\", \"Rajesh\", \"Howard\"]\n\ni = 0\nwhile n > 0\n  n -= 1\n  i += 1\n  if i == 5\n    i = 0\n  end\nend\n\nputs names[i]\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program DoubleCola;\nuses SysUtils;\nvar\n  n, i, j, k, m, t: Integer;\nbegin\n  Readln(n);\n  m := 0;\n  for i := 1 to n do\n  begin\n    t := 0;\n    for j := 1 to 5 do\n    begin\n      k := m + t;\n      if (k mod 2 = 0) and (k <= n) then\n      begin\n        Writeln(Persons[j]);\n        Exit;\n      end;\n      t := t + 2;\n    end;\n    m := m + 5;\n  end;\nend.\n\nPersons: array[1..5] of string = ('Sheldon', 'Leonard', 'Penny', 'Rajesh', 'Howard');\"}]}","Go":"[{\"version\": \"1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    n := 0\\n    var names = []string{\\\"Sheldon\\\", \\\"Leonard\\\", \\\"Penny\\\", \\\"Rajesh\\\", \\\"Howard\\\"}\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    for i := 0; i < n; i++ {\\n        n = (n + 1) \/ 2\\n    }\\n    fmt.Println(names[n-1])\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const names = ['Sheldon', 'Leonard', 'Penny', 'Rajesh', 'Howard'];\\n\\nconst n = parseInt(process.argv[2]);\\n\\nconsole.log(names[(n - 1) % 5]);\\n\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val names = arrayOf(\"Sheldon\", \"Leonard\", \"Penny\", \"Rajesh\", \"Howard\")\n    var i = 0\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n \/= 2\n        } else {\n            n -= 1\n        }\n        i++\n    }\n    println(names[i])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$names = ['Sheldon', 'Leonard', 'Penny', 'Rajesh', 'Howard'];\\n\\n$n = (int)trim(fgets(STDIN));\\n\\n$i = 0;\\n\\nwhile ($n > 0) {\\n    if ($n % 2 == 0) {\\n        $n = $n \/ 2;\\n    } else {\\n        $n = $n - 1;\\n    }\\n    $i++;\\n}\\n\\necho $names[$i - 1];\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    int l = 0;\n    int m = 0;\n    while (n > 0) {\n        if (n % 2 == 0) {\n            n = n \/ 2;\n            i++;\n        } else {\n            n = n - 1;\n            j++;\n        }\n    }\n    while (i > 0) {\n        printf(\" Sheldon \");\n        i--;\n    }\n    while (j > 0) {\n        printf(\" Leonard \");\n        j--;\n    }\n    while (k > 0) {\n        printf(\" Penny \");\n        k--;\n    }\n    while (l > 0) {\n        printf(\" Rajesh \");\n        l--;\n    }\n    while (m > 0) {\n        printf(\" Howard \");\n        m--;\n    }\n    printf(\"\\n\");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $n = <STDIN>;\n\nmy @names = qw(Sheldon Leonard Penny Rajesh Howard);\n\nmy $i = 0;\nwhile ($n > 0) {\n    if ($n % 2 == 0) {\n        $n = $n \/ 2;\n    } else {\n        $n = $n - 1;\n    }\n    $i++;\n}\n\nprint $names[$i - 1];\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n: u64 = read!();\n    let mut queue = vec![\"Sheldon\", \"Leonard\", \"Penny\", \"Rajesh\", \"Howard\"];\n    let mut i = 0;\n    while n > 0 {\n        if n % 2 == 0 {\n            n \/= 2;\n        } else {\n            n -= 1;\n        }\n        i += 1;\n    }\n    println!(\"{}\", queue[i]);\n}\n\"\"\"}]"}
{"title":"D. Two out of Three","description":"Vasya has recently developed a new algorithm to optimize the reception of customer flow and he considered the following problem.Let the queue to the cashier contain n people, at that each of them is characterized by a positive integer ai \u2014 that is the time needed to work with this customer. What is special about this very cashier is that it can serve two customers simultaneously. However, if two customers need ai and aj of time to be served, the time needed to work with both of them customers is equal to max(ai,aj). Please note that working with customers is an uninterruptable process, and therefore, if two people simultaneously come to the cashier, it means that they begin to be served simultaneously, and will both finish simultaneously (it is possible that one of them will have to wait).Vasya used in his algorithm an ingenious heuristic \u2014 as long as the queue has more than one person waiting, then some two people of the first three standing in front of the queue are sent simultaneously. If the queue has only one customer number i, then he goes to the cashier, and is served within ai of time. Note that the total number of phases of serving a customer will always be equal to \u2308n\/2\u2309.Vasya thinks that this method will help to cope with the queues we all hate. That's why he asked you to work out a program that will determine the minimum time during which the whole queue will be served using this algorithm.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of the input file contains a single number n (1\u2264n\u22641000), which is the number of people in the sequence. The second line contains space-separated integers a1,a2,...,an (1\u2264ai\u226410^6). The people are numbered starting from the cashier to the end of the queue.\n","output_spec":"Print on the first line a single number \u2014 the minimum time needed to process all n people. Then on \u2308n\/2\u2309 lines print the order in which customers will be served. Each line (probably, except for the last one) must contain two numbers separated by a space \u2014 the numbers of customers who will be served at the current stage of processing. If n is odd, then the last line must contain a single number \u2014 the number of the last served customer in the queue. The customers are numbered starting from 1.\n","notes":null,"sample_inputs":["4\n1 2 3 4\n","5\n2 4 3 1 4\n"],"sample_outputs":["6\n1 2\n3 4\n","8\n1 3\n2 5\n4\n"],"id":"82-D","difficulty":2000,"tags":["dp"],"src_uid":"cc4b6ce9155e96c4b0ecb68e9d6d4ec0","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    sort(a, a + n);\n    int ans = 0;\n    for (int i = 0; i < n; i += 2) {\n        ans += max(a[i], a[i + 1]);\n        cout << a[i] << \" \" << a[i + 1] << endl;\n    }\n    if (n % 2 == 1) {\n        cout << a[n - 1] << endl;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n\/\/2):\n    ans += max(a[i], a[i+1])\nprint(ans)\nfor i in range(n\/\/2):\n    print(a[i], a[i+1])\nif n%2 == 1:\n    print(a[n\/\/2])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    int i = 0;\n    while (i < n) {\n        if (i < 2) {\n            ans += a[i];\n            i++;\n        } else {\n            int max = a[i];\n            int j = i + 1;\n            while (j < i + 3 && j < n) {\n                if (a[j] > max) {\n                    max = a[j];\n                }\n                j++;\n            }\n            ans += max;\n            i = j;\n        }\n    }\n    printf(\" %d\\n \", ans);\n    for (int i = 0; i < n \/ 2; i++) {\n        if (i < n \/ 2 - 1) {\n            printf(\" %d %d\\n \", i + 1, i + 2);\n        } else {\n            printf(\" %d\\n \", i + 1);\n        }\n    }\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\ndef solve(a, n)\n    if n == 1\n        return a[0]\n    end\n\n    ans = 0\n    for i in 0..n-2\n        ans = [ans, a[i] + solve(a[i+2..n], n-i-2)].max\n    end\n\n    return ans\nend\n\nputs solve(a, n)\n\nfor i in 0..n-1\n    if i % 2 == 0\n        puts a[i] + a[i+1]\n    else\n        puts a[i]\n    end\nend\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &a[i])\\n    }\\n    var ans int\\n    for i := 0; i < n; i++ {\\n        if i < n-1 {\\n            ans += max(a[i], a[i+1])\\n        } else {\\n            ans += a[i]\\n        }\\n    }\\n    fmt.Println(ans)\\n    for i := 0; i < n\/2; i++ {\\n        if i < n-1 {\\n            fmt.Println(a[i], a[i+1])\\n        } else {\\n            fmt.Println(a[i])\\n        }\\n    }\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst ans = [];\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n  dp[i] = Math.max(dp[i - 1], a[i - 1]);\n  if (i >= 3) {\n    dp[i] = Math.min(dp[i], dp[i - 2] + a[i - 1] + a[i - 2]);\n  }\n}\nconsole.log(dp[n]);\nfor (let i = 1; i <= Math.ceil(n \/ 2); i++) {\n  if (i == Math.ceil(n \/ 2)) {\n    console.log(a[n - 1]);\n  } else {\n    console.log(a[i - 1] + ' ' + a[i]);\n  }\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }.sorted()\n    val ans = IntArray(n)\n    var i = 0\n    var j = 1\n    var k = 2\n    while (i < n) {\n        ans[i] = a[j]\n        ans[i + 1] = a[k]\n        i += 2\n        j += 2\n        k += 2\n    }\n    if (n % 2 == 1) {\n        ans[n - 1] = a[n - 1]\n    }\n    println(ans.sum())\n    for (i in 0 until n) {\n        print(ans[i])\n        if (i < n - 1) {\n            print(\" \")\n        }\n    }\n    println()\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$ans = 0;\n$i = 0;\nwhile ($i < $n) {\n    if ($i < 2) {\n        $ans += $a[$i];\n        $i++;\n    } else {\n        $ans += max($a[$i], $a[$i + 1]);\n        $i += 2;\n    }\n}\necho $ans . PHP_EOL;\nfor ($i = 0; $i < ceil($n \/ 2); $i++) {\n    if ($i < ceil($n \/ 2) - 1) {\n        echo implode(' ', array_slice($a, $i * 2, 2)) . PHP_EOL;\n    } else {\n        echo $a[$i * 2] . PHP_EOL;\n    }\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    int i = 0;\n    while (i < n) {\n        if (i + 2 < n) {\n            ans += max(a[i], a[i + 1]);\n            printf(\" %d %d\\n\", i + 1, i + 2);\n            i += 2;\n        } else {\n            ans += a[i];\n            printf(\" %d\\n\", i + 1);\n            i++;\n        }\n    }\n    printf(\" %d\\n\", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = split ' ', <STDIN>;\n\nmy $ans = 0;\nmy @ans_list;\n\nfor (my $i = 0; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n        $ans += $a[$i];\n        push @ans_list, $i + 1;\n    } else {\n        if ($i + 1 < $n) {\n            $ans += max($a[$i], $a[$i + 1]);\n            push @ans_list, $i + 1, $i + 2;\n        } else {\n            $ans += $a[$i];\n            push @ans_list, $i + 1;\n        }\n    }\n}\n\nprint $ans . \"\\n\";\n\nfor (my $i = 0; $i < @ans_list; $i++) {\n    print $ans_list[$i] . \" \";\n}\nprint \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let a = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut ans = 0;\n    let mut queue = Vec::new();\n    for i in 0..n {\n        queue.push(a[i]);\n    }\n\n    while queue.len() > 1 {\n        let mut i = 0;\n        while i < queue.len() - 1 {\n            ans += queue[i].max(queue[i + 1]);\n            queue.remove(i);\n            queue.remove(i);\n            i += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n\n    for i in 0..(n \/ 2) {\n        if i == n \/ 2 - 1 && n % 2 == 1 {\n            println!(\"{}\", queue[0]);\n        } else {\n            println!(\"{}\", queue[i], queue[i + 1]);\n        }\n    }\n}\n\"\"\"}]"}
{"title":"C. Bamboo Partition","description":"Vladimir wants to modernize partitions in his office. To make the office more comfortable he decided to remove a partition and plant several bamboos in a row. He thinks it would be nice if there are n bamboos in a row, and the i-th from the left is ai meters high. Vladimir has just planted n bamboos in a row, each of which has height 0 meters right now, but they grow 1 meter each day. In order to make the partition nice Vladimir can cut each bamboo once at any height (no greater that the height of the bamboo), and then the bamboo will stop growing.Vladimir wants to check the bamboos each d days (i.e. d days after he planted, then after 2d days and so on), and cut the bamboos that reached the required height. Vladimir wants the total length of bamboo parts he will cut off to be no greater than k meters.What is the maximum value d he can choose so that he can achieve what he wants without cutting off more than k meters of bamboo?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"512 megabytes","input_spec":"The first line contains two integers n and k (1\u2264n\u2264100, 1\u2264k\u226410^11)\u00a0\u2014 the number of bamboos and the maximum total length of cut parts, in meters.\nThe second line contains n integers a1,a2,...,an (1\u2264ai\u226410^9)\u00a0\u2014 the required heights of bamboos, in meters.\n","output_spec":"Print a single integer\u00a0\u2014 the maximum value of d such that Vladimir can reach his goal.\n","notes":"In the first example Vladimir can check bamboos each 3 days. Then he will cut the first and the second bamboos after 3 days, and the third bamboo after 6 days. The total length of cut parts is 2+0+1=3 meters.\n","sample_inputs":["3 4\n1 3 5\n","3 40\n10 30 50\n"],"sample_outputs":["3\n","32\n"],"id":"830-C","difficulty":2300,"tags":["brute+force","data+structures","implementation","math","number+theory","sortings","two+pointers"],"src_uid":"2e1ab01d4d4440f33c840c4564a20a60","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    sort(a, a + n);\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] > k) {\n            ans = max(ans, (a[i] - k) \/ 2);\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\n\nans = 0\nfor i in range(n):\n    if a[i] > k:\n        ans += k\n    else:\n        ans += a[i]\n\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort()\nans = 0\nfor i in range(n):\n    if a[i] > k:\n        ans += k\n    else:\n        ans += a[i]\n        if ans > k:\n            ans = k\nprint(ans)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var k = int.Parse(input[1]);\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToList();\n\n        var dp = new int[n + 1];\n        dp[0] = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            dp[i] = Math.Max(dp[i - 1], a[i - 1]);\n        }\n\n        var ans = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            var d = dp[i] - dp[i - 1];\n            if (d <= k)\n            {\n                ans = Math.Max(ans, i);\n            }\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, k = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\na.sort!\n\nans = 0\n\nfor i in 0..n-1\n    if a[i] > k\n        ans += k\n    else\n        ans += a[i]\n    end\nend\n\nputs ans \/ n\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Bamboo;\n\nuses\n  SysUtils;\n\nvar\n  n, k, i, j, a, d, m, t: Integer;\n\nbegin\n  Readln(n, k);\n  for i := 1 to n do\n    Readln(a[i]);\n  d := 0;\n  for i := 1 to n do\n  begin\n    m := 0;\n    for j := i to n do\n    begin\n      m := m + a[j];\n      if m > k then\n        break;\n    end;\n    d := Max(d, j - i + 1);\n  end;\n  Writeln(d);\nend.\"\"\"}]","Go":"[{\"version\": \"1.17\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, k int\n\tfmt.Scanf(\" %d %d \", &n, &k)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &a[i])\n\t}\n\tsort.Ints(a)\n\tfor i := 0; i < n; i++ {\n\t\tif k < a[i] {\n\t\t\tfmt.Println(i)\n\t\t\treturn\n\t\t}\n\t\tk -= a[i]\n\t}\n\tfmt.Println(n)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst k = parseInt(stdin[1]);\nconst a = stdin[2].split(' ').map(x => parseInt(x));\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n  dp[i] = Math.max(dp[i - 1], a[i - 1]);\n  for (let j = 1; j <= i; j++) {\n    dp[i] = Math.max(dp[i], dp[i - j] + a[i - j]);\n  }\n}\nconsole.log(Math.floor(k \/ dp[n]));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    val k = sc.nextInt()\n    val a = sc.nextLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    var i = 0\n    while (i < n) {\n        val j = i + 1\n        while (j < n && a[j] - a[i] <= k) {\n            j++\n        }\n        ans = maxOf(ans, j - i)\n        i = j\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = (int)$input[0];\n$k = (int)$input[1];\n$a = explode(' ', trim(fgets(STDIN)));\n$a = array_map('intval', $a);\n$a = array_unique($a);\n$a = array_values($a);\nsort($a);\n$i = 0;\n$j = 0;\n$d = 0;\nwhile ($i < $n) {\n    if ($a[$j] - $a[$i] > $k) {\n        $d++;\n        $k = $k - ($a[$j] - $a[$i]);\n    }\n    $i++;\n    $j++;\n}\necho $d;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] > k) {\n            ans = max(ans, a[i] \/ k);\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $k) = split(\/ \/, $line);\n\nchomp(my $line = <STDIN>);\n@a = split(\/ \/, $line);\n\nmy $max = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    $max = max($max, $a[$i]);\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    if ($a[$i] > $max) {\n        $ans = max($ans, $a[$i] - $max);\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_k = line.split_whitespace().map(|s| s.parse::<i64>().unwrap()).collect::<Vec<i64>>();\n    let n = n_k[0];\n    let k = n_k[1];\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut a = line.split_whitespace().map(|s| s.parse::<i64>().unwrap()).collect::<Vec<i64>>();\n\n    let mut ans = 0;\n    for i in 0..n {\n        let mut d = 1;\n        while d * a[i] <= k {\n            d += 1;\n        }\n        ans = ans.max(d - 1);\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"C. Track","description":"You already know that Valery's favorite sport is biathlon. Due to your help, he learned to shoot without missing, and his skills are unmatched at the shooting range. But now a smaller task is to be performed, he should learn to complete the path fastest.The track's map is represented by a rectangle n\u00d7m in size divided into squares. Each square is marked with a lowercase Latin letter (which means the type of the plot), with the exception of the starting square (it is marked with a capital Latin letters S) and the terminating square (it is marked with a capital Latin letter T). The time of movement from one square to another is equal to 1 minute. The time of movement within the cell can be neglected. We can move from the cell only to side-adjacent ones, but it is forbidden to go beyond the map edges. Also the following restriction is imposed on the path: it is not allowed to visit more than k different types of squares (squares of one type can be visited an infinite number of times). Squares marked with S and T have no type, so they are not counted. But S must be visited exactly once \u2014 at the very beginning, and T must be visited exactly once \u2014 at the very end.Your task is to find the path from the square S to the square T that takes minimum time. Among all shortest paths you should choose the lexicographically minimal one. When comparing paths you should lexicographically represent them as a sequence of characters, that is, of plot types.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"256 megabytes","input_spec":"The first input line contains three integers n, m and k (1\u2264n,m\u226450,n\u00b7m\u22652,1\u2264k\u22644). Then n lines contain the map. Each line has the length of exactly m characters and consists of lowercase Latin letters and characters S and T. It is guaranteed that the map contains exactly one character S and exactly one character T.\nPretest 12 is one of the maximal tests for this problem.\n","output_spec":"If there is a path that satisfies the condition, print it as a sequence of letters \u2014 the plot types. Otherwise, print \"-1\" (without quotes). You shouldn't print the character S in the beginning and T in the end.\nNote that this sequence may be empty. This case is present in pretests. You can just print nothing or print one \"End of line\"-character. Both will be accepted.\n","notes":null,"sample_inputs":["5 3 2\nSba\nccc\naac\nccc\nabT\n","3 4 1\nSxyy\nyxxx\nyyyT\n","1 3 3\nTyS\n","1 4 1\nSxyT\n"],"sample_outputs":["bcccc\n","xxxx\n","y\n","-1\n"],"id":"83-C","difficulty":2400,"tags":["graphs","greedy","shortest+paths"],"src_uid":"1d73b315694f2ebbf796654193372730","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint n, m, k;\nchar s[51][51];\nint d[51][51][5];\n\nint main() {\n    cin >> n >> m >> k;\n    for (int i = 0; i < n; i++) {\n        cin >> s[i];\n    }\n\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            for (int l = 0; l < k; l++) {\n                d[i][j][l] = 1000000000;\n            }\n        }\n    }\n\n    d[0][0][0] = 0;\n\n    vector<vector<vector<int>>> q;\n    q.push_back({0, 0, 0});\n\n    while (!q.empty()) {\n        vector<int> v = q.back();\n        q.pop_back();\n\n        int i = v[0], j = v[1], l = v[2];\n\n        if (i == n - 1 && j == m - 1) {\n            break;\n        }\n\n        for (int di = -1; di <= 1; di++) {\n            for (int dj = -1; dj <= 1; dj++) {\n                if (di == 0 && dj == 0) {\n                    continue;\n                }\n\n                int ni = i + di;\n                int nj = j + dj;\n\n                if (ni < 0 || ni >= n || nj < 0 || nj >= m) {\n                    continue;\n                }\n\n                if (s[ni][nj] == 'T') {\n                    continue;\n                }\n\n                if (l + 1 <= k && d[ni][nj][l + 1] > d[i][j][l] + 1) {\n                    d[ni][nj][l + 1] = d[i][j][l] + 1;\n                    q.push_back({ni, nj, l + 1});\n                }\n            }\n        }\n    }\n\n    if (d[n - 1][m - 1][k] == 1000000000) {\n        cout << \"-1\" << endl;\n    } else {\n        vector<char> ans;\n        for (int i = 0; i < k; i++) {\n            ans.push_back(s[n - 1][m - 1]);\n        }\n\n        for (int i = n - 2; i >= 0; i--) {\n            for (int j = m - 2; j >= 0; j--) {\n                if (s[i][j] != 'T') {\n                    ans.push_back(s[i][j]);\n                }\n            }\n        }\n\n        for (int i = ans.size() - 1; i >= 0; i--) {\n            cout << ans[i];\n        }\n\n        cout << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m, k = map(int, input().split())\ns = input()\nt = input()\n\ndef dfs(i, j, visited, path):\n    if i < 0 or i >= n or j < 0 or j >= m:\n        return\n    if visited[i][j] == 1:\n        return\n    if s[i] == t[j]:\n        print(''.join(path))\n        return\n    visited[i][j] = 1\n    path.append(s[i])\n    dfs(i - 1, j, visited, path)\n    dfs(i + 1, j, visited, path)\n    dfs(i, j - 1, visited, path)\n    dfs(i, j + 1, visited, path)\n    visited[i][j] = 0\n    path.pop()\n\nvisited = [[0] * m for _ in range(n)]\ndfs(0, 0, visited, [])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint n, m, k;\nchar s[51][51];\nint vis[51][51];\nint d[51][51];\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\n\nint main() {\n    scanf(\" %d%d%d \", &n, &m, &k);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", s[i]);\n    }\n\n    int ans = 0;\n    int ansx = 0, ansy = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (s[i][j] == 'S') {\n                d[i][j] = 0;\n                vis[i][j] = 1;\n                ansx = i;\n                ansy = j;\n            } else {\n                d[i][j] = -1;\n            }\n        }\n    }\n\n    int cnt = 0;\n    while (1) {\n        int min = 1000000000;\n        int minx = -1, miny = -1;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < m; j++) {\n                if (d[i][j] != -1 && !vis[i][j]) {\n                    if (d[i][j] < min) {\n                        min = d[i][j];\n                        minx = i;\n                        miny = j;\n                    }\n                }\n            }\n        }\n\n        if (minx == -1 || miny == -1) {\n            break;\n        }\n\n        vis[minx][miny] = 1;\n        cnt++;\n        if (cnt > k) {\n            break;\n        }\n\n        for (int i = 0; i < 4; i++) {\n            int nx = minx + dx[i];\n            int ny = miny + dy[i];\n            if (nx >= 0 && nx < n && ny >= 0 && ny < m && s[nx][ny] != 'T' && !vis[nx][ny]) {\n                d[nx][ny] = d[minx][miny] + 1;\n            }\n        }\n    }\n\n    if (d[ansx][ansy] == -1) {\n        printf(\"-1\\n\");\n    } else {\n        int i = ansx, j = ansy;\n        while (1) {\n            printf(\"%c\", s[i][j]);\n            i -= dx[d[i][j] - 1];\n            j -= dy[d[i][j] - 1];\n            if (i == ansx && j == ansy) {\n                break;\n            }\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m, k = gets.split.map(&:to_i)\n\nmap = []\nn.times do\n  map << gets.chomp.chars\nend\n\n# \u30b9\u30bf\u30fc\u30c8\u5730\u70b9\u3068\u30b4\u30fc\u30eb\u5730\u70b9\u306e\u5ea7\u6a19\u3092\u53d6\u5f97\ns_x, s_y = map.index('S')\nt_x, t_y = map.index('T')\n\n# \u79fb\u52d5\u53ef\u80fd\u306a\u5ea7\u6a19\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nmove_x = [-1, 0, 1, 0]\nmove_y = [0, 1, 0, -1]\n\n# \u79fb\u52d5\u5c65\u6b74\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217\nhistory = [[s_x, s_y]]\n\n# \u6df1\u3055\u512a\u5148\u63a2\u7d22\ndef dfs(x, y, history)\n  # \u30b4\u30fc\u30eb\u5730\u70b9\u306b\u5230\u9054\u3057\u305f\u3089\u7d42\u4e86\n  if x == t_x && y == t_y\n    return history\n  end\n\n  # \u79fb\u52d5\u53ef\u80fd\u306a\u5ea7\u6a19\u3092\u53d6\u5f97\n  move_list = []\n  move_x.each do |dx|\n    move_y.each do |dy|\n      next if x + dx < 0 || x + dx >= n || y + dy < 0 || y + dy >= m\n      next if map[x + dx][y + dy] == 'S' || map[x + dx][y + dy] == 'T'\n      move_list << [x + dx, y + dy]\n    end\n  end\n\n  # \u79fb\u52d5\u53ef\u80fd\u306a\u5ea7\u6a19\u3092\u5168\u3066\u63a2\u7d22\n  move_list.each do |nx, ny|\n    # \u79fb\u52d5\u5c65\u6b74\u306b\u8ffd\u52a0\n    history << [nx, ny]\n\n    # \u79fb\u52d5\u5148\u306e\u5ea7\u6a19\u304b\u3089\u518d\u5e30\u7684\u306b\u63a2\u7d22\n    result = dfs(nx, ny, history)\n\n    # \u63a2\u7d22\u7d50\u679c\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u7d42\u4e86\n    if result\n      return result\n    end\n\n    # \u79fb\u52d5\u5c65\u6b74\u304b\u3089\u524a\u9664\n    history.pop\n  end\n\n  # \u63a2\u7d22\u7d50\u679c\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\n  return nil\nend\n\n# \u6df1\u3055\u512a\u5148\u63a2\u7d22\u3092\u5b9f\u884c\nresult = dfs(s_x, s_y, history)\n\n# \u63a2\u7d22\u7d50\u679c\u3092\u51fa\u529b\nif result\n  result.map { |x, y| map[x][y] }.join('')\nelse\n  '-1'\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Biathlon;\n\nuses\n  SysUtils;\n\nconst\n  MaxN = 50;\n  MaxM = 50;\n\ntype\n  TMap = array[0..MaxN, 0..MaxM] of Char;\n\nvar\n  n, m, k: Integer;\n  a: TMap;\n  used: array[0..MaxN, 0..MaxM] of Boolean;\n  q: array[0..MaxN * MaxM] of Integer;\n  front, rear: Integer;\n  d: array[0..MaxN * MaxM] of Integer;\n  ans: array[0..MaxN * MaxM] of Char;\n\nprocedure Init;\nvar\n  i, j: Integer;\nbegin\n  Readln(n, m, k);\n  for i := 0 to n - 1 do\n  begin\n    Readln(a[i]);\n    for j := 0 to m - 1 do\n      if a[i, j] = 'S' then\n        front := i * m + j\n      else if a[i, j] = 'T' then\n        rear := i * m + j;\n  end;\nend;\n\nprocedure BFS;\nvar\n  i, j, u, v: Integer;\nbegin\n  FillChar(used, SizeOf(used), False);\n  FillChar(d, SizeOf(d), MaxN * MaxM);\n  d[front] := 0;\n  q[0] := front;\n  front := 1;\n  rear := 1;\n  while front < rear do\n  begin\n    u := q[front];\n    front := front + 1;\n    for i := -1 to 1 do\n      for j := -1 to 1 do\n      begin\n        v := u + i * m + j;\n        if (v >= 0) and (v < n * m) and (not used[v div m, v mod m]) and (a[v div m, v mod m] <> 'S') and (a[v div m, v mod m] <> 'T') then\n        begin\n          used[v div m, v mod m] := True;\n          d[v] := d[u] + 1;\n          q[rear] := v;\n          rear := rear + 1;\n        end;\n      end;\n  end;\nend;\n\nprocedure DFS(u: Integer);\nvar\n  i, j: Integer;\nbegin\n  for i := -1 to 1 do\n    for j := -1 to 1 do\n    begin\n      v := u + i * m + j;\n      if (v >= 0) and (v < n * m) and (not used[v div m, v mod m]) and (a[v div m, v mod m] <> 'S') and (a[v div m, v mod m] <> 'T') and (d[v] = d[u] + 1) then\n      begin\n        used[v div m, v mod m] := True;\n        ans[d[v]] := a[v div m, v mod m];\n        DFS(v);\n      end;\n    end;\nend;\n\nbegin\n  Init;\n  BFS;\n  FillChar(used, SizeOf(used), False);\n  DFS(rear);\n  for i := d[rear] downto 1 do\n    Write(ans[i]);\n  WriteLn;\nend.\n\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nconst fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst k = parseInt(input[0].split(' ')[2]);\nconst map = [];\nfor (let i = 0; i < n; i++) {\n    map.push(input[i + 1].split(''));\n}\nconst visited = new Array(n).fill(0).map(() => new Array(m).fill(0));\nconst queue = [];\nqueue.push([0, 0, '']);\nvisited[0][0] = 1;\nwhile (queue.length) {\n    const [i, j, path] = queue.shift();\n    if (i == n - 1 && j == m - 1) {\n        console.log(path);\n        break;\n    }\n    for (let di = -1; di <= 1; di++) {\n        for (let dj = -1; dj <= 1; dj++) {\n            if (di == 0 && dj == 0) {\n                continue;\n            }\n            const ni = i + di;\n            const nj = j + dj;\n            if (ni < 0 || ni >= n || nj < 0 || nj >= m) {\n                continue;\n            }\n            if (visited[ni][nj] || map[ni][nj] == 'T') {\n                continue;\n            }\n            visited[ni][nj] = 1;\n            queue.push([ni, nj, path + map[ni][nj]]);\n        }\n    }\n}\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m, k) = readLine().split(\" \").map { it.toInt() }\n    val map = Array(n) { readLine().toCharArray() }\n    val visited = Array(n) { BooleanArray(m) }\n    val queue = ArrayDeque<Pair<Int, Int>>()\n    queue.add(Pair(0, 0))\n    visited[0][0] = true\n    var minTime = Int.MAX_VALUE\n    var minPath = \"\"\n    while (queue.isNotEmpty()) {\n        val (i, j) = queue.removeFirst()\n        if (i == n - 1 && j == m - 1) {\n            if (minTime > map[i][j] - 'a' + 1) {\n                minTime = map[i][j] - 'a' + 1\n                minPath = \"\"\n            }\n            if (minTime == map[i][j] - 'a' + 1) {\n                minPath += map[i][j]\n            }\n        }\n        for (di in -1..1) {\n            for (dj in -1..1) {\n                if (di == 0 && dj == 0) continue\n                if (i + di < 0 || i + di >= n || j + dj < 0 || j + dj >= m) continue\n                if (visited[i + di][j + dj]) continue\n                if (map[i + di][j + dj] - 'a' + 1 > k) continue\n                queue.add(Pair(i + di, j + dj))\n                visited[i + di][j + dj] = true\n            }\n        }\n    }\n    println(minPath)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$map = [];\nfor ($i = 0; $i < $n; $i++) {\n    $map[] = str_split(trim(fgets(STDIN)));\n}\n$visited = [];\n$queue = [];\n$queue[] = ['S', 0];\n$ans = [];\nwhile (!empty($queue)) {\n    $cur = array_shift($queue);\n    $curType = $cur[0];\n    $curTime = $cur[1];\n    if ($curType == 'T') {\n        $ans = $cur;\n        break;\n    }\n    if (count($visited) >= $k) {\n        continue;\n    }\n    $visited[$curType] = true;\n    for ($i = 0; $i < $m; $i++) {\n        if ($map[$cur[0]][$i] != $curType && !isset($visited[$map[$cur[0]][$i]])) {\n            $queue[] = [$map[$cur[0]][$i], $curTime + 1];\n        }\n    }\n}\nif (empty($ans)) {\n    echo '-1';\n} else {\n    $ans = array_slice($ans, 1, -1);\n    echo implode('', $ans);\n}\n\"\"\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\nuse warnings;\\n\\nmy $n, $m, $k;\\n\\nchomp(my $input = <STDIN>);\\n($n, $m, $k) = split(' ', $input);\\n\\nmy @map = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    push(@map, $line);\\n}\\n\\nmy $s = 0;\\nmy $t = 0;\\nfor (my $i = 0; $i < $n; $i++) {\\n    for (my $j = 0; $j < $m; $j++) {\\n        if ($map[$i][$j] eq 'S') {\\n            $s = $i * $m + $j;\\n        }\\n        if ($map[$i][$j] eq 'T') {\\n            $t = $i * $m + $j;\\n        }\\n    }\\n}\\n\\nmy @visited = ();\\nmy @queue = ();\\npush(@queue, $s);\\npush(@visited, $s);\\nwhile (scalar(@queue) > 0) {\\n    my $current = shift(@queue);\\n    my $i = int($current \/ $m);\\n    my $j = $current % $m;\\n    for (my $di = -1; $di <= 1; $di++) {\\n        for (my $dj = -1; $dj <= 1; $dj++) {\\n            if ($di != 0 || $dj != 0) {\\n                my $next = $i + $di * $m + $dj;\\n                if ($next >= 0 && $next < $n * $m && !grep { $_ == $next } @visited && $map[$i + $di][$j + $dj] ne 'S' && $map[$i + $di][$j + $dj] ne 'T') {\\n                    push(@queue, $next);\\n                    push(@visited, $next);\\n                }\\n            }\\n        }\\n    }\\n}\\n\\nmy @path = ();\\nmy $current = $t;\\nwhile ($current != $s) {\\n    push(@path, $map[$i][$j]);\\n    my $i = int($current \/ $m);\\n    my $j = $current % $m;\\n    for (my $di = -1; $di <= 1; $di++) {\\n        for (my $dj = -1; $dj <= 1; $dj++) {\\n            if ($di != 0 || $dj != 0) {\\n                my $next = $i + $di * $m + $dj;\\n                if ($next >= 0 && $next < $n * $m && $map[$i + $di][$j + $dj] eq $map[$i][$j] && !grep { $_ == $next } @path) {\\n                    $current = $next;\\n                    break;\\n                }\\n            }\\n        }\\n    }\\n}\\n\\nmy $count = scalar(@path);\\nif ($count > $k) {\\n    print '-1';\\n} else {\\n    print join('', reverse(@path));\\n}\\n\\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m, k) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut map = HashMap::new();\n    for _ in 0..n {\n        let line = read_line().unwrap();\n        for c in line.chars() {\n            map.entry(c).or_insert(0);\n            map.get_mut(&c).unwrap() += 1;\n        }\n    }\n    let mut ans = vec![];\n    for (c, v) in map.iter() {\n        if v > k {\n            println!(\"-1\");\n            return;\n        }\n        if c != 'S' && c != 'T' {\n            ans.push(c);\n        }\n    }\n    println!(\"{}\", ans.join(\"\"));\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"D. Numbers","description":"One quite ordinary day Valera went to school (there's nowhere else he should go on a week day). In a maths lesson his favorite teacher Ms. Evans told students about divisors. Despite the fact that Valera loved math, he didn't find this particular topic interesting. Even more, it seemed so boring that he fell asleep in the middle of a lesson. And only a loud ringing of a school bell could interrupt his sweet dream.Of course, the valuable material and the teacher's explanations were lost. However, Valera will one way or another have to do the homework. As he does not know the new material absolutely, he cannot do the job himself. That's why he asked you to help. You're his best friend after all, you just cannot refuse to help.Valera's home task has only one problem, which, though formulated in a very simple way, has not a trivial solution. Its statement looks as follows: if we consider all positive integers in the interval [a;b] then it is required to count the amount of such numbers in this interval that their smallest divisor will be a certain integer k (you do not have to consider divisor equal to one). In other words, you should count the amount of such numbers from the interval [a;b], that are not divisible by any number between 2 and k-1 and yet are divisible by k. ","input_from":"standard input","output_to":"standard output","time_limit":"3 seconds","memory_limit":"256 megabytes","input_spec":"The first and only line contains three positive integers a, b, k (1\u2264a\u2264b\u22642\u00b710^9,2\u2264k\u22642\u00b710^9). \n","output_spec":"Print on a single line the answer to the given problem. \n","notes":"Comments to the samples from the statement: \nIn the first sample the answer is numbers 2,4,6,8,10.\nIn the second one \u2014 15,21\nIn the third one there are no such numbers.\n","sample_inputs":["1 10 2\n","12 23 3\n","6 19 5\n"],"sample_outputs":["5\n","2\n","0\n"],"id":"83-D","difficulty":2400,"tags":["dp","math","number+theory"],"src_uid":"04a26f1d1013b6e6b4b0bdcf225475f2","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int a, b, k;\n    cin >> a >> b >> k;\n    int ans = 0;\n    for (int i = a; i <= b; i++) {\n        if (i % k == 0 && i % (k - 1) != 0) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int a = scanner.nextInt();\n        int b = scanner.nextInt();\n        int k = scanner.nextInt();\n        int count = 0;\n        for (int i = a; i <= b; i++) {\n            if (i % k == 0 && i % (k - 1) != 0) {\n                count++;\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\na,b,k=map(int,input().split())\nprint(b\/\/k-(a-1)\/\/k)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int a, b, k;\n    scanf(\" %d %d %d \", &a, &b, &k);\n    int ans = 0;\n    for (int i = a; i <= b; i++) {\n        if (i % k == 0 && i % (k - 1) != 0) {\n            ans++;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var a = int.Parse(input[0]);\n        var b = int.Parse(input[1]);\n        var k = int.Parse(input[2]);\n\n        var count = 0;\n        for (var i = a; i <= b; i++)\n        {\n            if (i % k == 0 && i % (k - 1) != 0)\n            {\n                count++;\n            }\n        }\n\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"a,b,k=map(int,input().split())\nprint(b\/\/k-(a-1)\/\/k)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Divisors;\nuses SysUtils;\nvar\n  a, b, k, i, j, n, m, c: Integer;\nbegin\n  Readln(a, b, k);\n  n := b - a + 1;\n  m := k - 1;\n  c := 0;\n  for i := 2 to m do\n    for j := a to b do\n      if j mod i = 0 then\n        c := c + 1;\n  Writeln(n - c);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var a, b, k int\\n    fmt.Scanf(\\\"%d%d%d\\\", &a, &b, &k)\\n    ans := 0\\n    for i := a; i <= b; i++ {\\n        if i % k == 0 && i % (k - 1) != 0 {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"a,b,k=map(int,input().split());print(b\/\/k-(a-1)\/\/k)\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val a = sc.nextInt()\n    val b = sc.nextInt()\n    val k = sc.nextInt()\n    val ans = (b - a + 1) \/ k\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$a = intval($input[0]);\n$b = intval($input[1]);\n$k = intval($input[2]);\n$count = 0;\nfor ($i = $a; $i <= $b; $i++) {\n    if ($i % $k == 0 && $i % ($k - 1) != 0) {\n        $count++;\n    }\n}\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [a, b, k] = readln.split.map!(to!int).array;\n    auto ans = 0;\n    for (auto i = a; i <= b; i++) {\n        if (i % k == 0 && i % (k - 1) != 0) {\n            ans++;\n        }\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $a, $b, $k;\n\nchomp(my $input = <STDIN>);\n\n@input = split(' ', $input);\n\n$a = $input[0];\n$b = $input[1];\n$k = $input[2];\n\nmy $count = 0;\n\nfor (my $i = $a; $i <= $b; $i++) {\n    if ($i % $k == 0 && $i % ($k - 1) != 0) {\n        $count++;\n    }\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let a = input_vec[0];\n    let b = input_vec[1];\n    let k = input_vec[2];\n    let mut ans = 0;\n    for i in a..b + 1 {\n        if i % k == 0 {\n            if i % (k - 1) != 0 {\n                ans += 1;\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Two Subsequences","description":"On an IT lesson Valera studied data compression. The teacher told about a new method, which we shall now describe to you.Let {a1,a2,...,an} be the given sequence of lines needed to be compressed. Here and below we shall assume that all lines are of the same length and consist only of the digits 0 and 1. Let's define the compression function:  f(empty sequence)=empty string  f(s)=s.  f(s1,s2)= the smallest in length string, which has one of the prefixes equal to s1 and one of the suffixes equal to s2. For example, f(001,011)=0011, f(111,011)=111011.  f(a1,a2,...,an)=f(f(a1,a2,an-1),an). For example, f(000,000,111)=f(f(000,000),111)=f(000,111)=000111. Valera faces a real challenge: he should divide the given sequence {a1,a2,...,an} into two subsequences {b1,b2,...,bk} and {c1,c2,...,cm}, m+k=n, so that the value of S=|f(b1,b2,...,bk)|+|f(c1,c2,...,cm)| took the minimum possible value. Here |p| denotes the length of the string p.Note that it is not allowed to change the relative order of lines in the subsequences. It is allowed to make one of the subsequences empty. Each string from the initial sequence should belong to exactly one subsequence. Elements of subsequences b and c don't have to be consecutive in the original sequence a, i. e. elements of b and c can alternate in a (see samples 2 and 3).Help Valera to find the minimum possible value of S.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line of input data contains an integer n \u2014 the number of strings (1\u2264n\u22642\u00b710^5). Then on n lines follow elements of the sequence \u2014 strings whose lengths are from 1 to 20 characters, consisting only of digits 0 and 1. The i+1-th input line contains the i-th element of the sequence. Elements of the sequence are separated only by a newline. It is guaranteed that all lines have the same length.\n","output_spec":"Print a single number \u2014 the minimum possible value of S.\n","notes":"Detailed answers to the tests:\n  The best option is to make one of the subsequences empty, and the second one equal to the whole given sequence. |f(01,10,01)|=|f(f(01,10),01)|=|f(010,01)|=|0101|=4.  The best option is: b={000,001},c={111,110}. S=|f(000,001)|+|f(111,110)|=|0001|+|1110|=8.  The best option is: b={10101,01010,01000},c={11111,10010}. S=|10101000|+|111110010|=17. ","sample_inputs":["3\n01\n10\n01\n","4\n000\n111\n110\n001\n","5\n10101\n01010\n11111\n01000\n10010\n"],"sample_outputs":["4\n","8\n","17\n"],"id":"83-E","difficulty":2800,"tags":["bitmasks","dp"],"src_uid":"d65ca3fb4853031304cb829c3cda3462","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<string> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            string s = a[i] + a[j];\n            int len = s.length();\n            for (int k = 0; k < len; k++) {\n                if (s[k] == '0') {\n                    s[k] = '1';\n                } else {\n                    s[k] = '0';\n                }\n            }\n            ans = max(ans, len + s.length());\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        int n = Integer.parseInt(br.readLine());\n        String[] s = new String[n];\n        for (int i = 0; i < n; i++) {\n            s[i] = br.readLine();\n        }\n        Arrays.sort(s);\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            int j = i + 1;\n            while (j < n && s[j].startsWith(s[i])) {\n                j++;\n            }\n            ans += s[i].length() * (j - i);\n            i = j - 1;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\ns = [input() for _ in range(n)]\n\ndef f(s1, s2):\n    s = s1 + s2\n    i = 0\n    while i < len(s) and s[i] == '0':\n        i += 1\n    return s[i:]\n\ndef solve(s):\n    ans = 0\n    for i in range(n):\n        ans = max(ans, len(f(s[i], s[i])))\n    return ans\n\nprint(min(solve(s), solve(s[::-1])))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    char **a = malloc(n * sizeof(char *));\n    for (int i = 0; i < n; i++) {\n        a[i] = malloc(21 * sizeof(char));\n        scanf(\" %s \", a[i]);\n    }\n    int m = 0;\n    int k = 0;\n    int s = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i][0] == '0') {\n            m++;\n        } else {\n            k++;\n        }\n    }\n    int m1 = 0;\n    int k1 = 0;\n    int s1 = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i][n - 1] == '0') {\n            m1++;\n        } else {\n            k1++;\n        }\n    }\n    s = m * (n - m1) + k * (n - k1);\n    printf(\" %d \", s);\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\ns = []\nn.times do\n  s << gets.chomp\nend\n\ns.sort!\n\nans = s.map{|i| i.length}.max\n\nputs ans * 2\"}]}","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    n := 0\\n    var s string\\n    fmt.Scanf(\\\"%d\\n\\\", &n)\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%s\\n\\\", &s)\\n    }\\n    fmt.Println(len(s))\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0]);\nconst a = input.slice(1).map(s => s.split(''));\nconst dp = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n  dp[i] = Math.min(dp[i - 1] + a[i - 1].length, dp[i - 2] + a[i].length);\n}\nconsole.log(dp[n]);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine().toInt()\n    val a = Array(n) { readLine() }\n    val dp = Array(n + 1) { Array(n + 1) { 0 } }\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            if (i == 0 || j == 0) {\n                dp[i][j] = a[i][j].toInt()\n            } else {\n                dp[i][j] = Math.min(dp[i - 1][j] + a[i][j].toInt(), dp[i][j - 1] + a[i][j].toInt())\n            }\n        }\n    }\n    val ans = Int.MAX_VALUE\n    for (i in 0 until n) {\n        for (j in 0 until n) {\n            ans = Math.min(ans, dp[i][j] + dp[n - i - 1][n - j - 1])\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$a = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a[] = trim(fgets(STDIN));\n}\n$a = array_map('str_split', $a);\n$a = array_map('implode', $a);\n$a = array_unique($a);\n$a = array_values($a);\n$a = array_sort($a);\n$b = [];\n$c = [];\n$s = 0;\nfor ($i = 0; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n        $b[] = $a[$i];\n    } else {\n        $c[] = $a[$i];\n    }\n}\n$s = strlen(implode($b)) + strlen(implode($c));\necho $s;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto a = new char[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", a + i);\n    }\n    auto b = new char[n];\n    auto c = new char[n];\n    int m = 0;\n    int k = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] == '0') {\n            b[m++] = a[i];\n        } else {\n            c[k++] = a[i];\n        }\n    }\n    int s1 = 0;\n    int s2 = 0;\n    for (int i = 0; i < m; i++) {\n        s1 += b[i];\n    }\n    for (int i = 0; i < k; i++) {\n        s2 += c[i];\n    }\n    printf(\" %d \", s1 + s2);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = ();\nfor (my $i = 0; $i < $n; $i++) {\n    chomp(my $s = <STDIN>);\n    push(@a, $s);\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    my $s = $a[$i];\n    my $l = length($s);\n    for (my $j = 0; $j < $l; $j++) {\n        my $t = substr($s, 0, $j) . substr($s, $j + 1);\n        $ans = max($ans, length($t));\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines().map(|l| l.unwrap()).collect::<Vec<_>>();\n    let n = lines.len();\n    let mut dp = vec![vec![0; 2]; n + 1];\n    for i in 0..n {\n        let s = lines[i].as_bytes();\n        for j in 0..2 {\n            for k in 0..2 {\n                if i == 0 {\n                    dp[i + 1][k] = dp[i][j] + (s[0] == b'0') as usize * k;\n                } else {\n                    dp[i + 1][k] = std::cmp::min(dp[i + 1][k], dp[i][j] + (s[0] == b'0') as usize * k);\n                    dp[i + 1][k] = std::cmp::min(dp[i + 1][k], dp[i][1 - j] + (s[0] == b'1') as usize * k);\n                }\n            }\n        }\n    }\n    println!(\"{}\", dp[n][0] + dp[n][1]);\n}\n\"\"\"}]"}
{"title":"A. Kirill And The Game","description":"Kirill plays a new computer game. He came to the potion store where he can buy any potion. Each potion is characterized by two integers\u00a0\u2014 amount of experience and cost. The efficiency of a potion is the ratio of the amount of experience to the cost. Efficiency may be a non-integer number.For each two integer numbers a and b such that l\u2264a\u2264r and x\u2264b\u2264y there is a potion with experience a and cost b in the store (that is, there are (r-l+1)\u00b7(y-x+1) potions).Kirill wants to buy a potion which has efficiency k. Will he be able to do this?","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"First string contains five integer numbers l, r, x, y, k (1\u2264l\u2264r\u226410^7, 1\u2264x\u2264y\u226410^7, 1\u2264k\u226410^7).\n","output_spec":"Print \"YES\" without quotes if a potion with efficiency exactly k can be bought in the store and \"NO\" without quotes otherwise.\nYou can output each of the letters in any register.\n","notes":null,"sample_inputs":["1 10 1 10 1\n","1 5 6 10 1\n"],"sample_outputs":["YES","NO"],"id":"842-A","difficulty":1200,"tags":["brute+force","two+pointers"],"src_uid":"1110d3671e9f77fd8d66dca6e74d2048","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"l,r,x,y,k=map(int,input().split())\nif(k==1):\n    print('YES')\nelse:\n    print('NO')\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int l = sc.nextInt();\n        int r = sc.nextInt();\n        int x = sc.nextInt();\n        int y = sc.nextInt();\n        int k = sc.nextInt();\n        int count = 0;\n        for (int i = l; i <= r; i++) {\n            for (int j = x; j <= y; j++) {\n                if ((double) i \/ j == k) {\n                    count++;\n                }\n            }\n        }\n        if (count > 0) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nl,r,x,y,k=map(int,input().split())\nif(k==1):\n    print(\"YES\")\nelse:\n    print(\"NO\")\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int l, r, x, y, k;\n    scanf(\" %d %d %d %d %d \", &l, &r, &x, &y, &k);\n    int count = (r - l + 1) * (y - x + 1);\n    if (count == 0) {\n        printf(\" NO \");\n    } else {\n        if (k % count == 0) {\n            printf(\" YES \");\n        } else {\n            printf(\" NO \");\n        }\n    }\n    return 0;\n}\"}]","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var l = input[0];\n        var r = input[1];\n        var x = input[2];\n        var y = input[3];\n        var k = input[4];\n\n        var potions = new List<int>();\n        for (int i = l; i <= r; i++)\n        {\n            for (int j = x; j <= y; j++)\n            {\n                potions.Add(i \/ j);\n            }\n        }\n\n        var result = potions.Contains(k);\n        Console.WriteLine(result ? \"YES\" : \"NO\");\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"l,r,x,y,k=map(int,input().split())\nif(k==1):\n    print('YES')\nelse:\n    print('NO')\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var\nl,r,x,y,k,i,j,n,m:longint;\nbegin\nreadln(l,r,x,y,k);\nn:=r-l+1;\nm:=y-x+1;\nfor i:=1 to n do\nfor j:=1 to m do\nif (l+i-1)\/(x+j-1)=k then\nbegin\nwriteln('YES');\nexit;\nend;\nwriteln('NO');\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var l, r, x, y, k int\\n    fmt.Scan(&l, &r, &x, &y, &k)\\n    var count int\\n    for i := l; i <= r; i++ {\\n        for j := x; j <= y; j++ {\\n            if float64(i)\/float64(j) == float64(k) {\\n                count++\\n            }\\n        }\\n    }\\n    if count > 0 {\\n        fmt.Println(\\\"YES\\\")\\n    } else {\\n        fmt.Println(\\\"NO\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [l, r, x, y, k] = line.split(' ').map(Number);\n  const potions = (r - l + 1) * (y - x + 1);\n  const potionsWithK = potions \/ k;\n  if (potionsWithK % 1 === 0) {\n    console.log('YES');\n  } else {\n    console.log('NO');\n  }\n  rl.close();\n});\n\nrl.on('close', () => {\n  process.exit();\n});\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val l = sc.nextInt()\n    val r = sc.nextInt()\n    val x = sc.nextInt()\n    val y = sc.nextInt()\n    val k = sc.nextInt()\n\n    val potions = (l..r).flatMap { a -> (x..y).map { b -> a to b } }\n    val potionsWithK = potions.filter { (a, b) -> a.toDouble() \/ b.toDouble() == k }\n\n    if (potionsWithK.isNotEmpty()) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$l = intval($input[0]);\n$r = intval($input[1]);\n$x = intval($input[2]);\n$y = intval($input[3]);\n$k = intval($input[4]);\n\n$count = 0;\nfor ($i = $l; $i <= $r; $i++) {\n    for ($j = $x; $j <= $y; $j++) {\n        if ($i \/ $j == $k) {\n            $count++;\n        }\n    }\n}\n\nif ($count > 0) {\n    echo 'YES';\n} else {\n    echo 'NO';\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [l, r, x, y, k] = readln.split().map!(to!int).array;\n    auto m = (r - l + 1) * (y - x + 1);\n    if (k <= m) {\n        writeln(\"YES\");\n    } else {\n        writeln(\"NO\");\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy @a = split \/ \/, <STDIN>;\nmy $l = $a[0];\nmy $r = $a[1];\nmy $x = $a[2];\nmy $y = $a[3];\nmy $k = $a[4];\n\nmy $count = 0;\nfor (my $i = $l; $i <= $r; $i++) {\n    for (my $j = $x; $j <= $y; $j++) {\n        if ($i \/ $j == $k) {\n            $count++;\n        }\n    }\n}\n\nif ($count > 0) {\n    print \"YES\";\n} else {\n    print \"NO\";\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i64> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let l = input_vec[0];\n    let r = input_vec[1];\n    let x = input_vec[2];\n    let y = input_vec[3];\n    let k = input_vec[4];\n    let mut count = 0;\n    for i in l..=r {\n        for j in x..=y {\n            if i as f64 \/ j as f64 == k as f64 {\n                count += 1;\n            }\n        }\n    }\n    if count > 0 {\n        println!(\"YES\");\n    } else {\n        println!(\"NO\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Diversity","description":"Calculate the minimum number of characters you need to change in the string s, so that it contains at least k different letters, or print that it is impossible.String s consists only of lowercase Latin letters, and it is allowed to change characters only to lowercase Latin letters too.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"First line of input contains string s, consisting only of lowercase Latin letters (1\u2264|s|\u22641000, |s| denotes the length of s).\nSecond line of input contains integer k (1\u2264k\u226426).\n","output_spec":"Print single line with a minimum number of necessary changes, or the word \u00abimpossible\u00bb (without quotes) if it is impossible.\n","notes":"In the first test case string contains 6 different letters, so we don't need to change anything.\nIn the second test case string contains 4 different letters: {'a','h','o','y'}. To get 5 different letters it is necessary to change one occurrence of 'o' to some letter, which doesn't occur in the string, for example, {'b'}.\nIn the third test case, it is impossible to make 7 different letters because the length of the string is 6.\n","sample_inputs":["yandex\n6\n","yahoo\n5\n","google\n7\n"],"sample_outputs":["0\n","1\n","impossible\n"],"id":"844-A","difficulty":1000,"tags":["greedy","implementation","strings"],"src_uid":"bd5912fe2c5c37658f28f6b159b39645","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s;\n    int k;\n    cin >> s >> k;\n\n    int n = s.length();\n    int count[26] = {0};\n    for (int i = 0; i < n; i++) {\n        count[s[i] - 'a']++;\n    }\n\n    int ans = 0;\n    for (int i = 0; i < 26; i++) {\n        if (count[i] < k) {\n            ans += k - count[i];\n        }\n    }\n\n    if (ans > n) {\n        cout << \"impossible\" << endl;\n    } else {\n        cout << ans << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.nextLine();\n        int k = Integer.parseInt(scanner.nextLine());\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < 26; i++) {\n            if (count[i] < k) {\n                min = Math.min(min, k - count[i]);\n            }\n        }\n        if (min == Integer.MAX_VALUE) {\n            System.out.println(\"impossible\");\n        } else {\n            System.out.println(min);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\nk = int(input())\n\nif len(set(s)) >= k:\n    print(0)\nelse:\n    print(k - len(set(s)))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <string.h>\nint main() {\n    char s[1001];\n    int n, k, i, j, c[26], m = 0;\n    scanf(\" %s \", s);\n    n = strlen(s);\n    scanf(\" %d \", &k);\n    for (i = 0; i < 26; i++)\n        c[i] = 0;\n    for (i = 0; i < n; i++)\n        c[s[i] - 'a']++;\n    for (i = 0; i < 26; i++)\n        if (c[i] > 0)\n            m++;\n    if (m >= k)\n        printf(\" 0 \");\n    else\n        printf(\" impossible \");\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nnamespace Task1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string s = Console.ReadLine();\n            int k = int.Parse(Console.ReadLine());\n\n            var set = new HashSet<char>();\n            for (int i = 0; i < s.Length; i++)\n            {\n                set.Add(s[i]);\n            }\n\n            if (set.Count >= k)\n            {\n                Console.WriteLine(\"0\");\n            }\n            else\n            {\n                Console.WriteLine(\"impossible\");\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\nk = gets.to_i\n\nif s.length < k\n  puts 'impossible'\nelse\n  s_hash = Hash.new(0)\n  s.each_char { |c| s_hash[c] += 1 }\n  puts s_hash.length - k\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Task;\n\nuses\n  SysUtils;\n\nvar\n  s, t: string;\n  n, k, i, j, c: integer;\n\nbegin\n  Readln(s);\n  Readln(k);\n  n := Length(s);\n  c := 0;\n  for i := 0 to n - 1 do\n  begin\n    t := s[i];\n    for j := i + 1 to n - 1 do\n      if s[j] = t then\n        c := c + 1;\n  end;\n  if n < k then\n    Writeln('impossible')\n  else\n    Writeln(k - n - c);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    s := strings.ToLower(strings.TrimSpace(fmt.Scanln()))\n    k := int(fmt.Scanln())\n\n    if len(s) < k {\n        fmt.Println(\"impossible\")\n        return\n    }\n\n    m := make(map[rune]int)\n    for _, c := range s {\n        m[c]++\n    }\n\n    count := 0\n    for _, v := range m {\n        if v < k {\n            count += k - v\n        }\n    }\n\n    fmt.Println(count)\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const s = require('fs').readFileSync('\/dev\/stdin').toString().trim();\\nconst k = require('fs').readFileSync('\/dev\/stdin').toString().trim();\\nconst set = new Set();\\nfor (let i = 0; i < s.length; i++) {\\n  set.add(s[i]);\\n}\\nif (set.size >= k) {\\n  console.log(0);\\n} else {\\n  console.log('impossible');\\n}\\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nfun main() {\n    val (s, k) = readLine()!!.split(\"\\n\")\n    val set = mutableSetOf<Char>()\n    for (c in s) {\n        set.add(c)\n    }\n    if (set.size >= k) {\n        println(0)\n    } else {\n        println(k - set.size)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s = trim(fgets(STDIN));\n$k = (int)fgets(STDIN);\n$count = array_count_values(str_split($s));\n$ans = 0;\nfor ($i = 0; $i < 26; $i++) {\n    if ($count[$i] < $k) {\n        $ans += $k - $count[$i];\n    }\n}\nif ($ans > $s) {\n    echo 'impossible';\n} else {\n    echo $ans;\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s;\n    int k;\n    scanf(\" %s\\n%d \", &s, &k);\n    int n = s.length;\n    int a[26];\n    foreach (i; 0 .. 26) {\n        a[i] = 0;\n    }\n    foreach (c; s) {\n        a[c.to!int - 'a'.to!int]++;\n    }\n    int min = n;\n    foreach (i; 0 .. 26) {\n        if (a[i] == 0) {\n            min = min(min, n - a[i]);\n        }\n    }\n    if (min > k) {\n        printf(\"impossible\\n\");\n    } else {\n        printf(\"%d\\n\", min);\n    }\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $s = <STDIN>;\nmy $k = <STDIN>;\n\nmy %count;\nfor my $c (split \/\/, $s) {\n    $count{$c}++;\n}\n\nmy $min = 0;\nfor my $c (sort keys %count) {\n    if ($count{$c} < $k) {\n        $min += $k - $count{$c};\n    }\n}\n\nif ($min > $k) {\n    print \"impossible\\n\";\n} else {\n    print \"$min\\n\";\n}\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let mut s = String::new();\n    std::io::stdin().read_line(&mut s).unwrap();\n    let mut s = s.trim().to_lowercase();\n    let mut map = HashMap::new();\n    for c in s.chars() {\n        *map.entry(c).or_insert(0) += 1;\n    }\n    let mut ans = 0;\n    for (_, v) in map.iter() {\n        if v < k {\n            ans += k - v;\n        }\n    }\n    if ans > s.len() {\n        println!(\"impossible\");\n    } else {\n        println!(\"{}\", ans);\n    }\n}\n\"\"\"}]"}
{"title":"B. Lazy Security Guard","description":"Your security guard friend recently got a new job at a new security company. The company requires him to patrol an area of the city encompassing exactly N city blocks, but they let him choose which blocks. That is, your friend must walk the perimeter of a region whose area is exactly N blocks. Your friend is quite lazy and would like your help to find the shortest possible route that meets the requirements. The city is laid out in a square grid pattern, and is large enough that for the sake of the problem it can be considered infinite.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"Input will consist of a single integer N (1\u2264N\u226410^6), the number of city blocks that must be enclosed by the route.\n","output_spec":"Print the minimum perimeter that can be achieved.\n","notes":"Here are some possible shapes for the examples:\n\n","sample_inputs":["4\n","11\n","22\n"],"sample_outputs":["8\n","14\n","20\n"],"id":"859-B","difficulty":1000,"tags":["brute+force","geometry","math"],"src_uid":"414cc57550e31d98c1a6a56be6722a12","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    cout << 4 * (n \/ 4) + 2 * (n % 4) << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int ans = 0;\n        if (n % 2 == 0) {\n            ans = 4 * (n \/ 2);\n        } else {\n            ans = 4 * (n \/ 2) + 2;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\nprint(2*n)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    printf(\" %d \", 4 * (n - 1));\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace SecurityGuard\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            Console.WriteLine(n * 4);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nputs (n * 4) - 4\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program SecurityGuard;\nuses SysUtils;\n\nvar\n  N: Integer;\n\nbegin\n  Readln(N);\n  Writeln(2 * N);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    fmt.Println(4*n)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8');\nconst n = parseInt(input);\nconsole.log(4 * Math.ceil(n \/ 4));\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.sqrt\n\nfun main() {\n    val n = readLine()!!.toInt()\n    val s = sqrt(n.toDouble())\n    val ans = if (s.isWhole()) 4 * s else 4 * (s + 1)\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n\\necho 4 * sqrt(($n + 1) \/ 2);\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int s = 0;\n    for (int i = 1; i <= n; i++) {\n        s += 4 * i;\n    }\n    printf(\" %d \", s);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\n\nprint 2 * $n + 4;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let mut n = String::new();\n    std::io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n    let mut ans = 0;\n    if n % 2 == 0 {\n        ans = n * 4;\n    } else {\n        ans = n * 4 - 2;\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Guard Towers","description":"In a far away kingdom lives a very greedy king. To defend his land, he built n guard towers. Apart from the towers the kingdom has two armies, each headed by a tyrannical and narcissistic general. The generals can't stand each other, specifically, they will never let soldiers of two armies be present in one tower.During defence operations to manage a guard tower a general has to send part of his army to that tower. Each general asks some fee from the king for managing towers. As they live in a really far away kingdom, each general evaluates his fee in the following weird manner: he finds two remotest (the most distant) towers, where the soldiers of his army are situated and asks for the fee equal to the distance. Each tower is represented by a point on the plane with coordinates (x,y), and the distance between two points with coordinates (x1,y1) and (x2,y2) is determined in this kingdom as |x1-x2|+|y1-y2|.The greedy king was not exactly satisfied with such a requirement from the generals, that's why he only agreed to pay one fee for two generals, equal to the maximum of two demanded fees. However, the king is still green with greed, and among all the ways to arrange towers between armies, he wants to find the cheapest one. Each tower should be occupied by soldiers of exactly one army.He hired you for that. You should find the minimum amount of money that will be enough to pay the fees. And as the king is also very scrupulous, you should also count the number of arrangements that will cost the same amount of money. As their number can be quite large, it is enough for the king to know it as a remainder from dividing by 10^9+7.Two arrangements are distinct if the sets of towers occupied by soldiers of the first general are distinct.","input_from":"standard input","output_to":"standard output","time_limit":"1.5 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (2\u2264n\u22645000), n is the number of guard towers. Then follow n lines, each of which contains two integers x,y \u2014 the coordinates of the i-th tower (0\u2264x,y\u22645000). No two towers are present at one point.\nPretest 6 is one of the maximal tests for this problem.\n","output_spec":"Print on the first line the smallest possible amount of money that will be enough to pay fees to the generals. \nPrint on the second line the number of arrangements that can be carried out using the smallest possible fee. This number should be calculated modulo 1000000007 (10^9+7).\n","notes":"In the first example there are only two towers, the distance between which is equal to 2. If we give both towers to one general, then we well have to pay 2 units of money. If each general receives a tower to manage, to fee will be equal to 0. That is the smallest possible fee. As you can easily see, we can obtain it in two ways.\n","sample_inputs":["2\n0 0\n1 1\n","4\n0 0\n0 1\n1 0\n1 1\n","3\n0 0\n1000 1000\n5000 5000\n"],"sample_outputs":["0\n2\n","1\n4\n","2000\n2\n"],"id":"85-E","difficulty":2600,"tags":["binary+search","dsu","geometry","graphs","sortings"],"src_uid":"0152b751406d2d88eb5d3430020f8c49","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<pair<int, int>> v(n);\n    for (int i = 0; i < n; i++) {\n        int x, y;\n        cin >> x >> y;\n        v[i] = make_pair(x, y);\n    }\n    sort(v.begin(), v.end());\n    int ans = 0;\n    int cnt = 0;\n    for (int i = 0; i < n; i++) {\n        if (v[i].first == v[0].first) {\n            ans = max(ans, v[i].second - v[0].second);\n        } else if (v[i].second == v[0].second) {\n            ans = max(ans, v[i].first - v[0].first);\n        } else {\n            ans = max(ans, v[i].first - v[0].first + v[i].second - v[0].second);\n        }\n        cnt++;\n    }\n    cout << ans << endl;\n    cout << cnt % 1000000007 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] x = new int[n];\n        int[] y = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n            y[i] = sc.nextInt();\n        }\n        int ans = 0;\n        int cnt = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                ans = Math.max(ans, Math.abs(x[i] - x[j]) + Math.abs(y[i] - y[j]));\n            }\n        }\n        System.out.println(ans);\n        System.out.println((n * (n - 1) \/ 2) % 1000000007);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\nx = [0] * n\ny = [0] * n\n\nfor i in range(n):\n    x[i], y[i] = map(int, input().split())\n\nx.sort()\ny.sort()\n\nans = 0\nans_cnt = 0\n\nfor i in range(n):\n    ans = max(ans, x[i] + y[n - 1 - i])\n    ans_cnt += 1\n\nprint(ans)\nprint(ans_cnt % 1000000007)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int x[n], y[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &x[i], &y[i]);\n    }\n    int max = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            int d = (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]);\n            if (d > max) {\n                max = d;\n            }\n        }\n    }\n    printf(\" %d \", max);\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            int d = (x[i] - x[j]) * (x[i] - x[j]) + (y[i] - y[j]) * (y[i] - y[j]);\n            if (d == max) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans % 1000000007);\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace Greedy_King\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            List<int> x = new List<int>();\n            List<int> y = new List<int>();\n            for (int i = 0; i < n; i++)\n            {\n                string[] s = Console.ReadLine().Split(' ');\n                x.Add(int.Parse(s[0]));\n                y.Add(int.Parse(s[1]));\n            }\n            int max = 0;\n            for (int i = 0; i < n; i++)\n            {\n                for (int j = i + 1; j < n; j++)\n                {\n                    int d = Math.Abs(x[i] - x[j]) + Math.Abs(y[i] - y[j]);\n                    if (d > max)\n                    {\n                        max = d;\n                    }\n                }\n            }\n            Console.WriteLine(max);\n            Console.WriteLine(n * (n - 1) \/ 2);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = []\nb = []\nfor i in 1..n\n  x, y = gets.split.map(&:to_i)\n  a << x\n  b << y\nend\na.sort!\nb.sort!\nans = 0\nans2 = 0\nfor i in 0..n-1\n  ans = [ans, a[i]-a[i-1]+b[i]-b[i-1]].max\n  ans2 = (ans2+1)%10**9+7\nend\nputs ans\nputs ans2\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var x, y, ans, cnt int\\n    ans = 0\\n    cnt = 0\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d %d\\\\n\\\", &x, &y)\\n        ans = max(ans, x+y)\\n    }\\n    fmt.Println(ans)\\n    fmt.Println(cnt)\\n}\\n\\nfunc max(a, b int) int {\\n    if a > b {\\n        return a\\n    } else {\\n        return b\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n = int(input())\n\nx = []\ny = []\n\nfor i in range(n):\n    x.append(int(input()))\n    y.append(int(input()))\n\nx.sort()\ny.sort()\n\nans = 0\n\nfor i in range(n):\n    ans = max(ans, x[i] + y[n - i - 1])\n\nprint(ans)\n\nprint(pow(2, n, 1000000007))\"}","Kotlin":"","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$x = [];\n$y = [];\nfor ($i = 0; $i < $n; $i++) {\n    $a = explode(\" \", trim(fgets(STDIN)));\n    $x[] = (int)$a[0];\n    $y[] = (int)$a[1];\n}\n$x = array_unique($x);\n$y = array_unique($y);\n$d = [];\nfor ($i = 0; $i < count($x); $i++) {\n    for ($j = 0; $j < count($y); $j++) {\n        $d[] = abs($x[$i] - $x[0]) + abs($y[$j] - $y[0]);\n    }\n}\n$d = array_unique($d);\n$ans = $d[0];\n$ans2 = 1;\nfor ($i = 1; $i < count($d); $i++) {\n    if ($ans == $d[$i]) {\n        $ans2++;\n    } else {\n        break;\n    }\n}\necho $ans . PHP_EOL;\necho $ans2 % 1000000007 . PHP_EOL;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    auto a = new int[n];\n    auto b = new int[n];\n    auto c = new int[n];\n    auto d = new int[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d %d \", &a[i], &b[i]);\n        c[i] = a[i] + b[i];\n        d[i] = a[i] - b[i];\n    }\n    int ans = 0;\n    int ans2 = 0;\n    sort(c);\n    sort(d);\n    for (int i = 0; i < n; i++) {\n        ans = max(ans, c[i]);\n        ans2 = (ans2 + (i + 1) * (n - i)) % 1000000007;\n    }\n    printf(\" %d\\n\", ans);\n    printf(\" %d\\n\", ans2);\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @x = ();\nmy @y = ();\nfor (my $i = 0; $i < $n; $i++) {\n    my @t = split \/ \/, <STDIN>;\n    push @x, $t[0];\n    push @y, $t[1];\n}\n\nmy $max = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        my $d = abs($x[$i] - $x[$j]) + abs($y[$i] - $y[$j]);\n        if ($d > $max) {\n            $max = $d;\n        }\n    }\n}\n\nprint $max, \"\\n\";\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        my $d = abs($x[$i] - $x[$j]) + abs($y[$i] - $y[$j]);\n        if ($d == $max) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans % 1000000007, \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n\n    let mut xs = Vec::new();\n    let mut ys = Vec::new();\n\n    for _ in 0..n {\n        let line = lines.next().unwrap().unwrap();\n        let mut iter = line.split_whitespace();\n        let x = iter.next().unwrap().parse::<i32>().unwrap();\n        let y = iter.next().unwrap().parse::<i32>().unwrap();\n        xs.push(x);\n        ys.push(y);\n    }\n\n    let mut ans = 0;\n    let mut cnt = 0;\n\n    for i in 0..n {\n        for j in i + 1..n {\n            let d = (xs[i] - xs[j]).abs() + (ys[i] - ys[j]).abs();\n            ans = ans.max(d);\n            cnt += 1;\n        }\n    }\n\n    println!(\"{}\", ans);\n    println!(\"{}\", cnt % 1000000007);\n}\n\"\"\"}]"}
{"title":"A. Reflection","description":"For each positive integer n consider the integer \u03c8(n) which is obtained from n by replacing every digit a in the decimal notation of n with the digit (9-a). We say that \u03c8(n) is the reflection of n. For example, reflection of 192 equals 807. Note that leading zeros (if any) should be omitted. So reflection of 9 equals 0, reflection of 91 equals 8.Let us call the weight of the number the product of the number and its reflection. Thus, the weight of the number 10 is equal to 10\u00b789=890.Your task is to find the maximum weight of the numbers in the given range [l,r] (boundaries are included).","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"Input contains two space-separated integers l and r (1\u2264l\u2264r\u226410^9) \u2014 bounds of the range.\n","output_spec":"Output should contain single integer number: maximum value of the product n\u00b7\u03c8(n), where l\u2264n\u2264r.\nPlease, do not use %lld specificator to read or write 64-bit integers in C++. It is preferred to use cout (also you may use %I64d).\n","notes":"In the third sample weight of 8 equals 8\u00b71=8, weight of 9 equals 9\u00b70=0, weight of 10 equals 890.\nThus, maximum value of the product is equal to 890.\n","sample_inputs":["3 7\n","1 1\n","8 10\n"],"sample_outputs":["20","8","890"],"id":"86-A","difficulty":1600,"tags":["math"],"src_uid":"2c4b2a162563242cb2f43f6209b59d5e","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\\n\\nusing namespace std;\\n\\nint main() {\\n    int l, r;\\n    cin >> l >> r;\\n    int ans = 0;\\n    for (int i = l; i <= r; i++) {\\n        int n = i, m = 0;\\n        while (n > 0) {\\n            m = m * 10 + (n % 10) ^ 9;\\n            n \/= 10;\\n        }\\n        ans = max(ans, i * m);\\n    }\\n    cout << ans << endl;\\n    return 0;\\n}\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int l = sc.nextInt();\n        int r = sc.nextInt();\n        int max = 0;\n        for (int i = l; i <= r; i++) {\n            int n = i;\n            int m = 0;\n            while (n > 0) {\n                m = m * 10 + (9 - n % 10);\n                n \/= 10;\n            }\n            max = Math.max(max, i * m);\n        }\n        System.out.println(max);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nl,r=map(int,input().split())\nans=0\nfor i in range(l,r+1):\n    s=str(i)\n    s=s[::-1]\n    s=s.replace('0','')\n    ans=max(ans,int(s)*i)\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int l, r;\n    scanf(\" %d %d \", &l, &r);\n    int ans = 0;\n    for (int i = l; i <= r; i++) {\n        int n = i;\n        int m = 0;\n        while (n > 0) {\n            m = m * 10 + (9 - n % 10);\n            n \/= 10;\n        }\n        ans = max(ans, i * m);\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var l = int.Parse(input[0]);\n        var r = int.Parse(input[1]);\n\n        var max = 0;\n        for (var i = l; i <= r; i++)\n        {\n            var n = i;\n            var m = 0;\n            while (n > 0)\n            {\n                m = m * 10 + (9 - n % 10);\n                n \/= 10;\n            }\n            max = Math.Max(max, i * m);\n        }\n\n        Console.WriteLine(max);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"l,r=map(int,input().split())\nans=0\nfor i in range(l,r+1):\n    s=str(i)\n    s=s[::-1]\n    s=int(s)\n    ans=max(ans,i*s)\nprint(ans)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program P1000;\nuses SysUtils;\nvar\n  l, r, i, j, n, m, k, t, a, b, c, d, e, f, g, h, max: integer;\nbegin\n  readln(l, r);\n  max := 0;\n  for i := l to r do\n  begin\n    n := i;\n    a := 0;\n    b := 0;\n    while n > 0 do\n    begin\n      c := n mod 10;\n      a := a + c;\n      n := n div 10;\n    end;\n    for j := 9 downto 0 do\n    begin\n      if a > j then\n      begin\n        b := b + (a - j);\n      end;\n    end;\n    m := i * b;\n    if m > max then\n    begin\n      max := m;\n    end;\n  end;\n  writeln(max);\nend.\"}]}","Go":"[{\"version\": \"1.17\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar l, r int\n\tfmt.Scanf(\" %d %d \", &l, &r)\n\tmax := 0\n\tfor i := l; i <= r; i++ {\n\t\tn := i\n\t\tm := 0\n\t\tfor n > 0 {\n\t\t\tm = m*10 + n%10\n\t\t\tn \/= 10\n\t\t}\n\t\tm = 9 - m\n\t\tif m*i > max {\n\t\t\tmax = m*i\n\t\t}\n\t}\n\tfmt.Println(max)\n}\n\"}]}","Javascript":"","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.max\n\nfun main() {\n    val (l, r) = readLine()!!.split(\" \").map { it.toInt() }\n    val dp = Array(r + 1) { IntArray(r + 1) { 0 } }\n    for (i in 1..r) {\n        for (j in 1..r) {\n            dp[i][j] = max(dp[i - 1][j], dp[i][j - 1])\n            if (i >= j) {\n                dp[i][j] = max(dp[i][j], i * (9 - i) + dp[i - j][j - 1])\n            }\n        }\n    }\n    println(dp[r][r])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$l = (int)trim(fgets(STDIN));\n$r = (int)trim(fgets(STDIN));\n$max = 0;\nfor ($i = $l; $i <= $r; $i++) {\n    $n = str_split($i);\n    $n = array_map(function ($x) {\n        return 9 - $x;\n    }, $n);\n    $n = implode('', $n);\n    $max = max($max, $i * intval($n));\n}\necho $max;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int l, r;\n    scanf(\" %d %d \", &l, &r);\n    int max = 0;\n    for (int i = l; i <= r; i++) {\n        int n = i;\n        int m = 0;\n        while (n > 0) {\n            m = m * 10 + (9 - n % 10);\n            n \/= 10;\n        }\n        max = max(max, i * m);\n    }\n    printf(\" %d \", max);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $l = <STDIN>;\nmy $r = <STDIN>;\n\nmy $max = 0;\nfor (my $i = $l; $i <= $r; $i++) {\n    my $n = $i;\n    my $s = \"\";\n    while ($n > 0) {\n        $s .= $n % 10;\n        $n = int($n \/ 10);\n    }\n    my $r = 0;\n    for (my $j = 0; $j < length($s); $j++) {\n        $r += 9 - $s[$j];\n    }\n    $max = max($max, $i * $r);\n}\n\nprint $max;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut iter = input.split_whitespace();\n    let l = iter.next().unwrap().parse::<i64>().unwrap();\n    let r = iter.next().unwrap().parse::<i64>().unwrap();\n\n    let mut max = 0;\n    for i in l..=r {\n        let mut n = i;\n        let mut m = 0;\n        while n > 0 {\n            m = m * 10 + (n % 10) - 9;\n            n \/= 10;\n        }\n        max = max.max(i * m);\n    }\n\n    println!(\"{}\", max);\n}\n\"\"\"}]"}
{"title":"C. Genetic engineering","description":"\"Multidimensional spaces are completely out of style these days, unlike genetics problems\" \u2014 thought physicist Woll and changed his subject of study to bioinformatics. Analysing results of sequencing he faced the following problem concerning DNA sequences. We will further think of a DNA sequence as an arbitrary string of uppercase letters \"A\", \"C\", \"G\" and \"T\" (of course, this is a simplified interpretation).Let w be a long DNA sequence and s1,s2,...,sm \u2014 collection of short DNA sequences. Let us say that the collection filters w iff w can be covered with the sequences from the collection. Certainly, substrings corresponding to the different positions of the string may intersect or even cover each other. More formally: denote by |w| the length of w, let symbols of w be numbered from 1 to |w|. Then for each position i in w there exist pair of indices l,r (1\u2264l\u2264i\u2264r\u2264|w|) such that the substring w[l\u00a0...\u00a0r] equals one of the elements s1,s2,...,sm of the collection.Woll wants to calculate the number of DNA sequences of a given length filtered by a given collection, but he doesn't know how to deal with it. Help him! Your task is to find the number of different DNA sequences of length n filtered by the collection {si}.Answer may appear very large, so output it modulo 1000000009.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"First line contains two integer numbers n and m (1\u2264n\u22641000,1\u2264m\u226410) \u2014 the length of the string and the number of sequences in the collection correspondently. \nNext m lines contain the collection sequences si, one per line. Each si is a nonempty string of length not greater than 10. All the strings consist of uppercase letters \"A\", \"C\", \"G\", \"T\". The collection may contain identical strings.\n","output_spec":"Output should contain a single integer \u2014 the number of strings filtered by the collection modulo 1000000009 (10^9+9).\n","notes":"In the first sample, a string has to be filtered by \"A\". Clearly, there is only one such string: \"AA\".\nIn the second sample, there exist exactly two different strings satisfying the condition (see the pictures below).\n \n \n","sample_inputs":["2 1\nA\n","6 2\nCAT\nTACT\n"],"sample_outputs":["1\n","2\n"],"id":"86-C","difficulty":2500,"tags":["dp","string+suffix+structures","trees"],"src_uid":"3f053c07deaac55c2c51df6147080340","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<string> s(m);\n    for (int i = 0; i < m; i++) {\n        cin >> s[i];\n    }\n\n    vector<vector<int>> dp(n + 1, vector<int>(4, 0));\n    dp[0][0] = 1;\n    for (int i = 1; i <= n; i++) {\n        for (int j = 0; j < 4; j++) {\n            for (int k = 0; k < 4; k++) {\n                if (j == k) {\n                    dp[i][j] += dp[i - 1][k];\n                } else {\n                    dp[i][j] += dp[i - 1][k] * (i - 1);\n                }\n            }\n        }\n    }\n\n    int ans = 0;\n    for (int i = 0; i < m; i++) {\n        for (int j = 0; j < s[i].length(); j++) {\n            ans += dp[n - s[i].length() + j][s[i][j] - 'A'];\n        }\n    }\n\n    cout << ans % 1000000009 << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int m = sc.nextInt();\n        int[] a = new int[4];\n        for (int i = 0; i < m; i++) {\n            String s = sc.next();\n            for (int j = 0; j < s.length(); j++) {\n                a[s.charAt(j) - 'A']++;\n            }\n        }\n        long ans = 1;\n        for (int i = 0; i < 4; i++) {\n            ans = ans * (a[i] + 1) % 1000000009;\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,m=map(int,input().split())\ns=[input() for _ in range(m)]\n\ndef f(n):\n    if n==0:\n        return 1\n    ans=0\n    for i in range(m):\n        if len(s[i])<=n:\n            ans+=f(n-len(s[i]))\n    return ans%1000000009\n\nprint(f(n))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    int a[4] = {0};\n    int b[4] = {0};\n    int c[4] = {0};\n    int d[4] = {0};\n    for (int i = 0; i < m; i++) {\n        char s[11];\n        scanf(\" %s \", s);\n        if (s[0] == 'A') {\n            a[0]++;\n        } else if (s[0] == 'C') {\n            c[0]++;\n        } else if (s[0] == 'G') {\n            g[0]++;\n        } else {\n            t[0]++;\n        }\n        for (int j = 1; j < strlen(s); j++) {\n            if (s[j] == 'A') {\n                a[j] = a[j - 1] + 1;\n            } else if (s[j] == 'C') {\n                c[j] = c[j - 1] + 1;\n            } else if (s[j] == 'G') {\n                g[j] = g[j - 1] + 1;\n            } else {\n                t[j] = t[j - 1] + 1;\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < 4; i++) {\n        for (int j = 0; j < 4; j++) {\n            for (int k = 0; k < 4; k++) {\n                for (int l = 0; l < 4; l++) {\n                    int tmp = a[n - 1] - a[i] - a[j] - a[k] - a[l];\n                    tmp = tmp * c[n - 1] - tmp * c[i] - tmp * c[j] - tmp * c[k] - tmp * c[l];\n                    tmp = tmp * g[n - 1] - tmp * g[i] - tmp * g[j] - tmp * g[k] - tmp * g[l];\n                    tmp = tmp * t[n - 1] - tmp * t[i] - tmp * t[j] - tmp * t[k] - tmp * t[l];\n                    ans = (ans + tmp) % 1000000009;\n                }\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"\"\"}]","C#":"","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,m=map(int,input().split())\ns=[input() for _ in range(m)]\ndp=[0]*(n+1)\ndp[0]=1\nfor i in range(1,n+1):\n    for j in range(m):\n        if len(s[j])<=i:\n            dp[i]+=dp[i-len(s[j])]\n            dp[i]%=1000000009\nprint(dp[n])\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram DNA;\n\nuses\n  SysUtils;\n\nconst\n  MOD = 1000000009;\n\ntype\n  TStr = string[10];\n\nvar\n  n, m: Integer;\n  s: array[0..10] of TStr;\n  f: array[0..1000, 0..10] of Integer;\n\nprocedure Init;\nvar\n  i, j: Integer;\nbegin\n  Readln(n, m);\n  for i := 0 to m - 1 do\n  begin\n    Readln(s[i]);\n    for j := 0 to Length(s[i]) - 1 do\n      inc(f[ord(s[i][j]) - ord('A'), j]);\n  end;\nend;\n\nfunction Solve: Integer;\nvar\n  i, j, k: Integer;\n  ans: Integer;\nbegin\n  ans := 1;\n  for i := 0 to n - 1 do\n  begin\n    ans := ans * f[i, 0] mod MOD;\n    for j := 1 to n - 1 do\n      ans := ans * f[i, j] * f[n - 1 - i, j] mod MOD;\n  end;\n  Result := ans;\nend;\n\nbegin\n  Init;\n  Writeln(Solve);\nend.\"\"\"}]","Go":"","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0].split(' ')[0]);\nconst m = Number(input[0].split(' ')[1]);\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 0; i < m; i++) {\n  const s = input[i + 1];\n  for (let j = s.length; j <= n; j++) {\n    dp[j] = (dp[j] + dp[j - s.length]) % 1000000009;\n  }\n}\nconsole.log(dp[n]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m) = readLine()!!.split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(4) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..3) {\n            for (k in 0..3) {\n                if (j == k) {\n                    dp[i][j] += dp[i - 1][k]\n                } else {\n                    dp[i][j] += dp[i - 1][k] * 3\n                }\n            }\n        }\n    }\n    val ans = dp[n][0] * dp[n][1] * dp[n][2] * dp[n][3]\n    println(ans % 1000000009)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$arr = [];\nfor ($i = 0; $i < $m; $i++) {\n    $arr[] = trim(fgets(STDIN));\n}\n$dp = array_fill(0, $n + 1, 0);\n$dp[0] = 1;\nfor ($i = 0; $i < $m; $i++) {\n    for ($j = $n; $j >= strlen($arr[$i]); $j--) {\n        $dp[$j] = (int)($dp[$j] + $dp[$j - strlen($arr[$i])]) % 1000000009;\n    }\n}\necho $dp[$n];\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    auto s = new array!(char[10])[m];\n    for (int i = 0; i < m; i++) {\n        scanf(\" %s \", s[i]);\n    }\n    auto dp = new array!(int)[n + 1];\n    dp[0] = 1;\n    for (int i = 1; i <= n; i++) {\n        dp[i] = 0;\n        for (int j = 0; j < m; j++) {\n            if (i - s[j].length >= 0) {\n                dp[i] = (dp[i] + dp[i - s[j].length]) % 1000000009;\n            }\n        }\n    }\n    printf(\" %d \", dp[n]);\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $m;\nmy @s;\n\nchomp(my $line = <STDIN>);\n($n, $m) = split(' ', $line);\n\nfor (my $i = 0; $i < $m; $i++) {\n    chomp(my $line = <STDIN>);\n    push(@s, $line);\n}\n\nmy $dp = [0] x ($n + 1);\n$dp[0] = 1;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    for (my $j = 0; $j < $m; $j++) {\n        if ($i >= length($s[$j])) {\n            $dp[$i] += $dp[$i - length($s[$j])] % 1000000009;\n        }\n    }\n}\n\nprint $dp[$n] % 1000000009 . \"\\n\";\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_line().unwrap().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut dp = HashMap::new();\n    for _ in 0..m {\n        let s = read_line().unwrap();\n        let mut count = 0;\n        for i in 0..s.len() {\n            count = (count * 4) % 1000000009;\n            if s[i] == 'A' {\n                count += 1;\n            }\n        }\n        dp.insert(s, count);\n    }\n    let mut ans = 0;\n    for i in 0..n {\n        let mut count = 0;\n        for j in 0..m {\n            let s = dp.get(&s[i..i + s[j].len()]).unwrap();\n            count = (count * s) % 1000000009;\n        }\n        ans = (ans + count) % 1000000009;\n    }\n    println!(\"{}\", ans);\n}\n\nfn read_line() -> String {\n    let mut line = String::new();\n    std::io::stdin().read_line(&mut line).unwrap();\n    line.trim().to_string()\n}\n\"\"\"}]"}
{"title":"A. Chord","description":"Vasya studies music. He has learned lots of interesting stuff. For example, he knows that there are 12 notes: C, C#, D, D#, E, F, F#, G, G#, A, B, H. He also knows that the notes are repeated cyclically: after H goes C again, and before C stands H. We will consider the C note in the row's beginning and the C note after the H similar and we will identify them with each other. The distance between the notes along the musical scale is measured in tones: between two consecutive notes there's exactly one semitone, that is, 0.5 tone. The distance is taken from the lowest tone to the uppest one, that is, the distance between C and E is 4 semitones and between E and C is 8 semitonesVasya also knows what a chord is. A chord is an unordered set of no less than three notes. However, for now Vasya only works with triads, that is with the chords that consist of exactly three notes. He can already distinguish between two types of triads \u2014 major and minor.Let's define a major triad. Let the triad consist of notes X, Y and Z. If we can order the notes so as the distance along the musical scale between X and Y equals 4 semitones and the distance between Y and Z is 3 semitones, then the triad is major. The distance between X and Z, accordingly, equals 7 semitones.A minor triad is different in that the distance between X and Y should be 3 semitones and between Y and Z \u2014 4 semitones.For example, the triad \"C E G\" is major: between C and E are 4 semitones, and between E and G are 3 semitones. And the triplet \"C# B F\" is minor, because if we order the notes as \"B C# F\", than between B and C# will be 3 semitones, and between C# and F \u2014 4 semitones.Help Vasya classify the triad the teacher has given to him.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line contains 3 space-separated notes in the above-given notation.\n","output_spec":"Print \"major\" if the chord is major, \"minor\" if it is minor, and \"strange\" if the teacher gave Vasya some weird chord which is neither major nor minor. Vasya promises you that the answer will always be unambiguous. That is, there are no chords that are both major and minor simultaneously.\n","notes":null,"sample_inputs":["C E G\n","C# B F\n","A B H\n"],"sample_outputs":["major\n","minor\n","strange\n"],"id":"88-A","difficulty":1200,"tags":["brute+force","implementation"],"src_uid":"6aa83c2f6e095848bc63aba7d013aa58","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s;\n    cin >> s;\n    int a = s[0] - 'A';\n    int b = s[1] - 'A';\n    int c = s[2] - 'A';\n    if (a - b == 4 && b - c == 3) {\n        cout << \"major\" << endl;\n    } else if (a - b == 3 && b - c == 4) {\n        cout << \"minor\" << endl;\n    } else {\n        cout << \"strange\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String[] notes = scanner.nextLine().split(\" \");\n        int distance1 = Math.abs(notes[0].charAt(0) - notes[1].charAt(0));\n        int distance2 = Math.abs(notes[1].charAt(0) - notes[2].charAt(0));\n        if (distance1 == 4 && distance2 == 3) {\n            System.out.println(\"major\");\n        } else if (distance1 == 3 && distance2 == 4) {\n            System.out.println(\"minor\");\n        } else {\n            System.out.println(\"strange\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nnotes = input().split()\n\ndef get_distance(note1, note2):\n    if note1 == note2:\n        return 0\n    if note1 == 'H':\n        return 12 - notes.index(note2)\n    if note2 == 'H':\n        return notes.index(note1)\n    return notes.index(note2) - notes.index(note1)\n\ndef is_major(note1, note2, note3):\n    return get_distance(note1, note2) == 4 and get_distance(note2, note3) == 3\n\ndef is_minor(note1, note2, note3):\n    return get_distance(note1, note2) == 3 and get_distance(note2, note3) == 4\n\nif is_major(notes[0], notes[1], notes[2]):\n    print('major')\nelif is_minor(notes[0], notes[1], notes[2]):\n    print('minor')\nelse:\n    print('strange')\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    char a, b, c;\n    scanf(\" %c %c %c \", &a, &b, &c);\n    int d = a - b;\n    int e = b - c;\n    if (d == 4 && e == 3)\n        printf(\" major \");\n    else if (d == 3 && e == 4)\n        printf(\" minor \");\n    else\n        printf(\" strange \");\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] notes = Console.ReadLine().Split(' ');\n        int[] noteDistances = new int[3];\n        for (int i = 0; i < 3; i++)\n        {\n            noteDistances[i] = GetNoteDistance(notes[i]);\n        }\n        if (noteDistances[0] == 4 && noteDistances[1] == 3 && noteDistances[2] == 7)\n        {\n            Console.WriteLine(\"major\");\n        }\n        else if (noteDistances[0] == 3 && noteDistances[1] == 4 && noteDistances[2] == 7)\n        {\n            Console.WriteLine(\"minor\");\n        }\n        else\n        {\n            Console.WriteLine(\"strange\");\n        }\n    }\n\n    static int GetNoteDistance(string note)\n    {\n        switch (note)\n        {\n            case \"C\":\n                return 0;\n            case \"C#\":\n                return 1;\n            case \"D\":\n                return 2;\n            case \"D#\":\n                return 3;\n            case \"E\":\n                return 4;\n            case \"F\":\n                return 5;\n            case \"F#\":\n                return 6;\n            case \"G\":\n                return 7;\n            case \"G#\":\n                return 8;\n            case \"A\":\n                return 9;\n            case \"A#\":\n                return 10;\n            case \"B\":\n                return 11;\n            case \"H\":\n                return 12;\n            default:\n                return -1;\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nnotes = gets.split(\" \")\n\ndef distance(note1, note2)\n  (note2.ord - note1.ord).abs\nend\n\ndef is_major(note1, note2, note3)\n  distance(note1, note2) == 4 && distance(note2, note3) == 3\nend\n\ndef is_minor(note1, note2, note3)\n  distance(note1, note2) == 3 && distance(note2, note3) == 4\nend\n\nif is_major(notes[0], notes[1], notes[2])\n  puts \"major\"\nelsif is_minor(notes[0], notes[1], notes[2])\n  puts \"minor\"\nelse\n  puts \"strange\"\nend\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nuses SysUtils;\n\nvar\n  a, b, c: Char;\n  i: Integer;\n\nbegin\n  Readln(a, b, c);\n  for i := 0 to 11 do\n    if a = Chr(ord('C') + i) then\n      a := i;\n  for i := 0 to 11 do\n    if b = Chr(ord('C') + i) then\n      b := i;\n  for i := 0 to 11 do\n    if c = Chr(ord('C') + i) then\n      c := i;\n  if (a - b = 4) and (b - c = 3) then\n    Writeln('major');\n  else if (a - b = 3) and (b - c = 4) then\n    Writeln('minor');\n  else\n    Writeln('strange');\nend.\"\"\"}]","Go":"[{\"version\": \"Go1.17\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\nfunc main() {\n\tvar notes = strings.Split(strings.TrimSpace(input()), \" \")\n\tvar a, b, c int\n\tfor i, note := range notes {\n\t\tswitch note {\n\t\tcase \"C\":\n\t\t\ta = 0\n\t\tcase \"C#\":\n\t\t\ta = 1\n\t\tcase \"D\":\n\t\t\ta = 2\n\t\tcase \"D#\":\n\t\t\ta = 3\n\t\tcase \"E\":\n\t\t\ta = 4\n\t\tcase \"F\":\n\t\t\ta = 5\n\t\tcase \"F#\":\n\t\t\ta = 6\n\t\tcase \"G\":\n\t\t\ta = 7\n\t\tcase \"G#\":\n\t\t\ta = 8\n\t\tcase \"A\":\n\t\t\ta = 9\n\t\tcase \"A#\":\n\t\t\ta = 10\n\t\tcase \"B\":\n\t\t\ta = 11\n\t\tcase \"H\":\n\t\t\ta = 12\n\t\t}\n\t\tif i == 0 {\n\t\t\tb = a + 4\n\t\t\tc = a + 7\n\t\t} else if i == 1 {\n\t\t\tb = a + 3\n\t\t\tc = a + 7\n\t\t} else {\n\t\t\tb = a + 4\n\t\t\tc = a + 3\n\t\t}\n\t}\n\tif b-a == 4 && c-b == 3 {\n\t\tfmt.Println(\"major\")\n\t} else if b-a == 3 && c-b == 4 {\n\t\tfmt.Println(\"minor\")\n\t} else {\n\t\tfmt.Println(\"strange\")\n\t}\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nnotes = input().split()\n\ndef get_distance(note1, note2):\n    if note1 == note2:\n        return 0\n    if note1 == 'H':\n        return 12 - notes.index(note2)\n    if note2 == 'H':\n        return notes.index(note1)\n    return notes.index(note2) - notes.index(note1)\n\ndef is_major(note1, note2, note3):\n    return get_distance(note1, note2) == 4 and get_distance(note2, note3) == 3\n\ndef is_minor(note1, note2, note3):\n    return get_distance(note1, note2) == 3 and get_distance(note2, note3) == 4\n\nif is_major(notes[0], notes[1], notes[2]):\n    print('major')\nelif is_minor(notes[0], notes[1], notes[2]):\n    print('minor')\nelse:\n    print('strange')\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val notes = readLine()!!.split(\" \")\n    val notesMap = mapOf(\n        \"C\" to 0,\n        \"C#\" to 1,\n        \"D\" to 2,\n        \"D#\" to 3,\n        \"E\" to 4,\n        \"F\" to 5,\n        \"F#\" to 6,\n        \"G\" to 7,\n        \"G#\" to 8,\n        \"A\" to 9,\n        \"A#\" to 10,\n        \"B\" to 11,\n        \"H\" to 12\n    )\n    val first = notesMap[notes[0]]!!\n    val second = notesMap[notes[1]]!!\n    val third = notesMap[notes[2]]!!\n    val distance1 = Math.abs(first - second)\n    val distance2 = Math.abs(second - third)\n    if (distance1 == 4 && distance2 == 3) {\n        println(\"major\")\n    } else if (distance1 == 3 && distance2 == 4) {\n        println(\"minor\")\n    } else {\n        println(\"strange\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"\n<?php\n\n$notes = explode(' ', trim(fgets(STDIN)));\n\n$distances = [];\nfor ($i = 0; $i < 2; $i++) {\n    $distances[$i] = abs($notes[$i + 1] - $notes[$i]);\n}\n\nif ($distances[0] == 4 && $distances[1] == 3) {\n    echo 'major';\n} elseif ($distances[0] == 3 && $distances[1] == 4) {\n    echo 'minor';\n} else {\n    echo 'strange';\n}\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string[] notes = readln().split(' ');\n    int[] note_index = [0, 1, 2];\n    int[] note_distance = [0, 0, 0];\n\n    for (int i = 0; i < 3; i++) {\n        note_index[i] = notes[i].to!int() - 'C'.to!int();\n        note_distance[i] = note_index[i] - note_index[(i + 1) % 3];\n    }\n\n    if (note_distance[0] == 4 && note_distance[1] == 3)\n        writeln(\"major\");\n    else if (note_distance[0] == 3 && note_distance[1] == 4)\n        writeln(\"minor\");\n    else\n        writeln(\"strange\");\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy @notes = split \/ \/, <>;\nmy $a = ord($notes[0]);\nmy $b = ord($notes[1]);\nmy $c = ord($notes[2]);\n\nif ($a == $c) {\n    print \"strange\\n\";\n} elsif ($a == $b - 4 && $b == $c - 3) {\n    print \"major\\n\";\n} elsif ($a == $b - 3 && $b == $c - 4) {\n    print \"minor\\n\";\n} else {\n    print \"strange\\n\";\n}\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n\n    let notes: Vec<&str> = input.split_whitespace().collect();\n\n    let mut distance_x_y = 0;\n    let mut distance_y_z = 0;\n\n    for i in 0..notes.len() - 1 {\n        let note_x = notes[i];\n        let note_y = notes[i + 1];\n\n        let distance = (note_y.chars().nth(0).unwrap() as i32) - (note_x.chars().nth(0).unwrap() as i32);\n\n        if i == 0 {\n            distance_x_y = distance;\n        } else {\n            distance_y_z = distance;\n        }\n    }\n\n    if distance_x_y == 4 && distance_y_z == 3 {\n        println!(\"major\");\n    } else if distance_x_y == 3 && distance_y_z == 4 {\n        println!(\"minor\");\n    } else {\n        println!(\"strange\");\n    }\n}\n\"\"\"}]"}
{"title":"B. Months and Years","description":"Everybody in Russia uses Gregorian calendar. In this calendar there are 31 days in January, 28 or 29 days in February (depending on whether the year is leap or not), 31 days in March, 30 days in April, 31 days in May, 30 in June, 31 in July, 31 in August, 30 in September, 31 in October, 30 in November, 31 in December.A year is leap in one of two cases: either its number is divisible by 4, but not divisible by 100, or is divisible by 400. For example, the following years are leap: 2000, 2004, but years 1900 and 2018 are not leap.In this problem you are given n (1\u2264n\u226424) integers a1,a2,...,an, and you have to check if these integers could be durations in days of n consecutive months, according to Gregorian calendar. Note that these months could belong to several consecutive years. In other words, check if there is a month in some year, such that its duration is a1 days, duration of the next month is a2 days, and so on.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains single integer n (1\u2264n\u226424) \u2014 the number of integers.\nThe second line contains n integers a1,a2,...,an (28\u2264ai\u226431) \u2014 the numbers you are to check.\n","output_spec":"If there are several consecutive months that fit the sequence, print \"YES\" (without quotes). Otherwise, print \"NO\" (without quotes).\nYou can print each letter in arbitrary case (small or large).\n","notes":"In the first example the integers can denote months July, August, September and October.\nIn the second example the answer is no, because there are no two consecutive months each having 30 days.\nIn the third example the months are: February (leap year) \u2014 March \u2014 April \u2013 May \u2014 June.\nIn the fourth example the number of days in the second month is 28, so this is February. March follows February and has 31 days, but not 30, so the answer is NO.\nIn the fifth example the months are: December \u2014 January \u2014 February (non-leap year).\n","sample_inputs":["4\n31 31 30 31\n","2\n30 30\n","5\n29 31 30 31 30\n","3\n31 28 30\n","3\n31 31 28\n"],"sample_outputs":["Yes\n\n","No\n\n","Yes\n\n","No\n\n","Yes\n\n"],"id":"899-B","difficulty":1200,"tags":["implementation"],"src_uid":"d60c8895cebcc5d0c6459238edbdb945","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n    int i = 0;\n    int j = 1;\n    int k = 0;\n    while (i < n && j < n) {\n        if (a[i] == 31 && a[j] == 28) {\n            i++;\n            j++;\n        } else if (a[i] == 31 && a[j] == 30) {\n            i++;\n            j++;\n        } else if (a[i] == 28 && a[j] == 31) {\n            i++;\n            j++;\n        } else if (a[i] == 29 && a[j] == 31) {\n            i++;\n            j++;\n        } else if (a[i] == 30 && a[j] == 31) {\n            i++;\n            j++;\n        } else if (a[i] == 30 && a[j] == 28) {\n            i++;\n            j++;\n        } else if (a[i] == 28 && a[j] == 29) {\n            i++;\n            j++;\n        } else {\n            k = 1;\n            break;\n        }\n    }\n    if (k == 0) {\n        cout << \"Yes\" << endl;\n    } else {\n        cout << \"No\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = scanner.nextInt();\n        }\n        int count = 0;\n        for (int i = 0; i < n - 1; i++) {\n            if (a[i] == 28 && a[i + 1] == 29) {\n                count++;\n            }\n        }\n        if (count == 1) {\n            System.out.println(\"YES\");\n        } else {\n            System.out.println(\"NO\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"YES\")\n    exit()\n\nif a[0] == 28 and a[1] == 29:\n    print(\"YES\")\n    exit()\n\nif a[0] == 29 and a[1] == 28:\n    print(\"YES\")\n    exit()\n\nif a[0] == 31 and a[1] == 30:\n    print(\"YES\")\n    exit()\n\nif a[0] == 30 and a[1] == 31:\n    print(\"YES\")\n    exit()\n\nprint(\"NO\")\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int[] a = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);\n        int[] months = new int[] { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\n        int[] monthsLeap = new int[] { 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };\n        int i = 0;\n        int j = 0;\n        bool flag = false;\n        while (i < n && j < n)\n        {\n            if (a[i] == months[j] || a[i] == monthsLeap[j])\n            {\n                i++;\n                j++;\n            }\n            else\n            {\n                j++;\n            }\n        }\n        if (i == n)\n        {\n            Console.WriteLine(\"Yes\");\n        }\n        else\n        {\n            Console.WriteLine(\"No\");\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\na = gets.split.map(&:to_i)\n\nif a.length == 1\n  puts \"NO\"\n  exit\nend\n\nif a[0] == 29 && a[1] == 31\n  puts \"YES\"\n  exit\nend\n\nif a[0] == 31 && a[1] == 28\n  puts \"YES\"\n  exit\nend\n\nif a[0] == 30 && a[1] == 31\n  puts \"YES\"\n  exit\nend\n\nif a[0] == 31 && a[1] == 30\n  puts \"YES\"\n  exit\nend\n\nputs \"NO\"\n\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t1;\nvar\n  n, i, j, k, m, t: integer;\n  a: array[1..24] of integer;\nbegin\n  readln(n);\n  for i := 1 to n do\n    readln(a[i]);\n  m := 0;\n  for i := 1 to n - 1 do\n    if a[i] = a[i + 1] then\n      m := m + 1;\n  if m = n - 1 then\n    writeln('Yes')\n  else\n    writeln('No');\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    var a []int\\n    for i := 0; i < n; i++ {\\n        fmt.Scanf(\\\"%d\\\\n\\\", &a[i])\\n    }\\n    var flag bool\\n    for i := 0; i < n-1; i++ {\\n        if a[i] == 28 && a[i+1] == 29 {\\n            flag = true\\n        } else if a[i] == 29 && a[i+1] == 28 {\\n            flag = true\\n        } else if a[i] == 30 && a[i+1] == 31 {\\n            flag = true\\n        } else if a[i] == 31 && a[i+1] == 30 {\\n            flag = true\\n        }\\n    }\\n    if flag {\\n        fmt.Println(\\\"Yes\\\")\\n    } else {\\n        fmt.Println(\\\"No\\\")\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const n = parseInt(process.stdin.readline().trim());\nconst a = process.stdin.readline().trim().split(' ').map(Number);\nconst m = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst m2 = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nlet i = 0;\nlet j = 0;\nlet k = 0;\nlet l = 0;\nlet flag = false;\nwhile (i < n) {\n    if (a[i] == m[j]) {\n        i++;\n        j++;\n    } else if (a[i] == m2[j]) {\n        i++;\n        j++;\n    } else if (a[i] == m[k]) {\n        i++;\n        k++;\n    } else if (a[i] == m2[k]) {\n        i++;\n        k++;\n    } else if (a[i] == m[l]) {\n        i++;\n        l++;\n    } else if (a[i] == m2[l]) {\n        i++;\n        l++;\n    } else {\n        flag = true;\n        break;\n    }\n}\nif (flag) {\n    console.log('NO');\n} else {\n    console.log('YES');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val n = readLine().toInt()\n    val a = readLine().split(\" \").map { it.toInt() }\n    val m = mutableListOf<Int>()\n    var i = 0\n    while (i < n) {\n        m.add(a[i])\n        i++\n    }\n    var flag = true\n    for (i in 0 until m.size - 1) {\n        if (m[i] != m[i + 1] - 1) {\n            flag = false\n            break\n        }\n    }\n    if (flag) {\n        println(\"YES\")\n    } else {\n        println(\"NO\")\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$arr = explode(' ', trim(fgets(STDIN)));\n$arr = array_map('intval', $arr);\n$ans = 'NO';\nfor ($i = 0; $i < $n; $i++) {\n    if ($arr[$i] == 28) {\n        $ans = 'YES';\n        break;\n    }\n}\nif ($ans == 'NO') {\n    for ($i = 0; $i < $n; $i++) {\n        if ($arr[$i] == 29) {\n            $ans = 'YES';\n            break;\n        }\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int i = 0;\n    int j = 1;\n    int k = 0;\n    while (i < n && j < n) {\n        if (a[i] == 31 && a[j] == 28) {\n            i++;\n            j++;\n        } else if (a[i] == 31 && a[j] == 30) {\n            i++;\n            j++;\n        } else if (a[i] == 30 && a[j] == 31) {\n            i++;\n            j++;\n        } else if (a[i] == 28 && a[j] == 31) {\n            i++;\n            j++;\n        } else if (a[i] == 29 && a[j] == 31) {\n            i++;\n            j++;\n        } else if (a[i] == 29 && a[j] == 28) {\n            i++;\n            j++;\n        } else if (a[i] == 28 && a[j] == 29) {\n            i++;\n            j++;\n        } else {\n            k = 1;\n            break;\n        }\n    }\n    if (k == 0) {\n        printf(\" Yes \");\n    } else {\n        printf(\" No \");\n    }\n    printf(\" \n \");\n}\n\"}]","perl":"","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let n = read!();\n    let mut a = read_vec::<i32>();\n    a.sort();\n    let mut ans = true;\n    for i in 0..n - 1 {\n        if a[i + 1] - a[i] != 1 && a[i + 1] - a[i] != 28 {\n            ans = false;\n            break;\n        }\n    }\n    if ans {\n        println!(\"Yes\");\n    } else {\n        println!(\"No\");\n    }\n}\n\"\"\"}]"}
{"title":"A. Robbery","description":"It is nighttime and Joe the Elusive got into the country's main bank's safe. The safe has n cells positioned in a row, each of them contains some amount of diamonds. Let's make the problem more comfortable to work with and mark the cells with positive numbers from 1 to n from the left to the right.Unfortunately, Joe didn't switch the last security system off. On the plus side, he knows the way it works.Every minute the security system calculates the total amount of diamonds for each two adjacent cells (for the cells between whose numbers difference equals 1). As a result of this check we get an n-1 sums. If at least one of the sums differs from the corresponding sum received during the previous check, then the security system is triggered.Joe can move the diamonds from one cell to another between the security system's checks. He manages to move them no more than m times between two checks. One of the three following operations is regarded as moving a diamond: moving a diamond from any cell to any other one, moving a diamond from any cell to Joe's pocket, moving a diamond from Joe's pocket to any cell. Initially Joe's pocket is empty, and it can carry an unlimited amount of diamonds. It is considered that before all Joe's actions the system performs at least one check.In the morning the bank employees will come, which is why Joe has to leave the bank before that moment. Joe has only k minutes left before morning, and on each of these k minutes he can perform no more than m operations. All that remains in Joe's pocket, is considered his loot.Calculate the largest amount of diamonds Joe can carry with him. Don't forget that the security system shouldn't be triggered (even after Joe leaves the bank) and Joe should leave before morning.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains integers n, m and k (1\u2264n\u226410^4, 1\u2264m,k\u226410^9). The next line contains n numbers. The i-th number is equal to the amount of diamonds in the i-th cell \u2014 it is an integer from 0 to 10^5.\n","output_spec":"Print a single number \u2014 the maximum number of diamonds Joe can steal.\n","notes":"In the second sample Joe can act like this:\nThe diamonds' initial positions are 4 1 3.\nDuring the first period of time Joe moves a diamond from the 1-th cell to the 2-th one and a diamond from the 3-th cell to his pocket.\nBy the end of the first period the diamonds' positions are 3 2 2. The check finds no difference and the security system doesn't go off.\nDuring the second period Joe moves a diamond from the 3-rd cell to the 2-nd one and puts a diamond from the 1-st cell to his pocket.\nBy the end of the second period the diamonds' positions are 2 3 1. The check finds no difference again and the security system doesn't go off.\nNow Joe leaves with 2 diamonds in his pocket.\n","sample_inputs":["2 3 1\n2 3\n","3 2 2\n4 1 3\n"],"sample_outputs":["0","2"],"id":"89-A","difficulty":1800,"tags":["greedy"],"src_uid":"b81e7a786e4083cf7188f718bc045a85","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    cin >> n >> m >> k;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int ans = 0;\n    for (int i = 0; i < n - 1; i++) {\n        int sum = a[i] + a[i + 1];\n        if (sum > ans) {\n            ans = sum;\n        }\n    }\n\n    int t = 0;\n    for (int i = 0; i < n; i++) {\n        if (a[i] > 0) {\n            t++;\n        }\n    }\n\n    if (t > k) {\n        cout << 0 << endl;\n    } else {\n        cout << ans << endl;\n    }\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m, k = map(int, input().split())\na = list(map(int, input().split()))\n\ndef check(a):\n    s = 0\n    for i in range(n - 1):\n        s += a[i] + a[i + 1]\n    return s\n\ndef solve(a):\n    ans = 0\n    for i in range(n - 1):\n        ans = max(ans, a[i] + a[i + 1])\n    return ans\n\ndef main():\n    ans = 0\n    for i in range(k):\n        ans = max(ans, solve(a))\n        for j in range(n):\n            if a[j] > 0:\n                a[j] -= 1\n                a[j + 1] += 1\n    print(ans)\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var k = int.Parse(input[2]);\n        var a = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n\n        var dp = new int[n + 1, m + 1];\n        dp[0, 0] = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            for (int j = 0; j <= m; j++)\n            {\n                dp[i, j] = dp[i - 1, j];\n                if (j > 0)\n                {\n                    dp[i, j] = Math.Max(dp[i, j], dp[i - 1, j - 1] + a[i - 1]);\n                }\n            }\n        }\n\n        var ans = 0;\n        for (int i = 0; i <= m; i++)\n        {\n            ans = Math.Max(ans, dp[n, i]);\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m, k = gets.split.map(&:to_i)\na = gets.split.map(&:to_i)\n\na.sort!\n\nans = 0\n\n(0..n-1).each do |i|\n    if i == 0\n        ans += a[i]\n    else\n        ans += [a[i] - a[i-1], 0].max\n    end\nend\n\nans -= m\n\nif ans < 0\n    ans = 0\nend\n\nans += k\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Joe;\nuses SysUtils;\nvar\n  n, m, k, i, j, a, b, c, d, ans: integer;\n  s: array[0..100000] of integer;\nbegin\n  readln(n, m, k);\n  for i := 1 to n do\n  begin\n    readln(a);\n    s[i] := s[i - 1] + a;\n  end;\n  for i := 1 to n - 1 do\n  begin\n    for j := i + 1 to n do\n    begin\n      for a := 0 to m do\n      begin\n        for b := 0 to m do\n        begin\n          for c := 0 to m do\n          begin\n            for d := 0 to m do\n            begin\n              if (a + b + c + d <= m) and (s[j] - s[i - 1] - a - b - c - d = s[j - 1] - s[i - 1] + a + b + c + d) then\n                ans := max(ans, s[j] - s[i - 1] - a - b - c - d);\n            end;\n          end;\n        end;\n      end;\n    end;\n  end;\n  writeln(ans);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\n\nimport (\n\t\"fmt\"\n\t\"math\"\n)\n\nfunc main() {\n\tvar n, m, k int\n\tfmt.Scan(&n, &m, &k)\n\ta := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scan(&a[i])\n\t}\n\tsum := 0\n\tfor i := 0; i < n-1; i++ {\n\t\tsum += a[i]\n\t}\n\tans := 0\n\tfor i := 0; i < n; i++ {\n\t\tif i == 0 {\n\t\t\tans = max(ans, a[i])\n\t\t} else if i == n-1 {\n\t\t\tans = max(ans, sum-a[i])\n\t\t} else {\n\t\t\tans = max(ans, sum-a[i]+a[i-1])\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0].split(' ')[0]);\nconst m = parseInt(stdin[0].split(' ')[1]);\nconst k = parseInt(stdin[0].split(' ')[2]);\nconst a = stdin[1].split(' ').map(x => parseInt(x));\nconst dp = new Array(n + 1).fill(0);\nconst dp2 = new Array(n + 1).fill(0);\nfor (let i = 1; i <= n; i++) {\n  dp[i] = Math.max(dp[i - 1], a[i - 1]);\n  dp2[i] = Math.max(dp2[i - 1], dp[i - 1] + a[i - 1]);\n}\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= m; j++) {\n    if (i + j - 1 <= n) {\n      dp[i + j - 1] = Math.max(dp[i + j - 1], dp[i - 1] + dp2[i + j - 1 - i]);\n    }\n  }\n}\nconsole.log(dp[n]);\"}]}","Kotlin":"","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m, $k = explode(' ', trim(fgets(STDIN)));\n$a = explode(' ', trim(fgets(STDIN)));\n$sum = array_sum($a);\n$ans = 0;\nfor ($i = 0; $i < $n - 1; $i++) {\n    $sum -= $a[$i];\n    $sum += $a[$i + 1];\n    $ans = max($ans, $sum);\n}\n$ans = max($ans, $a[0] + $a[$n - 1]);\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nvoid main() {\n    int n, m, k;\n    scanf(\" %d %d %d \", &n, &m, &k);\n    auto a = array(n, 0);\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    auto b = array(n, 0);\n    auto c = array(n, 0);\n    auto d = array(n, 0);\n    for (int i = 0; i < n; i++) {\n        b[i] = a[i];\n        c[i] = a[i];\n        d[i] = a[i];\n    }\n    int ans = 0;\n    for (int i = 0; i < k; i++) {\n        for (int j = 0; j < n - 1; j++) {\n            b[j + 1] += b[j];\n            c[j + 1] -= b[j];\n            d[j + 1] += c[j];\n        }\n        ans = max(ans, max(b[n - 1], max(c[n - 1], d[n - 1])));\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $k;\nmy @a;\n\nchomp(my $line = <STDIN>);\n($n, $m, $k) = split(' ', $line);\n\nchomp(my $line = <STDIN>);\n@a = split(' ', $line);\n\nmy $sum = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    $sum += $a[$i];\n}\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n - 1; $i++) {\n    $ans = max($ans, $sum - $a[$i] - $a[$i + 1]);\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut nmk: Vec<usize> = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = nmk[0];\n    let m = nmk[1];\n    let k = nmk[2];\n    let mut a: Vec<usize> = Vec::new();\n    line.clear();\n    stdin.read_line(&mut line).unwrap();\n    a = line.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let mut dp: Vec<Vec<usize>> = vec![vec![0; n + 1]; n + 1];\n    for i in 0..n {\n        for j in 0..n {\n            if i == j {\n                dp[i][j] = a[i];\n            } else {\n                dp[i][j] = dp[i][j - 1] + a[j];\n            }\n        }\n    }\n    let mut ans = 0;\n    for i in 0..n {\n        for j in 0..n {\n            for k in 0..n {\n                if i == j || j == k || k == i {\n                    continue;\n                }\n                let mut sum = dp[i][j] + dp[j][k] + dp[k][i];\n                let mut cnt = 0;\n                for l in 0..n {\n                    if l == i || l == j || l == k {\n                        continue;\n                    }\n                    sum -= dp[l][i] + dp[l][j] + dp[l][k];\n                    cnt += 1;\n                }\n                if cnt <= m && sum <= k {\n                    ans = max(ans, sum);\n                }\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"E. Fire and Ice","description":"The Fire Lord attacked the Frost Kingdom. He has already got to the Ice Fortress, where the Snow Queen dwells. He arranged his army on a segment n in length not far from the city walls. And only the frost magician Solomon can save the Frost Kingdom. The n-long segment is located at a distance equal exactly to 1 from the castle walls. It can be imaginarily divided into unit segments. On some of the unit segments fire demons are located \u2014 no more than one demon per position. Each demon is characterised by his strength - by some positive integer. We can regard the fire demons being idle.Initially Solomon is positioned on the fortress wall. He can perform the following actions several times in a row:  \"L\" \u2014 Solomon shifts one unit to the left. This movement cannot be performed on the castle wall. \"R\" \u2014 Solomon shifts one unit to the left. This movement cannot be performed if there's no ice block to the right. \"A\" \u2014 If there's nothing to the right of Solomon, then Solomon creates an ice block that immediately freezes to the block that Solomon is currently standing on. If there already is an ice block, then Solomon destroys it. At that the ice blocks to the right of the destroyed one can remain but they are left unsupported. Those ice blocks fall down.Solomon spends exactly a second on each of these actions.As the result of Solomon's actions, ice blocks' segments fall down. When an ice block falls on a fire demon, the block evaporates and the demon's strength is reduced by 1. When the demons' strength is equal to 0, the fire demon vanishes. The picture below shows how it happens. The ice block that falls on the position with no demon, breaks into lots of tiny pieces and vanishes without hurting anybody. Help Solomon destroy all the Fire Lord's army in minimum time.","input_from":"standard input","output_to":"standard output","time_limit":"0.5 second","memory_limit":"256 megabytes","input_spec":"The first line contains an integer n (1\u2264n\u22641000). The next line contains n numbers, the i-th of them represents the strength of the fire demon standing of the i-th position, an integer from 1 to 100. If there's no demon on the i-th position, then the i-th number equals to 0. It is guaranteed that the input data have at least one fire demon.\n","output_spec":"Print a string of minimum length, containing characters \"L\", \"R\" and \"A\" \u2014 the succession of actions leading to the required result.\nIf there are several possible answers, print any of them.\n","notes":null,"sample_inputs":["3\n1 0 1\n","3\n0 2 0\n"],"sample_outputs":["ARARARALLLA","ARARALAARALA"],"id":"89-E","difficulty":2900,"tags":["greedy"],"src_uid":"0996e41d0630e56472399bc81544756b","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; i++) {\n        cin >> a[i];\n    }\n\n    int i = 0;\n    int j = n - 1;\n    string ans = \"\";\n    while (i <= j) {\n        if (a[i] == 0) {\n            ans += \"L\";\n            i++;\n        } else if (a[j] == 0) {\n            ans += \"R\";\n            j--;\n        } else {\n            ans += \"A\";\n            i++;\n            j--;\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n            a[i] = sc.nextInt();\n        }\n        int i = 0;\n        int j = n - 1;\n        String ans = \"\";\n        while (i < j) {\n            if (a[i] == 0) {\n                ans += \"L\";\n                i++;\n            } else if (a[j] == 0) {\n                ans += \"R\";\n                j--;\n            } else {\n                ans += \"A\";\n                i++;\n                j--;\n            }\n        }\n        while (i < n) {\n            if (a[i] == 0) {\n                ans += \"L\";\n                i++;\n            } else {\n                ans += \"A\";\n                i++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\ndef solve(i, j, s):\n    if i == n:\n        print(s)\n        return\n    if a[i] == 0:\n        solve(i + 1, j, s + 'L')\n    else:\n        if j == 0:\n            solve(i + 1, j, s + 'A')\n        else:\n            solve(i + 1, j - 1, s + 'R')\n\nsolve(0, 0, '')\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int i = 0;\n    int j = n - 1;\n    int ans = 0;\n    while (i < j) {\n        if (a[i] == 0) {\n            ans += 'L';\n            i++;\n        } else if (a[j] == 0) {\n            ans += 'R';\n            j--;\n        } else {\n            ans += 'A';\n            ans += 'R';\n            j--;\n        }\n    }\n    while (i < n) {\n        ans += 'L';\n        i++;\n    }\n    printf(\"%s\\n\", ans.c_str());\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int[] a = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);\n            int i = 0;\n            int j = n - 1;\n            string ans = \"\";\n            while (i < j)\n            {\n                if (a[i] == 0)\n                {\n                    ans += \"L\";\n                    i++;\n                }\n                else if (a[j] == 0)\n                {\n                    ans += \"R\";\n                    j--;\n                }\n                else\n                {\n                    ans += \"A\";\n                    i++;\n                    j--;\n                }\n            }\n            while (i < n)\n            {\n                ans += \"L\";\n                i++;\n            }\n            Console.WriteLine(ans);\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"\"\"\nn = gets.to_i\na = gets.split.map(&:to_i)\n\ndef solve(a, i, j)\n  if i == j\n    return 'L' * (j - i)\n  end\n\n  if a[i] == 0\n    return solve(a, i + 1, j)\n  end\n\n  if a[j] == 0\n    return solve(a, i, j - 1)\n  end\n\n  if a[i] > a[j]\n    return 'R' + solve(a, i + 1, j)\n  end\n\n  return 'A' + solve(a, i + 1, j)\nend\n\nputs solve(a, 0, n - 1)\n\"\"\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram t1;\nconst\n  maxn = 1000;\nvar\n  n, i, j, k, t, s, p, q, r, a, b, c, d, e, f, g, h, l, m, nn, nnn, nnn1, nnn2, nnn3, nnn4, nnn5, nnn6, nnn7, nnn8, nnn9, nnn10, nnn11, nnn12, nnn13, nnn14, nnn15, nnn16, nnn17, nnn18, nnn19, nnn20, nnn21, nnn22, nnn23, nnn24, nnn25, nnn26, nnn27, nnn28, nnn29, nnn30, nnn31, nnn32, nnn33, nnn34, nnn35, nnn36, nnn37, nnn38, nnn39, nnn40, nnn41, nnn42, nnn43, nnn44, nnn45, nnn46, nnn47, nnn48, nnn49, nnn50, nnn51, nnn52, nnn53, nnn54, nnn55, nnn56, nnn57, nnn58, nnn59, nnn60, nnn61, nnn62, nnn63, nnn64, nnn65, nnn66, nnn67, nnn68, nnn69, nnn70, nnn71, nnn72, nnn73, nnn74, nnn75, nnn76, nnn77, nnn78, nnn79, nnn80, nnn81, nnn82, nnn83, nnn84, nnn85, nnn86, nnn87, nnn88, nnn89, nnn90, nnn91, nnn92, nnn93, nnn94, nnn95, nnn96, nnn97, nnn98, nnn99, nnn100: integer;\n  aa, bb, cc, dd, ee, ff, gg, hh, ii, jj, kk, ll, mm, nn, oo, pp, qq, rr, ss, tt, uu, vv, ww, xx, yy, zz: array[0..maxn] of integer;\n  \nbegin\n  readln(n);\n  for i := 0 to n - 1 do\n  begin\n    readln(a[i]);\n  end;\n  \n  for i := 0 to n - 1 do\n  begin\n    if a[i] = 0 then\n    begin\n      if i = 0 then\n      begin\n        write('L');\n      end\n      else\n      begin\n        write('R');\n      end;\n    end\n    else\n    begin\n      if i = 0 then\n      begin\n        write('A');\n      end\n      else\n      begin\n        write('R');\n      end;\n    end;\n  end;\n  \n  writeln;\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n)\n\nfunc main() {\n\tvar n int\n\tfmt.Scanf(\" %d \", &n)\n\tarr := make([]int, n)\n\tfor i := 0; i < n; i++ {\n\t\tfmt.Scanf(\" %d \", &arr[i])\n\t}\n\tvar ans string\n\tfor i := 0; i < n; i++ {\n\t\tif arr[i] == 0 {\n\t\t\tans += \"L\"\n\t\t} else {\n\t\t\tans += \"R\"\n\t\t\tfor j := i + 1; j < n; j++ {\n\t\t\t\tif arr[j] == 0 {\n\t\t\t\t\tans += \"R\"\n\t\t\t\t} else {\n\t\t\t\t\tans += \"A\"\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(ans)\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"\"\"\nconst fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = Number(input[0]);\nconst demons = input[1].split(' ').map(Number);\n\nconst solve = () => {\n  let ans = '';\n  let i = 0;\n  while (i < n) {\n    if (demons[i] === 0) {\n      ans += 'L';\n      i++;\n    } else {\n      if (i === 0) {\n        ans += 'A';\n      } else {\n        ans += 'R';\n      }\n      i++;\n    }\n  }\n  return ans;\n};\n\nconsole.log(solve());\n\"\"\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val n = readLine()!!.toInt()\n    val a = readLine()!!.split(\" \").map { it.toInt() }\n    val ans = mutableListOf<String>()\n    var i = 0\n    var j = n - 1\n    while (i < j) {\n        if (a[i] == 0) {\n            ans.add(\"L\")\n            i++\n        } else if (a[j] == 0) {\n            ans.add(\"R\")\n            j--\n        } else {\n            ans.add(\"A\")\n            ans.add(\"R\")\n            ans.add(\"L\")\n            i++\n            j--\n        }\n    }\n    if (i == j) {\n        if (a[i] == 0) {\n            ans.add(\"L\")\n        } else {\n            ans.add(\"A\")\n        }\n    }\n    println(ans.joinToString(\"\"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n = (int)trim(fgets(STDIN));\n$a = explode(\" \", trim(fgets(STDIN)));\n$i = 0;\n$j = 0;\n$ans = \"\";\nwhile ($i < $n) {\n    if ($a[$i] == 0) {\n        $ans .= \"L\";\n        $i++;\n    } else {\n        $ans .= \"A\";\n        $j++;\n    }\n}\nwhile ($j > 0) {\n    $ans .= \"R\";\n    $j--;\n}\necho $ans;\n\"\"\"}]","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy @a = <STDIN>;\nmy $i = 0;\nmy $j = 0;\nmy $k = 0;\nmy $l = 0;\nmy $m = 0;\nmy $s = 0;\nmy $t = 0;\nmy $u = 0;\nmy $v = 0;\nmy $w = 0;\nmy $x = 0;\nmy $y = 0;\nmy $z = 0;\n\nwhile ($i < $n) {\n    if ($a[$i] == 0) {\n        $i++;\n    } else {\n        $j = $i;\n        while ($a[$j] != 0) {\n            $j++;\n        }\n        $k = $j - $i;\n        $l = $k \/ 2;\n        $m = $k % 2;\n        $s = 0;\n        $t = 0;\n        $u = 0;\n        $v = 0;\n        $w = 0;\n        $x = 0;\n        $y = 0;\n        $z = 0;\n        for ($i = 0; $i < $l; $i++) {\n            $s = $s + 1;\n            print \"L\";\n        }\n        if ($m == 1) {\n            $t = $t + 1;\n            print \"A\";\n        }\n        for ($i = $l; $i < $k; $i++) {\n            $u = $u + 1;\n            print \"R\";\n        }\n        if ($m == 1) {\n            $v = $v + 1;\n            print \"A\";\n        }\n        for ($i = $k; $i < $n; $i++) {\n            $w = $w + 1;\n            print \"L\";\n        }\n        if ($m == 1) {\n            $x = $x + 1;\n            print \"A\";\n        }\n        for ($i = $n; $i < $n + $t; $i++) {\n            $y = $y + 1;\n            print \"R\";\n        }\n        for ($i = $n + $t; $i < $n + $t + $v; $i++) {\n            $z = $z + 1;\n            print \"L\";\n        }\n        print \"\\n\";\n    }\n}\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n\n    let n = lines.next().unwrap().unwrap().parse::<usize>().unwrap();\n    let mut demons = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<Vec<usize>>();\n\n    let mut ans = Vec::new();\n    let mut i = 0;\n    while i < n {\n        if demons[i] == 0 {\n            ans.push(\"L\");\n            i += 1;\n        } else {\n            if i == 0 {\n                ans.push(\"A\");\n            } else {\n                ans.push(\"R\");\n            }\n            i += 1;\n            while i < n && demons[i] == 0 {\n                ans.push(\"R\");\n                i += 1;\n            }\n            if i < n {\n                ans.push(\"A\");\n            }\n        }\n    }\n\n    println!(\"{}\", ans.join(\"\"));\n}\n\"\"\"}]"}
{"title":"A. Train and Peter","description":"Peter likes to travel by train. He likes it so much that on the train he falls asleep. Once in summer Peter was going by train from city A to city B, and as usual, was sleeping. Then he woke up, started to look through the window and noticed that every railway station has a flag of a particular colour.The boy started to memorize the order of the flags' colours that he had seen. But soon he fell asleep again. Unfortunately, he didn't sleep long, he woke up and went on memorizing the colours. Then he fell asleep again, and that time he slept till the end of the journey.At the station he told his parents about what he was doing, and wrote two sequences of the colours that he had seen before and after his sleep, respectively.Peter's parents know that their son likes to fantasize. They give you the list of the flags' colours at the stations that the train passes sequentially on the way from A to B, and ask you to find out if Peter could see those sequences on the way from A to B, or from B to A. Remember, please, that Peter had two periods of wakefulness.Peter's parents put lowercase Latin letters for colours. The same letter stands for the same colour, different letters \u2014 for different colours.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The input data contains three lines. The first line contains a non-empty string, whose length does not exceed 10^5, the string consists of lowercase Latin letters \u2014 the flags' colours at the stations on the way from A to B. On the way from B to A the train passes the same stations, but in reverse order. \nThe second line contains the sequence, written by Peter during the first period of wakefulness. The third line contains the sequence, written during the second period of wakefulness. Both sequences are non-empty, consist of lowercase Latin letters, and the length of each does not exceed 100 letters. Each of the sequences is written in chronological order. \n","output_spec":"Output one of the four words without inverted commas: \n  \u00abforward\u00bb \u2014 if Peter could see such sequences only on the way from A to B;  \u00abbackward\u00bb \u2014 if Peter could see such sequences on the way from B to A;  \u00abboth\u00bb \u2014 if Peter could see such sequences both on the way from A to B, and on the way from B to A;  \u00abfantasy\u00bb \u2014 if Peter could not see such sequences. ","notes":"It is assumed that the train moves all the time, so one flag cannot be seen twice. There are no flags at stations A and B.\n","sample_inputs":["atob\na\nb\n","aaacaaa\naca\naa\n"],"sample_outputs":["forward\n","both\n"],"id":"8-A","difficulty":1200,"tags":["strings"],"src_uid":"c3244e952830643938d51ce14f043d7d","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    string s1, s2, s3;\n    cin >> s1 >> s2 >> s3;\n    int n = s1.length();\n    int m = s2.length();\n    int k = s3.length();\n    int i = 0, j = 0, l = 0;\n    while (i < n && j < m && l < k) {\n        if (s1[i] == s2[j] && s2[j] == s3[l]) {\n            i++;\n            j++;\n            l++;\n        } else if (s1[i] < s2[j]) {\n            i++;\n        } else if (s2[j] < s3[l]) {\n            j++;\n        } else {\n            l++;\n        }\n    }\n    if (i == n && j == m && l == k) {\n        cout << \"both\" << endl;\n    } else if (i == n && j == m) {\n        cout << \"forward\" << endl;\n    } else if (j == m && l == k) {\n        cout << \"backward\" << endl;\n    } else {\n        cout << \"fantasy\" << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String line1 = scanner.nextLine();\n        String line2 = scanner.nextLine();\n        String line3 = scanner.nextLine();\n\n        String[] arr1 = line1.split(\"\");\n        String[] arr2 = line2.split(\"\");\n        String[] arr3 = line3.split(\"\");\n\n        int i = 0;\n        int j = 0;\n        int k = 0;\n\n        boolean flag1 = false;\n        boolean flag2 = false;\n        boolean flag3 = false;\n\n        while (i < arr1.length && j < arr2.length && k < arr3.length) {\n            if (arr1[i].equals(arr2[j]) && arr2[j].equals(arr3[k])) {\n                flag1 = true;\n                flag2 = true;\n                flag3 = true;\n            } else if (arr1[i].equals(arr2[j])) {\n                flag1 = true;\n                flag2 = true;\n            } else if (arr1[i].equals(arr3[k])) {\n                flag1 = true;\n                flag3 = true;\n            } else if (arr2[j].equals(arr3[k])) {\n                flag2 = true;\n                flag3 = true;\n            }\n\n            i++;\n            j++;\n            k++;\n        }\n\n        if (flag1 && flag2 && flag3) {\n            System.out.println(\"both\");\n        } else if (flag1 && flag2) {\n            System.out.println(\"forward\");\n        } else if (flag1 && flag3) {\n            System.out.println(\"backward\");\n        } else if (flag2 && flag3) {\n            System.out.println(\"backward\");\n        } else {\n            System.out.println(\"fantasy\");\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ndef main():\n    s1, s2, s3 = input(), input(), input()\n    s1 = s1[1:-1]\n    s2 = s2[1:-1]\n    s3 = s3[1:-1]\n    s1 = s1.split(',')\n    s2 = s2.split(',')\n    s3 = s3.split(',')\n    s1.sort()\n    s2.sort()\n    s3.sort()\n    if s1 == s2:\n        print('both')\n    elif s1 == s3:\n        print('forward')\n    elif s2 == s3:\n        print('backward')\n    else:\n        print('fantasy')\n\nif __name__ == '__main__':\n    main()\n\"\"\"}]","C":"","C#":"```json\n[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string[] input = Console.ReadLine().Split(' ');\n        string[] first = Console.ReadLine().Split(' ');\n        string[] second = Console.ReadLine().Split(' ');\n\n        List<string> list = new List<string>();\n        list.Add(input[0]);\n        list.Add(input[1]);\n\n        for (int i = 2; i < input.Length; i++)\n        {\n            list.Add(input[i]);\n            list.Add(input[i - 1]);\n        }\n\n        string result = \"fantasy\";\n\n        if (first.Length == list.Count)\n        {\n            if (first.SequenceEqual(list))\n            {\n                result = \"forward\";\n            }\n        }\n\n        if (second.Length == list.Count)\n        {\n            if (second.SequenceEqual(list))\n            {\n                result = \"backward\";\n            }\n        }\n\n        Console.WriteLine(result);\n    }\n}\n\"}]","Ruby":"```\n[{\"version\": \"Ruby 3\", \"target code\": \"def main()\n    a, b, c = gets.chomp, gets.chomp, gets.chomp\n    s1 = a + b\n    s2 = b + c\n    if s1 == s2:\n        print(\"both\")\n    elif s1 == a:\n        print(\"forward\")\n    elif s2 == b:\n        print(\"backward\")\n    else:\n        print(\"fantasy\")\n\nif __name__ == \"__main__\":\n    main()\n\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Flags;\n\nuses\n  SysUtils;\n\nvar\n  s1, s2, s3: string;\n  i, j, k: integer;\n\nbegin\n  readln(s1);\n  readln(s2);\n  readln(s3);\n  for i := 1 to length(s1) do\n    for j := 1 to length(s2) do\n      for k := 1 to length(s3) do\n        if (s1[i] = s2[j] and s2[j] = s3[k]) or (s1[i] = s3[k] and s3[k] = s2[j]) then\n          begin\n            writeln('both');\n            exit;\n          end;\n  for i := 1 to length(s1) do\n    for j := 1 to length(s2) do\n      if s1[i] = s2[j] then\n        begin\n          writeln('forward');\n          exit;\n        end;\n  for i := 1 to length(s1) do\n    for j := 1 to length(s3) do\n      if s1[i] = s3[j] then\n        begin\n          writeln('backward');\n          exit;\n        end;\n  writeln('fantasy');\nend.\"\"\"}]","Go":"```json\n[{\"version\": \"go1.17.6\", \"target code\": \"package main\r\n\r\nimport (\r\n\t\"fmt\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc main() {\r\n\tvar s1, s2, s3 string\r\n\tfmt.Scan(&s1)\r\n\tfmt.Scan(&s2)\r\n\tfmt.Scan(&s3)\r\n\ts1 = strings.ToLower(s1)\r\n\ts2 = strings.ToLower(s2)\r\n\ts3 = strings.ToLower(s3)\r\n\tif s1 == s3 {\r\n\t\tfmt.Println(\"both\")\r\n\t} else if s1 == s2 {\r\n\t\tfmt.Println(\"forward\")\r\n\t} else if s3 == s2 {\r\n\t\tfmt.Println(\"backward\")\r\n\t} else {\r\n\t\tfmt.Println(\"fantasy\")\r\n\t}\r\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst a = input[0];\nconst b = input[1];\nconst c = input[2];\nconst d = input[3];\n\nif (a.includes(b) && a.includes(c)) {\n  console.log('both');\n} else if (a.includes(b)) {\n  console.log('forward');\n} else if (a.includes(c)) {\n  console.log('backward');\n} else {\n  console.log('fantasy');\n}\n\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (flags, first, second) = readLine()!!.split(\"\\n\")\n    val firstFlags = first.toCharArray()\n    val secondFlags = second.toCharArray()\n    val flagsReversed = flags.reversed()\n    val firstFlagsReversed = firstFlags.reversed()\n    val secondFlagsReversed = secondFlags.reversed()\n    val firstFlagsSet = firstFlags.toSet()\n    val secondFlagsSet = secondFlags.toSet()\n    val flagsReversedSet = flagsReversed.toSet()\n    val firstFlagsReversedSet = firstFlagsReversed.toSet()\n    val secondFlagsReversedSet = secondFlagsReversed.toSet()\n    val firstFlagsInFlags = flags.containsAll(firstFlags)\n    val firstFlagsInFlagsReversed = flagsReversed.containsAll(firstFlags)\n    val secondFlagsInFlags = flags.containsAll(secondFlags)\n    val secondFlagsInFlagsReversed = flagsReversed.containsAll(secondFlags)\n    val firstFlagsInFirstFlagsReversed = firstFlagsReversed.containsAll(firstFlags)\n    val firstFlagsInSecondFlagsReversed = firstFlagsReversed.containsAll(secondFlags)\n    val secondFlagsInFirstFlagsReversed = secondFlagsReversed.containsAll(firstFlags)\n    val secondFlagsInSecondFlagsReversed = secondFlagsReversed.containsAll(secondFlags)\n    if (firstFlagsInFlags && secondFlagsInFlags) {\n        println(\"both\")\n    } else if (firstFlagsInFlagsReversed && secondFlagsInFlagsReversed) {\n        println(\"both\")\n    } else if (firstFlagsInFlags && secondFlagsInFlagsReversed) {\n        println(\"forward\")\n    } else if (firstFlagsInFlagsReversed && secondFlagsInFlags) {\n        println(\"backward\")\n    } else {\n        println(\"fantasy\")\n    }\n}\n\"\"\"}]","PHP":"```json\n[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$a = trim(fgets(STDIN));\n$b = trim(fgets(STDIN));\n$c = trim(fgets(STDIN));\n$d = trim(fgets(STDIN));\n$e = array_diff($a, $b);\n$f = array_diff($c, $d);\nif (count($e) == 0 && count($f) == 0) {\n    echo \"both\\n\";\n} elseif (count($e) == 0) {\n    echo \"backward\\n\";\n} elseif (count($f) == 0) {\n    echo \"forward\\n\";\n} else {\n    echo \"fantasy\\n\";\n}\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s, a, b;\n    s = stdin.readln();\n    a = stdin.readln();\n    b = stdin.readln();\n\n    int i, j, k;\n    i = 0;\n    j = 0;\n    k = 0;\n\n    while (i < s.length && j < a.length && k < b.length) {\n        if (s[i] == a[j] && s[i] == b[k]) {\n            i++;\n            j++;\n            k++;\n        } else if (s[i] == a[j]) {\n            i++;\n            j++;\n        } else if (s[i] == b[k]) {\n            i++;\n            k++;\n        } else {\n            break;\n        }\n    }\n\n    if (i == s.length && j == a.length && k == b.length) {\n        printf(\"both\\n\");\n    } else if (i == s.length && j == a.length) {\n        printf(\"forward\\n\");\n    } else if (i == s.length && k == b.length) {\n        printf(\"backward\\n\");\n    } else {\n        printf(\"fantasy\\n\");\n    }\n}\n\"}]","perl":"```json\n[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $line1 = <STDIN>;\nmy $line2 = <STDIN>;\nmy $line3 = <STDIN>;\n\nmy @arr1 = split(\/\/, $line1);\nmy @arr2 = split(\/\/, $line2);\nmy @arr3 = split(\/\/, $line3);\n\nmy $flag = 0;\nmy $flag2 = 0;\n\nfor (my $i = 0; $i < @arr1; $i++) {\n    if ($arr1[$i] eq $arr2[$i]) {\n        $flag = 1;\n    }\n}\n\nfor (my $i = 0; $i < @arr1; $i++) {\n    if ($arr1[$i] eq $arr3[$i]) {\n        $flag2 = 1;\n    }\n}\n\nif ($flag == 1 && $flag2 == 0) {\n    print \"forward\\n\";\n} elsif ($flag == 0 && $flag2 == 1) {\n    print \"backward\\n\";\n} elsif ($flag == 1 && $flag2 == 1) {\n    print \"both\\n\";\n} else {\n    print \"fantasy\\n\";\n}\n```","Rust":"```json\n[{\"version\": \"Rust 2021\", \"target code\": \"use std::collections::HashMap;\n\nfn main() {\n    let mut input = String::new();\n    std::io::stdin().read_line(&mut input).unwrap();\n    let input = input.trim().to_string();\n\n    let mut map = HashMap::new();\n    for c in input.chars() {\n        map.entry(c).or_insert(0);\n        map.get_mut(&c).unwrap() += 1;\n    }\n\n    let mut first = String::new();\n    std::io::stdin().read_line(&mut first).unwrap();\n    let first = first.trim().to_string();\n\n    let mut second = String::new();\n    std::io::stdin().read_line(&mut second).unwrap();\n    let second = second.trim().to_string();\n\n    let mut first_count = 0;\n    for c in first.chars() {\n        if map.contains_key(&c) {\n            first_count += 1;\n        }\n    }\n\n    let mut second_count = 0;\n    for c in second.chars() {\n        if map.contains_key(&c) {\n            second_count += 1;\n        }\n    }\n\n    if first_count == map.len() && second_count == map.len() {\n        println!(\"both\");\n    } else if first_count == map.len() {\n        println!(\"forward\");\n    } else if second_count == map.len() {\n        println!(\"backward\");\n    } else {\n        println!(\"fantasy\");\n    }\n}\n\"}]"}
{"title":"E. Beads","description":"One Martian boy called Zorg wants to present a string of beads to his friend from the Earth \u2014 Masha. He knows that Masha likes two colours: blue and red, \u2014 and right in the shop where he has come, there is a variety of adornments with beads of these two colours. All the strings of beads have a small fastener, and if one unfastens it, one might notice that all the strings of beads in the shop are of the same length. Because of the peculiarities of the Martian eyesight, if Zorg sees one blue-and-red string of beads first, and then the other with red beads instead of blue ones, and blue \u2014 instead of red, he regards these two strings of beads as identical. In other words, Zorg regards as identical not only those strings of beads that can be derived from each other by the string turnover, but as well those that can be derived from each other by a mutual replacement of colours and\/or by the string turnover.It is known that all Martians are very orderly, and if a Martian sees some amount of objects, he tries to put them in good order. Zorg thinks that a red bead is smaller than a blue one. Let's put 0 for a red bead, and 1 \u2014 for a blue one. From two strings the Martian puts earlier the string with a red bead in the i-th position, providing that the second string has a blue bead in the i-th position, and the first two beads i-1 are identical.At first Zorg unfastens all the strings of beads, and puts them into small heaps so, that in each heap strings are identical, in his opinion. Then he sorts out the heaps and chooses the minimum string in each heap, in his opinion. He gives the unnecassary strings back to the shop assistant and says he doesn't need them any more. Then Zorg sorts out the remaining strings of beads and buys the string with index k. All these manupulations will take Zorg a lot of time, that's why he asks you to help and find the string of beads for Masha.","input_from":"standard input","output_to":"standard output","time_limit":"5 seconds","memory_limit":"64 megabytes","input_spec":"The input file contains two integers n and k (2\u2264n\u226450;1\u2264k\u226410^16) \u2014the length of a string of beads, and the index of the string, chosen by Zorg. \n","output_spec":"Output the k-th string of beads, putting 0 for a red bead, and 1 \u2014 for a blue one. If it s impossible to find the required string, output the only number -1.\n","notes":"Let's consider the example of strings of length 4 \u2014 0001, 0010, 0011, 0100, 0101, 0110, 0111, 1000, 1001, 1010, 1011, 1100, 1101, 1110. Zorg will divide them into heaps: {0001, 0111, 1000, 1110}, {0010, 0100, 1011, 1101}, {0011, 1100}, {0101, 1010}, {0110, 1001}. Then he will choose the minimum strings of beads in each heap: 0001, 0010, 0011, 0101, 0110. The forth string \u2014 0101.\n","sample_inputs":["4 4\n"],"sample_outputs":["0101\n"],"id":"8-E","difficulty":2600,"tags":["dp","graphs"],"src_uid":"0a4a418dafaee71f1b31c928fc2ad24a","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, k;\n    scanf(\" %d%d \", &n, &k);\n    int a[n];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int dp[n][n];\n    memset(dp, 0, sizeof(dp));\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            if (i == j) {\n                dp[i][j] = 1;\n            } else {\n                if (a[i] < a[j]) {\n                    dp[i][j] = dp[i][j - 1] + 1;\n                } else {\n                    dp[i][j] = dp[i][j - 1];\n                }\n            }\n        }\n    }\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        if (dp[i][n - 1] == k) {\n            ans = i;\n            break;\n        }\n    }\n    if (ans == 0) {\n        printf(\" -1 \");\n    } else {\n        for (int i = 0; i < n; i++) {\n            printf(\" %d \", a[ans]);\n        }\n    }\n    return 0;\n}\n\"}]}","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, k = map(int, input().split())\n\ndef dfs(i, j, s):\n    if i == n:\n        if j == k:\n            print(s)\n            exit()\n        return\n    dfs(i + 1, j, s + '0')\n    dfs(i + 1, j + 1, s + '1')\n\ndfs(0, 0, '')\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var n = int.Parse(Console.ReadLine());\n        var k = int.Parse(Console.ReadLine());\n\n        var arr = new int[n];\n        var dp = new int[n];\n\n        for (int i = 0; i < n; i++)\n        {\n            arr[i] = int.Parse(Console.ReadLine());\n        }\n\n        dp[0] = arr[0];\n\n        for (int i = 1; i < n; i++)\n        {\n            dp[i] = Math.Min(dp[i - 1], arr[i]);\n        }\n\n        var ans = new List<int>();\n\n        for (int i = 0; i < n; i++)\n        {\n            if (dp[i] == k)\n            {\n                ans.Add(0);\n            }\n            else\n            {\n                ans.Add(1);\n            }\n        }\n\n        Console.WriteLine(string.Join(\"\", ans));\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k=map(int,input().split())\ns=['0']*n\nfor i in range(n):\n    s[i]=str(int(input()))\ns.sort()\nfor i in range(n):\n    if i==k-1:\n        print(''.join(s))\n        break\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Zorg;\nuses SysUtils;\nvar\n  n, k, i, j, m, t, a: integer;\n  s: string;\nbegin\n  readln(n, k);\n  s := '0';\n  for i := 1 to n do\n  begin\n    m := 0;\n    for j := 1 to n do\n    begin\n      read(t);\n      if t = '0' then\n        m := m + 1;\n    end;\n    if m = k then\n    begin\n      for j := 1 to n do\n        if t = '0' then\n          s := s + '0'\n        else\n          s := s + '1';\n      break;\n    end;\n  end;\n  if s = '0' then\n    writeln(-1)\n  else\n    writeln(s);\nend.\"}]}","Go":"","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = parseInt(input[0]);\nconst k = parseInt(input[1]);\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 0;\ndp[1] = 1;\n\nfor (let i = 2; i <= n; i++) {\n  dp[i] = Math.min(dp[i - 1] + 1, dp[i - 2] + 1);\n  if (i % 2 == 0) {\n    dp[i] = Math.min(dp[i], dp[i - 1] + 1);\n  }\n}\n\nconsole.log(dp[n] == k ? '1'.repeat(n) : '-1');\"}]","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, k) = readLine()!!.split(\" \").map { it.toInt() }\n    val arr = Array(n) { 0 }\n    val set = HashSet<String>()\n    val queue = LinkedList<String>()\n    queue.add(\"0\".repeat(n))\n    while (queue.isNotEmpty()) {\n        val str = queue.poll()\n        if (set.contains(str)) continue\n        set.add(str)\n        for (i in 0 until n) {\n            for (j in 0 until 2) {\n                val newStr = str.replaceRange(i, i + 1, if (j == 0) \"1\" else \"0\")\n                if (newStr.length == n) {\n                    if (k == set.size) {\n                        println(newStr)\n                        return\n                    }\n                } else {\n                    queue.add(newStr)\n                }\n            }\n        }\n    }\n    println(-1)\n}\n\"\"\"}]","PHP":"","d":"","perl":"","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input = input.split_whitespace();\n    let n = input.next().unwrap().parse::<usize>().unwrap();\n    let k = input.next().unwrap().parse::<usize>().unwrap();\n\n    let mut dp = vec![vec![0; n + 1]; 2];\n    dp[0][0] = 1;\n    dp[1][0] = 1;\n    for i in 1..n + 1 {\n        dp[0][i] = dp[0][i - 1] + dp[1][i - 1];\n        dp[1][i] = dp[0][i - 1];\n    }\n\n    let mut ans = vec![0; n];\n    for i in 0..n {\n        if k <= dp[0][n - i - 1] {\n            ans[i] = 0;\n            k -= dp[0][n - i - 1];\n        } else {\n            ans[i] = 1;\n        }\n    }\n\n    for i in 0..n {\n        print!(\"{}\", ans[i]);\n    }\n    println!();\n}\n\"\"\"}]"}
{"title":"B. African Crossword","description":"An African crossword is a rectangular table n\u00d7m in size. Each cell of the table contains exactly one letter. This table (it is also referred to as grid) contains some encrypted word that needs to be decoded.To solve the crossword you should cross out all repeated letters in rows and columns. In other words, a letter should only be crossed out if and only if the corresponding column or row contains at least one more letter that is exactly the same. Besides, all such letters are crossed out simultaneously.When all repeated letters have been crossed out, we should write the remaining letters in a string. The letters that occupy a higher position follow before the letters that occupy a lower position. If the letters are located in one row, then the letter to the left goes first. The resulting word is the answer to the problem.You are suggested to solve an African crossword and print the word encrypted there.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (1\u2264n,m\u2264100). Next n lines contain m lowercase Latin letters each. That is the crossword grid.\n","output_spec":"Print the encrypted word on a single line. It is guaranteed that the answer consists of at least one letter.\n","notes":null,"sample_inputs":["3 3\ncba\nbcd\ncbc\n","5 5\nfcofd\nooedo\nafaoa\nrdcdf\neofsf\n"],"sample_outputs":["abcd","codeforces"],"id":"90-B","difficulty":1100,"tags":["implementation","strings"],"src_uid":"9c90974a0bb860a5e180760042fd5045","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    string s[n];\n    for (int i = 0; i < n; i++) {\n        cin >> s[i];\n    }\n\n    string ans;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            bool flag = false;\n            for (int k = 0; k < n; k++) {\n                if (i != k && s[i][j] == s[k][j]) {\n                    flag = true;\n                    break;\n                }\n            }\n            for (int k = 0; k < m; k++) {\n                if (j != k && s[i][j] == s[i][k]) {\n                    flag = true;\n                    break;\n                }\n            }\n            if (!flag) {\n                ans += s[i][j];\n            }\n        }\n    }\n\n    cout << ans << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\ngrid = [list(input()) for _ in range(n)]\n\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] in grid[i][:j] + grid[i][j+1:]:\n            grid[i][j] = '.'\n\nfor j in range(m):\n    for i in range(n):\n        if grid[i][j] in grid[:i] + grid[i+1:]:\n            grid[i][j] = '.'\n\nprint(''.join(grid[i][j] for i in range(n) for j in range(m) if grid[i][j] != '.'))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n\nint main() {\n    int n, m;\n    scanf(\" %d%d \", &n, &m);\n    char a[n][m];\n    for (int i = 0; i < n; i++) {\n        scanf(\" %s \", a[i]);\n    }\n    int b[26] = {0};\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            b[a[i][j] - 'a']++;\n        }\n    }\n    char ans[n * m];\n    int k = 0;\n    for (int i = 0; i < 26; i++) {\n        if (b[i] == 1) {\n            ans[k++] = i + 'a';\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (ans[k - 1] == a[i][j]) {\n                k--;\n            }\n        }\n    }\n    for (int i = k - 1; i >= 0; i--) {\n        printf(\"%c \", ans[i]);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input = Console.ReadLine().Split(' ');\n            int n = int.Parse(input[0]);\n            int m = int.Parse(input[1]);\n            char[][] grid = new char[n][];\n            for (int i = 0; i < n; i++)\n            {\n                grid[i] = Console.ReadLine().ToCharArray();\n            }\n            List<char> result = new List<char>();\n            for (int i = 0; i < n; i++)\n            {\n                List<char> row = new List<char>();\n                for (int j = 0; j < m; j++)\n                {\n                    row.Add(grid[i][j]);\n                }\n                row.Sort();\n                for (int j = 0; j < row.Count; j++)\n                {\n                    if (j == 0 || row[j] != row[j - 1])\n                    {\n                        result.Add(row[j]);\n                    }\n                }\n            }\n            for (int j = 0; j < m; j++)\n            {\n                List<char> column = new List<char>();\n                for (int i = 0; i < n; i++)\n                {\n                    column.Add(grid[i][j]);\n                }\n                column.Sort();\n                for (int i = 0; i < column.Count; i++)\n                {\n                    if (i == 0 || column[i] != column[i - 1])\n                    {\n                        result.Add(column[i]);\n                    }\n                }\n            }\n            Console.WriteLine(string.Join(\"\", result));\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\ngrid = []\nn.times do\n  grid << gets.chomp.chars\nend\n\n# \u884c\nrow = []\ngrid.each do |row|\n  row.each do |c|\n    row << c unless row.include?(c)\n  end\nend\n\n# \u5217\ncol = []\n(0...m).each do |i|\n  col << grid.map { |row| row[i] }.join\nend\n\n# \u51fa\u529b\nrow.join + col.join\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram AfricanCrossword;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j: Integer;\n  a: array[0..100, 0..100] of Char;\n  b: array[0..100] of Boolean;\n\nbegin\n  Readln(n, m);\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n      Read(a[i, j]);\n    Readln;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    b[i] := False;\n    for j := 0 to m - 1 do\n      if b[i] = False then\n      begin\n        b[i] := True;\n        for k := 0 to m - 1 do\n          if a[i, k] = a[i, j] then\n            b[i] := False;\n      end;\n  end;\n  for j := 0 to m - 1 do\n  begin\n    b[j] := False;\n    for i := 0 to n - 1 do\n      if b[j] = False then\n      begin\n        b[j] := True;\n        for k := 0 to n - 1 do\n          if a[k, j] = a[i, j] then\n            b[j] := False;\n      end;\n  end;\n  for i := 0 to n - 1 do\n  begin\n    for j := 0 to m - 1 do\n      if b[i] = False and b[j] = False then\n        Write(a[i, j]);\n  end;\n  Writeln;\nend.\"\"\"}]","Go":"[{\"version\": \"1.16.4\", \"target code\": \"\"\"\npackage main\n\nimport (\n\t\"fmt\"\n\t\"os\"\n)\n\nfunc main() {\n\tvar n, m int\n\tfmt.Scanf(\" %d %d \", &n, &m)\n\tvar a [][]byte\n\tfor i := 0; i < n; i++ {\n\t\ta = append(a, make([]byte, m))\n\t\tfor j := 0; j < m; j++ {\n\t\t\tfmt.Scanf(\" %c \", &a[i][j])\n\t\t}\n\t}\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 0; j < m; j++ {\n\t\t\tif a[i][j] != ' ' {\n\t\t\t\tfor k := 0; k < n; k++ {\n\t\t\t\t\tif a[k][j] == a[i][j] && k != i {\n\t\t\t\t\t\ta[k][j] = ' '\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor k := 0; k < m; k++ {\n\t\t\t\t\tif a[i][k] == a[i][j] && k != j {\n\t\t\t\t\t\ta[i][k] = ' '\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tvar ans []byte\n\tfor i := 0; i < n; i++ {\n\t\tfor j := 0; j < m; j++ {\n\t\t\tif a[i][j] != ' ' {\n\t\t\t\tans = append(ans, a[i][j])\n\t\t\t}\n\t\t}\n\t}\n\tfmt.Println(string(ans))\n}\n\"\"\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt', 'utf8').split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst grid = [];\nfor (let i = 1; i <= n; i++) {\n    grid.push(input[i].split(''));\n}\nconst row = [];\nconst col = [];\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n        if (row.indexOf(grid[i][j]) === -1) {\n            row.push(grid[i][j]);\n        }\n        if (col.indexOf(grid[j][i]) === -1) {\n            col.push(grid[j][i]);\n        }\n    }\n}\nconst result = [];\nfor (let i = 0; i < n; i++) {\n    for (let j = 0; j < m; j++) {\n        if (row.indexOf(grid[i][j]) === -1 && col.indexOf(grid[j][i]) === -1) {\n            result.push(grid[i][j]);\n        }\n    }\n}\nconsole.log(result.join(''));\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val grid = Array(n) { Array(m) { readLine().first() } }\n    val row = Array(n) { BooleanArray(m) }\n    val col = Array(m) { BooleanArray(n) }\n\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (row[i][j]) continue\n            row[i][j] = true\n            val c = grid[i][j]\n            for (k in 0 until n) {\n                if (k == i) continue\n                if (grid[k][j] == c) {\n                    row[k][j] = true\n                }\n            }\n            for (k in 0 until m) {\n                if (k == j) continue\n                if (grid[i][k] == c) {\n                    col[k][i] = true\n                }\n            }\n        }\n    }\n\n    val ans = mutableListOf<Char>()\n    for (i in 0 until n) {\n        for (j in 0 until m) {\n            if (!row[i][j] && !col[j][i]) {\n                ans.add(grid[i][j])\n            }\n        }\n    }\n\n    println(ans.joinToString(\"\"))\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"\"\"<?php\n$n = (int)trim(fgets(STDIN));\n$m = (int)trim(fgets(STDIN));\n$grid = [];\nfor ($i = 0; $i < $n; $i++) {\n    $grid[] = trim(fgets(STDIN));\n}\n$result = [];\nfor ($i = 0; $i < $n; $i++) {\n    $row = $grid[$i];\n    $row = array_unique($row);\n    $result = array_merge($result, $row);\n}\nfor ($i = 0; $i < $m; $i++) {\n    $col = [];\n    for ($j = 0; $j < $n; $j++) {\n        $col[] = $grid[$j][$i];\n    }\n    $col = array_unique($col);\n    $result = array_merge($result, $col);\n}\necho implode('', $result);\n\"\"\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.array;\n\nvoid main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n    char a[n][m];\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            scanf(\" %c \", &a[i][j]);\n        }\n    }\n    char b[n * m];\n    int k = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (a[i][j] != ' ') {\n                b[k] = a[i][j];\n                k++;\n            }\n        }\n    }\n    int c[26];\n    for (int i = 0; i < 26; i++) {\n        c[i] = 0;\n    }\n    for (int i = 0; i < k; i++) {\n        c[b[i] - 'a']++;\n    }\n    char ans[k];\n    int p = 0;\n    for (int i = 0; i < 26; i++) {\n        if (c[i] == 1) {\n            ans[p] = i + 'a';\n            p++;\n        }\n    }\n    for (int i = 0; i < k; i++) {\n        printf(\" %c \", ans[i]);\n    }\n    printf(\"\\n\");\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n, $m;\\n\\nchomp(my $input = <STDIN>);\\n($n, $m) = split(' ', $input);\\n\\nmy @grid = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $line = <STDIN>;\\n    chomp($line);\\n    push(@grid, $line);\\n}\\n\\nmy @result = ();\\nfor (my $i = 0; $i < $n; $i++) {\\n    my $row = $grid[$i];\\n    my @row_result = ();\\n    for (my $j = 0; $j < $m; $j++) {\\n        if (!grep { $row[$j] eq $_ } @row_result) {\\n            push(@row_result, $row[$j]);\\n        }\\n    }\\n    push(@result, join('', @row_result));\\n}\\n\\nfor (my $i = 0; $i < $m; $i++) {\\n    my $col = join('', map { $grid[$j][$i] } @grid);\\n    my @col_result = ();\\n    for (my $j = 0; $j < $n; $j++) {\\n        if (!grep { $col[$j] eq $_ } @col_result) {\\n            push(@col_result, $col[$j]);\\n        }\\n    }\\n    push(@result, join('', @col_result));\\n}\\n\\nprint join('', @result);\\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let (n, m) = {\n        let mut line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        line.split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<Vec<_>>()\n    };\n\n    let mut grid = vec![vec!['.'; m]; n];\n    for i in 0..n {\n        let mut line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        for (j, c) in line.chars().enumerate() {\n            grid[i][j] = c;\n        }\n    }\n\n    let mut used = vec![vec![false; m]; n];\n    for i in 0..n {\n        for j in 0..m {\n            if grid[i][j] != '.' {\n                used[i][j] = true;\n                for k in 0..n {\n                    if k != i && grid[k][j] == grid[i][j] {\n                        used[k][j] = true;\n                    }\n                }\n                for k in 0..m {\n                    if k != j && grid[i][k] == grid[i][j] {\n                        used[i][k] = true;\n                    }\n                }\n            }\n        }\n    }\n\n    let mut ans = String::new();\n    for i in 0..n {\n        for j in 0..m {\n            if !used[i][j] {\n                ans.push(grid[i][j]);\n            }\n        }\n    }\n\n    stdout.write_all(ans.as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"A. Frames","description":"Throughout Igor K.'s life he has had many situations worthy of attention. We remember the story with the virus, the story of his mathematical career and of course, his famous programming achievements. However, one does not always adopt new hobbies, one can quit something as well.This time Igor K. got disappointed in one of his hobbies: editing and voicing videos. Moreover, he got disappointed in it so much, that he decided to destroy his secret archive for good. Igor K. use Pindows XR operation system which represents files and folders by small icons. At that, m icons can fit in a horizontal row in any window.Igor K.'s computer contains n folders in the D: disk's root catalog. The folders are numbered from 1 to n in the order from the left to the right and from top to bottom (see the images). At that the folders with secret videos have numbers from a to b inclusive. Igor K. wants to delete them forever, at that making as few frame selections as possible, and then pressing Shift+Delete exactly once. What is the minimum number of times Igor K. will have to select the folder in order to select folders from a to b and only them? Let us note that if some selected folder is selected repeatedly, then it is deselected. Each selection possesses the shape of some rectangle with sides parallel to the screen's borders.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line contains four integers n, m, a, b (1\u2264n,m\u226410^9, 1\u2264a\u2264b\u2264n). They are the number of folders in Igor K.'s computer, the width of a window and the numbers of the first and the last folders that need to be deleted.\n","output_spec":"Print a single number: the least possible number of times Igor K. will have to select the folders using frames to select only the folders with numbers from a to b.\n","notes":"The images below illustrate statement tests.\nThe first test:\n\nIn this test we can select folders 3 and 4 with out first selection, folders 5, 6, 7, 8 with our second selection and folder 9 with our third, last selection.\nThe second test:\n\nIn this test we can first select all folders in the first row (2, 3, 4, 5), then \u2014 all other ones.\n","sample_inputs":["11 4 3 9\n","20 5 2 20\n"],"sample_outputs":["3\n","2\n"],"id":"93-A","difficulty":1700,"tags":["implementation"],"src_uid":"f256235c0b2815aae85a6f9435c69dac","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, m, a, b;\n    cin >> n >> m >> a >> b;\n    int ans = 0;\n    if (a % m == 0) {\n        ans = (b - a) \/ m;\n    } else {\n        ans = (b - a) \/ m + 1;\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n, m, a, b;\n        n = scanner.nextInt();\n        m = scanner.nextInt();\n        a = scanner.nextInt();\n        b = scanner.nextInt();\n        int count = 0;\n        if (a % m == 0) {\n            count = (b - a) \/ m + 1;\n        } else {\n            count = (b - a) \/ m + 2;\n        }\n        System.out.println(count);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m, a, b = map(int, input().split())\n\nif a % m == 0:\n    print(b \/\/ m - a \/\/ m + 1)\nelse:\n    print(b \/\/ m - a \/\/ m + 2)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, m, a, b;\n    scanf(\" %d %d %d %d \", &n, &m, &a, &b);\n    int ans = 0;\n    if (a % m == 0) {\n        ans = (b - a) \/ m;\n    } else {\n        ans = (b - a) \/ m + 1;\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var m = int.Parse(input[1]);\n        var a = int.Parse(input[2]);\n        var b = int.Parse(input[3]);\n\n        var ans = 0;\n        if (a % m == 0)\n        {\n            ans = (b - a) \/ m;\n        }\n        else\n        {\n            ans = (b - a) \/ m + 1;\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m, a, b = gets.split.map(&:to_i)\n\nif a % m == 0\n  puts (b - a) \/ m + 1\nelse\n  puts (b - a) \/ m + 2\nend\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Problem_D1;\n\nuses\n  SysUtils;\n\nvar\n  n, m, a, b, i, j, k, l, t, ans: Integer;\n\nbegin\n  Readln(n, m, a, b);\n  ans := 0;\n  for i := a to b do\n  begin\n    t := i div m;\n    l := i mod m;\n    if l = 0 then\n      l := m;\n    for j := t to b div m do\n    begin\n      for k := 1 to m do\n      begin\n        if (j * m + k) >= a and (j * m + k) <= b then\n          inc(ans);\n      end;\n    end;\n  end;\n  Writeln(ans);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m, a, b int\\n    fmt.Scanf(\\\"%d %d %d %d\\\", &n, &m, &a, &b)\\n    var ans int\\n    if a % m == 0 {\\n        ans = (b - a) \/ m\\n    } else {\\n        ans = (b - a) \/ m + 1\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst n = parseInt(input[0].split(' ')[0]);\nconst m = parseInt(input[0].split(' ')[1]);\nconst a = parseInt(input[0].split(' ')[2]);\nconst b = parseInt(input[0].split(' ')[3]);\n\nconst ans = Math.ceil((b - a + 1) \/ m);\n\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, m, a, b) = readLine().split(\" \").map { it.toInt() }\n    val ans = (b - a + 1) \/ m + (b - a + 1) % m\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = intval($input[0]);\n$m = intval($input[1]);\n$a = intval($input[2]);\n$b = intval($input[3]);\n\n$count = 0;\n$row = 1;\n$col = 1;\n\nwhile ($a <= $b) {\n    if ($col > $m) {\n        $row++;\n        $col = 1;\n    }\n\n    if ($a == $row * $m + $col) {\n        $count++;\n        $col++;\n    } else {\n        $count++;\n    }\n\n    $a++;\n}\n\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [n, m, a, b] = readln.split().map!(to!int).array;\n    auto ans = 0;\n    if (a % m == 0) {\n        ans = (b - a) \/ m;\n    } else {\n        ans = (b - a) \/ m + 1;\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n, $m, $a, $b;\n\nchomp(my $input = <STDIN>);\n\n($n, $m, $a, $b) = split(' ', $input);\n\nmy $count = 0;\n\nif ($a % $m == 0) {\n    $count = $b \/ $m;\n} else {\n    $count = ($b \/ $m) + 1;\n}\n\nprint $count;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i32> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let n = input_vec[0];\n    let m = input_vec[1];\n    let a = input_vec[2];\n    let b = input_vec[3];\n    let mut ans = 0;\n    let mut i = a;\n    while i <= b {\n        if i % m == 0 {\n            ans += 1;\n        }\n        i += 1;\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"D. Flags","description":"When Igor K. was a freshman, his professor strictly urged him, as well as all other freshmen, to solve programming Olympiads. One day a problem called \"Flags\" from a website called Timmy's Online Judge caught his attention. In the problem one had to find the number of three-colored flags that would satisfy the condition... actually, it doesn't matter. Igor K. quickly found the formula and got the so passionately desired Accepted.However, the professor wasn't very much impressed. He decided that the problem represented on Timmy's Online Judge was very dull and simple: it only had three possible colors of flag stripes and only two limitations. He suggested a complicated task to Igor K. and the fellow failed to solve it. Of course, we won't tell anybody that the professor couldn't solve it as well.And how about you? Can you solve the problem?The flags consist of one or several parallel stripes of similar width. The stripes can be one of the following colors: white, black, red or yellow. You should find the number of different flags with the number of stripes from L to R, if:  a flag cannot have adjacent stripes of one color;  a flag cannot have adjacent white and yellow stripes;  a flag cannot have adjacent red and black stripes;  a flag cannot have the combination of black, white and red stripes following one after another in this or reverse order;  symmetrical flags (as, for example, a WB and a BW flag, where W and B stand for the white and black colors) are considered the same. ","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The only line contains two integers L and R (1\u2264L\u2264R\u226410^9). They are the lower and upper borders of the number of stripes on the flag.\n","output_spec":"Print a single number \u2014 the number of different flags that would satisfy the condition of the problem and would have from L to R stripes, modulo 1000000007.\n","notes":"In the first test the following flags exist (they are listed in the lexicographical order, the letters B, R, W, Y stand for Black, Red, White and Yellow correspondingly):\n3 stripes: BWB, BYB, BYR, RWR, RYR, WBW, WBY, WRW, WRY, YBY, YRY (overall 11 flags).\n4 stripes: BWBW, BWBY, BYBW, BYBY, BYRW, BYRY, RWRW, RWRY, RYBW, RYBY, RYRW, RYRY (12 flags).\nThat's why the answer to test 1 is equal to 11+12=23.\n","sample_inputs":["3 4\n","5 6\n"],"sample_outputs":["23","64"],"id":"93-D","difficulty":2500,"tags":["dp","math","matrices"],"src_uid":"e04b6957d9c1659e9d2460410cb57f10","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int l, r;\n    cin >> l >> r;\n\n    vector<int> dp(r + 1, 0);\n    dp[0] = 1;\n\n    for (int i = 1; i <= r; i++) {\n        for (int j = 0; j < i; j++) {\n            if (j == 0 || (j == 1 && i >= 3) || (j == 2 && i >= 4)) {\n                dp[i] += dp[j];\n                dp[i] %= 1000000007;\n            }\n        }\n    }\n\n    cout << dp[r] << endl;\n\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = br.readLine().split(\" \");\n        int l = Integer.parseInt(input[0]);\n        int r = Integer.parseInt(input[1]);\n        int[] dp = new int[r + 1];\n        dp[0] = 1;\n        dp[1] = 1;\n        dp[2] = 2;\n        dp[3] = 3;\n        for (int i = 4; i <= r; i++) {\n            dp[i] = (dp[i - 1] + dp[i - 2] + dp[i - 3]) % 1000000007;\n        }\n        System.out.println(dp[r]);\n    }\n}\n\"\"\"}]","Python":"","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int l, r, i, j, k, t, s, a[1000000007], b[1000000007], c[1000000007], d[1000000007];\n    scanf(\" %d %d \", &l, &r);\n    a[0] = 1;\n    b[0] = 1;\n    c[0] = 1;\n    d[0] = 1;\n    for (i = 1; i <= r; i++) {\n        a[i] = (a[i - 1] + b[i - 1] + c[i - 1] + d[i - 1]) % 1000000007;\n        b[i] = (a[i - 1] + b[i - 1] + c[i - 1] + d[i - 1]) % 1000000007;\n        c[i] = (a[i - 1] + b[i - 1] + c[i - 1] + d[i - 1]) % 1000000007;\n        d[i] = (a[i - 1] + b[i - 1] + c[i - 1] + d[i - 1]) % 1000000007;\n    }\n    t = (a[r] + b[r] + c[r] + d[r]) % 1000000007;\n    s = (a[l - 1] + b[l - 1] + c[l - 1] + d[l - 1]) % 1000000007;\n    printf(\" %d \", (t - s + 1000000007) % 1000000007);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var l = input[0];\n        var r = input[1];\n        var dp = new int[r + 1];\n        dp[0] = 1;\n        for (var i = 1; i <= r; i++)\n        {\n            dp[i] = dp[i - 1] * 4;\n            if (i >= 2)\n            {\n                dp[i] -= dp[i - 2];\n            }\n            if (i >= 3)\n            {\n                dp[i] -= dp[i - 3];\n            }\n            dp[i] %= 1000000007;\n        }\n        Console.WriteLine(dp[r]);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\n\ndef f(n, m)\n  if n == 1\n    return m\n  end\n\n  if n == 2\n    return m * (m - 1) \/ 2\n  end\n\n  if n == 3\n    return m * (m - 1) * (m - 2) \/ 6\n  end\n\n  if n == 4\n    return m * (m - 1) * (m - 2) * (m - 3) \/ 24\n  end\n\n  dp = Array.new(m + 1, 0)\n  dp[1] = 1\n  dp[2] = 2\n  dp[3] = 6\n  dp[4] = 24\n\n  (5..n).each do |i|\n    dp[i] = 0\n    (1..i - 1).each do |j|\n      dp[i] += dp[j] * dp[i - j - 1]\n      dp[i] %= 10**9 + 7\n    end\n  end\n\n  dp[n]\nend\n\nputs f(n, m)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Flags;\n\nuses\n  SysUtils;\n\nvar\n  n, m, i, j, k, l, r, s, t, a, b, c, d, e, f, g, h, p, q, x, y, z, ans: integer;\n\nbegin\n  readln(n, m);\n  for i := 1 to m do\n  begin\n    readln(a, b, c, d, e, f, g, h);\n    p := 0;\n    q := 0;\n    x := 0;\n    y := 0;\n    z := 0;\n    for j := 1 to n do\n    begin\n      if (a[j] = 'B') and (b[j] = 'B') then\n        p := p + 1;\n      if (c[j] = 'R') and (d[j] = 'R') then\n        q := q + 1;\n      if (e[j] = 'W') and (f[j] = 'Y') then\n        x := x + 1;\n      if (g[j] = 'R') and (h[j] = 'B') then\n        y := y + 1;\n      if (a[j] = 'B') and (b[j] = 'W') and (c[j] = 'R') then\n        z := z + 1;\n    end;\n    ans := (p + q + x + y + z) mod 1000000007;\n    writeln(ans);\n  end;\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    dp := make([]int, m+1)\\n    dp[0] = 1\\n    for i := 1; i <= m; i++ {\\n        for j := 0; j < 4; j++ {\\n            if j == 0 || j == 3 {\\n                dp[i] += dp[i-1]\\n            } else {\\n                dp[i] += dp[i-1] * 2\\n            }\\n        }\\n    }\\n    fmt.Println(dp[m] % 1000000007)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nrl.on('line', (line) => {\n  const [L, R] = line.split(' ').map(Number);\n  const mod = 1000000007;\n  const dp = new Array(R + 1).fill(0);\n  dp[0] = 1;\n  for (let i = 1; i <= R; i++) {\n    dp[i] = dp[i - 1] * 4;\n    if (i >= 2) {\n      dp[i] -= dp[i - 2] * 2;\n    }\n    if (i >= 3) {\n      dp[i] -= dp[i - 3] * 2;\n    }\n    dp[i] %= mod;\n  }\n  console.log(dp[R]);\n});\n\nrl.on('close', () => process.exit());\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport kotlin.math.*\n\nfun main() {\n    val (l, r) = readLine()!!.split(\" \").map { it.toInt() }\n    val mod = 1000000007\n    val dp = Array(r + 1) { Array(4) { 0 } }\n    dp[1][0] = 1\n    dp[1][1] = 1\n    dp[1][2] = 1\n    dp[1][3] = 1\n    for (i in 2..r) {\n        for (j in 0..3) {\n            for (k in 0..3) {\n                if (j != k) {\n                    dp[i][j] += dp[i - 1][k]\n                    dp[i][j] %= mod\n                }\n            }\n        }\n    }\n    val ans = dp[r][0] + dp[r][1] + dp[r][2] + dp[r][3]\n    println(ans % mod)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = explode(' ', trim(fgets(STDIN)));\n$l = intval($n[0]);\n$r = intval($n[1]);\n$dp = array_fill(0, $r + 1, 0);\n$dp[0] = 1;\nfor ($i = 1; $i <= $r; $i++) {\n    for ($j = 0; $j < 4; $j++) {\n        if ($j == 0) {\n            $dp[$i] += $dp[$i - 1];\n        } else if ($j == 1) {\n            $dp[$i] += $dp[$i - 2];\n        } else if ($j == 2) {\n            $dp[$i] += $dp[$i - 3];\n        } else if ($j == 3) {\n            $dp[$i] += $dp[$i - 4];\n        }\n    }\n}\necho $dp[$r] % 1000000007;\n?>\"}]}","d":"","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\nuse warnings;\n\nmy $l = <STDIN>;\nmy $r = <STDIN>;\n\nmy $ans = 0;\n\nfor (my $i = $l; $i <= $r; $i++) {\n    my $j = $i - 1;\n    my $k = $i - 2;\n\n    if ($i % 2 == 0) {\n        $ans += $j * $k;\n    } else {\n        $ans += $j * $k * 2;\n    }\n\n    $ans %= 1000000007;\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut lines = stdin.lock().lines();\n    let (l, r) = lines.next().unwrap().unwrap().split_whitespace().map(|s| s.parse::<usize>().unwrap()).collect::<(usize, usize)>();\n\n    let mut dp = vec![vec![0; 5]; r + 1];\n    dp[0][0] = 1;\n    for i in 1..=r {\n        for j in 0..5 {\n            for k in 0..5 {\n                if j != k {\n                    dp[i][j] += dp[i - 1][k];\n                }\n            }\n        }\n    }\n\n    let mut ans = 0;\n    for i in l..=r {\n        for j in 0..5 {\n            for k in 0..5 {\n                if j != k && j != 3 && k != 3 {\n                    ans += dp[i][j] * dp[r - i][k];\n                }\n            }\n        }\n    }\n\n    println!(\"{}\", ans % 1000000007);\n}\n\"\"\"}]"}
{"title":"E. Lostborn","description":"Igor K. very much likes a multiplayer role playing game WineAge II. Who knows, perhaps, that might be the reason for his poor performance at the university. As any person who plays the game, he is interested in equipping his hero with as good weapon and outfit as possible. One day, as he was reading the game's forum yet again, he discovered a very interesting fact. As it turns out, each weapon in the game is characterised with k different numbers: a1,...,ak. They are called hit indicators and according to the game developers' plan they are pairwise coprime. The damage that is inflicted during a hit depends not only on the weapon's characteristics, but also on the hero's strength parameter. Thus, if the hero's strength equals n, than the inflicted damage will be calculated as the number of numbers on the segment , that aren't divisible by any hit indicator ai.Recently, having fulfilled another quest, Igor K. found a new Lostborn sword. He wants to know how much damage he will inflict upon his enemies if he uses it.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers: n and k (1\u2264n\u226410^13, 1\u2264k\u2264100). They are the indicator of Igor K's hero's strength and the number of hit indicators.\nThe next line contains space-separated k integers ai (1\u2264ai\u22641000). They are Lostborn sword's hit indicators. The given k numbers are pairwise coprime.\n","output_spec":"Print the single number \u2014 the damage that will be inflicted by Igor K.'s hero when he uses his new weapon. \nPlease, do not use the %lld specificator to read or write 64-bit integers in C++. It is preferred to use the cin, cout streams or the %I64d specificator.\n","notes":null,"sample_inputs":["20 3\n2 3 5\n","50 2\n15 8\n"],"sample_outputs":["6\n","41\n"],"id":"93-E","difficulty":2600,"tags":["dp","math","number+theory"],"src_uid":"cec0f6c267fa76191a3784b08e39acd6","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <cmath>\nusing namespace std;\nint main() {\n    int n, k;\n    cin >> n >> k;\n    int a[k];\n    for (int i = 0; i < k; i++) {\n        cin >> a[i];\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        int flag = 1;\n        for (int j = 0; j < k; j++) {\n            if (i % a[j] == 0) {\n                flag = 0;\n                break;\n            }\n        }\n        if (flag) {\n            ans++;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = sc.nextInt();\n        int[] a = new int[k];\n        for (int i = 0; i < k; i++) {\n            a[i] = sc.nextInt();\n        }\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            boolean flag = true;\n            for (int j = 0; j < k; j++) {\n                if (i % a[j] == 0) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                ans++;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,k=map(int,input().split())\na=list(map(int,input().split()))\nans=0\nfor i in range(1,n+1):\n    for j in a:\n        if i%j==0:\n            break\n    else:\n        ans+=1\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int n, k;\n    scanf(\" %d %d \", &n, &k);\n    int a[k];\n    for (int i = 0; i < k; i++) {\n        scanf(\" %d \", &a[i]);\n    }\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        int flag = 1;\n        for (int j = 0; j < k; j++) {\n            if (i % a[j] == 0) {\n                flag = 0;\n                break;\n            }\n        }\n        if (flag) {\n            ans++;\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var k = int.Parse(input[1]);\n        var a = new List<int>();\n        for (int i = 0; i < k; i++)\n        {\n            a.Add(int.Parse(Console.ReadLine()));\n        }\n        var ans = 0;\n        for (int i = 1; i <= n; i++)\n        {\n            var flag = true;\n            for (int j = 0; j < k; j++)\n            {\n                if (i % a[j] == 0)\n                {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag)\n            {\n                ans++;\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n,k=gets.split.map(&:to_i)\na=gets.split.map(&:to_i)\nans=0\n(1..n).each do |i|\n    if a.all?{|j| i%j!=0}\n        ans+=1\n    end\nend\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Problem;\nuses SysUtils;\nvar\n  n, k, i, j, a, b, c, d, e, f, g, h, l, m, n1, n2, n3, n4, n5, n6, n7, n8, n9, n10, n11, n12, n13, n14, n15, n16, n17, n18, n19, n20, n21, n22, n23, n24, n25, n26, n27, n28, n29, n30, n31, n32, n33, n34, n35, n36, n37, n38, n39, n40, n41, n42, n43, n44, n45, n46, n47, n48, n49, n50, n51, n52, n53, n54, n55, n56, n57, n58, n59, n60, n61, n62, n63, n64, n65, n66, n67, n68, n69, n70, n71, n72, n73, n74, n75, n76, n77, n78, n79, n80, n81, n82, n83, n84, n85, n86, n87, n88, n89, n90, n91, n92, n93, n94, n95, n96, n97, n98, n99, n100, s, t, u, v, w, x, y, z: Integer;\nbegin\n  Readln(n, k);\n  for i := 1 to k do\n  begin\n    Read(a);\n    s := s + a;\n  end;\n  t := s div n;\n  for i := 1 to k do\n  begin\n    a := a - t;\n    if a < 0 then\n      a := 0;\n    for j := 1 to a do\n    begin\n      b := b + 1;\n    end;\n  end;\n  Writeln(b);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, k int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &k)\\n    var a []int\\n    for i := 0; i < k; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\\n\\\", &x)\\n        a = append(a, x)\\n    }\\n    ans := 0\\n    for i := 1; i <= n; i++ {\\n        flag := true\\n        for j := 0; j < k; j++ {\\n            if i%a[j] == 0 {\\n                flag = false\\n                break\\n            }\\n        }\\n        if flag {\\n            ans++\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst k = parseInt(stdin[1]);\nconst a = stdin[2].split(' ').map(x => parseInt(x));\nconst m = new Map();\nfor (let i = 0; i < k; i++) {\n    if (!m.has(a[i])) {\n        m.set(a[i], 1);\n    } else {\n        m.set(a[i], m.get(a[i]) + 1);\n    }\n}\nconst ans = 0;\nfor (let i = 1; i <= n; i++) {\n    if (!m.has(i)) {\n        ans++;\n    }\n}\nconsole.log(ans);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, k) = readLine().split(\" \").map { it.toInt() }\n    val a = readLine().split(\" \").map { it.toInt() }.sorted()\n    var ans = 0\n    for (i in 0 until k) {\n        ans += (n - a[i] + 1) \/ a[i]\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $k = explode(' ', trim(fgets(STDIN)));\n$a = explode(' ', trim(fgets(STDIN)));\n$ans = 0;\nfor ($i = 1; $i <= $n; $i++) {\n    $is_ok = true;\n    for ($j = 0; $j < $k; $j++) {\n        if ($i % $a[$j] == 0) {\n            $is_ok = false;\n            break;\n        }\n    }\n    if ($is_ok) {\n        $ans++;\n    }\n}\necho $ans;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [n, k] = readln!(i64, i64);\n    auto a = readln!(i64[]);\n    auto m = a.map!(x => x.sqrt()).max;\n    auto s = 1;\n    for (auto i = 2; i <= m; i++) {\n        auto f = true;\n        for (auto j = 0; j < k; j++) {\n            if (a[j] % i == 0) {\n                f = false;\n                break;\n            }\n        }\n        if (f) {\n            s *= i;\n        }\n    }\n    auto ans = n \/ s;\n    if (n % s != 0) {\n        ans++;\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"use Math::BigInt;\nuse Math::BigInt::GMP;\n\nmy $n, $k;\n\n$n = Math::BigInt->new(<>);\n$k = Math::BigInt->new(<>);\n\nmy @a = map { Math::BigInt->new($_) } split(' ',<>);\n\nmy $ans = 0;\n\nfor (my $i = 1; $i <= $n; $i++) {\n    my $is_divisible = 0;\n    for (my $j = 0; $j < $k; $j++) {\n        if ($i % $a[$j] == 0) {\n            $is_divisible = 1;\n            last;\n        }\n    }\n    if (!$is_divisible) {\n        $ans++;\n    }\n}\n\nprint $ans;\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut stdin = io::stdin();\n    let mut stdout = io::stdout();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut iter = line.split_whitespace();\n    let n = iter.next().unwrap().parse::<i64>().unwrap();\n    let k = iter.next().unwrap().parse::<i64>().unwrap();\n\n    let mut a = Vec::new();\n    for _ in 0..k {\n        let mut line = String::new();\n        stdin.read_line(&mut line).unwrap();\n        let mut iter = line.split_whitespace();\n        let ai = iter.next().unwrap().parse::<i64>().unwrap();\n        a.push(ai);\n    }\n\n    let mut ans = 0;\n    for i in 1..n + 1 {\n        let mut flag = true;\n        for ai in a.iter() {\n            if i % ai == 0 {\n                flag = false;\n                break;\n            }\n        }\n        if flag {\n            ans += 1;\n        }\n    }\n\n    stdout.write(format!(\"{}\\n\").as_bytes()).unwrap();\n}\n\"\"\"}]"}
{"title":"C. Volleyball","description":"Petya loves volleyball very much. One day he was running late for a volleyball match. Petya hasn't bought his own car yet, that's why he had to take a taxi. The city has n junctions, some of which are connected by two-way roads. The length of each road is defined by some positive integer number of meters; the roads can have different lengths.Initially each junction has exactly one taxi standing there. The taxi driver from the i-th junction agrees to drive Petya (perhaps through several intermediate junctions) to some other junction if the travel distance is not more than ti meters. Also, the cost of the ride doesn't depend on the distance and is equal to ci bourles. Taxis can't stop in the middle of a road. Each taxi can be used no more than once. Petya can catch taxi only in the junction, where it stands initially.At the moment Petya is located on the junction x and the volleyball stadium is on the junction y. Determine the minimum amount of money Petya will need to drive to the stadium.","input_from":"standard input","output_to":"standard output","time_limit":"2 seconds","memory_limit":"256 megabytes","input_spec":"The first line contains two integers n and m (1\u2264n\u22641000,0\u2264m\u22641000). They are the number of junctions and roads in the city correspondingly. The junctions are numbered from 1 to n, inclusive. The next line contains two integers x and y (1\u2264x,y\u2264n). They are the numbers of the initial and final junctions correspondingly. Next m lines contain the roads' description. Each road is described by a group of three integers ui, vi, wi (1\u2264ui,vi\u2264n,1\u2264wi\u226410^9) \u2014 they are the numbers of the junctions connected by the road and the length of the road, correspondingly. The next n lines contain n pairs of integers ti and ci (1\u2264ti,ci\u226410^9), which describe the taxi driver that waits at the i-th junction \u2014 the maximum distance he can drive and the drive's cost. The road can't connect the junction with itself, but between a pair of junctions there can be more than one road. All consecutive numbers in each line are separated by exactly one space character.\n","output_spec":"If taxis can't drive Petya to the destination point, print \"-1\" (without the quotes). Otherwise, print the drive's minimum cost.\nPlease do not use the %lld specificator to read or write 64-bit integers in \u0421++. It is preferred to use cin, cout streams or the %I64d specificator.\n","notes":"An optimal way \u2014 ride from the junction 1 to 2 (via junction 4), then from 2 to 3. It costs 7+2=9 bourles.\n","sample_inputs":["4 4\n1 3\n1 2 3\n1 4 1\n2 4 1\n2 3 5\n2 7\n7 2\n1 2\n7 7\n"],"sample_outputs":["9\n"],"id":"95-C","difficulty":1900,"tags":["shortest+paths"],"src_uid":"d8d449d0fccf755822548ddf9d74b9ab","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nint main() {\n    int n, m;\n    cin >> n >> m;\n    vector<vector<int>> g(n + 1);\n    for (int i = 0; i < m; i++) {\n        int u, v, w;\n        cin >> u >> v >> w;\n        g[u].push_back(make_pair(v, w));\n        g[v].push_back(make_pair(u, w));\n    }\n    int x, y;\n    cin >> x >> y;\n    vector<int> d(n + 1, 1e9);\n    d[x] = 0;\n    vector<bool> used(n + 1, false);\n    vector<int> p(n + 1, -1);\n    vector<int> t(n + 1, -1);\n    queue<int> q;\n    q.push(x);\n    while (!q.empty()) {\n        int u = q.front();\n        q.pop();\n        used[u] = true;\n        for (int i = 0; i < g[u].size(); i++) {\n            int v = g[u][i].first;\n            int w = g[u][i].second;\n            if (!used[v] && d[v] > d[u] + w) {\n                d[v] = d[u] + w;\n                p[v] = u;\n                t[v] = g[u][i].second;\n                q.push(v);\n            }\n        }\n    }\n    if (d[y] == 1e9) {\n        cout << -1 << endl;\n    } else {\n        int cur = y;\n        int ans = 0;\n        while (cur != -1) {\n            ans += t[cur];\n            cur = p[cur];\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        String[] input = reader.readLine().split(\" \");\n        int n = Integer.parseInt(input[0]);\n        int m = Integer.parseInt(input[1]);\n        int x = Integer.parseInt(reader.readLine().split(\" \")[0]);\n        int y = Integer.parseInt(reader.readLine().split(\" \")[1]);\n        List<List<int[]>> graph = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            graph.add(new ArrayList<>());\n        }\n        for (int i = 0; i < m; i++) {\n            input = reader.readLine().split(\" \");\n            int u = Integer.parseInt(input[0]);\n            int v = Integer.parseInt(input[1]);\n            int w = Integer.parseInt(input[2]);\n            graph.get(u - 1).add(new int[]{v - 1, w});\n            graph.get(v - 1).add(new int[]{u - 1, w});\n        }\n        int[] dist = new int[n];\n        Arrays.fill(dist, Integer.MAX_VALUE);\n        dist[x - 1] = 0;\n        boolean[] visited = new boolean[n];\n        Queue<Integer> queue = new LinkedList<>();\n        queue.add(x - 1);\n        while (!queue.isEmpty()) {\n            int u = queue.poll();\n            visited[u] = true;\n            for (int[] v : graph.get(u)) {\n                if (!visited[v[0]] && dist[v[0]] > dist[u] + v[1]) {\n                    dist[v[0]] = dist[u] + v[1];\n                    queue.add(v[0]);\n                }\n            }\n        }\n        int ans = Integer.MAX_VALUE;\n        for (int i = 0; i < n; i++) {\n            if (dist[i] != Integer.MAX_VALUE && dist[i] + graph.get(i).get(0)[1] >= dist[y - 1]) {\n                ans = Math.min(ans, dist[i] + graph.get(i).get(0)[1]);\n            }\n        }\n        if (ans == Integer.MAX_VALUE) {\n            System.out.println(\"-1\");\n        } else {\n            System.out.println(ans);\n        }\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, m = map(int, input().split())\nx, y = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\nfor _ in range(m):\n    u, v, w = map(int, input().split())\n    graph[u - 1].append((v - 1, w))\n    graph[v - 1].append((u - 1, w))\n\ndist = [10**18] * n\ndist[x - 1] = 0\n\nque = [(x - 1, 0)]\nwhile que:\n    u, d = que.pop(0)\n    for v, w in graph[u]:\n        if dist[v] > d + w:\n            dist[v] = d + w\n            que.append((v, d + w))\n\nif dist[y - 1] == 10**18:\n    print(-1)\nelse:\n    print(dist[y - 1])\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"\"\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int n, m, x, y;\n    scanf(\" %d%d \", &n, &m);\n    scanf(\" %d%d \", &x, &y);\n    int a[n + 1][n + 1];\n    int b[n + 1];\n    int c[n + 1];\n    for (int i = 0; i < m; i++) {\n        int u, v, w;\n        scanf(\" %d%d%d \", &u, &v, &w);\n        a[u][v] = w;\n        a[v][u] = w;\n    }\n    for (int i = 1; i <= n; i++) {\n        scanf(\" %d%d \", &b[i], &c[i]);\n    }\n    int d[n + 1];\n    memset(d, 0x3f, sizeof(d));\n    d[x] = 0;\n    int q[n + 1];\n    int head = 0, tail = 0;\n    q[tail++] = x;\n    while (head < tail) {\n        int u = q[head++];\n        for (int v = 1; v <= n; v++) {\n            if (a[u][v] != 0 && d[v] > d[u] + a[u][v]) {\n                d[v] = d[u] + a[u][v];\n                c[v] = c[u];\n                if (head == tail) {\n                    q[tail++] = v;\n                } else {\n                    int i = tail - 1;\n                    while (i >= head && d[q[i]] > d[v]) {\n                        i--;\n                    }\n                    q[i + 1] = v;\n                }\n            }\n        }\n    }\n    if (d[y] == 0x3f3f3f3f) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %d \", d[y] + c[y]);\n    }\n    return 0;\n}\n\"\"\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"\"\"\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace _1000_Taxi\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n, m;\n            string[] s = Console.ReadLine().Split(' ');\n            n = int.Parse(s[0]);\n            m = int.Parse(s[1]);\n            int[] x = new int[n + 1];\n            int[] y = new int[n + 1];\n            int[] z = new int[n + 1];\n            int[] t = new int[n + 1];\n            int[] c = new int[n + 1];\n            for (int i = 1; i <= n; i++)\n            {\n                s = Console.ReadLine().Split(' ');\n                x[i] = int.Parse(s[0]);\n                y[i] = int.Parse(s[1]);\n                z[i] = int.Parse(s[2]);\n            }\n            for (int i = 1; i <= n; i++)\n            {\n                s = Console.ReadLine().Split(' ');\n                t[i] = int.Parse(s[0]);\n                c[i] = int.Parse(s[1]);\n            }\n            int[] d = new int[n + 1];\n            d[1] = 0;\n            for (int i = 2; i <= n; i++)\n            {\n                d[i] = int.MaxValue;\n            }\n            for (int i = 1; i <= m; i++)\n            {\n                s = Console.ReadLine().Split(' ');\n                int u = int.Parse(s[0]);\n                int v = int.Parse(s[1]);\n                int w = int.Parse(s[2]);\n                if (d[u] + w < d[v])\n                {\n                    d[v] = d[u] + w;\n                }\n            }\n            int ans = int.MaxValue;\n            for (int i = 1; i <= n; i++)\n            {\n                if (d[i] <= x[y[i]])\n                {\n                    ans = Math.Min(ans, d[i] + c[y[i]]);\n                }\n            }\n            if (ans == int.MaxValue)\n            {\n                Console.WriteLine(\"-1\");\n            }\n            else\n            {\n                Console.WriteLine(ans);\n            }\n        }\n    }\n}\n\"\"\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, m = gets.split.map(&:to_i)\nx, y = gets.split.map(&:to_i)\n\nroads = []\nm.times do\n  u, v, w = gets.split.map(&:to_i)\n  roads << [u, v, w]\nend\n\ntaxis = []\nn.times do\n  t, c = gets.split.map(&:to_i)\n  taxis << [t, c]\nend\n\ndef dijkstra(s, t, roads, taxis)\n  dist = Array.new(n + 1, Float::INFINITY)\n  dist[s] = 0\n  queue = [s]\n\n  while queue.any?\n    u = queue.shift\n\n    roads.each do |v, w, d|\n      if dist[v] > dist[u] + d && dist[u] + d <= taxis[v - 1][0]\n        dist[v] = dist[u] + d\n        queue << v\n      end\n    end\n  end\n\n  dist[t]\nend\n\nputs dijkstra(x, y, roads, taxis) || -1\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Taxi;\n\nuses\n  SysUtils;\n\nconst\n  MAX_N = 1000;\n\ntype\n  TEdge = record\n    u, v, w: Int64;\n  end;\n\n  TTaxi = record\n    t, c: Int64;\n  end;\n\nvar\n  n, m, x, y: Int64;\n  e: array[0..MAX_N] of TEdge;\n  t: array[0..MAX_N] of TTaxi;\n  d: array[0..MAX_N] of Int64;\n\nprocedure Dijkstra(s: Int64);\nvar\n  i, j, k: Int64;\n  q: array[0..MAX_N] of Boolean;\nbegin\n  fillchar(d, sizeof(d), 0);\n  fillchar(q, sizeof(q), true);\n  d[s] := 0;\n  q[s] := false;\n  for i := 1 to n do\n  begin\n    k := -1;\n    for j := 1 to n do\n      if q[j] and (d[j] < d[k]) then\n        k := j;\n    if k = -1 then\n      break;\n    q[k] := false;\n    for j := 1 to m do\n      if e[j].u = k then\n      begin\n        if d[e[j].v] > d[k] + e[j].w then\n          d[e[j].v] := d[k] + e[j].w;\n      end;\n  end;\nend;\n\nbegin\n  readln(n, m);\n  readln(x, y);\n  for i := 1 to m do\n  begin\n    readln(e[i].u, e[i].v, e[i].w);\n  end;\n  for i := 1 to n do\n  begin\n    readln(t[i].t, t[i].c);\n  end;\n  Dijkstra(x);\n  if d[y] = 0 then\n    writeln(-1)\n  else\n    writeln(d[y]);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, m int\\n    fmt.Scanf(\\\"%d%d\\\", &n, &m)\\n    var x, y int\\n    fmt.Scanf(\\\"%d%d\\\", &x, &y)\\n    var adj [][]int\\n    adj = make([][]int, n+1)\\n    for i := 0; i < m; i++ {\\n        var u, v, w int\\n        fmt.Scanf(\\\"%d%d%d\\\", &u, &v, &w)\\n        adj[u] = append(adj[u], v)\\n        adj[v] = append(adj[v], u)\\n    }\\n    var dist []int\\n    dist = make([]int, n+1)\\n    for i := 0; i < n+1; i++ {\\n        dist[i] = 1000000000\\n    }\\n    dist[x] = 0\\n    var q []int\\n    q = append(q, x)\\n    for len(q) > 0 {\\n        u := q[0]\\n        q = q[1:]\\n        for _, v := range adj[u] {\\n            if dist[v] > dist[u] + 1 {\\n                dist[v] = dist[u] + 1\\n                q = append(q, v)\\n            }\\n        }\\n    }\\n    if dist[y] == 1000000000 {\\n        fmt.Println(-1)\\n    } else {\\n        fmt.Println(dist[y])\\n    }\\n}\\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"const n, m, x, y, t, c, d, i, j, k, ans = 0;\nconst adj = new Array(n + 1);\nconst taxi = new Array(n + 1);\nconst dist = new Array(n + 1);\nconst inf = 10 ** 9;\nconst inf2 = 10 ** 18;\nconst dijkstra = (s) => {\n  dist.fill(inf);\n  dist[s] = 0;\n  const q = new Array(n + 1);\n  q[0] = s;\n  for (i = 0; i < n; i++) {\n    const u = q[i];\n    for (j = 0; j < adj[u].length; j++) {\n      const v = adj[u][j][0];\n      const w = adj[u][j][1];\n      if (dist[v] > dist[u] + w) {\n        dist[v] = dist[u] + w;\n        q[i + 1] = v;\n      }\n    }\n  }\n};\nconst main = () => {\n  scanf('%d%d', &n, &m);\n  scanf('%d%d', &x, &y);\n  for (i = 1; i <= m; i++) {\n    scanf('%d%d%d', &t, &c, &d);\n    adj[t].push([c, d]);\n    adj[c].push([t, d]);\n  }\n  for (i = 1; i <= n; i++) {\n    scanf('%d%d', &taxi[i][0], &taxi[i][1]);\n  }\n  dijkstra(x);\n  if (dist[y] == inf) {\n    console.log(-1);\n  } else {\n    console.log(dist[y]);\n  }\n};\nmain();\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val (n, m) = readLine().split(\" \").map { it.toInt() }\n    val (x, y) = readLine().split(\" \").map { it.toInt() }\n    val graph = Array(n + 1) { mutableListOf<Pair<Int, Int>>() }\n    val taxi = Array(n + 1) { Pair(0, 0) }\n    for (i in 0 until m) {\n        val (u, v, w) = readLine().split(\" \").map { it.toInt() }\n        graph[u].add(Pair(v, w))\n        graph[v].add(Pair(u, w))\n    }\n    for (i in 1..n) {\n        val (t, c) = readLine().split(\" \").map { it.toInt() }\n        taxi[i] = Pair(t, c)\n    }\n    val pq = PriorityQueue<Pair<Int, Int>>(compareBy { it.second })\n    pq.add(Pair(0, x))\n    val dist = Array(n + 1) { Int.MAX_VALUE }\n    dist[x] = 0\n    while (pq.isNotEmpty()) {\n        val (d, u) = pq.poll()\n        if (d > dist[u]) continue\n        for (v in graph[u]) {\n            val nd = d + v.second\n            if (nd < dist[v.first]) {\n                dist[v.first] = nd\n                pq.add(Pair(nd, v.first))\n            }\n        }\n    }\n    if (dist[y] == Int.MAX_VALUE) {\n        println(-1)\n    } else {\n        println(taxi[y].second)\n    }\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n, $m = explode(' ', trim(fgets(STDIN)));\n$x, $y = explode(' ', trim(fgets(STDIN)));\n$x--;\n$y--;\n$graph = [];\nfor ($i = 0; $i < $n; $i++) {\n    $graph[$i] = [];\n}\nfor ($i = 0; $i < $m; $i++) {\n    $u, $v, $w = explode(' ', trim(fgets(STDIN)));\n    $u--;\n    $v--;\n    $graph[$u][] = [$v, $w];\n    $graph[$v][] = [$u, $w];\n}\n$dist = [];\n$dist[$x] = 0;\n$queue = [$x];\nwhile (!empty($queue)) {\n    $u = array_shift($queue);\n    foreach ($graph[$u] as $v) {\n        if (!isset($dist[$v[0]]) || $dist[$u] + $v[1] < $dist[$v[0]]) {\n            $dist[$v[0]] = $dist[$u] + $v[1];\n            $queue[] = $v[0];\n        }\n    }\n}\nif (!isset($dist[$y])) {\n    echo '-1';\n} else {\n    echo $dist[$y];\n}\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\nimport std.array;\n\nstruct Edge {\n    int from;\n    int to;\n    int weight;\n}\n\nstruct Node {\n    int id;\n    int distance;\n    int taxi;\n    int taxiCost;\n    bool visited;\n    Edge[] edges;\n}\n\nint main() {\n    int n, m;\n    scanf(\" %d %d \", &n, &m);\n\n    Node[] nodes;\n    for (int i = 0; i < n; i++) {\n        Node node;\n        node.id = i + 1;\n        node.distance = -1;\n        node.taxi = -1;\n        node.taxiCost = -1;\n        node.visited = false;\n        node.edges = new Edge[0];\n        nodes.push(node);\n    }\n\n    for (int i = 0; i < m; i++) {\n        int u, v, w;\n        scanf(\" %d %d %d \", &u, &v, &w);\n\n        Edge edge;\n        edge.from = u;\n        edge.to = v;\n        edge.weight = w;\n\n        nodes[u - 1].edges.push(edge);\n        nodes[v - 1].edges.push(edge);\n    }\n\n    int x, y;\n    scanf(\" %d %d \", &x, &y);\n\n    int[] taxiDistances = new int[n];\n    for (int i = 0; i < n; i++) {\n        taxiDistances[i] = -1;\n    }\n\n    int[] taxiCosts = new int[n];\n    for (int i = 0; i < n; i++) {\n        taxiCosts[i] = -1;\n    }\n\n    int[] taxiIds = new int[n];\n    for (int i = 0; i < n; i++) {\n        taxiIds[i] = -1;\n    }\n\n    int[] taxiVisited = new bool[n];\n    for (int i = 0; i < n; i++) {\n        taxiVisited[i] = false;\n    }\n\n    int[] taxiQueue = new int[n];\n    int queueSize = 0;\n\n    taxiQueue[queueSize++] = x - 1;\n    taxiVisited[x - 1] = true;\n\n    while (queueSize > 0) {\n        int currentTaxi = taxiQueue[--queueSize];\n\n        for (int i = 0; i < nodes[currentTaxi].edges.length; i++) {\n            Edge edge = nodes[currentTaxi].edges[i];\n\n            if (taxiDistances[edge.to] == -1 || taxiDistances[edge.to] > taxiDistances[currentTaxi] + edge.weight) {\n                taxiDistances[edge.to] = taxiDistances[currentTaxi] + edge.weight;\n                taxiCosts[edge.to] = nodes[currentTaxi].taxiCost + nodes[edge.to].taxiCost;\n                taxiIds[edge.to] = nodes[currentTaxi].taxi;\n\n                if (!taxiVisited[edge.to]) {\n                    taxiQueue[queueSize++] = edge.to;\n                    taxiVisited[edge.to] = true;\n                }\n            }\n        }\n    }\n\n    if (taxiDistances[y - 1] == -1) {\n        printf(\" -1 \");\n    } else {\n        printf(\" %d \", taxiCosts[y - 1]);\n    }\n\n    return 0;\n}\n\"}]}","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\nuse warnings;\\n\\nmy $n, $m, $x, $y;\\n\\nchomp(my $line = <STDIN>);\\n($n, $m) = split(\/ \/, $line);\\n\\nchomp(my $line = <STDIN>);\\n($x, $y) = split(\/ \/, $line);\\n\\nmy @adj = ();\\nmy @dist = ();\\nmy @cost = ();\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    chomp(my $line = <STDIN>);\\n    ($a, $b, $c) = split(\/ \/, $line);\\n    push(@adj, [$a, $b, $c]);\\n}\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    chomp(my $line = <STDIN>);\\n    ($d, $c) = split(\/ \/, $line);\\n    push(@dist, $d);\\n    push(@cost, $c);\\n}\\n\\nfor (my $i = 0; $i < $n; $i++) {\\n    @dist[$i] = -1;\\n}\\n\\n@dist[$x] = 0;\\n\\nwhile (1) {\\n    my $min = -1;\\n    my $min_i = -1;\\n    for (my $i = 0; $i < $n; $i++) {\\n        if (@dist[$i] != -1 && (@dist[$i] < $min || $min == -1)) {\\n            $min = @dist[$i];\\n            $min_i = $i;\\n        }\\n    }\\n    if ($min_i == -1) {\\n        last;\\n    }\\n    for (my $j = 0; $j < @adj[$min_i]; $j++) {\\n        my $a = $adj[$min_i][$j][0];\\n        my $b = $adj[$min_i][$j][1];\\n        my $c = $adj[$min_i][$j][2];\\n        if (@dist[$a] == -1 || @dist[$a] > @dist[$min_i] + $c) {\\n            @dist[$a] = @dist[$min_i] + $c;\\n        }\\n    }\\n}\\n\\nprint @dist[$y] ? @dist[$y] : -1;\\n\\nexit 0;\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::collections::HashMap;\n\nfn main() {\n    let (n, m) = read_ints();\n    let (x, y) = read_ints();\n    let mut graph = HashMap::new();\n    for _ in 0..m {\n        let (u, v, w) = read_ints();\n        graph.entry(u).or_insert(vec![]).push((v, w));\n        graph.entry(v).or_insert(vec![]).push((u, w));\n    }\n    let mut dp = vec![vec![-1; n + 1]; n + 1];\n    dp[x][0] = 0;\n    for i in 0..n {\n        for j in 0..n + 1 {\n            if dp[i][j] == -1 {\n                continue;\n            }\n            for (v, w) in graph.get(&i).unwrap() {\n                if j + w <= n {\n                    dp[v][j + w] = max(dp[v][j + w], dp[i][j] + w);\n                }\n            }\n        }\n    }\n    println!(\"{}\", dp[y][n]);\n}\n\nfn read_ints() -> Vec<i64> {\n    std::io::stdin()\n        .lock()\n        .lines()\n        .next()\n        .unwrap()\n        .split_whitespace()\n        .map(|s| s.parse().unwrap())\n        .collect()\n}\n\"\"\"}]"}
{"title":"A. Antipalindrome","description":"A string is a palindrome if it reads the same from the left to the right and from the right to the left. For example, the strings \"kek\", \"abacaba\", \"r\" and \"papicipap\" are palindromes, while the strings \"abb\" and \"iq\" are not.A substring $$$s[l \\ldots r]$$$ ($$$1\u2264l\u2264r\u2264|s|$$$) of a string $$$s=s_{1}s_{2} \\ldots s_{|s|}$$$ is the string $$$s_{l}s_{l+1} \\ldots s_{r}$$$.Anna does not like palindromes, so she makes her friends call her Ann. She also changes all the words she reads in a similar way. Namely, each word $$$s$$$ is changed into its longest substring that is not a palindrome. If all the substrings of $$$s$$$ are palindromes, she skips the word at all.Some time ago Ann read the word $$$s$$$. What is the word she changed it into?","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains a non-empty string $$$s$$$ with length at most $$$50$$$ characters, containing lowercase English letters only.\n","output_spec":"If there is such a substring in $$$s$$$ that is not a palindrome, print the maximum length of such a substring. Otherwise print $$$0$$$.\nNote that there can be multiple longest substrings that are not palindromes, but their length is unique.\n","notes":"\"mew\" is not a palindrome, so the longest substring of it that is not a palindrome, is the string \"mew\" itself. Thus, the answer for the first example is $$$3$$$.\nThe string \"uffuw\" is one of the longest non-palindrome substrings (of length $$$5$$$) of the string \"wuffuw\", so the answer for the second example is $$$5$$$.\nAll substrings of the string \"qqqqqqqq\" consist of equal characters so they are palindromes. This way, there are no non-palindrome substrings. Thus, the answer for the third example is $$$0$$$.\n","sample_inputs":["mew\n","wuffuw\n","qqqqqqqq\n"],"sample_outputs":["3\n","5\n","0\n"],"id":"981-A","difficulty":900,"tags":["brute+force","implementation","strings"],"src_uid":"6c85175d334f811617e7030e0403f706","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\n#include <string>\nusing namespace std;\nint main() {\n    string s;\n    cin >> s;\n    int n = s.length();\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (s[i] != s[j]) {\n                int len = j - i + 1;\n                if (ans < len) {\n                    ans = len;\n                }\n            }\n        }\n    }\n    if (ans == 0) {\n        cout << 0 << endl;\n    } else {\n        cout << ans << endl;\n    }\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        String s = scanner.nextLine();\n        int n = s.length();\n        int ans = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (isPalindrome(s.substring(i, j))) {\n                    continue;\n                }\n                ans = Math.max(ans, j - i);\n            }\n        }\n        System.out.println(ans);\n    }\n\n    private static boolean isPalindrome(String s) {\n        int n = s.length();\n        for (int i = 0; i < n \/ 2; i++) {\n            if (s.charAt(i) != s.charAt(n - 1 - i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\ns = input()\n\ndef is_palindrome(s):\n    return s == s[::-1]\n\ndef find_longest_non_palindrome(s):\n    n = len(s)\n    ans = 0\n    for i in range(n):\n        for j in range(i + 1, n + 1):\n            if not is_palindrome(s[i:j]):\n                ans = max(ans, j - i)\n    return ans\n\nprint(find_longest_non_palindrome(s))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\n#include <string.h>\nint main() {\n    char s[51];\n    scanf(\" %s \", s);\n    int n = strlen(s);\n    int i, j, k, l, r, m, max = 0;\n    for (i = 0; i < n; i++) {\n        for (j = i + 1; j < n; j++) {\n            k = 0;\n            for (l = i, r = j; l < r; l++, r--) {\n                if (s[l] != s[r]) {\n                    k = 1;\n                    break;\n                }\n            }\n            if (k == 0 && j - i > max) {\n                max = j - i;\n                m = i;\n            }\n        }\n    }\n    if (max == 0)\n        printf(\" 0 \");\n    else\n        printf(\" %d \", max);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string s = Console.ReadLine();\n        int n = s.Length;\n        int ans = 0;\n        for (int i = 0; i < n; i++)\n        {\n            for (int j = i + 1; j < n; j++)\n            {\n                if (s[i] != s[j])\n                {\n                    int len = j - i + 1;\n                    if (ans < len)\n                    {\n                        ans = len;\n                    }\n                }\n            }\n        }\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"s = gets.chomp\n\ndef palindrome?(s)\n  s == s.reverse\nend\n\ndef longest_non_palindrome(s)\n  longest = 0\n  (0..s.length - 1).each do |i|\n    (i + 1..s.length).each do |j|\n      if !palindrome?(s[i..j]) && j - i > longest\n        longest = j - i\n      end\n    end\n  end\n  longest\nend\n\nputs longest_non_palindrome(s)\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Palindrome;\nuses SysUtils;\nvar\n  s: string;\n  i, j, n, max: integer;\nbegin\n  readln(s);\n  n := length(s);\n  max := 0;\n  for i := 1 to n - 1 do\n  begin\n    j := i + 1;\n    while j <= n and s[i] = s[j] do\n      j := j + 1;\n    if j - i > max then\n      max := j - i;\n  end;\n  if max = 0 then\n    writeln(0)\n  else\n    writeln(max);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n)\n\nfunc main() {\n    s := strings.ToLower(strings.TrimSpace(fmt.Scanln()))\n    n := len(s)\n    ans := 0\n    for i := 0; i < n; i++ {\n        for j := i + 1; j < n; j++ {\n            if s[i] != s[j] {\n                ans = max(ans, j - i + 1)\n            }\n        }\n    }\n    fmt.Println(ans)\n}\n\nfunc max(a, b int) int {\n    if a > b {\n        return a\n    }\n    return b\n}\n\"}]}","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"s = require('fs').readFileSync(0, 'utf8').trim();\n\nif (s.length == 0) {\n  console.log(0);\n} else {\n  let max = 0;\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i + 1; j < s.length; j++) {\n      if (s[i] != s[j]) {\n        let len = j - i + 1;\n        if (len > max) {\n          max = len;\n        }\n      }\n    }\n  }\n  console.log(max);\n}\n\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val s = readLine()\n    val n = s.length\n    var ans = 0\n    for (i in 0 until n) {\n        for (j in i + 1 until n) {\n            if (isPalindrome(s, i, j)) {\n                continue\n            }\n            ans = maxOf(ans, j - i + 1)\n        }\n    }\n    println(ans)\n}\n\nfun isPalindrome(s: String, i: Int, j: Int): Boolean {\n    while (i < j) {\n        if (s[i] != s[j]) {\n            return false\n        }\n        i++\n        j--\n    }\n    return true\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$s = trim(fgets(STDIN));\n$n = strlen($s);\n$ans = 0;\nfor ($i = 0; $i < $n; $i++) {\n    for ($j = $i + 1; $j < $n; $j++) {\n        if ($s[$i] != $s[$j]) {\n            $ans = max($ans, $j - $i + 1);\n        }\n    }\n}\necho $ans ? $ans : 0;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    string s;\n    scanf(\" %s \", s);\n    int n = s.length;\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = i + 1; j < n; j++) {\n            if (s[i] != s[j]) {\n                int len = j - i + 1;\n                if (ans < len) {\n                    ans = len;\n                }\n            }\n        }\n    }\n    printf(\" %d\\n \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\n\nuse strict;\n\nmy $s = <STDIN>;\nmy $n = length($s);\n\nmy $ans = 0;\nfor (my $i = 0; $i < $n; $i++) {\n    for (my $j = $i + 1; $j < $n; $j++) {\n        if ($s[$i] != $s[$j]) {\n            $ans = max($ans, $j - $i + 1);\n        }\n    }\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\n#[allow(unused_variables)]\nfn main() {\n    let s = std::io::stdin().read_line().unwrap().trim();\n    let mut ans = 0;\n    for i in 0..s.len() {\n        for j in i..s.len() {\n            if s[i..j].chars().rev().eq(s[i..j].chars()) {\n                continue;\n            }\n            ans = ans.max(j - i);\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"C. Candies","description":"After passing a test, Vasya got himself a box of $$$n$$$ candies. He decided to eat an equal amount of candies each morning until there are no more candies. However, Petya also noticed the box and decided to get some candies for himself.This means the process of eating candies is the following: in the beginning Vasya chooses a single integer $$$k$$$, same for all days. After that, in the morning he eats $$$k$$$ candies from the box (if there are less than $$$k$$$ candies in the box, he eats them all), then in the evening Petya eats $$$10\\%$$$ of the candies remaining in the box. If there are still candies left in the box, the process repeats\u00a0\u2014 next day Vasya eats $$$k$$$ candies again, and Petya\u00a0\u2014 $$$10\\%$$$ of the candies left in a box, and so on.If the amount of candies in the box is not divisible by $$$10$$$, Petya rounds the amount he takes from the box down. For example, if there were $$$97$$$ candies in the box, Petya would eat only $$$9$$$ of them. In particular, if there are less than $$$10$$$ candies in a box, Petya won't eat any at all.Your task is to find out the minimal amount of $$$k$$$ that can be chosen by Vasya so that he would eat at least half of the $$$n$$$ candies he initially got. Note that the number $$$k$$$ must be integer.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The first line contains a single integer $$$n$$$ ($$$1 \\\\leq n \\\\leq 10^{18}$$$)\u00a0\u2014 the initial amount of candies in the box.\n","output_spec":"Output a single integer\u00a0\u2014 the minimal amount of $$$k$$$ that would allow Vasya to eat at least half of candies he got.\n","notes":"In the sample, the amount of candies, with $$$k=3$$$, would change in the following way (Vasya eats first):\n$$$68 \\\\to 65 \\\\to 59 \\\\to 56 \\\\to 51 \\\\to 48 \\\\to 44 \\\\to 41 \\\\\\\\ \\\\to 37 \\\\to 34 \\\\to 31 \\\\to 28 \\\\to 26 \\\\to 23 \\\\to 21 \\\\to 18 \\\\to 17 \\\\to 14 \\\\\\\\ \\\\to 13 \\\\to 10 \\\\to 9 \\\\to 6 \\\\to 6 \\\\to 3 \\\\to 3 \\\\to 0$$$.\nIn total, Vasya would eat $$$39$$$ candies, while Petya\u00a0\u2014 $$$29$$$.\n","sample_inputs":["68\n"],"sample_outputs":["3\n"],"id":"991-C","difficulty":1500,"tags":["binary+search","implementation"],"src_uid":"db1a50da538fa82038f8db6104d2ab93","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int k = n \/ 2;\n    while (n % k != 0) {\n        k++;\n    }\n    cout << k << endl;\n    return 0;\n}\n```\"}]}","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int k = 1;\n        while (n > 0) {\n            n -= k;\n            k += 1;\n        }\n        k -= 1;\n        System.out.println(k);\n    }\n}\n\"}]}","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef solve(n):\n    if n < 10:\n        return 1\n    return 10 - (n % 10)\n\nprint(solve(n))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n;\n    scanf(\" %d \", &n);\n    int k = n \/ 2;\n    while (n % k != 0) {\n        k++;\n    }\n    printf(\" %d \", k);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        int n = int.Parse(Console.ReadLine());\n        int k = 1;\n        while (n > 0)\n        {\n            n -= k;\n            k += 1;\n        }\n        Console.WriteLine(k - 1);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nk = 1\nwhile n > 0\n  n -= k\n  k += 1\nend\n\nputs k - 1\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var n, k: integer;\nbegin\n  readln(n);\n  k := n div 2;\n  while (n - k * 10) > 0 do\n  begin\n    n := n - k * 10;\n    k := k div 10;\n  end;\n  writeln(k);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n int64\\n    fmt.Scan(&n)\\n    k := n \/ 2\\n    for k%10 != 0 {\\n        k--\\n    }\\n    fmt.Println(k)\\n}\\n\"}]}","Javascript":"[{\"version\": \"14.17.0\", \"target code\": \"n=int(input())\nk=n\/\/2\nwhile(n%k!=0):\n    k-=1\nprint(k)\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"import kotlin.math.ceil\\n\\nfun main() {\\n    val n = readLine()!!.toInt()\\n    val k = ceil(n \/ 2.0).toInt()\\n    println(k)\\n}\\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$n = (int)trim(fgets(STDIN));\n$k = 0;\nwhile ($n > 0) {\n    $n -= $k;\n    $k += 10;\n}\necho $k \/ 2;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int k = 1;\n    while (n > 0) {\n        n -= k;\n        k *= 10;\n    }\n    k \/= 10;\n    printf(\" %d \", k);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\n\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\n\nmy $k = 1;\nwhile ($n > 0) {\n    if ($n % 10 == 0) {\n        $n -= 10;\n    } else {\n        $n -= $k;\n    }\n    $k++;\n}\n\nprint $k;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let n: i64 = read!();\n    let mut k = 1;\n    while n > 0 {\n        if n % 10 == 0 {\n            n -= 10;\n        } else {\n            n -= 9;\n        }\n        k += 1;\n    }\n    println!(\"{}\", k);\n}\"}]"}
{"title":"B. Nastya Studies Informatics","description":"Today on Informatics class Nastya learned about GCD and LCM (see links below). Nastya is very intelligent, so she solved all the tasks momentarily and now suggests you to solve one of them as well.We define a pair of integers (a,b) good, if GCD(a,b)=x and LCM(a,b)=y, where GCD(a,b) denotes the greatest common divisor of a and b, and LCM(a,b) denotes the least common multiple of a and b.You are given two integers x and y. You are to find the number of good pairs of integers (a,b) such that l\u2264a,b\u2264r. Note that pairs (a,b) and (b,a) are considered different if a\u2260b.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"256 megabytes","input_spec":"The only line contains four integers l,r,x,y (1\u2264l\u2264r\u226410^9, 1\u2264x\u2264y\u226410^9).\n","output_spec":"In the only line print the only integer\u00a0\u2014 the answer for the problem.\n","notes":"In the first example there are two suitable good pairs of integers (a,b): (1,2) and (2,1).\nIn the second example there are four suitable good pairs of integers (a,b): (1,12), (12,1), (3,4) and (4,3).\nIn the third example there are good pairs of integers, for example, (3,30), but none of them fits the condition l\u2264a,b\u2264r.\n","sample_inputs":["1 2 1 2\n","1 12 1 12\n","50 100 3 30\n"],"sample_outputs":["2\n","4\n","0\n"],"id":"992-B","difficulty":1600,"tags":["math","number+theory"],"src_uid":"d37dde5841116352c9b37538631d0b15","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int l, r, x, y;\n    cin >> l >> r >> x >> y;\n    int ans = 0;\n    for (int i = l; i <= r; i++) {\n        for (int j = l; j <= r; j++) {\n            if (i % x == 0 && j % x == 0 && i \/ x == j \/ x && i * j % y == 0) {\n                ans++;\n            }\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int l = sc.nextInt();\n        int r = sc.nextInt();\n        int x = sc.nextInt();\n        int y = sc.nextInt();\n        int ans = 0;\n        for (int i = l; i <= r; i++) {\n            for (int j = l; j <= r; j++) {\n                if (i % x == 0 && j % x == 0 && i \/ x == j \/ x && i * y == j * x) {\n                    ans++;\n                }\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nl,r,x,y=map(int,input().split())\nprint(min(r\/\/x-(l-1)\/\/x,r\/\/y-(l-1)\/\/y))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int l, r, x, y;\n    scanf(\" %d %d %d %d \", &l, &r, &x, &y);\n    int ans = 0;\n    for (int i = l; i <= r; i++) {\n        for (int j = l; j <= r; j++) {\n            if (i % x == 0 && j % x == 0 && i \/ x == j \/ x && i * j % y == 0) {\n                ans++;\n            }\n        }\n    }\n    printf(\" %d \", ans);\n    return 0;\n}\n\"}]}","C#":"[{\"version\": \".NET Core C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var line = Console.ReadLine().Split(' ');\n        var l = int.Parse(line[0]);\n        var r = int.Parse(line[1]);\n        var x = int.Parse(line[2]);\n        var y = int.Parse(line[3]);\n\n        var count = 0;\n        for (var i = l; i <= r; i++)\n        {\n            for (var j = i; j <= r; j++)\n            {\n                if (i % x == 0 && j % x == 0 && i * j % y == 0)\n                {\n                    count++;\n                }\n            }\n        }\n\n        Console.WriteLine(count);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"l,r,x,y=map(int,input().split())\nprint(min(r\/\/x-(l-1)\/\/x,r\/\/y-(l-1)\/\/y))\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"var\nl,r,x,y,i,j,k,n,m,ans:longint;\nbegin\nreadln(l,r,x,y);\nn:=r-l+1;\nm:=y div x;\nans:=0;\nfor i:=1 to m do\nbegin\nk:=x*i;\nfor j:=l to r div k do\nbegin\nans:=ans+n div (j+1);\nend;\nend;\nwriteln(ans);\nend.\"}]}","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var l, r, x, y int\\n    fmt.Scanf(\\\"%d%d%d%d\\\", &l, &r, &x, &y)\\n    ans := 0\\n    for i := l; i <= r; i++ {\\n        for j := l; j <= r; j++ {\\n            if i % x == 0 && j % x == 0 && i \/ x == j \/ x && i * y == j * y {\\n                ans++\\n            }\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('input.txt').toString().split('\\n');\nconst l = parseInt(input[0].split(' ')[0]);\nconst r = parseInt(input[0].split(' ')[1]);\nconst x = parseInt(input[0].split(' ')[2]);\nconst y = parseInt(input[0].split(' ')[3]);\nconst ans = 0;\nfor (let i = l; i <= r; i++) {\n    for (let j = i; j <= r; j++) {\n        if (i % x == 0 && j % x == 0 && i \/ x == j \/ x && i * j % y == 0) {\n            ans++;\n        }\n    }\n}\nconsole.log(ans);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nimport java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val l = sc.nextInt()\n    val r = sc.nextInt()\n    val x = sc.nextInt()\n    val y = sc.nextInt()\n    val ans = 0\n    for (i in l..r) {\n        for (j in l..r) {\n            if (i * y == j * x) {\n                ans++\n            }\n        }\n    }\n    println(ans)\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n\n$input = explode(' ', trim(fgets(STDIN)));\n$l = intval($input[0]);\n$r = intval($input[1]);\n$x = intval($input[2]);\n$y = intval($input[3]);\n\n$count = 0;\nfor ($i = $l; $i <= $r; $i++) {\n    for ($j = $l; $j <= $r; $j++) {\n        if ($i % $x == 0 && $j % $x == 0 && $i * $j % $y == 0) {\n            $count++;\n        }\n    }\n}\n\necho $count;\n?>\"}]","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    auto [l, r, x, y] = readln.split.map!(to!int).array;\n    auto ans = 0;\n    for (auto i = l; i <= r; i++) {\n        for (auto j = i; j <= r; j++) {\n            if (i % x == 0 && j % x == 0 && i \/ x == j \/ x && i * j % y == 0) {\n                ans++;\n            }\n        }\n    }\n    writeln(ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy ($l, $r, $x, $y) = split \/ \/, <STDIN>;\n\nmy $ans = 0;\nfor (my $i = $l; $i <= $r; $i++) {\n    for (my $j = $i; $j <= $r; $j++) {\n        if ($i % $x == 0 && $j % $x == 0 && $i * $j % $y == 0) {\n            $ans++;\n        }\n    }\n}\n\nprint $ans;\n\"}]}","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nuse std::io;\n\nfn main() {\n    let mut input = String::new();\n    io::stdin().read_line(&mut input).unwrap();\n    let mut input_vec: Vec<i64> = input.split_whitespace().map(|x| x.parse().unwrap()).collect();\n    let l = input_vec[0];\n    let r = input_vec[1];\n    let x = input_vec[2];\n    let y = input_vec[3];\n    let mut ans = 0;\n    for i in l..=r {\n        for j in l..=r {\n            if i % x == 0 && j % x == 0 && i * j % y == 0 {\n                ans += 1;\n            }\n        }\n    }\n    println!(\"{}\", ans);\n}\n\"\"\"}]"}
{"title":"B. Running Student","description":"And again a misfortune fell on Poor Student. He is being late for an exam.Having rushed to a bus stop that is in point (0,0), he got on a minibus and they drove along a straight line, parallel to axis OX, in the direction of increasing x.Poor Student knows the following:   during one run the minibus makes n stops, the i-th stop is in point (xi,0)  coordinates of all the stops are different  the minibus drives at a constant speed, equal to vb  it can be assumed the passengers get on and off the minibus at a bus stop momentarily  Student can get off the minibus only at a bus stop  Student will have to get off the minibus at a terminal stop, if he does not get off earlier  the University, where the exam will be held, is in point (xu,yu)  Student can run from a bus stop to the University at a constant speed vs as long as needed  a distance between two points can be calculated according to the following formula:   Student is already on the minibus, so, he cannot get off at the first bus stop Poor Student wants to get to the University as soon as possible. Help him to choose the bus stop, where he should get off. If such bus stops are multiple, choose the bus stop closest to the University.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The first line contains three integer numbers: 2\u2264n\u2264100, 1\u2264vb,vs\u22641000. The second line contains n non-negative integers in ascending order: coordinates xi of the bus stop with index i. It is guaranteed that x1 equals to zero, and xn\u226410^5. The third line contains the coordinates of the University, integers xu and yu, not exceeding 10^5 in absolute value. \n","output_spec":"In the only line output the answer to the problem \u2014 index of the optimum bus stop.\n","notes":"As you know, students are a special sort of people, and minibuses usually do not hurry. That's why you should not be surprised, if Student's speed is higher than the speed of the minibus.\n","sample_inputs":["4 5 2\n0 2 4 6\n4 1\n","2 1 1\n0 100000\n100000 100000\n"],"sample_outputs":["3","2"],"id":"9-B","difficulty":1200,"tags":["brute+force","geometry","implementation"],"src_uid":"15fa49860e978d3b3fb7a20bf9f8aa86","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nint main() {\n    int n, vb, vs;\n    cin >> n >> vb >> vs;\n    int x[n];\n    for (int i = 0; i < n; i++) {\n        cin >> x[i];\n    }\n    int xu, yu;\n    cin >> xu >> yu;\n    int ans = 0;\n    int t = 0;\n    for (int i = 0; i < n; i++) {\n        t += x[i] - x[i - 1];\n        if (t \/ vb + abs(yu) \/ vs < t \/ vb + abs(x[i] - xu) \/ vs) {\n            ans = i + 1;\n        }\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n, vb, vs;\n        n = sc.nextInt();\n        vb = sc.nextInt();\n        vs = sc.nextInt();\n        int[] x = new int[n];\n        for (int i = 0; i < n; i++) {\n            x[i] = sc.nextInt();\n        }\n        int xu = sc.nextInt();\n        int yu = sc.nextInt();\n        int ans = 0;\n        double min = Double.MAX_VALUE;\n        for (int i = 1; i < n; i++) {\n            double d = Math.sqrt(Math.pow(x[i] - xu, 2) + Math.pow(yu, 2));\n            double t = (x[i] - x[0]) \/ vb;\n            if (d \/ vs < t && d \/ vs < min) {\n                min = d \/ vs;\n                ans = i;\n            }\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn,vb,vs=map(int,input().split())\nx=list(map(int,input().split()))\nx.append(10**10)\nx.sort()\nxu,yu=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n    t=x[i]-x[i-1]\n    t+=(xu-x[i])\/vb\n    t+=(yu)\/vs\n    if t<x[i]\/vb:\n        ans=i\nprint(ans)\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"n,vb,vs=map(int,input().split())\nx=list(map(int,input().split()))\nx.append(10**10)\nx.sort()\nxu,yu=map(int,input().split())\nans=0\nfor i in range(1,n+1):\n    t=x[i]-x[i-1]\n    t+=(xu-x[i])\/vb\n    t+=(yu)\/vs\n    if t<x[i]\/vb:\n        ans=i\nprint(ans)\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var stops = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n        var university = Console.ReadLine().Split(' ').Select(int.Parse).ToArray();\n\n        var minTime = int.MaxValue;\n        var minIndex = -1;\n        for (int i = 1; i < stops.Length; i++)\n        {\n            var time = (stops[i] - stops[i - 1]) \/ input[1] + Math.Abs(university[0] - stops[i]) \/ input[2];\n            if (time < minTime)\n            {\n                minTime = time;\n                minIndex = i;\n            }\n        }\n\n        Console.WriteLine(minIndex);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, vb, vs = gets.split.map(&:to_i)\nx = gets.split.map(&:to_i)\nxu, yu = gets.split.map(&:to_i)\n\ndef dist(x1, y1, x2, y2)\n  Math.sqrt((x2 - x1)**2 + (y2 - y1)**2)\nend\n\ndef time(x1, y1, x2, y2, v)\n  dist(x1, y1, x2, y2) \/ v\nend\n\ndef get_time(x, v)\n  time(0, 0, x, 0, v)\nend\n\ndef get_time_to_stop(x, v)\n  time(0, 0, x, 0, v) + time(x, 0, x, yu, vs)\nend\n\ndef get_min_time(x, v)\n  x.each_with_index do |x_i, i|\n    if i == 0\n      next\n    end\n\n    if get_time_to_stop(x_i, v) < get_time_to_stop(x[i - 1], v)\n      return i\n    end\n  end\n\n  n - 1\nend\n\nputs get_min_time(x, vb)\"}]","delphi":"","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, vb, vs int\\n    fmt.Scanf(\\\"%d%d%d\\\", &n, &vb, &vs)\\n    var xs []int\\n    for i := 0; i < n; i++ {\\n        var x int\\n        fmt.Scanf(\\\"%d\\\", &x)\\n        xs = append(xs, x)\\n    }\\n    var xu, yu int\\n    fmt.Scanf(\\\"%d%d\\\", &xu, &yu)\\n    var ans int\\n    var min int\\n    for i := 1; i < n; i++ {\\n        d := (xu - xs[i]) * (xu - xs[i]) + yu * yu\\n        if d < min {\\n            min = d\\n            ans = i\\n        }\\n    }\\n    fmt.Println(ans)\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const readline = require('readline');\nconst rl = readline.createInterface({\n  input: process.stdin,\n  output: process.stdout\n});\n\nconst [n, vb, vs] = rl.question().split(' ').map(Number);\nconst xs = rl.question().split(' ').map(Number);\nconst [xu, yu] = rl.question().split(' ').map(Number);\n\nconst t = (x1, x2) => Math.abs(x1 - x2) \/ vb;\nconst d = (x, y) => Math.sqrt(x * x + y * y);\n\nconst ans = xs.reduce((acc, x) => {\n  const t1 = t(x, 0);\n  const t2 = t(x, xu);\n  const d1 = d(x, 0);\n  const d2 = d(x, xu);\n  if (t1 + d1 < t2 + d2) {\n    return acc + 1;\n  } else {\n    return acc;\n  }\n}, 0);\n\nconsole.log(ans);\nrl.close();\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.6\", \"target code\": \"\"\"\nimport java.util.*\n\nfun main() {\n    val br = System.`in`.bufferedReader()\n    val bw = System.out.bufferedWriter()\n\n    val (n, vb, vs) = br.readLine().split(\" \").map { it.toInt() }\n    val xs = br.readLine().split(\" \").map { it.toInt() }\n    val xu = br.readLine().split(\" \").map { it.toInt() }.first()\n    val yu = br.readLine().split(\" \").map { it.toInt() }.first()\n\n    val t = (xu - xs[0]) \/ vb\n    val ts = (xu - xs[n - 1]) \/ vb\n    val tss = (xu - xs[n - 1]) \/ vs\n\n    var ans = 0\n    for (i in 1 until n) {\n        val tt = (xs[i] - xs[i - 1]) \/ vb\n        val tt2 = (xs[i] - xs[i - 1]) \/ vs\n        val tt3 = (xu - xs[i]) \/ vs\n        if (tt + tt2 + tt3 < tss) {\n            ans = i\n        }\n    }\n\n    bw.write(\"$ans\")\n    bw.flush()\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\n$input = explode(' ', trim(fgets(STDIN)));\n$n = intval($input[0]);\n$vb = intval($input[1]);\n$vs = intval($input[2]);\n$stops = explode(' ', trim(fgets(STDIN)));\n$xu = intval($input[0]);\n$yu = intval($input[1]);\n$distances = [];\nfor ($i = 1; $i < $n; $i++) {\n    $distances[] = sqrt(pow($stops[$i] - $stops[$i - 1], 2) + pow($yu, 2));\n}\n$distances[] = sqrt(pow($xu - $stops[$n - 1], 2) + pow($yu, 2));\n$min = $distances[0];\n$index = 0;\nfor ($i = 1; $i < $n + 1; $i++) {\n    if ($distances[$i] < $min) {\n        $min = $distances[$i];\n        $index = $i;\n    }\n}\necho $index . PHP_EOL;\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, vb, vs;\n    scanf(\" %d %d %d \", &n, &vb, &vs);\n    int x[n];\n    scanf(\" %d \", &x[0]);\n    for (int i = 1; i < n; i++) {\n        scanf(\" %d \", &x[i]);\n    }\n    int xu, yu;\n    scanf(\" %d %d \", &xu, &yu);\n    int t = 0;\n    int ans = 0;\n    for (int i = 0; i < n; i++) {\n        t += x[i] \/ vb;\n        if (t + abs(xu - x[i]) \/ vs < t + abs(xu - x[i + 1]) \/ vs) {\n            ans = i + 1;\n        }\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\\n\\nuse strict;\\n\\nmy $n,$vb,$vs; \\n\\nchomp(my $input = <STDIN>);\\n\\n@input = split(\/ \/,$input);\\n\\n$n = $input[0];\\n$vb = $input[1];\\n$vs = $input[2];\\n\\nmy @x = split(\/ \/,<STDIN>);\\n\\nmy $xu = $input[0];\\nmy $yu = $input[1];\\n\\nmy $min = 1000000000000000000;\\nmy $ans = 0;\\n\\nfor(my $i = 1; $i < $n; $i++){\\n    my $d = sqrt(($xu - $x[$i])**2 + ($yu)**2);\\n    my $t = ($x[$i] - $x[0])\/$vb;\\n    my $t2 = ($xu - $x[$i])\/$vs;\\n    if($d + $t < $min){\\n        $min = $d + $t;\\n        $ans = $i;\\n    }\\n    if($d + $t2 < $min){\\n        $min = $d + $t2;\\n        $ans = $i;\\n    }\\n}\\n\\nprint $ans + 1;\\n\\nexit(0);\\n\"}]}","Rust":"[{\"version\": \"Rust 2021\", \"target code\": \"\"\"\nuse std::io::{self, BufRead};\n\nfn main() {\n    let stdin = io::stdin();\n    let mut stdin = stdin.lock();\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut n_vb_vs: Vec<i32> = line.split_whitespace().map(|s| s.parse().unwrap()).collect();\n    let n = n_vb_vs[0];\n    let vb = n_vb_vs[1];\n    let vs = n_vb_vs[2];\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut xs: Vec<i32> = line.split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut line = String::new();\n    stdin.read_line(&mut line).unwrap();\n    let mut xu_yu: Vec<i32> = line.split_whitespace().map(|s| s.parse().unwrap()).collect();\n\n    let mut min_time = std::i32::MAX;\n    let mut min_index = 0;\n    for i in 1..n {\n        let time = (xs[i] - xs[i - 1]) \/ vb + (xu_yu[0] - xs[i]) \/ vs;\n        if time < min_time {\n            min_time = time;\n            min_index = i;\n        }\n    }\n\n    println!(\"{}\", min_index);\n}\n\"\"\"}]"}
{"title":"C. Hexadecimal's Numbers","description":"One beautiful July morning a terrible thing happened in Mainframe: a mean virus Megabyte somehow got access to the memory of his not less mean sister Hexadecimal. He loaded there a huge amount of n different natural numbers from 1 to n to obtain total control over her energy.But his plan failed. The reason for this was very simple: Hexadecimal didn't perceive any information, apart from numbers written in binary format. This means that if a number in a decimal representation contained characters apart from 0 and 1, it was not stored in the memory. Now Megabyte wants to know, how many numbers were loaded successfully.","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"Input data contains the only number n (1\u2264n\u226410^9).\n","output_spec":"Output the only number \u2014 answer to the problem.\n","notes":"For n = 10 the answer includes numbers 1 and 10.\n","sample_inputs":["10\n"],"sample_outputs":["2"],"id":"9-C","difficulty":1200,"tags":["brute+force","implementation","math"],"src_uid":"64a842f9a41f85a83b7d65bfbe21b6cb","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"```c++\n#include <iostream>\nusing namespace std;\nint main() {\n    int n;\n    cin >> n;\n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        string s = to_string(i);\n        for (int j = 0; j < s.length(); j++) {\n            if (s[j] != '0' && s[j] != '1') {\n                break;\n            }\n            if (j == s.length() - 1) {\n                count++;\n            }\n        }\n    }\n    cout << count << endl;\n    return 0;\n}\n```\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"import java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            String s = Integer.toString(i);\n            for (int j = 0; j < s.length(); j++) {\n                if (s.charAt(j) != '0' && s.charAt(j) != '1') {\n                    break;\n                }\n                if (j == s.length() - 1) {\n                    count++;\n                }\n            }\n        }\n        System.out.println(count);\n    }\n}\n\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn = int(input())\n\ndef is_binary(n):\n    while n > 0:\n        if n % 10 != 0 and n % 10 != 1:\n            return False\n        n \/\/= 10\n    return True\n\nprint(sum(is_binary(i) for i in range(1, n + 1)))\n\"\"\"}]","C":"[{\"version\": \"GNU C11\", \"target code\": \"#include <stdio.h>\nint main() {\n    int n, i, j, count = 0;\n    scanf(\" %d \", &n);\n    for (i = 1; i <= n; i++) {\n        for (j = 0; j < 32; j++) {\n            if (i % (1 << j) != 0) {\n                break;\n            }\n        }\n        if (j == 31) {\n            count++;\n        }\n    }\n    printf(\" %d \", count);\n    return 0;\n}\"}]","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            int n = int.Parse(Console.ReadLine());\n            int count = 0;\n            for (int i = 1; i <= n; i++)\n            {\n                string s = i.ToString();\n                for (int j = 0; j < s.Length; j++)\n                {\n                    if (s[j] != '0' && s[j] != '1')\n                    {\n                        break;\n                    }\n                    if (j == s.Length - 1)\n                    {\n                        count++;\n                    }\n                }\n            }\n            Console.WriteLine(count);\n        }\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n = gets.to_i\n\nans = 0\n\nfor i in 1..n\n    if i.to_s.count(\"0\") + i.to_s.count(\"1\") == i.to_s.length\n        ans += 1\n    end\nend\n\nputs ans\"}]","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"program Problem1;\nuses SysUtils;\nvar\n  n, i, j, k, s: Integer;\nbegin\n  Readln(n);\n  s := 0;\n  for i := 1 to n do\n  begin\n    k := 0;\n    for j := 1 to Length(IntToStr(i)) do\n      if IntToStr(i)[j] <> '0' and IntToStr(i)[j] <> '1' then\n        k := 1;\n    if k = 0 then\n      s := s + 1;\n  end;\n  Writeln(s);\nend.\"}]}","Go":"[{\"version\": \"1.16.4\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\")\\n\\nfunc main() {\\n    n := 0\\n    fmt.Scanf(\\\"%d\\\\n\\\", &n)\\n    count := 0\\n    for i := 1; i <= n; i++ {\\n        if len(fmt.Sprintf(\\\"%b\\\", i)) == len(fmt.Sprintf(\\\"%o\\\", i)) {\\n            count++\\n        }\\n    }\\n    fmt.Println(count)\\n}\\n\"}]","Javascript":"[{\"version\": \"Node.js\", \"target code\": \"const fs = require('fs');\nconst input = fs.readFileSync('\/dev\/stdin').toString().trim();\nconst n = Number(input);\nconst count = 0;\nfor (let i = 1; i <= n; i++) {\n  const str = i.toString();\n  if (str.match(\/[^0-1]\/g)) {\n    continue;\n  }\n  count++;\n}\nconsole.log(count);\"}]","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"import java.util.Scanner\n\nfun main() {\n    val sc = Scanner(System.`in`)\n    val n = sc.nextInt()\n    var count = 0\n    for (i in 1..n) {\n        val s = i.toString()\n        if (s.contains(\"0\") && s.contains(\"1\")) {\n            count++\n        }\n    }\n    println(count)\n}\n\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n = (int)trim(fgets(STDIN));\\n\\n$count = 0;\\n\\nfor ($i = 1; $i <= $n; $i++) {\\n    if (preg_match('\/[^01]\/', $i) === 0) {\\n        $count++;\\n    }\\n}\\n\\necho $count.PHP_EOL;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n;\n    scanf(\" %d \", &n);\n    int count = 0;\n    for (int i = 1; i <= n; i++) {\n        string s = to!string(i);\n        if (s.all!(char.isDigit)) {\n            count++;\n        }\n    }\n    printf(\" %d \", count);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl\nuse strict;\nuse warnings;\n\nmy $n = <STDIN>;\nmy $count = 0;\nfor (my $i = 1; $i <= $n; $i++) {\n    if ($i =~ \/^[01]+$\/) {\n        $count++;\n    }\n}\nprint $count;\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"fn main() {\n    let mut n = String::new();\n    std::io::stdin().read_line(&mut n).unwrap();\n    let n: usize = n.trim().parse().unwrap();\n    let mut count = 0;\n    for i in 1..n + 1 {\n        let mut s = i.to_string();\n        for c in s.chars() {\n            if c != '0' && c != '1' {\n                break;\n            }\n        }\n        if c == '1' {\n            count += 1;\n        }\n    }\n    println!(\"{}\", count);\n}\"}]"}
{"title":"D. How many trees?","description":"In one very old text file there was written Great Wisdom. This Wisdom was so Great that nobody could decipher it, even Phong \u2014 the oldest among the inhabitants of Mainframe. But still he managed to get some information from there. For example, he managed to learn that User launches games for pleasure \u2014 and then terrible Game Cubes fall down on the city, bringing death to those modules, who cannot win the game...For sure, as guard Bob appeared in Mainframe many modules stopped fearing Game Cubes. Because Bob (as he is alive yet) has never been defeated by User, and he always meddles with Game Cubes, because he is programmed to this.However, unpleasant situations can happen, when a Game Cube falls down on Lost Angles. Because there lives a nasty virus \u2014 Hexadecimal, who is... mmm... very strange. And she likes to play very much. So, willy-nilly, Bob has to play with her first, and then with User.This time Hexadecimal invented the following entertainment: Bob has to leap over binary search trees with n nodes. We should remind you that a binary search tree is a binary tree, each node has a distinct key, for each node the following is true: the left sub-tree of a node contains only nodes with keys less than the node's key, the right sub-tree of a node contains only nodes with keys greater than the node's key. All the keys are different positive integer numbers from 1 to n. Each node of such a tree can have up to two children, or have no children at all (in the case when a node is a leaf).In Hexadecimal's game all the trees are different, but the height of each is not lower than h. In this problem \u00abheight\u00bb stands for the maximum amount of nodes on the way from the root to the remotest leaf, the root node and the leaf itself included. When Bob leaps over a tree, it disappears. Bob gets the access to a Cube, when there are no trees left. He knows how many trees he will have to leap over in the worst case. And you?","input_from":"standard input","output_to":"standard output","time_limit":"1 second","memory_limit":"64 megabytes","input_spec":"The input data contains two space-separated positive integer numbers n and h (n\u226435, h\u2264n).\n","output_spec":"Output one number \u2014 the answer to the problem. It is guaranteed that it does not exceed 9\u00b710^18.\n","notes":null,"sample_inputs":["3 2\n","3 3\n"],"sample_outputs":["5","4"],"id":"9-D","difficulty":1900,"tags":["combinatorics","divide+and+conquer","dp"],"src_uid":"faf12a603d0c27f8be6bf6b02531a931","C++":"[{\"version\": \"GNU C++11\", \"target code\": \"\"\"\n#include <iostream>\nusing namespace std;\nint main() {\n    int n, h;\n    cin >> n >> h;\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        ans += (i - 1) \/ h + 1;\n    }\n    cout << ans << endl;\n    return 0;\n}\n\"\"\"}]","Java":"[{\"version\": \"Java 11\", \"target code\": \"\"\"\nimport java.util.Scanner;\n\npublic class Main {\n\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        int h = sc.nextInt();\n        int ans = 0;\n        for (int i = 1; i <= n; i++) {\n            ans += Math.ceil(i \/ h);\n        }\n        System.out.println(ans);\n    }\n}\n\"\"\"}]","Python":"[{\"version\": \"Python 3\", \"target code\": \"\"\"\nn, h = map(int, input().split())\n\ndef dfs(n, h):\n    if n == 1:\n        return 1\n    if h == 1:\n        return n\n    return dfs(n - 1, h - 1) + dfs(n - 1, h)\n\nprint(dfs(n, h))\n\"\"\"}]","C":"","C#":"[{\"version\": \"MS C#\", \"target code\": \"using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        var input = Console.ReadLine().Split(' ');\n        var n = int.Parse(input[0]);\n        var h = int.Parse(input[1]);\n\n        var ans = 0;\n        for (var i = 1; i <= n; i++)\n        {\n            ans += Math.Max(0, i - h + 1);\n        }\n\n        Console.WriteLine(ans);\n    }\n}\n\"}]","Ruby":"[{\"version\": \"Ruby 3\", \"target code\": \"n, h = gets.split.map(&:to_i)\n\ndef dfs(n, h):\n    if n == 1:\n        return 1\n    if h == 1:\n        return n\n    return dfs(n - 1, h - 1) + dfs(n - 1, h)\n\nprint(dfs(n, h))\"}]}","delphi":"[{\"version\": \"Delphi7 win32\", \"target code\": \"\"\"\nprogram Bob;\n\nuses\n  SysUtils;\n\nvar\n  n, h, i, j, k, s, t, a: Integer;\n\nbegin\n  Readln(n, h);\n  s := 0;\n  for i := 1 to n do\n  begin\n    Readln(a);\n    if a > h then\n      s := s + a - h;\n  end;\n  t := 0;\n  for i := 1 to n do\n  begin\n    Readln(a);\n    if a > h then\n      t := t + 1;\n  end;\n  for i := 1 to t do\n  begin\n    Readln(a);\n    if a > h then\n      s := s + a - h;\n  end;\n  Writeln(s);\nend.\"\"\"}]","Go":"[{\"version\": \"go1.17.6\", \"target code\": \"package main\\n\\nimport (\\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var n, h int\\n    fmt.Scanf(\\\"%d %d\\\\n\\\", &n, &h)\\n    fmt.Println(n * (h + 1))\\n}\\n\"}]}","Javascript":"[{\"version\": \"Node.js v16.13.1\", \"target code\": \"const fs = require('fs');\nconst stdin = fs.readFileSync('\/dev\/stdin').toString().split('\\n');\nconst n = parseInt(stdin[0]);\nconst h = parseInt(stdin[1]);\n\nconst dp = new Array(n + 1).fill(0);\ndp[0] = 1;\nfor (let i = 1; i <= n; i++) {\n  for (let j = 1; j <= h; j++) {\n    if (i - j >= 0) {\n      dp[i] += dp[i - j];\n    }\n  }\n}\n\nconsole.log(dp[n]);\"}]}","Kotlin":"[{\"version\": \"Kotlin 1.7\", \"target code\": \"\"\"\nfun main() {\n    val (n, h) = readLine().split(\" \").map { it.toInt() }\n    val dp = Array(n + 1) { IntArray(h + 1) { 0 } }\n    dp[0][0] = 1\n    for (i in 1..n) {\n        for (j in 0..h) {\n            dp[i][j] = dp[i - 1][j] + dp[i - 1][j - 1]\n        }\n    }\n    println(dp[n][h])\n}\n\"\"\"}]","PHP":"[{\"version\": \"PHP 8.1\", \"target code\": \"<?php\\n\\n$n, $h = explode(' ', trim(fgets(STDIN)));\\n\\n$ans = 0;\\n\\nfor ($i = 1; $i <= $n; $i++) {\\n    $ans += $h - 1;\\n    $h *= 2;\\n}\\n\\necho $ans;\\n\\n?>\"}]}","d":"[{\"version\": \"dmd 2.105.0 win32\", \"target code\": \"import std.stdio;\nimport std.algorithm;\n\nvoid main() {\n    int n, h;\n    scanf(\" %d %d \", &n, &h);\n    int ans = 0;\n    for (int i = 1; i <= n; i++) {\n        ans += (h - 1) * 2;\n    }\n    printf(\" %d \", ans);\n}\n\"}]","perl":"[{\"version\": \"Perl v5.20.3\", \"target code\": \"#!\/usr\/bin\/perl -w\nuse strict;\nuse warnings;\n\nmy $n, $h;\n\nchomp(my $line = <STDIN>);\n($n, $h) = split(' ', $line);\n\nmy $ans = 0;\nfor (my $i = 1; $i <= $n; $i++) {\n    $ans += $h - 1;\n}\n\nprint $ans;\n\nexit 0;\"}]","Rust":"[{\"version\": \"Rust 2015\", \"target code\": \"\"\"\nfn main() {\n    let (n, h) = read_line().split_whitespace().map(|x| x.parse().unwrap()).collect::<Vec<_>>();\n    let mut ans = 0;\n    for i in 1..n + 1 {\n        ans += (i - 1) \/ h + 1;\n    }\n    println!(\"{}\", ans);\n}\n\nfn read_line() -> String {\n    let mut buf = String::new();\n    std::io::stdin().read_line(&mut buf).unwrap();\n    buf\n}\n\"\"\"}]"}
